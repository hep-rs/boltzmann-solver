var searchIndex={};
searchIndex["boltzmann_solver"] = {"doc":"`boltzmann-solver` is a library allowing for Boltzmann…","i":[[0,"constants","boltzmann_solver","Collection of physical and mathematical constants which…",null,null],[17,"PLANCK_MASS","boltzmann_solver::constants","Planck mass, \\(M_{\\text{Pl}} = \\sqrt{\\hbar c / G}\\), in…",null,null],[17,"REDUCED_PLANCK_MASS","","Reduced Planck mass, \\(m_{\\text{Pl}} = \\sqrt{\\hbar c / 8…",null,null],[17,"ZETA_3","","Riemann zeta function evaluated at 3: \\(\\zeta(3) \\approx…",null,null],[17,"EULER_GAMMA","","Euler gamma constant: \\(\\gamma_\\textsc{E} \\approx…",null,null],[17,"PI","","\\(\\pi\\)",null,null],[17,"PI_1","","\\(\\pi\\) [named to follow the convention `PI_n`]",null,null],[17,"PI_2","","\\(\\pi^2\\)",null,null],[17,"PI_3","","\\(\\pi^3\\)",null,null],[17,"PI_4","","\\(\\pi^4\\)",null,null],[17,"PI_5","","\\(\\pi^5\\)",null,null],[17,"PI_N1","","\\(\\pi^{-1}\\)",null,null],[17,"PI_N2","","\\(\\pi^{-2}\\)",null,null],[17,"PI_N3","","\\(\\pi^{-3}\\)",null,null],[17,"PI_N4","","\\(\\pi^{-4}\\)",null,null],[17,"PI_N5","","\\(\\pi^{-5}\\)",null,null],[0,"model","boltzmann_solver","Model information",null,null],[3,"Particle","boltzmann_solver::model","Particle type",null,null],[12,"mass","","Mass of the particle in GeV",0,null],[12,"mass2","","Squared mass of the particle in GeV²",0,null],[12,"width","","Width of the particle in GeV",0,null],[12,"width2","","Squared width of the particle in GeV²",0,null],[12,"decays","","Decays",0,null],[12,"name","","Name",0,null],[3,"StandardModel","","The Standard Model of particle physics.",null,null],[12,"beta","","Inverse temperature in \\(GeV^{-1}\\)",1,null],[12,"particles","","Particles",1,null],[12,"g1","","Hypercharge gauge coupling",1,null],[12,"g2","","Weak gauge coupling",1,null],[12,"g3","","Strong gauge coupling",1,null],[12,"yu","","Up-quark Yukawa",1,null],[12,"yd","","Down-quark Yukawa",1,null],[12,"ye","","Electron Yukawa",1,null],[12,"mh","","0-temperature mass of the Higgs",1,null],[12,"vev","","Vacuum expectation value of the Higgs",1,null],[12,"mu2","","Quadratic coupling of the Higgs",1,null],[12,"lambda","","Quartic term in scalar potential",1,null],[0,"interaction","","Common trait and implementations for interactions.",null,null],[3,"FourParticle","boltzmann_solver::model::interaction","Three particle interaction, all determined from the…",null,null],[3,"PartialWidth","","Partial width associated with a single specific interaction.",null,null],[12,"width","","Partial width of this process in GeV",2,null],[12,"parent","","Parent particle decaying. This is signed to distinguish…",2,null],[12,"daughters","","Daughter particles of the decay, signed just as the parent…",2,null],[3,"RateDensity","","Partial width from a particle.",null,null],[12,"forward","","Forward rate for the number density",3,null],[12,"backward","","Backward rate for the number density",3,null],[12,"asymmetric_forward","","Forward rate for the number density asymmetry",3,null],[12,"asymmetric_backward","","Backward rate for the number density asymmetry",3,null],[3,"ThreeParticle","","Three particle interaction, all determined from the…",null,null],[3,"InteractionParticles","","List of particles involved in the interaction.",null,null],[12,"incoming","","Initial state particles",4,null],[12,"outgoing","","Final state particles",4,null],[3,"InteractionParticleIndices","","List of particle indices involved in the interaction.",null,null],[12,"incoming","","Initial state particles",5,null],[12,"outgoing","","Final state particles",5,null],[3,"InteractionParticleSigns","","The signed particle to its signum (as a floating point).",null,null],[12,"incoming","","Initial state particles",6,null],[12,"outgoing","","Final state particles",6,null],[5,"overshoots","","Check whether particle `i` from the model with the given…",null,[[["f64"],["context"],["usize"]],["bool"]]],[5,"asymmetry_overshoots","","Check whether particle asymmetry `i` from the model with…",null,[[["f64"],["context"],["usize"]],["bool"]]],[11,"new","","Create a new four-particle interaction.",7,[[["isize"],["f"]],["self"]]],[11,"new_all","","Create a set of related four-particle interactions.",7,[[["isize"],["f"]],["vec"]]],[11,"enable_width","","Adjust whether this interaction will calculate decay widths.",7,[[["bool"]],["self"]]],[11,"enable_gamma","","Adjust whether this interaction will calculate decay widths.",7,[[["bool"]],["self"]]],[11,"parent_idx","","Return the parent particle index",2,[[["self"]],["usize"]]],[11,"daughters_idx","","Return the daughter particle indices",2,[[["self"]],[["vec",["usize"]],["usize"]]]],[11,"net_rate","","Return the net forward rate for the number density.",3,[[["self"]],["f64"]]],[11,"net_asymmetric_rate","","Return the net forward rate for the number density…",3,[[["self"]],["f64"]]],[11,"new","","Create a new three-particle interaction.",8,[[["isize"],["f"]],["self"]]],[11,"new_all","","Create the set of related three particle interactions.",8,[[["isize"],["f"]],["vec"]]],[11,"set_asymmetry","","Specify the asymmetry between this process and its…",8,[[["f"]],["self"]]],[11,"enable_width","","Adjust whether this interaction will calculate decay widths.",8,[[["bool"]],["self"]]],[11,"enable_gamma","","Adjust whether this interaction will calculate decay widths.",8,[[["bool"]],["self"]]],[8,"Interaction","","Generic interaction between particles.",null,null],[10,"particles","","Return the particles involved in this interaction",9,[[["self"]],["interactionparticles"]]],[10,"particles_idx","","Return the particles involved in this interaction, not…",9,[[["self"]],["interactionparticleindices"]]],[10,"particles_sign","","Return the sign of the particles, with +1 for a particle…",9,[[["self"]],["interactionparticlesigns"]]],[10,"width_enabled","","Whether this interaction is to be used to determine decays.",9,[[["self"]],["bool"]]],[11,"width","","Calculate the decay width associated with a particular…",9,[[["self"],["context"]],[["option",["partialwidth"]],["partialwidth"]]]],[10,"gamma_enabled","","Whether this interaction is to be used within the…",9,[[["self"]],["bool"]]],[10,"gamma","","Calculate the reaction rate density of this interaction.",9,[[["self"],["context"]],[["option",["f64"]],["f64"]]]],[11,"asymmetry","","Asymmetry",9,[[["self"],["context"]],[["option",["f64"]],["f64"]]]],[11,"rate","","Calculate the actual interaction rates density taking into…",9,[[["context"],["option",["f64"]],["self"],["f64"]],[["option",["ratedensity"]],["ratedensity"]]]],[11,"adjust_rate_overshoot","","Adjust the backward and forward rates such that they do…",9,[[["ratedensity"],["option",["ratedensity"]],["self"],["context"]],[["option",["ratedensity"]],["ratedensity"]]]],[11,"change","","Add this interaction to the `dn` and `dna` array.",9,[[["context"],["self"],["array1"]]]],[11,"as_idx","","Convert the signed particle numbers to indices which can…",4,[[["self"]],["interactionparticleindices"]]],[11,"as_sign","","Convert the signed particle to its signum (as a floating…",4,[[["self"]],["interactionparticlesigns"]]],[11,"new","boltzmann_solver::model","Create a new particle with the specified spin and mass.",0,[[["f64"],["u8"]],["self"]]],[11,"set_mass","","Set the mass of the particle.",0,[[["self"],["f64"]],["self"]]],[11,"set_width","","Set the width of the particle.",0,[[["self"],["f64"]],["self"]]],[11,"real","","Indicate that the particle is real.",0,[[],["self"]]],[11,"complex","","Indicate that the particle is complex.",0,[[],["self"]]],[11,"dof","","Specify how many internal degrees of freedom this particle…",0,[[["f64"]],["self"]]],[11,"name","","Specify the particle's name",0,[[["string"],["into",["string"]]],["self"]]],[11,"is_real","","Returns true if the particle is real (real scalar,…",0,[[["self"]],["bool"]]],[11,"is_complex","","Returns true if the particle is complex (complex scalar,…",0,[[["self"]],["bool"]]],[11,"is_bosonic","","Returns true if the particle is bosonic.",0,[[["self"]],["bool"]]],[11,"is_fermionic","","Returns true if the particle is fermionic.",0,[[["self"]],["bool"]]],[11,"degrees_of_freedom","","Return the number of degrees of freedom for the underlying…",0,[[["self"]],["f64"]]],[11,"phase_space","","Return the equilibrium phase space occupation of the…",0,[[["f64"],["self"]],["f64"]]],[11,"number_density","","Return the equilibrium number density of the particle.",0,[[["f64"],["self"]],["f64"]]],[11,"normalized_number_density","","Return the equilibrium number density of the particle,…",0,[[["f64"],["self"]],["f64"]]],[11,"entropy_dof","","Return the entropy degrees of freedom associated with this…",0,[[["f64"],["self"]],["f64"]]],[8,"Model","","Contains all the information relevant to a particular…",null,null],[10,"zero","","Instantiate a new instance of the model at 0 temperature…",10,[[],["self"]]],[10,"set_beta","","Update the model to be valid at the given inverse…",10,[[["self"],["f64"]]]],[10,"get_beta","","Return the current value of beta for the model",10,[[["self"]],["f64"]]],[10,"entropy_dof","","Return the effective degrees of freedom contributing to…",10,[[["f64"],["self"]],["f64"]]],[11,"hubble_rate","","Return the Hubble rate at the specified inverse temperature.",10,[[["f64"],["self"]],["f64"]]],[10,"particles","","Return a list of particles in the model.",10,[[["self"]],["vec"]]],[10,"particles_mut","","Return a mutable list of particles in the model.",10,[[["self"]],["vec"]]],[10,"particle_idx","","Return the index corresponding to a particle's name and…",10,[[["str"],["asref",["str"]],["usize"]],[["result",["usize"]],["usize"]]]],[11,"particle","","Return a reference to the matching particle by name.",10,[[["usize"],["str"],["asref",["str"]],["self"]],["particle"]]],[11,"particle_mut","","Return a mutable reference to the matching particle by name.",10,[[["str"],["self"],["usize"]],["particle"]]],[11,"as_context","","Return a instance of [`Context`] for the model.",10,[[["self"]],["context"]]],[8,"ModelInteractions","","Supertrait for [`Model`] for the handling of interactions.",null,null],[16,"Item","","The underlying interaction type.",11,null],[10,"interactions","","Return an iterator over all interactions in the model.",11,[[["self"]]]],[11,"update_widths","","Calculate the widths of all particles.",11,[[["self"]]]],[0,"prelude","boltzmann_solver","Common imports for this crate.",null,null],[3,"Particle","boltzmann_solver::prelude","Particle type",null,null],[12,"mass","","Mass of the particle in GeV",0,null],[12,"mass2","","Squared mass of the particle in GeV²",0,null],[12,"width","","Width of the particle in GeV",0,null],[12,"width2","","Squared width of the particle in GeV²",0,null],[12,"decays","","Decays",0,null],[12,"name","","Name",0,null],[3,"StandardModel","","The Standard Model of particle physics.",null,null],[12,"beta","","Inverse temperature in \\(GeV^{-1}\\)",1,null],[12,"particles","","Particles",1,null],[12,"g1","","Hypercharge gauge coupling",1,null],[12,"g2","","Weak gauge coupling",1,null],[12,"g3","","Strong gauge coupling",1,null],[12,"yu","","Up-quark Yukawa",1,null],[12,"yd","","Down-quark Yukawa",1,null],[12,"ye","","Electron Yukawa",1,null],[12,"mh","","0-temperature mass of the Higgs",1,null],[12,"vev","","Vacuum expectation value of the Higgs",1,null],[12,"mu2","","Quadratic coupling of the Higgs",1,null],[12,"lambda","","Quartic term in scalar potential",1,null],[3,"Context","","Current context at a particular step in the numerical…",null,null],[12,"step","","Evaluation step",12,null],[12,"step_size","","Step size",12,null],[12,"beta","","Inverse temperature in GeV\\(^{-1}\\)",12,null],[12,"hubble_rate","","Hubble rate, in GeV",12,null],[12,"normalization","","Normalization factor, which is \\begin{equation} \\frac{1}{H…",12,null],[12,"eq","","Equilibrium number densities for the particles",12,null],[12,"n","","Current number density",12,null],[12,"na","","Current number density asymmetries",12,null],[12,"model","","Model data",12,null],[3,"Solver","","Boltzmann solver",null,null],[3,"SolverBuilder","","Boltzmann solver builder",null,null],[0,"solver","boltzmann_solver","Solver for the number density evolution given by…",null,null],[3,"Context","boltzmann_solver::solver","Current context at a particular step in the numerical…",null,null],[12,"step","","Evaluation step",12,null],[12,"step_size","","Step size",12,null],[12,"beta","","Inverse temperature in GeV\\(^{-1}\\)",12,null],[12,"hubble_rate","","Hubble rate, in GeV",12,null],[12,"normalization","","Normalization factor, which is \\begin{equation} \\frac{1}{H…",12,null],[12,"eq","","Equilibrium number densities for the particles",12,null],[12,"n","","Current number density",12,null],[12,"na","","Current number density asymmetries",12,null],[12,"model","","Model data",12,null],[3,"Solver","","Boltzmann solver",null,null],[3,"SolverBuilder","","Boltzmann solver builder",null,null],[11,"new","boltzmann_solver::prelude","Creates a new builder for the Boltzmann solver.",13,[[],["self"]]],[11,"model","","Set a model function.",13,[[["m"]],["self"]]],[11,"initial_densities","","Specify initial number densities explicitly.",13,[[["array1",["f64"]],["f64"]],["self"]]],[11,"initial_asymmetries","","Specify initial number density asymmetries explicitly.",13,[[["array1",["f64"]],["f64"]],["self"]]],[11,"beta_range","","Set the range of inverse temperature values over which the…",13,[[["f64"]],["self"]]],[11,"temperature_range","","Set the range of temperature values over which the phase…",13,[[["f64"]],["self"]]],[11,"in_equilibrium","","Specify the particles which must remain in equilibrium.",13,[[["i"]],["self"]]],[11,"no_asymmetry","","Specify the particles which never develop an asymmetry.",13,[[["i"]],["self"]]],[11,"logger","","Set the logger.",13,[[["f"]],["self"]]],[11,"step_precision","","Specify how large or small the step size is allowed to…",13,[[["f64"]],["self"]]],[11,"error_tolerance","","Specify the local error tolerance.",13,[[["f64"]],["self"]]],[11,"skip_precomputation","","Upon calling [`SolverBuilder::build`], skip the…",13,[[["bool"]],["self"]]],[11,"build","","Build the Boltzmann solver.",13,[[],[["result",["solver","error"]],["error"],["solver"]]]],[11,"solve","","Evolve the initial conditions by solving the PDEs.",14,[[["self"]]]],[0,"statistic","boltzmann_solver","If the rate of collisions between particles is…",null,null],[4,"Statistic","boltzmann_solver::statistic","The statistics which describe the distribution of…",null,null],[13,"FermiDirac","","Fermi–Dirac statistic describing half-integer-spin…",15,null],[13,"BoseEinstein","","Bose–Einstein statistic describing integer-spin particles:",15,null],[13,"MaxwellBoltzmann","","Maxwell–Boltzmann statistic describing classical particles:",15,null],[13,"MaxwellJuttner","","Maxwell–Jüttner statistic describing relativistic…",15,null],[17,"BOSON_EQ_DENSITY","","Equilibrium number density for massless bosons, normalized…",null,null],[17,"FERMION_EQ_DENSITY","","Equilibrium number density for massless fermions,…",null,null],[8,"Statistics","","Equilibrium statistics.",null,null],[10,"phase_space","","Evaluate the phase space distribution, for a given energy,…",16,[[["f64"],["self"]],["f64"]]],[11,"number_density","","Return number density for a particle following the…",16,[[["f64"],["self"]],["f64"]]],[10,"normalized_number_density","","Return number density for a particle following the…",16,[[["f64"],["self"]],["f64"]]],[11,"massless_number_density","","Return number density for a massless particle following…",16,[[["f64"],["self"]],["f64"]]],[0,"utilities","boltzmann_solver","Module of various useful miscellaneous functions.",null,null],[5,"kallen_lambda","boltzmann_solver::utilities","Kallen lambda function:",null,[[["f64"]],["f64"]]],[5,"kallen_lambda_sqrt","","Square root of the Kallen lambda function:",null,[[["f64"]],["f64"]]],[5,"t_range","","Return the minimum and maximum value of the Mandelstam…",null,[[["f64"]]]],[5,"integrate_st","","Integrate the amplitude with respect to the Mandelstam…",null,[[["f64"],["f"]],["f64"]]],[5,"propagator","","Propagator with squared momentum `q2` involving particle…",null,[[["f64"],["particle"]],[["f64"],["complex",["f64"]]]]],[0,"spline","","Cubic Hermite interpolation",null,null],[3,"ConstCubicHermiteSpline","boltzmann_solver::utilities::spline","Cubic Hermite spline interpolator using a constant data…",null,null],[12,"data","","Data array arranged in triples of `(xi, yi, mi)` where…",17,null],[3,"CubicHermiteSpline","","Cubic Hermite spline interpolator",null,null],[5,"rec_geomspace","","Create a recursively generated geometrically spaced…",null,[[["f64"],["u32"]],[["f64"],["vec",["f64"]]]]],[5,"rec_linspace","","Create a recursively generated linearly spaced interval…",null,[[["f64"],["u32"]],[["f64"],["vec",["f64"]]]]],[11,"sample","","Sample the spline at the specific `x` value.",17,[[["f64"],["self"]],["f64"]]],[11,"empty","","Create a new empty cubic Hermite Spline.",18,[[],["self"]]],[11,"len","","Return the number of data points in the underlying data.",18,[[["self"]],["usize"]]],[11,"is_empty","","Check whether the spline is empty",18,[[["self"]],["bool"]]],[11,"min_points","","Adjust the minimum number of points before accuracy is…",18,[[["self"],["usize"]]]],[11,"add","","Adds a data point to the spline.",18,[[["self"],["f64"]]]],[11,"accurate","","Check whether a given interval is accurate or not.",18,[[["f64"],["self"]],["bool"]]],[11,"sample","","Sample the spline at the specific `x` value.",18,[[["f64"],["self"]],["f64"]]],[11,"from","boltzmann_solver::model","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","boltzmann_solver::model::interaction","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","boltzmann_solver::prelude","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","boltzmann_solver::statistic","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","boltzmann_solver::utilities::spline","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"particles","boltzmann_solver::model::interaction","",7,[[["self"]],["interactionparticles"]]],[11,"particles_idx","","",7,[[["self"]],["interactionparticleindices"]]],[11,"particles_sign","","",7,[[["self"]],["interactionparticlesigns"]]],[11,"width_enabled","","",7,[[["self"]],["bool"]]],[11,"gamma_enabled","","",7,[[["self"]],["bool"]]],[11,"gamma","","",7,[[["self"],["context"]],[["option",["f64"]],["f64"]]]],[11,"particles","","",8,[[["self"]],["interactionparticles"]]],[11,"particles_idx","","",8,[[["self"]],["interactionparticleindices"]]],[11,"particles_sign","","",8,[[["self"]],["interactionparticlesigns"]]],[11,"width_enabled","","",8,[[["self"]],["bool"]]],[11,"width","","",8,[[["self"],["context"]],[["option",["partialwidth"]],["partialwidth"]]]],[11,"gamma_enabled","","",8,[[["self"]],["bool"]]],[11,"gamma","","Note that for three particle interactions, this does not…",8,[[["self"],["context"]],[["option",["f64"]],["f64"]]]],[11,"asymmetry","","",8,[[["self"],["context"]],[["option",["f64"]],["f64"]]]],[11,"rate","","Override the default implementation of [`rate`] to make…",8,[[["context"],["option",["f64"]],["self"],["f64"]],[["option",["ratedensity"]],["ratedensity"]]]],[11,"zero","boltzmann_solver::model","",1,[[],["self"]]],[11,"set_beta","","Update beta for the model.",1,[[["self"],["f64"]]]],[11,"get_beta","","",1,[[["self"]],["f64"]]],[11,"entropy_dof","","",1,[[["f64"],["self"]],["f64"]]],[11,"particles","","",1,[[["self"]],["vec"]]],[11,"particles_mut","","",1,[[["self"]],["vec"]]],[11,"particle_idx","","",1,[[["str"],["asref",["str"]],["usize"]],[["result",["usize"]],["usize"]]]],[11,"phase_space","boltzmann_solver::statistic","Evaluate the phase space distribution, \\(f\\) as defined…",15,[[["f64"],["self"]],["f64"]]],[11,"number_density","","Return number density for a particle following the…",15,[[["f64"],["self"]],["f64"]]],[11,"normalized_number_density","","Return number density for a particle following the…",15,[[["f64"],["self"]],["f64"]]],[11,"massless_number_density","","Return number density for a massless particle following…",15,[[["f64"],["self"]],["f64"]]],[11,"clone","boltzmann_solver::model::interaction","",4,[[["self"]],["interactionparticles"]]],[11,"clone","","",5,[[["self"]],["interactionparticleindices"]]],[11,"clone","","",6,[[["self"]],["interactionparticlesigns"]]],[11,"clone","boltzmann_solver::model","",0,[[["self"]],["particle"]]],[11,"default","boltzmann_solver::prelude","",13,[[],["self"]]],[11,"fmt","boltzmann_solver::model::interaction","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","boltzmann_solver::model","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","boltzmann_solver::prelude","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","boltzmann_solver::statistic","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","boltzmann_solver::utilities::spline","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","boltzmann_solver::model::interaction","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","boltzmann_solver::prelude","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","boltzmann_solver::statistic","",15,[[["formatter"],["self"]],["result"]]],[11,"mul","boltzmann_solver::model::interaction","",3,[[["f64"]],["self"]]],[11,"mul_assign","","",3,[[["self"],["f64"]]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","boltzmann_solver::model","",0,[[["self"],["__s"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","boltzmann_solver::statistic","",15,[[["self"],["__s"]],["result"]]],[11,"serialize","boltzmann_solver::utilities::spline","",18,[[["self"],["__s"]],["result"]]],[11,"deserialize","boltzmann_solver::model::interaction","",2,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","","",6,[[["__d"]],["result"]]],[11,"deserialize","boltzmann_solver::model","",0,[[["__d"]],["result"]]],[11,"deserialize","","",1,[[["__d"]],["result"]]],[11,"deserialize","boltzmann_solver::statistic","",15,[[["__d"]],["result"]]],[11,"deserialize","boltzmann_solver::utilities::spline","",18,[[["__d"]],["result"]]]],"p":[[3,"Particle"],[3,"StandardModel"],[3,"PartialWidth"],[3,"RateDensity"],[3,"InteractionParticles"],[3,"InteractionParticleIndices"],[3,"InteractionParticleSigns"],[3,"FourParticle"],[3,"ThreeParticle"],[8,"Interaction"],[8,"Model"],[8,"ModelInteractions"],[3,"Context"],[3,"SolverBuilder"],[3,"Solver"],[4,"Statistic"],[8,"Statistics"],[3,"ConstCubicHermiteSpline"],[3,"CubicHermiteSpline"]]};
searchIndex["cfg_if"] = {"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",null,null]],"p":[]};
searchIndex["crossbeam_deque"] = {"doc":"Concurrent work-stealing deques.","i":[[3,"Worker","crossbeam_deque","A worker queue.",null,null],[3,"Stealer","","A stealer handle of a worker queue.",null,null],[3,"Injector","","An injector queue.",null,null],[4,"Steal","","Possible outcomes of a steal operation.",null,null],[13,"Empty","","The queue was empty at the time of stealing.",0,null],[13,"Success","","At least one task was successfully stolen.",0,null],[13,"Retry","","The steal operation needs to be retried.",0,null],[11,"new_fifo","","Creates a FIFO worker queue.",1,[[],["worker"]]],[11,"new_lifo","","Creates a LIFO worker queue.",1,[[],["worker"]]],[11,"stealer","","Creates a stealer for this queue.",1,[[["self"]],["stealer"]]],[11,"is_empty","","Returns `true` if the queue is empty.",1,[[["self"]],["bool"]]],[11,"push","","Pushes a task into the queue.",1,[[["self"],["t"]]]],[11,"pop","","Pops a task from the queue.",1,[[["self"]],["option"]]],[11,"is_empty","","Returns `true` if the queue is empty.",2,[[["self"]],["bool"]]],[11,"steal","","Steals a task from the queue.",2,[[["self"]],["steal"]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into another worker.",2,[[["worker"],["self"]],["steal"]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into another worker,…",2,[[["worker"],["self"]],["steal"]]],[11,"new","","Creates a new injector queue.",3,[[],["injector"]]],[11,"push","","Pushes a task into the queue.",3,[[["self"],["t"]]]],[11,"steal","","Steals a task from the queue.",3,[[["self"]],["steal"]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into a worker.",3,[[["worker"],["self"]],["steal"]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into a worker, and…",3,[[["worker"],["self"]],["steal"]]],[11,"is_empty","","Returns `true` if the queue is empty.",3,[[["self"]],["bool"]]],[11,"is_empty","","Returns `true` if the queue was empty at the time of…",0,[[["self"]],["bool"]]],[11,"is_success","","Returns `true` if at least one task was stolen.",0,[[["self"]],["bool"]]],[11,"is_retry","","Returns `true` if the steal operation needs to be retried.",0,[[["self"]],["bool"]]],[11,"success","","Returns the result of the operation, if successful.",0,[[],["option"]]],[11,"or_else","","If no task was stolen, attempts another steal operation.",0,[[["f"]],["steal"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"drop","","",3,[[["self"]]]],[11,"clone","","",2,[[["self"]],["stealer"]]],[11,"clone","","",0,[[["self"]],["steal"]]],[11,"eq","","",0,[[["steal"],["self"]],["bool"]]],[11,"ne","","",0,[[["steal"],["self"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"from_iter","","Consumes items until a `Success` is found and returns it.",0,[[["i"]],["steal"]]]],"p":[[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"Injector"]]};
searchIndex["crossbeam_epoch"] = {"doc":"Epoch-based memory reclamation.","i":[[3,"Atomic","crossbeam_epoch","An atomic pointer that can be safely shared between threads.",null,null],[3,"CompareAndSetError","","The error returned on failed compare-and-set operation.",null,null],[12,"current","","The value in the atomic pointer at the time of the failed…",0,null],[12,"new","","The new value, which the operation failed to store.",0,null],[3,"Owned","","An owned heap-allocated object.",null,null],[3,"Shared","","A pointer to an object protected by the epoch GC.",null,null],[3,"Collector","","An epoch-based garbage collector.",null,null],[3,"LocalHandle","","A handle to a garbage collector.",null,null],[3,"Guard","","A guard that keeps the current thread pinned.",null,null],[5,"unprotected","","Returns a reference to a dummy guard that allows…",null,[[],["guard"]]],[5,"default_collector","","Returns the default global collector.",null,[[],["collector"]]],[5,"is_pinned","","Returns `true` if the current thread is pinned.",null,[[],["bool"]]],[5,"pin","","Pins the current thread.",null,[[],["guard"]]],[11,"null","","Returns a new null atomic pointer.",1,[[],["atomic"]]],[11,"new","","Allocates `value` on the heap and returns a new atomic…",1,[[["t"]],["atomic"]]],[11,"load","","Loads a `Shared` from the atomic pointer.",1,[[["ordering"],["guard"],["self"]],["shared"]]],[11,"load_consume","","Loads a `Shared` from the atomic pointer using a \"consume\"…",1,[[["guard"],["self"]],["shared"]]],[11,"store","","Stores a `Shared` or `Owned` pointer into the atomic…",1,[[["ordering"],["pointer"],["self"]]]],[11,"swap","","Stores a `Shared` or `Owned` pointer into the atomic…",1,[[["pointer"],["ordering"],["guard"],["self"]],["shared"]]],[11,"compare_and_set","","Stores the pointer `new` (either `Shared` or `Owned`) into…",1,[[["o"],["p"],["guard"],["self"],["shared"]],[["result",["shared","compareandseterror"]],["shared"],["compareandseterror"]]]],[11,"compare_and_set_weak","","Stores the pointer `new` (either `Shared` or `Owned`) into…",1,[[["o"],["p"],["guard"],["self"],["shared"]],[["result",["shared","compareandseterror"]],["shared"],["compareandseterror"]]]],[11,"fetch_and","","Bitwise \"and\" with the current tag.",1,[[["usize"],["ordering"],["guard"],["self"]],["shared"]]],[11,"fetch_or","","Bitwise \"or\" with the current tag.",1,[[["usize"],["ordering"],["guard"],["self"]],["shared"]]],[11,"fetch_xor","","Bitwise \"xor\" with the current tag.",1,[[["usize"],["ordering"],["guard"],["self"]],["shared"]]],[11,"into_owned","","Takes ownership of the pointee.",1,[[],["owned"]]],[11,"new","","Allocates `value` on the heap and returns a new owned…",2,[[["t"]],["owned"]]],[11,"from_raw","","Returns a new owned pointer pointing to `raw`.",2,[[],["owned"]]],[11,"into_shared","","Converts the owned pointer into a [`Shared`].",2,[[["guard"]],["shared"]]],[11,"into_box","","Converts the owned pointer into a `Box`.",2,[[],["box"]]],[11,"tag","","Returns the tag stored within the pointer.",2,[[["self"]],["usize"]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is…",2,[[["usize"]],["owned"]]],[11,"null","","Returns a new null pointer.",3,[[],["shared"]]],[11,"is_null","","Returns `true` if the pointer is null.",3,[[["self"]],["bool"]]],[11,"as_raw","","Converts the pointer to a raw pointer (without the tag).",3,[[["self"]]]],[11,"deref","","Dereferences the pointer.",3,[[["self"]],["t"]]],[11,"deref_mut","","Dereferences the pointer.",3,[[["self"]],["t"]]],[11,"as_ref","","Converts the pointer to a reference.",3,[[["self"]],[["t"],["option"]]]],[11,"into_owned","","Takes ownership of the pointee.",3,[[],["owned"]]],[11,"tag","","Returns the tag stored within the pointer.",3,[[["self"]],["usize"]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is…",3,[[["self"],["usize"]],["shared"]]],[11,"new","","Creates a new collector.",4,[[],["self"]]],[11,"register","","Registers a new handle for the collector.",4,[[["self"]],["localhandle"]]],[11,"pin","","Pins the handle.",5,[[["self"]],["guard"]]],[11,"is_pinned","","Returns `true` if the handle is pinned.",5,[[["self"]],["bool"]]],[11,"collector","","Returns the `Collector` associated with this handle.",5,[[["self"]],["collector"]]],[11,"defer","","Stores a function so that it can be executed at some point…",6,[[["self"],["f"]]]],[11,"defer_unchecked","","Stores a function so that it can be executed at some point…",6,[[["self"],["f"]]]],[11,"defer_destroy","","Stores a destructor for an object so that it can be…",6,[[["self"],["shared"]]]],[11,"flush","","Clears up the thread-local cache of deferred functions by…",6,[[["self"]]]],[11,"repin","","Unpins and then immediately re-pins the thread.",6,[[["self"]]]],[11,"repin_after","","Temporarily unpins the thread, executes the given function…",6,[[["self"],["f"]],["r"]]],[11,"collector","","Returns the `Collector` associated with this guard.",6,[[["self"]],[["option",["collector"]],["collector"]]]],[8,"CompareAndSetOrdering","","Memory orderings for compare-and-set operations.",null,null],[10,"success","","The ordering of the operation when it succeeds.",7,[[["self"]],["ordering"]]],[10,"failure","","The ordering of the operation when it fails.",7,[[["self"]],["ordering"]]],[8,"Pointer","","A trait for either `Owned` or `Shared` pointers.",null,null],[10,"into_usize","","Returns the machine representation of the pointer.",8,[[],["usize"]]],[10,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",8,[[["usize"]],["self"]]],[11,"from","","",1,[[],["t"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[],["t"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"into_usize","","",2,[[],["usize"]]],[11,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",2,[[["usize"]],["self"]]],[11,"into_usize","","",3,[[],["usize"]]],[11,"from_usize","","",3,[[["usize"]],["self"]]],[11,"drop","","",2,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"as_mut","","",2,[[["self"]],["t"]]],[11,"as_ref","","",2,[[["self"]],["t"]]],[11,"from","","Returns a new atomic pointer pointing to `owned`.",1,[[["owned"]],["self"]]],[11,"from","","",1,[[["box"]],["self"]]],[11,"from","","",1,[[["t"]],["self"]]],[11,"from","","Returns a new atomic pointer pointing to `ptr`.",1,[[["shared"]],["self"]]],[11,"from","","Returns a new atomic pointer pointing to `raw`.",1,[[],["self"]]],[11,"from","","",2,[[["t"]],["self"]]],[11,"from","","Returns a new owned pointer pointing to `b`.",2,[[["box"]],["self"]]],[11,"from","","Returns a new pointer pointing to `raw`.",3,[[],["self"]]],[11,"clone","","Returns a copy of the atomic value.",1,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"clone","","Creates another reference to the same garbage collector.",4,[[["self"]],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"default","","",3,[[],["self"]]],[11,"cmp","","",3,[[["self"]],["ordering"]]],[11,"eq","","",3,[[["self"]],["bool"]]],[11,"eq","","Checks if both handles point to the same collector.",4,[[["self"],["collector"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"]],[["option",["ordering"]],["ordering"]]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref_mut","","",2,[[["self"]],["t"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]]],"p":[[3,"CompareAndSetError"],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,"Collector"],[3,"LocalHandle"],[3,"Guard"],[8,"CompareAndSetOrdering"],[8,"Pointer"]]};
searchIndex["crossbeam_queue"] = {"doc":"Concurrent queues.","i":[[3,"ArrayQueue","crossbeam_queue","A bounded multi-producer multi-consumer queue.",null,null],[3,"PopError","","Error which occurs when popping from an empty queue.",null,null],[3,"PushError","","Error which occurs when pushing into a full queue.",null,null],[12,"0","","",0,null],[3,"SegQueue","","An unbounded multi-producer multi-consumer queue.",null,null],[11,"new","","Creates a new bounded queue with the given capacity.",1,[[["usize"]],["arrayqueue"]]],[11,"push","","Attempts to push an element into the queue.",1,[[["self"],["t"]],[["result",["pusherror"]],["pusherror"]]]],[11,"pop","","Attempts to pop an element from the queue.",1,[[["self"]],[["poperror"],["result",["poperror"]]]]],[11,"capacity","","Returns the capacity of the queue.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the queue is empty.",1,[[["self"]],["bool"]]],[11,"is_full","","Returns `true` if the queue is full.",1,[[["self"]],["bool"]]],[11,"len","","Returns the number of elements in the queue.",1,[[["self"]],["usize"]]],[11,"new","","Creates a new unbounded queue.",2,[[],["segqueue"]]],[11,"push","","Pushes an element into the queue.",2,[[["self"],["t"]]]],[11,"pop","","Pops an element from the queue.",2,[[["self"]],[["poperror"],["result",["poperror"]]]]],[11,"is_empty","","Returns `true` if the queue is empty.",2,[[["self"]],["bool"]]],[11,"len","","Returns the number of elements in the queue.",2,[[["self"]],["usize"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"drop","","",1,[[["self"]]]],[11,"drop","","",2,[[["self"]]]],[11,"clone","","",3,[[["self"]],["poperror"]]],[11,"clone","","",0,[[["self"]],["pusherror"]]],[11,"default","","",2,[[],["segqueue"]]],[11,"eq","","",3,[[["poperror"],["self"]],["bool"]]],[11,"eq","","",0,[[["pusherror"],["self"]],["bool"]]],[11,"ne","","",0,[[["pusherror"],["self"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"PushError"],[3,"ArrayQueue"],[3,"SegQueue"],[3,"PopError"]]};
searchIndex["crossbeam_utils"] = {"doc":"Miscellaneous tools for concurrent programming.","i":[[3,"CachePadded","crossbeam_utils","Pads and aligns a value to the length of a cache line.",null,null],[3,"Backoff","","Performs exponential backoff in spin loops.",null,null],[0,"atomic","","Atomic types.",null,null],[3,"AtomicCell","crossbeam_utils::atomic","A thread-safe mutable memory location.",null,null],[11,"new","","Creates a new atomic cell initialized with `val`.",0,[[["t"]],["atomiccell"]]],[11,"into_inner","","Unwraps the atomic cell and returns its inner value.",0,[[],["t"]]],[11,"is_lock_free","","Returns `true` if operations on values of this type are…",0,[[],["bool"]]],[11,"store","","Stores `val` into the atomic cell.",0,[[["self"],["t"]]]],[11,"swap","","Stores `val` into the atomic cell and returns the previous…",0,[[["self"],["t"]],["t"]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in this…",0,[[["self"]]]],[11,"take","","Takes the value of the atomic cell, leaving…",0,[[["self"]],["t"]]],[11,"load","","Loads a value.",0,[[["self"]],["t"]]],[11,"compare_and_swap","","If the current value equals `current`, stores `new` into…",0,[[["self"],["t"]],["t"]]],[11,"compare_exchange","","If the current value equals `current`, stores `new` into…",0,[[["self"],["t"]],["result"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u128"]],["u128"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u128"]],["u128"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u128"]],["u128"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u128"]],["u128"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u128"]],["u128"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["i128"],["self"]],["i128"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["i128"],["self"]],["i128"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["i128"],["self"]],["i128"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["i128"],["self"]],["i128"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["i128"],["self"]],["i128"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_and","","Applies logical \"and\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,"fetch_or","","Applies logical \"or\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,"fetch_xor","","Applies logical \"xor\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[8,"AtomicConsume","","Trait which allows reading from primitive atomic types…",null,null],[16,"Val","","Type returned by `load_consume`.",1,null],[10,"load_consume","","Loads a value from the atomic using a \"consume\" memory…",1,[[["self"]]]],[11,"new","crossbeam_utils","Pads and aligns a value to the length of a cache line.",2,[[["t"]],["cachepadded"]]],[11,"into_inner","","Returns the inner value.",2,[[],["t"]]],[11,"new","","Creates a new `Backoff`.",3,[[],["self"]]],[11,"reset","","Resets the `Backoff`.",3,[[["self"]]]],[11,"spin","","Backs off in a lock-free loop.",3,[[["self"]]]],[11,"snooze","","Backs off in a blocking loop.",3,[[["self"]]]],[11,"is_completed","","Returns `true` if exponential backoff has completed and…",3,[[["self"]],["bool"]]],[0,"sync","","Thread synchronization primitives.",null,null],[3,"ShardedLock","crossbeam_utils::sync","A sharded reader-writer lock.",null,null],[3,"ShardedLockReadGuard","","A guard used to release the shared read access of a…",null,null],[3,"ShardedLockWriteGuard","","A guard used to release the exclusive write access of a…",null,null],[3,"Parker","","A thread parking primitive.",null,null],[3,"Unparker","","Unparks a thread parked by the associated [`Parker`].",null,null],[3,"WaitGroup","","Enables threads to synchronize the beginning or end of…",null,null],[11,"new","","Creates a new `Parker`.",4,[[],["parker"]]],[11,"park","","Blocks the current thread until the token is made available.",4,[[["self"]]]],[11,"park_timeout","","Blocks the current thread until the token is made…",4,[[["self"],["duration"]]]],[11,"unparker","","Returns a reference to an associated [`Unparker`].",4,[[["self"]],["unparker"]]],[11,"unpark","","Atomically makes the token available if it is not already.",5,[[["self"]]]],[11,"new","","Creates a new sharded reader-writer lock.",6,[[["t"]],["shardedlock"]]],[11,"into_inner","","Consumes this lock, returning the underlying data.",6,[[],["lockresult"]]],[11,"is_poisoned","","Returns `true` if the lock is poisoned.",6,[[["self"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",6,[[["self"]],[["t"],["lockresult"]]]],[11,"try_read","","Attempts to acquire this lock with shared read access.",6,[[["self"]],[["trylockresult",["shardedlockreadguard"]],["shardedlockreadguard"]]]],[11,"read","","Locks with shared read access, blocking the current thread…",6,[[["self"]],[["shardedlockreadguard"],["lockresult",["shardedlockreadguard"]]]]],[11,"try_write","","Attempts to acquire this lock with exclusive write access.",6,[[["self"]],[["shardedlockwriteguard"],["trylockresult",["shardedlockwriteguard"]]]]],[11,"write","","Locks with exclusive write access, blocking the current…",6,[[["self"]],[["lockresult",["shardedlockwriteguard"]],["shardedlockwriteguard"]]]],[11,"new","","Creates a new wait group and returns the single reference…",7,[[],["waitgroup"]]],[11,"wait","","Drops this reference and waits until all other references…",7,[[]]],[0,"thread","crossbeam_utils","Threads that can borrow variables from the stack.",null,null],[3,"Scope","crossbeam_utils::thread","A scope for spawning threads.",null,null],[3,"ScopedThreadBuilder","","Configures the properties of a new thread.",null,null],[3,"ScopedJoinHandle","","A handle that can be used to join its scoped thread.",null,null],[5,"scope","","Creates a new scope for spawning threads.",null,[[["f"]],["result"]]],[11,"spawn","","Spawns a scoped thread.",8,[[["self"],["f"]],["scopedjoinhandle"]]],[11,"builder","","Creates a builder that can configure a thread before…",8,[[["self"]],["scopedthreadbuilder"]]],[11,"name","","Sets the name for the new thread.",9,[[["string"]],["scopedthreadbuilder"]]],[11,"stack_size","","Sets the size of the stack for the new thread.",9,[[["usize"]],["scopedthreadbuilder"]]],[11,"spawn","","Spawns a scoped thread with this configuration.",9,[[["f"]],[["result",["scopedjoinhandle"]],["scopedjoinhandle"]]]],[11,"join","","Waits for the thread to finish and returns its result.",10,[[],["result"]]],[11,"thread","","Returns a handle to the underlying thread.",10,[[["self"]],["thread"]]],[11,"from","crossbeam_utils","",2,[[],["t"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::atomic","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::sync","",6,[[],["t"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::thread","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"drop","crossbeam_utils::sync","",12,[[["self"]]]],[11,"drop","","",7,[[["self"]]]],[11,"from","crossbeam_utils","",2,[[["t"]],["self"]]],[11,"from","crossbeam_utils::sync","",6,[[["t"]],["self"]]],[11,"clone","crossbeam_utils","",2,[[["self"]],["cachepadded"]]],[11,"clone","crossbeam_utils::sync","",5,[[["self"]],["unparker"]]],[11,"clone","","",7,[[["self"]],["waitgroup"]]],[11,"default","crossbeam_utils::atomic","",0,[[],["atomiccell"]]],[11,"default","crossbeam_utils","",2,[[],["cachepadded"]]],[11,"default","","",3,[[],["backoff"]]],[11,"default","crossbeam_utils::sync","",6,[[],["shardedlock"]]],[11,"eq","crossbeam_utils","",2,[[["cachepadded"],["self"]],["bool"]]],[11,"ne","","",2,[[["cachepadded"],["self"]],["bool"]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref","crossbeam_utils::sync","",11,[[["self"]],["t"]]],[11,"deref","","",12,[[["self"]],["t"]]],[11,"deref_mut","crossbeam_utils","",2,[[["self"]],["t"]]],[11,"deref_mut","crossbeam_utils::sync","",12,[[["self"]],["t"]]],[11,"fmt","crossbeam_utils::atomic","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils::sync","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils::thread","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils::sync","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"hash","crossbeam_utils","",2,[[["self"],["__h"]]]]],"p":[[3,"AtomicCell"],[8,"AtomicConsume"],[3,"CachePadded"],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,"ShardedLock"],[3,"WaitGroup"],[3,"Scope"],[3,"ScopedThreadBuilder"],[3,"ScopedJoinHandle"],[3,"ShardedLockReadGuard"],[3,"ShardedLockWriteGuard"]]};
searchIndex["either"] = {"doc":"The enum [`Either`] with variants `Left` and `Right` is a…","i":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[11,"is_left","","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],[["either"],["l"],["r"]]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],[["r"],["l"],["either"]]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either"]]],[11,"left_or","","Return left value or given value",0,[[["l"]],["l"]]],[11,"left_or_default","","Return left or a default",0,[[],["l"]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[["f"]],["l"]]],[11,"right_or","","Return right value or given value",0,[[["r"]],["r"]]],[11,"right_or_default","","Return right or a default",0,[[],["r"]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[["f"]],["r"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[],["t"]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[["f"]],["either"]]],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which…",null,null],[14,"try_right","","Dual to `try_left!`, see its documentation for more…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"deref","","",0,[[["self"]]]],[11,"deref_mut","","",0,[[["self"]]]],[11,"from","","",0,[[["result"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["either"],["self"]],["bool"]]],[11,"ne","","",0,[[["either"],["self"]],["bool"]]],[11,"cmp","","",0,[[["either"],["self"]],["ordering"]]],[11,"partial_cmp","","",0,[[["either"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["either"],["self"]],["bool"]]],[11,"le","","",0,[[["either"],["self"]],["bool"]]],[11,"gt","","",0,[[["either"],["self"]],["bool"]]],[11,"ge","","",0,[[["either"],["self"]],["bool"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,[[["self"]]]],[11,"fold","","",0,[[["acc"],["g"]],["acc"]]],[11,"count","","",0,[[],["usize"]]],[11,"last","","",0,[[],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",0,[[["self"]]]],[11,"as_mut","","",0,[[["self"]],["str"]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"as_mut","","",0,[[["self"]]]],[11,"into","","",0,[[],["result"]]],[11,"clone","","",0,[[["self"]],["either"]]]],"p":[[4,"Either"]]};
searchIndex["itertools"] = {"doc":"Extra iterator adaptors, functions and macros.","i":[[4,"Either","itertools","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[4,"Diff","","A type returned by the `diff_with` function.",null,null],[13,"FirstMismatch","","The index of the first non-matching element along with…",1,null],[13,"Shorter","","The total number of elements that were in `J` along with…",1,null],[13,"Longer","","The total number of elements that were in `I` along with…",1,null],[4,"MinMaxResult","","`MinMaxResult` is an enum returned by `minmax`. See…",null,null],[13,"NoElements","","Empty iterator",2,null],[13,"OneElement","","Iterator with one element, so the minimum and maximum are…",2,null],[13,"MinMax","","More than one element in the iterator, the first element…",2,null],[4,"Position","","A value yielded by `WithPosition`. Indicates the position…",null,null],[13,"First","","This is the first element.",3,null],[13,"Middle","","This is neither the first nor the last element.",3,null],[13,"Last","","This is the last element.",3,null],[13,"Only","","This is the only element.",3,null],[4,"EitherOrBoth","","Value that either holds a single A or B, or both.",null,null],[13,"Both","","Both values are present.",4,null],[13,"Left","","Only the left value of type `A` is present.",4,null],[13,"Right","","Only the right value of type `B` is present.",4,null],[4,"FoldWhile","","An enum used for controlling the execution of…",null,null],[13,"Continue","","Continue folding with this value",5,null],[13,"Done","","Fold is complete and will return this value",5,null],[5,"concat","","Combine all an iterator's elements into one element by…",null,[[["i"]]]],[5,"cons_tuples","","Create an iterator that maps for example iterators of…",null,[[["i"]],["constuples"]]],[5,"diff_with","","Compares every element yielded by both `i` and `j` with…",null,[[["j"],["i"],["f"]],[["diff"],["option",["diff"]]]]],[5,"kmerge_by","","Create an iterator that merges elements of the contained…",null,[[["i"],["f"]],["kmergeby"]]],[5,"process_results","","“Lift” a function of the values of an iterator so that it…",null,[[["i"],["f"]],["result"]]],[5,"repeat_n","","Create an iterator that produces `n` repetitions of…",null,[[["a"],["usize"]],["repeatn"]]],[5,"repeat_call","","An iterator source that produces elements indefinitely by…",null,[[["f"]],["repeatcall"]]],[5,"unfold","","Creates a new unfold source with the specified closure as…",null,[[["f"],["st"]],["unfold"]]],[5,"iterate","","Creates a new iterator that infinitely applies function to…",null,[[["f"],["st"]],["iterate"]]],[5,"multizip","","An iterator that generalizes .zip() and allows running…",null,[[["u"]],["zip"]]],[5,"interleave","","Create an iterator that interleaves elements in `i` and `j`.",null,[[["j"],["i"]],["interleave"]]],[5,"merge","","Create an iterator that merges elements in `i` and `j`.",null,[[["j"],["i"]],["merge"]]],[5,"put_back","","Create an iterator where you can put back a single item",null,[[["i"]],["putback"]]],[5,"put_back_n","","Create an iterator where you can put back multiple values…",null,[[["i"]],["putbackn"]]],[5,"multipeek","","An iterator adaptor that allows the user to peek at…",null,[[["i"]],["multipeek"]]],[5,"kmerge","","Create an iterator that merges elements of the contained…",null,[[["i"]],["kmerge"]]],[5,"zip_eq","","Iterate `i` and `j` in lock step.",null,[[["j"],["i"]],["zipeq"]]],[5,"merge_join_by","","Return an iterator adaptor that merge-joins items from the…",null,[[["j"],["i"],["f"]],["mergejoinby"]]],[5,"rciter","","Return an iterator inside a `Rc<RefCell<_>>` wrapper.",null,[[["i"]],["rciter"]]],[5,"enumerate","","Iterate `iterable` with a running index.",null,[[["i"]],["enumerate"]]],[5,"rev","","Iterate `iterable` in reverse.",null,[[["i"]],["rev"]]],[5,"zip","","Iterate `i` and `j` in lock step.",null,[[["j"],["i"]],["zip"]]],[5,"chain","","Create an iterator that first iterates `i` and then `j`.",null,[[["j"],["i"]],["chain"]]],[5,"cloned","","Create an iterator that clones each element from &T to T",null,[[["i"]],["cloned"]]],[5,"fold","","Perform a fold operation over the iterable.",null,[[["i"],["b"],["f"]],["b"]]],[5,"all","","Test whether the predicate holds for all elements in the…",null,[[["i"],["f"]],["bool"]]],[5,"any","","Test whether the predicate holds for any elements in the…",null,[[["i"],["f"]],["bool"]]],[5,"max","","Return the maximum value of the iterable.",null,[[["i"]],["option"]]],[5,"min","","Return the minimum value of the iterable.",null,[[["i"]],["option"]]],[5,"join","","Combine all iterator elements into one String, seperated…",null,[[["str"],["i"]],["string"]]],[5,"sorted","","Sort all iterator elements into a new iterator in…",null,[[["i"]],["intoiter"]]],[5,"equal","","Return `true` if both iterables produce equal sequences…",null,[[["j"],["i"]],["bool"]]],[5,"assert_equal","","Assert that two iterables produce equal sequences, with…",null,[[["j"],["i"]]]],[5,"partition","","Partition a sequence using predicate `pred` so that…",null,[[["i"],["f"]],["usize"]]],[0,"structs","","The concrete iterator types.",null,null],[3,"DedupBy","itertools::structs","An iterator adaptor that removes repeated duplicates,…",null,null],[3,"Interleave","","An iterator adaptor that alternates elements from two…",null,null],[3,"InterleaveShortest","","An iterator adaptor that alternates elements from the two…",null,null],[3,"Product","","An iterator adaptor that iterates over the cartesian…",null,null],[3,"PutBack","","An iterator adaptor that allows putting back a single item…",null,null],[3,"Batching","","A “meta iterator adaptor”. Its closure receives a…",null,null],[3,"MapInto","","An iterator adapter to apply `Into` conversion to each…",null,null],[3,"MapResults","","An iterator adapter to apply a transformation within a…",null,null],[3,"MergeBy","","An iterator adaptor that merges the two base iterators in…",null,null],[3,"TakeWhileRef","","An iterator adaptor that borrows from a `Clone`-able…",null,null],[3,"WhileSome","","An iterator adaptor that filters `Option<A>` iterator…",null,null],[3,"Coalesce","","An iterator adaptor that may join together adjacent…",null,null],[3,"TupleCombinations","","An iterator to iterate through all combinations in a…",null,null],[3,"Positions","","An iterator adapter to get the positions of each element…",null,null],[3,"Update","","An iterator adapter to apply a mutating function to each…",null,null],[3,"Step","","An iterator adaptor that steps a number elements in the…",null,null],[3,"MultiProduct","","An iterator adaptor that iterates over the cartesian…",null,null],[3,"Combinations","","An iterator to iterate through all the `k`-length…",null,null],[3,"CombinationsWithReplacement","","An iterator to iterate through all the `n`-length…",null,null],[3,"ConsTuples","","An iterator that maps an iterator of tuples like `((A, B),…",null,null],[3,"ExactlyOneError","","Iterator returned for the error case of…",null,null],[3,"Format","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"FormatWith","","Format all iterator elements lazily, separated by `sep`.",null,null],[3,"IntoChunks","","`ChunkLazy` is the storage for a lazy chunking operation.",null,null],[3,"Chunk","","An iterator for the elements in a single chunk.",null,null],[3,"Chunks","","An iterator that yields the Chunk iterators.",null,null],[3,"GroupBy","","`GroupBy` is the storage for the lazy grouping operation.",null,null],[3,"Group","","An iterator for the elements in a single group.",null,null],[3,"Groups","","An iterator that yields the Group iterators.",null,null],[3,"Intersperse","","An iterator adaptor to insert a particular value between…",null,null],[3,"KMergeBy","","An iterator adaptor that merges an abitrary number of base…",null,null],[3,"MergeJoinBy","","An iterator adaptor that merge-joins items from the two…",null,null],[3,"MultiPeek","","See `multipeek()` for more information.",null,null],[3,"PadUsing","","An iterator adaptor that pads a sequence to a minimum…",null,null],[3,"PeekingTakeWhile","","An iterator adaptor that takes items while a closure…",null,null],[3,"Permutations","","An iterator adaptor that iterates through all the…",null,null],[3,"ProcessResults","","An iterator that produces only the `T` values as long as…",null,null],[3,"PutBackN","","An iterator adaptor that allows putting multiple items in…",null,null],[3,"RcIter","","A wrapper for `Rc<RefCell<I>>`, that implements the…",null,null],[12,"rciter","","The boxed iterator.",6,null],[3,"RepeatN","","An iterator that produces n repetitions of an element.",null,null],[3,"RepeatCall","","See `repeat_call` for more information.",null,null],[3,"Unfold","","See `unfold` for more information.",null,null],[12,"state","","Internal state that will be passed to the closure on the…",7,null],[3,"Iterate","","An iterator that infinitely applies function to value and…",null,null],[3,"Tee","","One half of an iterator pair where both return the same…",null,null],[3,"TupleBuffer","","An iterator over a incomplete tuple.",null,null],[3,"TupleWindows","","An iterator over all contiguous windows that produces…",null,null],[3,"Tuples","","An iterator that groups the items in tuples of a specific…",null,null],[3,"Unique","","An iterator adapter to filter out duplicate elements.",null,null],[3,"UniqueBy","","An iterator adapter to filter out duplicate elements.",null,null],[3,"WithPosition","","An iterator adaptor that wraps each element in an…",null,null],[3,"ZipEq","","An iterator which iterates two other iterators…",null,null],[3,"ZipLongest","","An iterator which iterates two other iterators…",null,null],[3,"Zip","","See `multizip` for more information.",null,null],[6,"Dedup","","An iterator adaptor that removes repeated duplicates.",null,null],[6,"Merge","","An iterator adaptor that merges the two base iterators in…",null,null],[6,"KMerge","","An iterator adaptor that merges an abitrary number of base…",null,null],[11,"with_value","","put back value `value` (builder method)",8,[[],["self"]]],[11,"into_parts","","Split the `PutBack` into its parts.",8,[[]]],[11,"put_back","","Put back a single value to the front of the iterator.",8,[[["self"]]]],[11,"has_left","itertools","If `Left`, or `Both`, return true, otherwise, return false.",4,[[["self"]],["bool"]]],[11,"has_right","","If `Right`, or `Both`, return true, otherwise, return false.",4,[[["self"]],["bool"]]],[11,"is_left","","If Left, return true otherwise, return false. Exclusive…",4,[[["self"]],["bool"]]],[11,"is_right","","If Right, return true otherwise, return false. Exclusive…",4,[[["self"]],["bool"]]],[11,"is_both","","If Right, return true otherwise, return false. Equivalent…",4,[[["self"]],["bool"]]],[11,"left","","If `Left`, or `Both`, return `Some` with the left value,…",4,[[],["option"]]],[11,"right","","If `Right`, or `Both`, return `Some` with the right value,…",4,[[],["option"]]],[11,"both","","If Both, return `Some` tuple containing left and right.",4,[[],["option"]]],[11,"as_ref","","Converts from `&EitherOrBoth<A, B>` to `EitherOrBoth<&A,…",4,[[["self"]],[["b"],["a"],["eitherorboth"]]]],[11,"as_mut","","Converts from `&mut EitherOrBoth<A, B>` to…",4,[[["self"]],[["a"],["eitherorboth"],["b"]]]],[11,"flip","","Convert `EitherOrBoth<A, B>` to `EitherOrBoth<B, A>`.",4,[[],["eitherorboth"]]],[11,"map_left","","Apply the function `f` on the value `a` in `Left(a)` or…",4,[[["f"]],["eitherorboth"]]],[11,"map_right","","Apply the function `f` on the value `b` in `Right(b)` or…",4,[[["f"]],["eitherorboth"]]],[11,"map_any","","Apply the functions `f` and `g` on the value `a` and `b`…",4,[[["f"],["g"]],["eitherorboth"]]],[11,"left_and_then","","Apply the function `f` on the value `b` in `Right(b)` or…",4,[[["f"]],["eitherorboth"]]],[11,"right_and_then","","Apply the function `f` on the value `a` in `Left(a)` or…",4,[[["f"]],["eitherorboth"]]],[11,"reduce","","Return either value of left, right, or the product of `f`…",4,[[["f"]],["t"]]],[11,"into_option","","`into_option` creates an `Option` of type `(T, T)`. The…",2,[[],["option"]]],[11,"reset_peek","itertools::structs","Reset the peeking “cursor”",9,[[["self"]]]],[11,"peek","","Works exactly like `.next()` with the only difference that…",9,[[["self"]],["option"]]],[11,"put_back","","Puts x in front of the iterator. The values are yielded in…",10,[[["self"]]]],[11,"into_buffer","","Return a buffer with the produced items that was not…",11,[[],["tuplebuffer"]]],[11,"into_inner","itertools","Return the inner value.",3,[[],["t"]]],[8,"PeekingNext","","An iterator that allows peeking at an element before…",null,null],[10,"peeking_next","","Pass a reference to the next iterator element to the…",12,[[["self"],["f"]],["option"]]],[8,"Itertools","","An [`Iterator`] blanket implementation that provides extra…",null,null],[11,"interleave","","Alternate elements from two iterators until both have run…",13,[[["j"]],["interleave"]]],[11,"interleave_shortest","","Alternate elements from two iterators until at least one…",13,[[["j"]],["interleaveshortest"]]],[11,"intersperse","","An iterator adaptor to insert a particular value between…",13,[[],["intersperse"]]],[11,"zip_longest","","Create an iterator which iterates over both this and the…",13,[[["j"]],["ziplongest"]]],[11,"zip_eq","","Create an iterator which iterates over both this and the…",13,[[["j"]],["zipeq"]]],[11,"batching","","A “meta iterator adaptor”. Its closure receives a…",13,[[["f"]],["batching"]]],[11,"group_by","","Return an iterable that can group iterator elements.…",13,[[["f"]],["groupby"]]],[11,"chunks","","Return an iterable that can chunk the iterator.",13,[[["usize"]],["intochunks"]]],[11,"tuple_windows","","Return an iterator over all contiguous windows producing…",13,[[],["tuplewindows"]]],[11,"tuples","","Return an iterator that groups the items in tuples of a…",13,[[],["tuples"]]],[11,"tee","","Split into an iterator pair that both yield all elements…",13,[[]]],[11,"step","","Return an iterator adaptor that steps `n` elements in the…",13,[[["usize"]],["step"]]],[11,"map_into","","Convert each item of the iterator using the `Into` trait.",13,[[],["mapinto"]]],[11,"map_results","","Return an iterator adaptor that applies the provided…",13,[[["f"]],["mapresults"]]],[11,"merge","","Return an iterator adaptor that merges the two base…",13,[[["j"]],["merge"]]],[11,"merge_by","","Return an iterator adaptor that merges the two base…",13,[[["j"],["f"]],["mergeby"]]],[11,"merge_join_by","","Create an iterator that merges items from both this and…",13,[[["j"],["f"]],["mergejoinby"]]],[11,"kmerge","","Return an iterator adaptor that flattens an iterator of…",13,[[],["kmerge"]]],[11,"kmerge_by","","Return an iterator adaptor that flattens an iterator of…",13,[[["f"]],["kmergeby"]]],[11,"cartesian_product","","Return an iterator adaptor that iterates over the…",13,[[["j"]],["product"]]],[11,"multi_cartesian_product","","Return an iterator adaptor that iterates over the…",13,[[],["multiproduct"]]],[11,"coalesce","","Return an iterator adaptor that uses the passed-in closure…",13,[[["f"]],["coalesce"]]],[11,"dedup","","Remove duplicates from sections of consecutive identical…",13,[[],["dedup"]]],[11,"dedup_by","","Remove duplicates from sections of consecutive identical…",13,[[["cmp"]],["dedupby"]]],[11,"unique","","Return an iterator adaptor that filters out elements that…",13,[[],["unique"]]],[11,"unique_by","","Return an iterator adaptor that filters out elements that…",13,[[["f"]],["uniqueby"]]],[11,"peeking_take_while","","Return an iterator adaptor that borrows from this iterator…",13,[[["self"],["f"]],["peekingtakewhile"]]],[11,"take_while_ref","","Return an iterator adaptor that borrows from a…",13,[[["self"],["f"]],["takewhileref"]]],[11,"while_some","","Return an iterator adaptor that filters `Option<A>`…",13,[[],["whilesome"]]],[11,"tuple_combinations","","Return an iterator adaptor that iterates over the…",13,[[],["tuplecombinations"]]],[11,"combinations","","Return an iterator adaptor that iterates over the…",13,[[["usize"]],["combinations"]]],[11,"combinations_with_replacement","","Return an iterator that iterates over the `k`-length…",13,[[["usize"]],["combinationswithreplacement"]]],[11,"permutations","","Return an iterator adaptor that iterates over all…",13,[[["usize"]],["permutations"]]],[11,"pad_using","","Return an iterator adaptor that pads the sequence to a…",13,[[["usize"],["f"]],["padusing"]]],[11,"with_position","","Return an iterator adaptor that wraps each element in a…",13,[[],["withposition"]]],[11,"positions","","Return an iterator adaptor that yields the indices of all…",13,[[["p"]],["positions"]]],[11,"update","","Return an iterator adaptor that applies a mutating…",13,[[["f"]],["update"]]],[11,"next_tuple","","Advances the iterator and returns the next items grouped…",13,[[["self"]],["option"]]],[11,"collect_tuple","","Collects all items from the iterator into a tuple of a…",13,[[],["option"]]],[11,"find_position","","Find the position and value of the first element…",13,[[["self"],["p"]],["option"]]],[11,"all_equal","","Check whether all elements compare equal.",13,[[["self"]],["bool"]]],[11,"dropping","","Consume the first `n` elements from the iterator eagerly,…",13,[[["usize"]],["self"]]],[11,"dropping_back","","Consume the last `n` elements from the iterator eagerly,…",13,[[["usize"]],["self"]]],[11,"foreach","","Run the closure `f` eagerly on each element of the iterator.",13,[[["f"]]]],[11,"concat","","Combine all an iterator's elements into one element by…",13,[[]]],[11,"collect_vec","","`.collect_vec()` is simply a type specialization of…",13,[[],["vec"]]],[11,"set_from","","Assign to each reference in `self` from the `from`…",13,[[["j"],["self"]],["usize"]]],[11,"join","","Combine all iterator elements into one String, separated…",13,[[["str"],["self"]],["string"]]],[11,"format","","Format all iterator elements, separated by `sep`.",13,[[["str"]],["format"]]],[11,"format_with","","Format all iterator elements, separated by `sep`.",13,[[["str"],["f"]],["formatwith"]]],[11,"fold_results","","Fold `Result` values from an iterator.",13,[[["self"],["b"],["f"]],["result"]]],[11,"fold_options","","Fold `Option` values from an iterator.",13,[[["self"],["b"],["f"]],["option"]]],[11,"fold1","","Accumulator of the elements in the iterator.",13,[[["f"]],["option"]]],[11,"tree_fold1","","Accumulate the elements in the iterator in a tree-like…",13,[[["f"]],["option"]]],[11,"fold_while","","An iterator method that applies a function, producing a…",13,[[["self"],["b"],["f"]],["foldwhile"]]],[11,"sum1","","Iterate over the entire iterator and add all the elements.",13,[[],["option"]]],[11,"product1","","Iterate over the entire iterator and multiply all the…",13,[[],["option"]]],[11,"sorted","","Sort all iterator elements into a new iterator in…",13,[[],["intoiter"]]],[11,"sorted_by","","Sort all iterator elements into a new iterator in…",13,[[["f"]],["intoiter"]]],[11,"sorted_by_key","","Sort all iterator elements into a new iterator in…",13,[[["f"]],["intoiter"]]],[11,"partition_map","","Collect all iterator elements into one of two partitions.…",13,[[["f"]]]],[11,"into_group_map","","Return a `HashMap` of keys mapped to `Vec`s of values.…",13,[[],[["vec"],["hashmap",["vec"]]]]],[11,"minmax","","Return the minimum and maximum elements in the iterator.",13,[[],["minmaxresult"]]],[11,"minmax_by_key","","Return the minimum and maximum element of an iterator, as…",13,[[["f"]],["minmaxresult"]]],[11,"minmax_by","","Return the minimum and maximum element of an iterator, as…",13,[[["f"]],["minmaxresult"]]],[11,"exactly_one","","If the iterator yields exactly one element, that element…",13,[[],[["result",["exactlyoneerror"]],["exactlyoneerror"]]]],[11,"into_inner","","Return the value in the continue or done.",5,[[],["t"]]],[11,"is_done","","Return true if `self` is `Done`, false if it is `Continue`.",5,[[["self"]],["bool"]]],[14,"iproduct","","Create an iterator over the “cartesian product” of…",null,null],[14,"izip","","Create an iterator running multiple iterators in lockstep.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","itertools::structs","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"into_iter","","",15,[[],["i"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"into_iter","","",16,[[],["i"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"into_iter","","",17,[[],["i"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"into_iter","","",18,[[],["i"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"into_iter","","",20,[[],["i"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"into_iter","","",21,[[],["i"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"into_iter","","",22,[[],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"into_iter","","",23,[[],["i"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"into_iter","","",24,[[],["i"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"into_iter","","",25,[[],["i"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"into_iter","","",26,[[],["i"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"into_iter","","",27,[[],["i"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"into_iter","","",28,[[],["i"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"into_iter","","",29,[[],["i"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"into_iter","","",30,[[],["i"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"into_iter","","",31,[[],["i"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"into_iter","","",32,[[],["i"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"into_iter","","",33,[[],["i"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"to_string","","",34,[[["self"]],["string"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_string","","",35,[[["self"]],["string"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"into_iter","","",37,[[],["i"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"into_iter","","",38,[[],["i"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"into_iter","","",40,[[],["i"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"into_iter","","",41,[[],["i"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"into_iter","","",42,[[],["i"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"into_iter","","",43,[[],["i"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"into_iter","","",44,[[],["i"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"into_iter","","",45,[[],["i"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"into_iter","","",46,[[],["i"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"into_iter","","",47,[[],["i"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"into_iter","","",48,[[],["i"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"into_iter","","",6,[[],["i"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"into_iter","","",49,[[],["i"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"into_iter","","",50,[[],["i"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"into_iter","","",51,[[],["i"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"into_iter","","",52,[[],["i"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"into_iter","","",53,[[],["i"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"into_iter","","",54,[[],["i"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"into_iter","","",55,[[],["i"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"into_iter","","",56,[[],["i"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"into_iter","","",57,[[],["i"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"into_iter","","",58,[[],["i"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"into_iter","","",59,[[],["i"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"into_iter","","",60,[[],["i"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"into","itertools","",0,[[],["result"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"as_ref","","",0,[[["self"]]]],[11,"eq","","",0,[[["self"],["either"]],["bool"]]],[11,"ne","","",0,[[["self"],["either"]],["bool"]]],[11,"cmp","","",0,[[["self"],["either"]],["ordering"]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"clone","","",0,[[["self"]],["either"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"partial_cmp","","",0,[[["self"],["either"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"],["either"]],["bool"]]],[11,"le","","",0,[[["self"],["either"]],["bool"]]],[11,"gt","","",0,[[["self"],["either"]],["bool"]]],[11,"ge","","",0,[[["self"],["either"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,[[["self"]]]],[11,"fold","","",0,[[["acc"],["g"]],["acc"]]],[11,"count","","",0,[[],["usize"]]],[11,"last","","",0,[[],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"deref_mut","","",0,[[["self"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"as_mut","","",0,[[["self"]]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"as_mut","","",0,[[["self"]],["str"]]],[11,"deref","","",0,[[["self"]]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"from","","",0,[[["result"]],["either"]]],[11,"peeking_next","itertools::structs","",9,[[["self"],["f"]],["option"]]],[11,"peeking_next","","",8,[[["self"],["f"]],["option"]]],[11,"peeking_next","","",10,[[["self"],["f"]],["option"]]],[11,"drop","","",40,[[["self"]]]],[11,"drop","","",37,[[["self"]]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"from","","",60,[[],["self"]]],[11,"into","itertools","",4,[[],[["either"],["option",["either"]]]]],[11,"next_back","itertools::structs","",19,[[["self"]],["option"]]],[11,"next_back","","",26,[[["self"]],["option"]]],[11,"next_back","","",27,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",45,[[["self"]],["option"]]],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"next_back","","",49,[[["self"]],["option"]]],[11,"next_back","","",59,[[["self"]],["option"]]],[11,"next","","",29,[[["self"]],["option"]]],[11,"count","","",29,[[],["usize"]]],[11,"size_hint","","",29,[[["self"]]]],[11,"last","","",29,[[],["option"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"size_hint","","",15,[[["self"]]]],[11,"next","","",16,[[["self"]],["option"]]],[11,"size_hint","","",16,[[["self"]]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,[[["self"]]]],[11,"all","","",8,[[["self"],["g"]],["bool"]]],[11,"fold","","",8,[[["acc"],["g"]],["acc"]]],[11,"next","","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,[[["self"]]]],[11,"fold","","",17,[[["acc"],["g"]],["acc"]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,[[["self"]]]],[11,"next","","",28,[[["self"]],["option"]]],[11,"size_hint","","",28,[[["self"]]]],[11,"next","","",21,[[["self"]],["option"]]],[11,"size_hint","","",21,[[["self"]]]],[11,"next","","",24,[[["self"]],["option"]]],[11,"size_hint","","",24,[[["self"]]]],[11,"next","","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,[[["self"]]]],[11,"fold","","",14,[[["acc"],["g"]],["acc"]]],[11,"next","","",22,[[["self"]],["option"]]],[11,"size_hint","","",22,[[["self"]]]],[11,"next","","",23,[[["self"]],["option"]]],[11,"size_hint","","",23,[[["self"]]]],[11,"next","","",25,[[["self"]],["option"]]],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,[[["self"]]]],[11,"fold","","",19,[[["acc"],["fold"]],["acc"]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,[[["self"]]]],[11,"fold","","",20,[[["acc"],["fold"]],["acc"]]],[11,"collect","","",20,[[],["c"]]],[11,"next","","",26,[[["self"]],["option"]]],[11,"size_hint","","",26,[[["self"]]]],[11,"next","","",27,[[["self"]],["option"]]],[11,"size_hint","","",27,[[["self"]]]],[11,"fold","","",27,[[["acc"],["g"]],["acc"]]],[11,"collect","","",27,[[],["c"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,[[["self"]]]],[11,"fold","","",32,[[["acc"],["fold"]],["acc"]]],[11,"next","","",30,[[["self"]],["option"]]],[11,"next","","",31,[[["self"]],["option"]]],[11,"next","","",33,[[["self"]],["option"]]],[11,"size_hint","","",33,[[["self"]]]],[11,"next","","",41,[[["self"]],["option"]]],[11,"next","","",40,[[["self"]],["option"]]],[11,"next","","",38,[[["self"]],["option"]]],[11,"next","","",37,[[["self"]],["option"]]],[11,"next","","",42,[[["self"]],["option"]]],[11,"size_hint","","",42,[[["self"]]]],[11,"fold","","",42,[[["b"],["f"]],["b"]]],[11,"next","","",43,[[["self"]],["option"]]],[11,"size_hint","","",43,[[["self"]]]],[11,"next","","",44,[[["self"]],["option"]]],[11,"size_hint","","",44,[[["self"]]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,[[["self"]]]],[11,"next","","",45,[[["self"]],["option"]]],[11,"size_hint","","",45,[[["self"]]]],[11,"next","","",46,[[["self"]],["option"]]],[11,"size_hint","","",46,[[["self"]]]],[11,"next","","",47,[[["self"]],["option"]]],[11,"count","","",47,[[],["usize"]]],[11,"size_hint","","",47,[[["self"]]]],[11,"next","","",48,[[["self"]],["option"]]],[11,"size_hint","","",48,[[["self"]]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,[[["self"]]]],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,[[["self"]]]],[11,"next","","",49,[[["self"]],["option"]]],[11,"size_hint","","",49,[[["self"]]]],[11,"next","","",50,[[["self"]],["option"]]],[11,"size_hint","","",50,[[["self"]]]],[11,"next","","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,[[["self"]]]],[11,"next","","",51,[[["self"]],["option"]]],[11,"size_hint","","",51,[[["self"]]]],[11,"next","","",52,[[["self"]],["option"]]],[11,"size_hint","","",52,[[["self"]]]],[11,"next","","",53,[[["self"]],["option"]]],[11,"size_hint","","",53,[[["self"]]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"next","","",54,[[["self"]],["option"]]],[11,"next","","",56,[[["self"]],["option"]]],[11,"size_hint","","",56,[[["self"]]]],[11,"count","","",56,[[],["usize"]]],[11,"next","","",55,[[["self"]],["option"]]],[11,"size_hint","","",55,[[["self"]]]],[11,"count","","",55,[[],["usize"]]],[11,"next","","",57,[[["self"]],["option"]]],[11,"size_hint","","",57,[[["self"]]]],[11,"next","","",58,[[["self"]],["option"]]],[11,"size_hint","","",58,[[["self"]]]],[11,"next","","",59,[[["self"]],["option"]]],[11,"size_hint","","",59,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"next","","",60,[[["self"]],["option"]]],[11,"size_hint","","",60,[[["self"]]]],[11,"clone","","",29,[[["self"]],["multiproduct"]]],[11,"clone","","",15,[[["self"]],["interleave"]]],[11,"clone","","",16,[[["self"]],["interleaveshortest"]]],[11,"clone","","",8,[[["self"]],["putback"]]],[11,"clone","","",17,[[["self"]],["product"]]],[11,"clone","","",18,[[["self"]],["batching"]]],[11,"clone","","",28,[[["self"]],["step"]]],[11,"clone","","",21,[[["self"]],["self"]]],[11,"clone","","",24,[[["self"]],["self"]]],[11,"clone","","",14,[[["self"]],["self"]]],[11,"clone","","",23,[[["self"]],["whilesome"]]],[11,"clone","itertools","",4,[[["self"]],["eitherorboth"]]],[11,"clone","itertools::structs","",32,[[["self"]],["self"]]],[11,"clone","","",31,[[["self"]],["combinationswithreplacement"]]],[11,"clone","","",33,[[["self"]],["exactlyoneerror"]]],[11,"clone","","",34,[[["self"]],["format"]]],[11,"clone","","",42,[[["self"]],["intersperse"]]],[11,"clone","","",43,[[["self"]],["kmergeby"]]],[11,"clone","itertools","",2,[[["self"]],["minmaxresult"]]],[11,"clone","itertools::structs","",9,[[["self"]],["multipeek"]]],[11,"clone","","",45,[[["self"]],["padusing"]]],[11,"clone","","",10,[[["self"]],["putbackn"]]],[11,"clone","","",6,[[["self"]],["rciter"]]],[11,"clone","","",7,[[["self"]],["unfold"]]],[11,"clone","","",51,[[["self"]],["iterate"]]],[11,"clone","","",56,[[["self"]],["uniqueby"]]],[11,"clone","","",55,[[["self"]],["unique"]]],[11,"clone","itertools","",3,[[["self"]],["position"]]],[11,"clone","itertools::structs","",58,[[["self"]],["zipeq"]]],[11,"clone","","",59,[[["self"]],["ziplongest"]]],[11,"clone","","",60,[[["self"]],["zip"]]],[11,"clone","itertools","",5,[[["self"]],["foldwhile"]]],[11,"eq","","",4,[[["eitherorboth"],["self"]],["bool"]]],[11,"ne","","",4,[[["eitherorboth"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["minmaxresult"]],["bool"]]],[11,"ne","","",2,[[["self"],["minmaxresult"]],["bool"]]],[11,"eq","","",3,[[["self"],["position"]],["bool"]]],[11,"ne","","",3,[[["self"],["position"]],["bool"]]],[11,"eq","","",5,[[["foldwhile"],["self"]],["bool"]]],[11,"ne","","",5,[[["foldwhile"],["self"]],["bool"]]],[11,"fmt","itertools::structs","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools::structs","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools::structs","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools::structs","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","itertools::structs","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"is_left","itertools","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],[["l"],["either"],["r"]]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],[["either"],["l"],["r"]]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either"]]],[11,"left_or","","Return left value or given value",0,[[["l"]],["l"]]],[11,"left_or_default","","Return left or a default",0,[[],["l"]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[["f"]],["l"]]],[11,"right_or","","Return right value or given value",0,[[["r"]],["r"]]],[11,"right_or_default","","Return right or a default",0,[[],["r"]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[["f"]],["r"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[],["t"]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[["f"]],["either"]]]],"p":[[4,"Either"],[4,"Diff"],[4,"MinMaxResult"],[4,"Position"],[4,"EitherOrBoth"],[4,"FoldWhile"],[3,"RcIter"],[3,"Unfold"],[3,"PutBack"],[3,"MultiPeek"],[3,"PutBackN"],[3,"Tuples"],[8,"PeekingNext"],[8,"Itertools"],[3,"DedupBy"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Product"],[3,"Batching"],[3,"MapInto"],[3,"MapResults"],[3,"MergeBy"],[3,"TakeWhileRef"],[3,"WhileSome"],[3,"Coalesce"],[3,"TupleCombinations"],[3,"Positions"],[3,"Update"],[3,"Step"],[3,"MultiProduct"],[3,"Combinations"],[3,"CombinationsWithReplacement"],[3,"ConsTuples"],[3,"ExactlyOneError"],[3,"Format"],[3,"FormatWith"],[3,"IntoChunks"],[3,"Chunk"],[3,"Chunks"],[3,"GroupBy"],[3,"Group"],[3,"Groups"],[3,"Intersperse"],[3,"KMergeBy"],[3,"MergeJoinBy"],[3,"PadUsing"],[3,"PeekingTakeWhile"],[3,"Permutations"],[3,"ProcessResults"],[3,"RepeatN"],[3,"RepeatCall"],[3,"Iterate"],[3,"Tee"],[3,"TupleBuffer"],[3,"TupleWindows"],[3,"Unique"],[3,"UniqueBy"],[3,"WithPosition"],[3,"ZipEq"],[3,"ZipLongest"],[3,"Zip"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","i":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes…",null,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy…",null,null],[14,"lazy_static","","",null,null]],"p":[]};
searchIndex["libc"] = {"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[3,"in_addr","","",null,null],[12,"s_addr","","",17,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",18,null],[12,"imr_interface","","",18,null],[3,"ip_mreq_source","","",null,null],[12,"imr_multiaddr","","",19,null],[12,"imr_interface","","",19,null],[12,"imr_sourceaddr","","",19,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",20,null],[12,"sa_data","","",20,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",21,null],[12,"sin_port","","",21,null],[12,"sin_addr","","",21,null],[12,"sin_zero","","",21,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",22,null],[12,"sin6_port","","",22,null],[12,"sin6_flowinfo","","",22,null],[12,"sin6_addr","","",22,null],[12,"sin6_scope_id","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_next","","",23,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",24,null],[12,"sll_protocol","","",24,null],[12,"sll_ifindex","","",24,null],[12,"sll_hatype","","",24,null],[12,"sll_pkttype","","",24,null],[12,"sll_halen","","",24,null],[12,"sll_addr","","",24,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",25,null],[12,"tm_min","","",25,null],[12,"tm_hour","","",25,null],[12,"tm_mday","","",25,null],[12,"tm_mon","","",25,null],[12,"tm_year","","",25,null],[12,"tm_wday","","",25,null],[12,"tm_yday","","",25,null],[12,"tm_isdst","","",25,null],[12,"tm_gmtoff","","",25,null],[12,"tm_zone","","",25,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",26,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",27,null],[12,"dli_fbase","","",27,null],[12,"dli_sname","","",27,null],[12,"dli_saddr","","",27,null],[3,"lconv","","",null,null],[12,"decimal_point","","",28,null],[12,"thousands_sep","","",28,null],[12,"grouping","","",28,null],[12,"int_curr_symbol","","",28,null],[12,"currency_symbol","","",28,null],[12,"mon_decimal_point","","",28,null],[12,"mon_thousands_sep","","",28,null],[12,"mon_grouping","","",28,null],[12,"positive_sign","","",28,null],[12,"negative_sign","","",28,null],[12,"int_frac_digits","","",28,null],[12,"frac_digits","","",28,null],[12,"p_cs_precedes","","",28,null],[12,"p_sep_by_space","","",28,null],[12,"n_cs_precedes","","",28,null],[12,"n_sep_by_space","","",28,null],[12,"p_sign_posn","","",28,null],[12,"n_sign_posn","","",28,null],[12,"int_p_cs_precedes","","",28,null],[12,"int_p_sep_by_space","","",28,null],[12,"int_n_cs_precedes","","",28,null],[12,"int_n_sep_by_space","","",28,null],[12,"int_p_sign_posn","","",28,null],[12,"int_n_sign_posn","","",28,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",29,null],[12,"ipi_spec_dst","","",29,null],[12,"ipi_addr","","",29,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",30,null],[12,"ifa_name","","",30,null],[12,"ifa_flags","","",30,null],[12,"ifa_addr","","",30,null],[12,"ifa_netmask","","",30,null],[12,"ifa_ifu","","",30,null],[12,"ifa_data","","",30,null],[3,"in6_rtmsg","","",null,null],[3,"arpreq","","",null,null],[12,"arp_pa","","",31,null],[12,"arp_ha","","",31,null],[12,"arp_flags","","",31,null],[12,"arp_netmask","","",31,null],[12,"arp_dev","","",31,null],[3,"arpreq_old","","",null,null],[12,"arp_pa","","",32,null],[12,"arp_ha","","",32,null],[12,"arp_flags","","",32,null],[12,"arp_netmask","","",32,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",33,null],[12,"ar_pro","","",33,null],[12,"ar_hln","","",33,null],[12,"ar_pln","","",33,null],[12,"ar_op","","",33,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",34,null],[12,"msg_len","","",34,null],[3,"epoll_event","","",null,null],[12,"events","","",35,null],[12,"u64","","",35,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",36,null],[12,"sun_path","","",36,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",37,null],[3,"utsname","","",null,null],[12,"sysname","","",38,null],[12,"nodename","","",38,null],[12,"release","","",38,null],[12,"version","","",38,null],[12,"machine","","",38,null],[12,"domainname","","",38,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",39,null],[12,"sigev_signo","","",39,null],[12,"sigev_notify","","",39,null],[12,"sigev_notify_thread_id","","",39,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",40,null],[12,"rlim_max","","",40,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",41,null],[12,"gl_pathv","","",41,null],[12,"gl_offs","","",41,null],[12,"gl_flags","","",41,null],[3,"passwd","","",null,null],[12,"pw_name","","",42,null],[12,"pw_passwd","","",42,null],[12,"pw_uid","","",42,null],[12,"pw_gid","","",42,null],[12,"pw_gecos","","",42,null],[12,"pw_dir","","",42,null],[12,"pw_shell","","",42,null],[3,"spwd","","",null,null],[12,"sp_namp","","",43,null],[12,"sp_pwdp","","",43,null],[12,"sp_lstchg","","",43,null],[12,"sp_min","","",43,null],[12,"sp_max","","",43,null],[12,"sp_warn","","",43,null],[12,"sp_inact","","",43,null],[12,"sp_expire","","",43,null],[12,"sp_flag","","",43,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",44,null],[12,"dqb_bsoftlimit","","",44,null],[12,"dqb_curspace","","",44,null],[12,"dqb_ihardlimit","","",44,null],[12,"dqb_isoftlimit","","",44,null],[12,"dqb_curinodes","","",44,null],[12,"dqb_btime","","",44,null],[12,"dqb_itime","","",44,null],[12,"dqb_valid","","",44,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",45,null],[12,"ssi_errno","","",45,null],[12,"ssi_code","","",45,null],[12,"ssi_pid","","",45,null],[12,"ssi_uid","","",45,null],[12,"ssi_fd","","",45,null],[12,"ssi_tid","","",45,null],[12,"ssi_band","","",45,null],[12,"ssi_overrun","","",45,null],[12,"ssi_trapno","","",45,null],[12,"ssi_status","","",45,null],[12,"ssi_int","","",45,null],[12,"ssi_ptr","","",45,null],[12,"ssi_utime","","",45,null],[12,"ssi_stime","","",45,null],[12,"ssi_addr","","",45,null],[12,"ssi_addr_lsb","","",45,null],[12,"ssi_syscall","","",45,null],[12,"ssi_call_addr","","",45,null],[12,"ssi_arch","","",45,null],[3,"itimerspec","","",null,null],[12,"it_interval","","",46,null],[12,"it_value","","",46,null],[3,"fsid_t","","",null,null],[3,"packet_mreq","","",null,null],[12,"mr_ifindex","","",47,null],[12,"mr_type","","",47,null],[12,"mr_alen","","",47,null],[12,"mr_address","","",47,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",48,null],[12,"if_name","","",48,null],[3,"msginfo","","",null,null],[12,"msgpool","","",49,null],[12,"msgmap","","",49,null],[12,"msgmax","","",49,null],[12,"msgmnb","","",49,null],[12,"msgmni","","",49,null],[12,"msgssz","","",49,null],[12,"msgtql","","",49,null],[12,"msgseg","","",49,null],[3,"sembuf","","",null,null],[12,"sem_num","","",50,null],[12,"sem_op","","",50,null],[12,"sem_flg","","",50,null],[3,"input_event","","",null,null],[12,"time","","",51,null],[12,"type_","","",51,null],[12,"code","","",51,null],[12,"value","","",51,null],[3,"input_id","","",null,null],[12,"bustype","","",52,null],[12,"vendor","","",52,null],[12,"product","","",52,null],[12,"version","","",52,null],[3,"input_absinfo","","",null,null],[12,"value","","",53,null],[12,"minimum","","",53,null],[12,"maximum","","",53,null],[12,"fuzz","","",53,null],[12,"flat","","",53,null],[12,"resolution","","",53,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",54,null],[12,"len","","",54,null],[12,"index","","",54,null],[12,"keycode","","",54,null],[12,"scancode","","",54,null],[3,"input_mask","","",null,null],[12,"type_","","",55,null],[12,"codes_size","","",55,null],[12,"codes_ptr","","",55,null],[3,"ff_replay","","",null,null],[12,"length","","",56,null],[12,"delay","","",56,null],[3,"ff_trigger","","",null,null],[12,"button","","",57,null],[12,"interval","","",57,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",58,null],[12,"attack_level","","",58,null],[12,"fade_length","","",58,null],[12,"fade_level","","",58,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",59,null],[12,"envelope","","",59,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",60,null],[12,"end_level","","",60,null],[12,"envelope","","",60,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",61,null],[12,"left_saturation","","",61,null],[12,"right_coeff","","",61,null],[12,"left_coeff","","",61,null],[12,"deadband","","",61,null],[12,"center","","",61,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",62,null],[12,"period","","",62,null],[12,"magnitude","","",62,null],[12,"offset","","",62,null],[12,"phase","","",62,null],[12,"envelope","","",62,null],[12,"custom_len","","",62,null],[12,"custom_data","","",62,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",63,null],[12,"weak_magnitude","","",63,null],[3,"ff_effect","","",null,null],[12,"type_","","",64,null],[12,"id","","",64,null],[12,"direction","","",64,null],[12,"trigger","","",64,null],[12,"replay","","",64,null],[12,"u","","",64,null],[3,"dl_phdr_info","","",null,null],[12,"dlpi_addr","","",65,null],[12,"dlpi_name","","",65,null],[12,"dlpi_phdr","","",65,null],[12,"dlpi_phnum","","",65,null],[12,"dlpi_adds","","",65,null],[12,"dlpi_subs","","",65,null],[12,"dlpi_tls_modid","","",65,null],[12,"dlpi_tls_data","","",65,null],[3,"Elf32_Ehdr","","",null,null],[12,"e_ident","","",66,null],[12,"e_type","","",66,null],[12,"e_machine","","",66,null],[12,"e_version","","",66,null],[12,"e_entry","","",66,null],[12,"e_phoff","","",66,null],[12,"e_shoff","","",66,null],[12,"e_flags","","",66,null],[12,"e_ehsize","","",66,null],[12,"e_phentsize","","",66,null],[12,"e_phnum","","",66,null],[12,"e_shentsize","","",66,null],[12,"e_shnum","","",66,null],[12,"e_shstrndx","","",66,null],[3,"Elf64_Ehdr","","",null,null],[12,"e_ident","","",67,null],[12,"e_type","","",67,null],[12,"e_machine","","",67,null],[12,"e_version","","",67,null],[12,"e_entry","","",67,null],[12,"e_phoff","","",67,null],[12,"e_shoff","","",67,null],[12,"e_flags","","",67,null],[12,"e_ehsize","","",67,null],[12,"e_phentsize","","",67,null],[12,"e_phnum","","",67,null],[12,"e_shentsize","","",67,null],[12,"e_shnum","","",67,null],[12,"e_shstrndx","","",67,null],[3,"Elf32_Sym","","",null,null],[12,"st_name","","",68,null],[12,"st_value","","",68,null],[12,"st_size","","",68,null],[12,"st_info","","",68,null],[12,"st_other","","",68,null],[12,"st_shndx","","",68,null],[3,"Elf64_Sym","","",null,null],[12,"st_name","","",69,null],[12,"st_info","","",69,null],[12,"st_other","","",69,null],[12,"st_shndx","","",69,null],[12,"st_value","","",69,null],[12,"st_size","","",69,null],[3,"Elf32_Phdr","","",null,null],[12,"p_type","","",70,null],[12,"p_offset","","",70,null],[12,"p_vaddr","","",70,null],[12,"p_paddr","","",70,null],[12,"p_filesz","","",70,null],[12,"p_memsz","","",70,null],[12,"p_flags","","",70,null],[12,"p_align","","",70,null],[3,"Elf64_Phdr","","",null,null],[12,"p_type","","",71,null],[12,"p_flags","","",71,null],[12,"p_offset","","",71,null],[12,"p_vaddr","","",71,null],[12,"p_paddr","","",71,null],[12,"p_filesz","","",71,null],[12,"p_memsz","","",71,null],[12,"p_align","","",71,null],[3,"Elf32_Shdr","","",null,null],[12,"sh_name","","",72,null],[12,"sh_type","","",72,null],[12,"sh_flags","","",72,null],[12,"sh_addr","","",72,null],[12,"sh_offset","","",72,null],[12,"sh_size","","",72,null],[12,"sh_link","","",72,null],[12,"sh_info","","",72,null],[12,"sh_addralign","","",72,null],[12,"sh_entsize","","",72,null],[3,"Elf64_Shdr","","",null,null],[12,"sh_name","","",73,null],[12,"sh_type","","",73,null],[12,"sh_flags","","",73,null],[12,"sh_addr","","",73,null],[12,"sh_offset","","",73,null],[12,"sh_size","","",73,null],[12,"sh_link","","",73,null],[12,"sh_info","","",73,null],[12,"sh_addralign","","",73,null],[12,"sh_entsize","","",73,null],[3,"Elf32_Chdr","","",null,null],[12,"ch_type","","",74,null],[12,"ch_size","","",74,null],[12,"ch_addralign","","",74,null],[3,"Elf64_Chdr","","",null,null],[12,"ch_type","","",75,null],[12,"ch_reserved","","",75,null],[12,"ch_size","","",75,null],[12,"ch_addralign","","",75,null],[3,"ucred","","",null,null],[12,"pid","","",76,null],[12,"uid","","",76,null],[12,"gid","","",76,null],[3,"mntent","","",null,null],[12,"mnt_fsname","","",77,null],[12,"mnt_dir","","",77,null],[12,"mnt_type","","",77,null],[12,"mnt_opts","","",77,null],[12,"mnt_freq","","",77,null],[12,"mnt_passno","","",77,null],[3,"posix_spawn_file_actions_t","","",null,null],[3,"posix_spawnattr_t","","",null,null],[3,"genlmsghdr","","",null,null],[12,"cmd","","",78,null],[12,"version","","",78,null],[12,"reserved","","",78,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",79,null],[12,"ipi6_ifindex","","",79,null],[3,"arpd_request","","",null,null],[12,"req","","",80,null],[12,"ip","","",80,null],[12,"dev","","",80,null],[12,"stamp","","",80,null],[12,"updated","","",80,null],[12,"ha","","",80,null],[3,"inotify_event","","",null,null],[12,"wd","","",81,null],[12,"mask","","",81,null],[12,"cookie","","",81,null],[12,"len","","",81,null],[3,"sockaddr_vm","","",null,null],[12,"svm_family","","",82,null],[12,"svm_reserved1","","",82,null],[12,"svm_port","","",82,null],[12,"svm_cid","","",82,null],[12,"svm_zero","","",82,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",83,null],[12,"nl_pid","","",83,null],[12,"nl_groups","","",83,null],[3,"dirent","","",null,null],[12,"d_ino","","",84,null],[12,"d_off","","",84,null],[12,"d_reclen","","",84,null],[12,"d_type","","",84,null],[12,"d_name","","",84,null],[3,"dirent64","","",null,null],[12,"d_ino","","",85,null],[12,"d_off","","",85,null],[12,"d_reclen","","",85,null],[12,"d_type","","",85,null],[12,"d_name","","",85,null],[3,"sockaddr_alg","","",null,null],[12,"salg_family","","",86,null],[12,"salg_type","","",86,null],[12,"salg_feat","","",86,null],[12,"salg_mask","","",86,null],[12,"salg_name","","",86,null],[3,"af_alg_iv","","",null,null],[12,"ivlen","","",87,null],[12,"iv","","",87,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",88,null],[12,"mq_maxmsg","","",88,null],[12,"mq_msgsize","","",88,null],[12,"mq_curmsgs","","",88,null],[3,"statx","","",null,null],[12,"stx_mask","","",89,null],[12,"stx_blksize","","",89,null],[12,"stx_attributes","","",89,null],[12,"stx_nlink","","",89,null],[12,"stx_uid","","",89,null],[12,"stx_gid","","",89,null],[12,"stx_mode","","",89,null],[12,"__statx_pad1","","",89,null],[12,"stx_ino","","",89,null],[12,"stx_size","","",89,null],[12,"stx_blocks","","",89,null],[12,"stx_attributes_mask","","",89,null],[12,"stx_atime","","",89,null],[12,"stx_btime","","",89,null],[12,"stx_ctime","","",89,null],[12,"stx_mtime","","",89,null],[12,"stx_rdev_major","","",89,null],[12,"stx_rdev_minor","","",89,null],[12,"stx_dev_major","","",89,null],[12,"stx_dev_minor","","",89,null],[12,"__statx_pad2","","",89,null],[3,"statx_timestamp","","",null,null],[12,"tv_sec","","",90,null],[12,"tv_nsec","","",90,null],[12,"__statx_timestamp_pad1","","",90,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",91,null],[12,"aio_lio_opcode","","",91,null],[12,"aio_reqprio","","",91,null],[12,"aio_buf","","",91,null],[12,"aio_nbytes","","",91,null],[12,"aio_sigevent","","",91,null],[12,"aio_offset","","",91,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",92,null],[12,"e_exit","","",92,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",93,null],[12,"tv_usec","","",93,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",94,null],[12,"gl_pathv","","",94,null],[12,"gl_offs","","",94,null],[12,"gl_flags","","",94,null],[3,"msghdr","","",null,null],[12,"msg_name","","",95,null],[12,"msg_namelen","","",95,null],[12,"msg_iov","","",95,null],[12,"msg_iovlen","","",95,null],[12,"msg_control","","",95,null],[12,"msg_controllen","","",95,null],[12,"msg_flags","","",95,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",96,null],[12,"cmsg_level","","",96,null],[12,"cmsg_type","","",96,null],[3,"termios","","",null,null],[12,"c_iflag","","",97,null],[12,"c_oflag","","",97,null],[12,"c_cflag","","",97,null],[12,"c_lflag","","",97,null],[12,"c_line","","",97,null],[12,"c_cc","","",97,null],[12,"c_ispeed","","",97,null],[12,"c_ospeed","","",97,null],[3,"mallinfo","","",null,null],[12,"arena","","",98,null],[12,"ordblks","","",98,null],[12,"smblks","","",98,null],[12,"hblks","","",98,null],[12,"hblkhd","","",98,null],[12,"usmblks","","",98,null],[12,"fsmblks","","",98,null],[12,"uordblks","","",98,null],[12,"fordblks","","",98,null],[12,"keepcost","","",98,null],[3,"nlmsghdr","","",null,null],[12,"nlmsg_len","","",99,null],[12,"nlmsg_type","","",99,null],[12,"nlmsg_flags","","",99,null],[12,"nlmsg_seq","","",99,null],[12,"nlmsg_pid","","",99,null],[3,"nlmsgerr","","",null,null],[12,"error","","",100,null],[12,"msg","","",100,null],[3,"nl_pktinfo","","",null,null],[12,"group","","",101,null],[3,"nl_mmap_req","","",null,null],[12,"nm_block_size","","",102,null],[12,"nm_block_nr","","",102,null],[12,"nm_frame_size","","",102,null],[12,"nm_frame_nr","","",102,null],[3,"nl_mmap_hdr","","",null,null],[12,"nm_status","","",103,null],[12,"nm_len","","",103,null],[12,"nm_group","","",103,null],[12,"nm_pid","","",103,null],[12,"nm_uid","","",103,null],[12,"nm_gid","","",103,null],[3,"nlattr","","",null,null],[12,"nla_len","","",104,null],[12,"nla_type","","",104,null],[3,"rtentry","","",null,null],[12,"rt_pad1","","",105,null],[12,"rt_dst","","",105,null],[12,"rt_gateway","","",105,null],[12,"rt_genmask","","",105,null],[12,"rt_flags","","",105,null],[12,"rt_pad2","","",105,null],[12,"rt_pad3","","",105,null],[12,"rt_tos","","",105,null],[12,"rt_class","","",105,null],[12,"rt_pad4","","",105,null],[12,"rt_metric","","",105,null],[12,"rt_dev","","",105,null],[12,"rt_mtu","","",105,null],[12,"rt_window","","",105,null],[12,"rt_irtt","","",105,null],[3,"utmpx","","",null,null],[12,"ut_type","","",106,null],[12,"ut_pid","","",106,null],[12,"ut_line","","",106,null],[12,"ut_id","","",106,null],[12,"ut_user","","",106,null],[12,"ut_host","","",106,null],[12,"ut_exit","","",106,null],[12,"ut_session","","",106,null],[12,"ut_tv","","",106,null],[12,"ut_addr_v6","","",106,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",107,null],[12,"loads","","",107,null],[12,"totalram","","",107,null],[12,"freeram","","",107,null],[12,"sharedram","","",107,null],[12,"bufferram","","",107,null],[12,"totalswap","","",107,null],[12,"freeswap","","",107,null],[12,"procs","","",107,null],[12,"pad","","",107,null],[12,"totalhigh","","",107,null],[12,"freehigh","","",107,null],[12,"mem_unit","","",107,null],[12,"_f","","",107,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",108,null],[12,"msg_stime","","",108,null],[12,"msg_rtime","","",108,null],[12,"msg_ctime","","",108,null],[12,"msg_qnum","","",108,null],[12,"msg_qbytes","","",108,null],[12,"msg_lspid","","",108,null],[12,"msg_lrpid","","",108,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",109,null],[12,"sa_mask","","",109,null],[12,"sa_flags","","",109,null],[12,"sa_restorer","","",109,null],[3,"statfs","","",null,null],[12,"f_type","","",110,null],[12,"f_bsize","","",110,null],[12,"f_blocks","","",110,null],[12,"f_bfree","","",110,null],[12,"f_bavail","","",110,null],[12,"f_files","","",110,null],[12,"f_ffree","","",110,null],[12,"f_fsid","","",110,null],[12,"f_namelen","","",110,null],[12,"f_frsize","","",110,null],[3,"flock","","",null,null],[12,"l_type","","",111,null],[12,"l_whence","","",111,null],[12,"l_start","","",111,null],[12,"l_len","","",111,null],[12,"l_pid","","",111,null],[3,"flock64","","",null,null],[12,"l_type","","",112,null],[12,"l_whence","","",112,null],[12,"l_start","","",112,null],[12,"l_len","","",112,null],[12,"l_pid","","",112,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",113,null],[12,"si_errno","","",113,null],[12,"si_code","","",113,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",114,null],[12,"ss_flags","","",114,null],[12,"ss_size","","",114,null],[3,"stat","","",null,null],[12,"st_dev","","",115,null],[12,"st_ino","","",115,null],[12,"st_nlink","","",115,null],[12,"st_mode","","",115,null],[12,"st_uid","","",115,null],[12,"st_gid","","",115,null],[12,"st_rdev","","",115,null],[12,"st_size","","",115,null],[12,"st_blksize","","",115,null],[12,"st_blocks","","",115,null],[12,"st_atime","","",115,null],[12,"st_atime_nsec","","",115,null],[12,"st_mtime","","",115,null],[12,"st_mtime_nsec","","",115,null],[12,"st_ctime","","",115,null],[12,"st_ctime_nsec","","",115,null],[3,"stat64","","",null,null],[12,"st_dev","","",116,null],[12,"st_ino","","",116,null],[12,"st_nlink","","",116,null],[12,"st_mode","","",116,null],[12,"st_uid","","",116,null],[12,"st_gid","","",116,null],[12,"st_rdev","","",116,null],[12,"st_size","","",116,null],[12,"st_blksize","","",116,null],[12,"st_blocks","","",116,null],[12,"st_atime","","",116,null],[12,"st_atime_nsec","","",116,null],[12,"st_mtime","","",116,null],[12,"st_mtime_nsec","","",116,null],[12,"st_ctime","","",116,null],[12,"st_ctime_nsec","","",116,null],[3,"statfs64","","",null,null],[12,"f_type","","",117,null],[12,"f_bsize","","",117,null],[12,"f_blocks","","",117,null],[12,"f_bfree","","",117,null],[12,"f_bavail","","",117,null],[12,"f_files","","",117,null],[12,"f_ffree","","",117,null],[12,"f_fsid","","",117,null],[12,"f_namelen","","",117,null],[12,"f_frsize","","",117,null],[12,"f_flags","","",117,null],[12,"f_spare","","",117,null],[3,"statvfs64","","",null,null],[12,"f_bsize","","",118,null],[12,"f_frsize","","",118,null],[12,"f_blocks","","",118,null],[12,"f_bfree","","",118,null],[12,"f_bavail","","",118,null],[12,"f_files","","",118,null],[12,"f_ffree","","",118,null],[12,"f_favail","","",118,null],[12,"f_fsid","","",118,null],[12,"f_flag","","",118,null],[12,"f_namemax","","",118,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",119,null],[12,"exponent","","",119,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",120,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",121,null],[12,"swd","","",121,null],[12,"ftw","","",121,null],[12,"fop","","",121,null],[12,"rip","","",121,null],[12,"rdp","","",121,null],[12,"mxcsr","","",121,null],[12,"mxcr_mask","","",121,null],[12,"_st","","",121,null],[12,"_xmm","","",121,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",122,null],[12,"r14","","",122,null],[12,"r13","","",122,null],[12,"r12","","",122,null],[12,"rbp","","",122,null],[12,"rbx","","",122,null],[12,"r11","","",122,null],[12,"r10","","",122,null],[12,"r9","","",122,null],[12,"r8","","",122,null],[12,"rax","","",122,null],[12,"rcx","","",122,null],[12,"rdx","","",122,null],[12,"rsi","","",122,null],[12,"rdi","","",122,null],[12,"orig_rax","","",122,null],[12,"rip","","",122,null],[12,"cs","","",122,null],[12,"eflags","","",122,null],[12,"rsp","","",122,null],[12,"ss","","",122,null],[12,"fs_base","","",122,null],[12,"gs_base","","",122,null],[12,"ds","","",122,null],[12,"es","","",122,null],[12,"fs","","",122,null],[12,"gs","","",122,null],[3,"user","","",null,null],[12,"regs","","",123,null],[12,"u_fpvalid","","",123,null],[12,"i387","","",123,null],[12,"u_tsize","","",123,null],[12,"u_dsize","","",123,null],[12,"u_ssize","","",123,null],[12,"start_code","","",123,null],[12,"start_stack","","",123,null],[12,"signal","","",123,null],[12,"u_ar0","","",123,null],[12,"u_fpstate","","",123,null],[12,"magic","","",123,null],[12,"u_comm","","",123,null],[12,"u_debugreg","","",123,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",124,null],[12,"fpregs","","",124,null],[3,"ipc_perm","","",null,null],[12,"__key","","",125,null],[12,"uid","","",125,null],[12,"gid","","",125,null],[12,"cuid","","",125,null],[12,"cgid","","",125,null],[12,"mode","","",125,null],[12,"__seq","","",125,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",126,null],[12,"shm_segsz","","",126,null],[12,"shm_atime","","",126,null],[12,"shm_dtime","","",126,null],[12,"shm_ctime","","",126,null],[12,"shm_cpid","","",126,null],[12,"shm_lpid","","",126,null],[12,"shm_nattch","","",126,null],[3,"termios2","","",null,null],[12,"c_iflag","","",127,null],[12,"c_oflag","","",127,null],[12,"c_cflag","","",127,null],[12,"c_lflag","","",127,null],[12,"c_line","","",127,null],[12,"c_cc","","",127,null],[12,"c_ispeed","","",127,null],[12,"c_ospeed","","",127,null],[3,"ip_mreqn","","",null,null],[12,"imr_multiaddr","","",128,null],[12,"imr_address","","",128,null],[12,"imr_ifindex","","",128,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",129,null],[12,"swd","","",129,null],[12,"ftw","","",129,null],[12,"fop","","",129,null],[12,"rip","","",129,null],[12,"rdp","","",129,null],[12,"mxcsr","","",129,null],[12,"mxcr_mask","","",129,null],[12,"st_space","","",129,null],[12,"xmm_space","","",129,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",130,null],[12,"uc_link","","",130,null],[12,"uc_stack","","",130,null],[12,"uc_mcontext","","",130,null],[12,"uc_sigmask","","",130,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",131,null],[12,"f_frsize","","",131,null],[12,"f_blocks","","",131,null],[12,"f_bfree","","",131,null],[12,"f_bavail","","",131,null],[12,"f_files","","",131,null],[12,"f_ffree","","",131,null],[12,"f_favail","","",131,null],[12,"f_fsid","","",131,null],[12,"f_flag","","",131,null],[12,"f_namemax","","",131,null],[3,"max_align_t","","",null,null],[3,"sem_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",132,null],[4,"DIR","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN","","",null,[[["c_uint"]],["c_uint"]]],[5,"FD_CLR","","",null,[[["c_int"]]]],[5,"FD_ISSET","","",null,[[["c_int"]],["bool"]]],[5,"FD_SET","","",null,[[["c_int"]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WIFSTOPPED","","",null,[[["c_int"]],["bool"]]],[5,"WSTOPSIG","","",null,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",null,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",null,[[["c_int"]],["bool"]]],[5,"WTERMSIG","","",null,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",null,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",null,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",null,[[["c_int"]],["bool"]]],[5,"QCMD","","",null,[[["c_int"]],["c_int"]]],[5,"IPOPT_COPIED","","",null,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS","","",null,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER","","",null,[[["u8"]],["u8"]]],[5,"IPTOS_ECN","","",null,[[["u8"]],["u8"]]],[5,"NLA_ALIGN","","",null,[[["c_int"]],["c_int"]]],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CPU_ZERO","","",null,[[["cpu_set_t"]]]],[5,"CPU_SET","","",null,[[["cpu_set_t"],["usize"]]]],[5,"CPU_CLR","","",null,[[["cpu_set_t"],["usize"]]]],[5,"CPU_ISSET","","",null,[[["usize"],["cpu_set_t"]],["bool"]]],[5,"CPU_EQUAL","","",null,[[["cpu_set_t"]],["bool"]]],[5,"major","","",null,[[["dev_t"]],["c_uint"]]],[5,"minor","","",null,[[["dev_t"]],["c_uint"]]],[5,"makedev","","",null,[[["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS","","",null,[[["u8"]],["u8"]]],[5,"IPTOS_PREC","","",null,[[["u8"]],["u8"]]],[5,"RT_TOS","","",null,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS","","",null,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR","","",null,[[["u32"]],["bool"]]],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has readdir_r.…",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_init","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_settime","","",null,null],[5,"dirfd","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"pipe2","","",null,null],[5,"statfs","","",null,null],[5,"statfs64","","",null,null],[5,"fstatfs","","",null,null],[5,"fstatfs64","","",null,null],[5,"statvfs64","","",null,null],[5,"fstatvfs64","","",null,null],[5,"memrchr","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"fstatat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"preadv64","","",null,null],[5,"pwrite64","","",null,null],[5,"pwritev64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"mknodat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"login_tty","","",null,null],[5,"execvpe","","",null,null],[5,"fexecve","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"uname","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setgrent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"fallocate64","","",null,null],[5,"posix_fallocate","","",null,null],[5,"posix_fallocate64","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"timerfd_create","","",null,null],[5,"timerfd_gettime","","",null,null],[5,"timerfd_settime","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_timedreceive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_timedsend","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"remap_file_pages","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sync","","",null,null],[5,"syscall","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_wait","","",null,null],[5,"epoll_ctl","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"unshare","","",null,null],[5,"umount","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"tee","","",null,null],[5,"settimeofday","","",null,null],[5,"splice","","",null,null],[5,"eventfd","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"sem_timedwait","","",null,null],[5,"sem_getvalue","","",null,null],[5,"sched_setparam","","",null,null],[5,"setns","","",null,null],[5,"swapoff","","",null,null],[5,"vmsplice","","",null,null],[5,"mount","","",null,null],[5,"personality","","",null,null],[5,"prctl","","",null,null],[5,"sched_getparam","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"clone","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"sethostname","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"sysinfo","","",null,null],[5,"umount2","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"swapon","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sendfile","","",null,null],[5,"sigsuspend","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"initgroups","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"daemon","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"getgrouplist","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"dl_iterate_phdr","","",null,null],[5,"setmntent","","",null,null],[5,"getmntent","","",null,null],[5,"addmntent","","",null,null],[5,"endmntent","","",null,null],[5,"hasmntopt","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawnattr_getschedpolicy","","",null,null],[5,"posix_spawnattr_setschedpolicy","","",null,null],[5,"posix_spawnattr_getschedparam","","",null,null],[5,"posix_spawnattr_setschedparam","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"fread_unlocked","","",null,null],[5,"inotify_rm_watch","","",null,null],[5,"inotify_init","","",null,null],[5,"inotify_init1","","",null,null],[5,"inotify_add_watch","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"utmpname","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"mallopt","","",null,null],[5,"gettimeofday","","",null,null],[5,"statx","","",null,null],[5,"getrandom","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"mallinfo","","",null,null],[5,"malloc_usable_size","","",null,null],[5,"getauxval","","",null,null],[5,"getpwent_r","","",null,null],[5,"getgrent_r","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[5,"sysctl","","",null,null],[11,"si_addr","","",113,[[["self"]]]],[11,"si_value","","",113,[[["self"]],["sigval"]]],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"locale_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"loff_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"Elf32_Half","","",null,null],[6,"Elf32_Word","","",null,null],[6,"Elf32_Off","","",null,null],[6,"Elf32_Addr","","",null,null],[6,"Elf64_Half","","",null,null],[6,"Elf64_Word","","",null,null],[6,"Elf64_Off","","",null,null],[6,"Elf64_Addr","","",null,null],[6,"Elf64_Xword","","",null,null],[6,"Elf64_Sxword","","",null,null],[6,"Elf32_Section","","",null,null],[6,"Elf64_Section","","",null,null],[6,"pthread_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"__rlimit_resource_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_CANCELLK","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"F_ADD_SEALS","","",null,null],[17,"F_GET_SEALS","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_ALG","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IP_RECVERR","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_ADD_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_DROP_SOURCE_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADDRFORM","","",null,null],[17,"IPV6_2292PKTINFO","","",null,null],[17,"IPV6_2292HOPOPTS","","",null,null],[17,"IPV6_2292DSTOPTS","","",null,null],[17,"IPV6_2292RTHDR","","",null,null],[17,"IPV6_2292PKTOPTIONS","","",null,null],[17,"IPV6_CHECKSUM","","",null,null],[17,"IPV6_2292HOPLIMIT","","",null,null],[17,"IPV6_NEXTHOP","","",null,null],[17,"IPV6_FLOWINFO","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ROUTER_ALERT","","",null,null],[17,"IPV6_MTU_DISCOVER","","",null,null],[17,"IPV6_MTU","","",null,null],[17,"IPV6_RECVERR","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPV6_JOIN_ANYCAST","","",null,null],[17,"IPV6_LEAVE_ANYCAST","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_O_MASK","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"IPTOS_LOWDELAY","","",null,null],[17,"IPTOS_THROUGHPUT","","",null,null],[17,"IPTOS_RELIABILITY","","",null,null],[17,"IPTOS_MINCOST","","",null,null],[17,"IPTOS_PREC_NETCONTROL","","",null,null],[17,"IPTOS_PREC_INTERNETCONTROL","","",null,null],[17,"IPTOS_PREC_CRITIC_ECP","","",null,null],[17,"IPTOS_PREC_FLASHOVERRIDE","","",null,null],[17,"IPTOS_PREC_FLASH","","",null,null],[17,"IPTOS_PREC_IMMEDIATE","","",null,null],[17,"IPTOS_PREC_PRIORITY","","",null,null],[17,"IPTOS_PREC_ROUTINE","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"IPOPT_COPY","","",null,null],[17,"IPOPT_CLASS_MASK","","",null,null],[17,"IPOPT_NUMBER_MASK","","",null,null],[17,"IPOPT_CONTROL","","",null,null],[17,"IPOPT_RESERVED1","","",null,null],[17,"IPOPT_MEASUREMENT","","",null,null],[17,"IPOPT_RESERVED2","","",null,null],[17,"IPOPT_END","","",null,null],[17,"IPOPT_NOOP","","",null,null],[17,"IPOPT_SEC","","",null,null],[17,"IPOPT_LSRR","","",null,null],[17,"IPOPT_TIMESTAMP","","",null,null],[17,"IPOPT_RR","","",null,null],[17,"IPOPT_SID","","",null,null],[17,"IPOPT_SSRR","","",null,null],[17,"IPOPT_RA","","",null,null],[17,"IPVERSION","","",null,null],[17,"MAXTTL","","",null,null],[17,"IPDEFTTL","","",null,null],[17,"IPOPT_OPTVAL","","",null,null],[17,"IPOPT_OLEN","","",null,null],[17,"IPOPT_OFFSET","","",null,null],[17,"IPOPT_MINOFF","","",null,null],[17,"MAX_IPOPTLEN","","",null,null],[17,"IPOPT_NOP","","",null,null],[17,"IPOPT_EOL","","",null,null],[17,"IPOPT_TS","","",null,null],[17,"IPOPT_TS_TSONLY","","",null,null],[17,"IPOPT_TS_TSANDADDR","","",null,null],[17,"IPOPT_TS_PRESPEC","","",null,null],[17,"ARPOP_RREQUEST","","",null,null],[17,"ARPOP_RREPLY","","",null,null],[17,"ARPOP_InREQUEST","","",null,null],[17,"ARPOP_InREPLY","","",null,null],[17,"ARPOP_NAK","","",null,null],[17,"ATF_NETMASK","","",null,null],[17,"ATF_DONTPUB","","",null,null],[17,"ARPHRD_NETROM","","",null,null],[17,"ARPHRD_ETHER","","",null,null],[17,"ARPHRD_EETHER","","",null,null],[17,"ARPHRD_AX25","","",null,null],[17,"ARPHRD_PRONET","","",null,null],[17,"ARPHRD_CHAOS","","",null,null],[17,"ARPHRD_IEEE802","","",null,null],[17,"ARPHRD_ARCNET","","",null,null],[17,"ARPHRD_APPLETLK","","",null,null],[17,"ARPHRD_DLCI","","",null,null],[17,"ARPHRD_ATM","","",null,null],[17,"ARPHRD_METRICOM","","",null,null],[17,"ARPHRD_IEEE1394","","",null,null],[17,"ARPHRD_EUI64","","",null,null],[17,"ARPHRD_INFINIBAND","","",null,null],[17,"ARPHRD_SLIP","","",null,null],[17,"ARPHRD_CSLIP","","",null,null],[17,"ARPHRD_SLIP6","","",null,null],[17,"ARPHRD_CSLIP6","","",null,null],[17,"ARPHRD_RSRVD","","",null,null],[17,"ARPHRD_ADAPT","","",null,null],[17,"ARPHRD_ROSE","","",null,null],[17,"ARPHRD_X25","","",null,null],[17,"ARPHRD_HWX25","","",null,null],[17,"ARPHRD_PPP","","",null,null],[17,"ARPHRD_CISCO","","",null,null],[17,"ARPHRD_HDLC","","",null,null],[17,"ARPHRD_LAPB","","",null,null],[17,"ARPHRD_DDCMP","","",null,null],[17,"ARPHRD_RAWHDLC","","",null,null],[17,"ARPHRD_TUNNEL","","",null,null],[17,"ARPHRD_TUNNEL6","","",null,null],[17,"ARPHRD_FRAD","","",null,null],[17,"ARPHRD_SKIP","","",null,null],[17,"ARPHRD_LOOPBACK","","",null,null],[17,"ARPHRD_LOCALTLK","","",null,null],[17,"ARPHRD_FDDI","","",null,null],[17,"ARPHRD_BIF","","",null,null],[17,"ARPHRD_SIT","","",null,null],[17,"ARPHRD_IPDDP","","",null,null],[17,"ARPHRD_IPGRE","","",null,null],[17,"ARPHRD_PIMREG","","",null,null],[17,"ARPHRD_HIPPI","","",null,null],[17,"ARPHRD_ASH","","",null,null],[17,"ARPHRD_ECONET","","",null,null],[17,"ARPHRD_IRDA","","",null,null],[17,"ARPHRD_FCPP","","",null,null],[17,"ARPHRD_FCAL","","",null,null],[17,"ARPHRD_FCPL","","",null,null],[17,"ARPHRD_FCFABRIC","","",null,null],[17,"ARPHRD_IEEE802_TR","","",null,null],[17,"ARPHRD_IEEE80211","","",null,null],[17,"ARPHRD_IEEE80211_PRISM","","",null,null],[17,"ARPHRD_IEEE80211_RADIOTAP","","",null,null],[17,"ARPHRD_IEEE802154","","",null,null],[17,"ARPHRD_VOID","","",null,null],[17,"ARPHRD_NONE","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_SEAL_FUTURE_WRITE","","",null,null],[17,"IFF_LOWER_UP","","",null,null],[17,"IFF_DORMANT","","",null,null],[17,"IFF_ECHO","","",null,null],[17,"IFA_UNSPEC","","",null,null],[17,"IFA_ADDRESS","","",null,null],[17,"IFA_LOCAL","","",null,null],[17,"IFA_LABEL","","",null,null],[17,"IFA_BROADCAST","","",null,null],[17,"IFA_ANYCAST","","",null,null],[17,"IFA_CACHEINFO","","",null,null],[17,"IFA_MULTICAST","","",null,null],[17,"IFA_F_SECONDARY","","",null,null],[17,"IFA_F_TEMPORARY","","",null,null],[17,"IFA_F_NODAD","","",null,null],[17,"IFA_F_OPTIMISTIC","","",null,null],[17,"IFA_F_DADFAILED","","",null,null],[17,"IFA_F_HOMEADDRESS","","",null,null],[17,"IFA_F_DEPRECATED","","",null,null],[17,"IFA_F_TENTATIVE","","",null,null],[17,"IFA_F_PERMANENT","","",null,null],[17,"IFLA_UNSPEC","","",null,null],[17,"IFLA_ADDRESS","","",null,null],[17,"IFLA_BROADCAST","","",null,null],[17,"IFLA_IFNAME","","",null,null],[17,"IFLA_MTU","","",null,null],[17,"IFLA_LINK","","",null,null],[17,"IFLA_QDISC","","",null,null],[17,"IFLA_STATS","","",null,null],[17,"IFLA_COST","","",null,null],[17,"IFLA_PRIORITY","","",null,null],[17,"IFLA_MASTER","","",null,null],[17,"IFLA_WIRELESS","","",null,null],[17,"IFLA_PROTINFO","","",null,null],[17,"IFLA_TXQLEN","","",null,null],[17,"IFLA_MAP","","",null,null],[17,"IFLA_WEIGHT","","",null,null],[17,"IFLA_OPERSTATE","","",null,null],[17,"IFLA_LINKMODE","","",null,null],[17,"IFLA_LINKINFO","","",null,null],[17,"IFLA_NET_NS_PID","","",null,null],[17,"IFLA_IFALIAS","","",null,null],[17,"IFLA_NUM_VF","","",null,null],[17,"IFLA_VFINFO_LIST","","",null,null],[17,"IFLA_STATS64","","",null,null],[17,"IFLA_VF_PORTS","","",null,null],[17,"IFLA_PORT_SELF","","",null,null],[17,"IFLA_AF_SPEC","","",null,null],[17,"IFLA_GROUP","","",null,null],[17,"IFLA_NET_NS_FD","","",null,null],[17,"IFLA_EXT_MASK","","",null,null],[17,"IFLA_PROMISCUITY","","",null,null],[17,"IFLA_NUM_TX_QUEUES","","",null,null],[17,"IFLA_NUM_RX_QUEUES","","",null,null],[17,"IFLA_CARRIER","","",null,null],[17,"IFLA_PHYS_PORT_ID","","",null,null],[17,"IFLA_CARRIER_CHANGES","","",null,null],[17,"IFLA_PHYS_SWITCH_ID","","",null,null],[17,"IFLA_LINK_NETNSID","","",null,null],[17,"IFLA_PHYS_PORT_NAME","","",null,null],[17,"IFLA_PROTO_DOWN","","",null,null],[17,"IFLA_INFO_UNSPEC","","",null,null],[17,"IFLA_INFO_KIND","","",null,null],[17,"IFLA_INFO_DATA","","",null,null],[17,"IFLA_INFO_XSTATS","","",null,null],[17,"IFLA_INFO_SLAVE_KIND","","",null,null],[17,"IFLA_INFO_SLAVE_DATA","","",null,null],[17,"IFF_TUN","","",null,null],[17,"IFF_TAP","","",null,null],[17,"IFF_NO_PI","","",null,null],[17,"TUN_READQ_SIZE","","",null,null],[17,"TUN_TUN_DEV","","",null,null],[17,"TUN_TAP_DEV","","",null,null],[17,"TUN_TYPE_MASK","","",null,null],[17,"IFF_ONE_QUEUE","","",null,null],[17,"IFF_VNET_HDR","","",null,null],[17,"IFF_TUN_EXCL","","",null,null],[17,"IFF_MULTI_QUEUE","","",null,null],[17,"IFF_ATTACH_QUEUE","","",null,null],[17,"IFF_DETACH_QUEUE","","",null,null],[17,"IFF_PERSIST","","",null,null],[17,"IFF_NOFILTER","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"RENAME_NOREPLACE","","",null,null],[17,"RENAME_EXCHANGE","","",null,null],[17,"RENAME_WHITEOUT","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"SCHED_RESET_ON_FORK","","",null,null],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_DCCP","","DCCP",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_MTP","","",null,null],[17,"IPPROTO_BEETPH","","",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_PIM","","Protocol indep. multicast",null,null],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_MH","","",null,null],[17,"IPPROTO_UDPLITE","","",null,null],[17,"IPPROTO_MPLS","","",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"AF_XDP","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"PF_XDP","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"GRND_NONBLOCK","","",null,null],[17,"GRND_RANDOM","","",null,null],[17,"SECCOMP_MODE_DISABLED","","",null,null],[17,"SECCOMP_MODE_STRICT","","",null,null],[17,"SECCOMP_MODE_FILTER","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"TFD_CLOEXEC","","",null,null],[17,"TFD_NONBLOCK","","",null,null],[17,"TFD_TIMER_ABSTIME","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"IP_ORIGDSTADDR","","",null,null],[17,"IP_RECVORIGDSTADDR","","",null,null],[17,"IPV6_ORIGDSTADDR","","",null,null],[17,"IPV6_RECVORIGDSTADDR","","",null,null],[17,"IPV6_FLOWLABEL_MGR","","",null,null],[17,"IPV6_FLOWINFO_SEND","","",null,null],[17,"IPV6_FLOWINFO_FLOWLABEL","","",null,null],[17,"IPV6_FLOWINFO_PRIORITY","","",null,null],[17,"IUTF8","","",null,null],[17,"CMSPAR","","",null,null],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[17,"MFD_HUGETLB","","",null,null],[17,"PT_NULL","","",null,null],[17,"PT_LOAD","","",null,null],[17,"PT_DYNAMIC","","",null,null],[17,"PT_INTERP","","",null,null],[17,"PT_NOTE","","",null,null],[17,"PT_SHLIB","","",null,null],[17,"PT_PHDR","","",null,null],[17,"PT_TLS","","",null,null],[17,"PT_NUM","","",null,null],[17,"PT_LOOS","","",null,null],[17,"PT_GNU_EH_FRAME","","",null,null],[17,"PT_GNU_STACK","","",null,null],[17,"PT_GNU_RELRO","","",null,null],[17,"ETH_ALEN","","",null,null],[17,"ETH_HLEN","","",null,null],[17,"ETH_ZLEN","","",null,null],[17,"ETH_DATA_LEN","","",null,null],[17,"ETH_FRAME_LEN","","",null,null],[17,"ETH_FCS_LEN","","",null,null],[17,"ETH_P_LOOP","","",null,null],[17,"ETH_P_PUP","","",null,null],[17,"ETH_P_PUPAT","","",null,null],[17,"ETH_P_IP","","",null,null],[17,"ETH_P_X25","","",null,null],[17,"ETH_P_ARP","","",null,null],[17,"ETH_P_BPQ","","",null,null],[17,"ETH_P_IEEEPUP","","",null,null],[17,"ETH_P_IEEEPUPAT","","",null,null],[17,"ETH_P_BATMAN","","",null,null],[17,"ETH_P_DEC","","",null,null],[17,"ETH_P_DNA_DL","","",null,null],[17,"ETH_P_DNA_RC","","",null,null],[17,"ETH_P_DNA_RT","","",null,null],[17,"ETH_P_LAT","","",null,null],[17,"ETH_P_DIAG","","",null,null],[17,"ETH_P_CUST","","",null,null],[17,"ETH_P_SCA","","",null,null],[17,"ETH_P_TEB","","",null,null],[17,"ETH_P_RARP","","",null,null],[17,"ETH_P_ATALK","","",null,null],[17,"ETH_P_AARP","","",null,null],[17,"ETH_P_8021Q","","",null,null],[17,"ETH_P_IPX","","",null,null],[17,"ETH_P_IPV6","","",null,null],[17,"ETH_P_PAUSE","","",null,null],[17,"ETH_P_SLOW","","",null,null],[17,"ETH_P_WCCP","","",null,null],[17,"ETH_P_MPLS_UC","","",null,null],[17,"ETH_P_MPLS_MC","","",null,null],[17,"ETH_P_ATMMPOA","","",null,null],[17,"ETH_P_PPP_DISC","","",null,null],[17,"ETH_P_PPP_SES","","",null,null],[17,"ETH_P_LINK_CTL","","",null,null],[17,"ETH_P_ATMFATE","","",null,null],[17,"ETH_P_PAE","","",null,null],[17,"ETH_P_AOE","","",null,null],[17,"ETH_P_8021AD","","",null,null],[17,"ETH_P_802_EX1","","",null,null],[17,"ETH_P_TIPC","","",null,null],[17,"ETH_P_MACSEC","","",null,null],[17,"ETH_P_8021AH","","",null,null],[17,"ETH_P_MVRP","","",null,null],[17,"ETH_P_1588","","",null,null],[17,"ETH_P_PRP","","",null,null],[17,"ETH_P_FCOE","","",null,null],[17,"ETH_P_TDLS","","",null,null],[17,"ETH_P_FIP","","",null,null],[17,"ETH_P_80221","","",null,null],[17,"ETH_P_LOOPBACK","","",null,null],[17,"ETH_P_QINQ1","","",null,null],[17,"ETH_P_QINQ2","","",null,null],[17,"ETH_P_QINQ3","","",null,null],[17,"ETH_P_EDSA","","",null,null],[17,"ETH_P_AF_IUCV","","",null,null],[17,"ETH_P_802_3_MIN","","",null,null],[17,"ETH_P_802_3","","",null,null],[17,"ETH_P_AX25","","",null,null],[17,"ETH_P_ALL","","",null,null],[17,"ETH_P_802_2","","",null,null],[17,"ETH_P_SNAP","","",null,null],[17,"ETH_P_DDCMP","","",null,null],[17,"ETH_P_WAN_PPP","","",null,null],[17,"ETH_P_PPP_MP","","",null,null],[17,"ETH_P_LOCALTALK","","",null,null],[17,"ETH_P_CANFD","","",null,null],[17,"ETH_P_PPPTALK","","",null,null],[17,"ETH_P_TR_802_2","","",null,null],[17,"ETH_P_MOBITEX","","",null,null],[17,"ETH_P_CONTROL","","",null,null],[17,"ETH_P_IRDA","","",null,null],[17,"ETH_P_ECONET","","",null,null],[17,"ETH_P_HDLC","","",null,null],[17,"ETH_P_ARCNET","","",null,null],[17,"ETH_P_DSA","","",null,null],[17,"ETH_P_TRAILER","","",null,null],[17,"ETH_P_PHONET","","",null,null],[17,"ETH_P_IEEE802154","","",null,null],[17,"ETH_P_CAIF","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",null,null],[17,"POSIX_SPAWN_SETSCHEDULER","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NFNLGRP_NONE","","",null,null],[17,"NFNLGRP_CONNTRACK_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_DESTROY","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_NEW","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_UPDATE","","",null,null],[17,"NFNLGRP_CONNTRACK_EXP_DESTROY","","",null,null],[17,"NFNLGRP_NFTABLES","","",null,null],[17,"NFNLGRP_ACCT_QUOTA","","",null,null],[17,"NFNETLINK_V0","","",null,null],[17,"NFNL_SUBSYS_NONE","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_EXP","","",null,null],[17,"NFNL_SUBSYS_QUEUE","","",null,null],[17,"NFNL_SUBSYS_ULOG","","",null,null],[17,"NFNL_SUBSYS_OSF","","",null,null],[17,"NFNL_SUBSYS_IPSET","","",null,null],[17,"NFNL_SUBSYS_ACCT","","",null,null],[17,"NFNL_SUBSYS_CTNETLINK_TIMEOUT","","",null,null],[17,"NFNL_SUBSYS_CTHELPER","","",null,null],[17,"NFNL_SUBSYS_NFTABLES","","",null,null],[17,"NFNL_SUBSYS_NFT_COMPAT","","",null,null],[17,"NFNL_SUBSYS_COUNT","","",null,null],[17,"NFNL_MSG_BATCH_BEGIN","","",null,null],[17,"NFNL_MSG_BATCH_END","","",null,null],[17,"NFULNL_MSG_PACKET","","",null,null],[17,"NFULNL_MSG_CONFIG","","",null,null],[17,"NFULA_UNSPEC","","",null,null],[17,"NFULA_PACKET_HDR","","",null,null],[17,"NFULA_MARK","","",null,null],[17,"NFULA_TIMESTAMP","","",null,null],[17,"NFULA_IFINDEX_INDEV","","",null,null],[17,"NFULA_IFINDEX_OUTDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSINDEV","","",null,null],[17,"NFULA_IFINDEX_PHYSOUTDEV","","",null,null],[17,"NFULA_HWADDR","","",null,null],[17,"NFULA_PAYLOAD","","",null,null],[17,"NFULA_PREFIX","","",null,null],[17,"NFULA_UID","","",null,null],[17,"NFULA_SEQ","","",null,null],[17,"NFULA_SEQ_GLOBAL","","",null,null],[17,"NFULA_GID","","",null,null],[17,"NFULA_HWTYPE","","",null,null],[17,"NFULA_HWHEADER","","",null,null],[17,"NFULA_HWLEN","","",null,null],[17,"NFULA_CT","","",null,null],[17,"NFULA_CT_INFO","","",null,null],[17,"NFULNL_CFG_CMD_NONE","","",null,null],[17,"NFULNL_CFG_CMD_BIND","","",null,null],[17,"NFULNL_CFG_CMD_UNBIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_BIND","","",null,null],[17,"NFULNL_CFG_CMD_PF_UNBIND","","",null,null],[17,"NFULA_CFG_UNSPEC","","",null,null],[17,"NFULA_CFG_CMD","","",null,null],[17,"NFULA_CFG_MODE","","",null,null],[17,"NFULA_CFG_NLBUFSIZ","","",null,null],[17,"NFULA_CFG_TIMEOUT","","",null,null],[17,"NFULA_CFG_QTHRESH","","",null,null],[17,"NFULA_CFG_FLAGS","","",null,null],[17,"NFULNL_COPY_NONE","","",null,null],[17,"NFULNL_COPY_META","","",null,null],[17,"NFULNL_COPY_PACKET","","",null,null],[17,"NFULNL_CFG_F_SEQ","","",null,null],[17,"NFULNL_CFG_F_SEQ_GLOBAL","","",null,null],[17,"NFULNL_CFG_F_CONNTRACK","","",null,null],[17,"GENL_NAMSIZ","","",null,null],[17,"GENL_MIN_ID","","",null,null],[17,"GENL_MAX_ID","","",null,null],[17,"GENL_ADMIN_PERM","","",null,null],[17,"GENL_CMD_CAP_DO","","",null,null],[17,"GENL_CMD_CAP_DUMP","","",null,null],[17,"GENL_CMD_CAP_HASPOL","","",null,null],[17,"GENL_ID_CTRL","","",null,null],[17,"CTRL_CMD_UNSPEC","","",null,null],[17,"CTRL_CMD_NEWFAMILY","","",null,null],[17,"CTRL_CMD_DELFAMILY","","",null,null],[17,"CTRL_CMD_GETFAMILY","","",null,null],[17,"CTRL_CMD_NEWOPS","","",null,null],[17,"CTRL_CMD_DELOPS","","",null,null],[17,"CTRL_CMD_GETOPS","","",null,null],[17,"CTRL_CMD_NEWMCAST_GRP","","",null,null],[17,"CTRL_CMD_DELMCAST_GRP","","",null,null],[17,"CTRL_CMD_GETMCAST_GRP","","",null,null],[17,"CTRL_ATTR_UNSPEC","","",null,null],[17,"CTRL_ATTR_FAMILY_ID","","",null,null],[17,"CTRL_ATTR_FAMILY_NAME","","",null,null],[17,"CTRL_ATTR_VERSION","","",null,null],[17,"CTRL_ATTR_HDRSIZE","","",null,null],[17,"CTRL_ATTR_MAXATTR","","",null,null],[17,"CTRL_ATTR_OPS","","",null,null],[17,"CTRL_ATTR_MCAST_GROUPS","","",null,null],[17,"CTRL_ATTR_OP_UNSPEC","","",null,null],[17,"CTRL_ATTR_OP_ID","","",null,null],[17,"CTRL_ATTR_OP_FLAGS","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",null,null],[17,"CTRL_ATTR_MCAST_GRP_ID","","",null,null],[17,"PACKET_ADD_MEMBERSHIP","","",null,null],[17,"PACKET_DROP_MEMBERSHIP","","",null,null],[17,"PACKET_MR_MULTICAST","","",null,null],[17,"PACKET_MR_PROMISC","","",null,null],[17,"PACKET_MR_ALLMULTI","","",null,null],[17,"PACKET_MR_UNICAST","","",null,null],[17,"NF_DROP","","",null,null],[17,"NF_ACCEPT","","",null,null],[17,"NF_STOLEN","","",null,null],[17,"NF_QUEUE","","",null,null],[17,"NF_REPEAT","","",null,null],[17,"NF_STOP","","",null,null],[17,"NF_MAX_VERDICT","","",null,null],[17,"NF_VERDICT_MASK","","",null,null],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",null,null],[17,"NF_VERDICT_QMASK","","",null,null],[17,"NF_VERDICT_QBITS","","",null,null],[17,"NF_VERDICT_BITS","","",null,null],[17,"NF_INET_PRE_ROUTING","","",null,null],[17,"NF_INET_LOCAL_IN","","",null,null],[17,"NF_INET_FORWARD","","",null,null],[17,"NF_INET_LOCAL_OUT","","",null,null],[17,"NF_INET_POST_ROUTING","","",null,null],[17,"NF_INET_NUMHOOKS","","",null,null],[17,"NFPROTO_UNSPEC","","",null,null],[17,"NFPROTO_IPV4","","",null,null],[17,"NFPROTO_ARP","","",null,null],[17,"NFPROTO_BRIDGE","","",null,null],[17,"NFPROTO_IPV6","","",null,null],[17,"NFPROTO_DECNET","","",null,null],[17,"NFPROTO_NUMPROTO","","",null,null],[17,"NF_IP_PRE_ROUTING","","",null,null],[17,"NF_IP_LOCAL_IN","","",null,null],[17,"NF_IP_FORWARD","","",null,null],[17,"NF_IP_LOCAL_OUT","","",null,null],[17,"NF_IP_POST_ROUTING","","",null,null],[17,"NF_IP_NUMHOOKS","","",null,null],[17,"NF_IP_PRI_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP_PRI_RAW","","",null,null],[17,"NF_IP_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP_PRI_CONNTRACK","","",null,null],[17,"NF_IP_PRI_MANGLE","","",null,null],[17,"NF_IP_PRI_NAT_DST","","",null,null],[17,"NF_IP_PRI_FILTER","","",null,null],[17,"NF_IP_PRI_SECURITY","","",null,null],[17,"NF_IP_PRI_NAT_SRC","","",null,null],[17,"NF_IP_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",null,null],[17,"NF_IP_PRI_LAST","","",null,null],[17,"NF_IP6_PRE_ROUTING","","",null,null],[17,"NF_IP6_LOCAL_IN","","",null,null],[17,"NF_IP6_FORWARD","","",null,null],[17,"NF_IP6_LOCAL_OUT","","",null,null],[17,"NF_IP6_POST_ROUTING","","",null,null],[17,"NF_IP6_NUMHOOKS","","",null,null],[17,"NF_IP6_PRI_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",null,null],[17,"NF_IP6_PRI_RAW","","",null,null],[17,"NF_IP6_PRI_SELINUX_FIRST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK","","",null,null],[17,"NF_IP6_PRI_MANGLE","","",null,null],[17,"NF_IP6_PRI_NAT_DST","","",null,null],[17,"NF_IP6_PRI_FILTER","","",null,null],[17,"NF_IP6_PRI_SECURITY","","",null,null],[17,"NF_IP6_PRI_NAT_SRC","","",null,null],[17,"NF_IP6_PRI_SELINUX_LAST","","",null,null],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",null,null],[17,"NF_IP6_PRI_LAST","","",null,null],[17,"SIOCADDRT","","",null,null],[17,"SIOCDELRT","","",null,null],[17,"SIOCGIFNAME","","",null,null],[17,"SIOCSIFLINK","","",null,null],[17,"SIOCGIFCONF","","",null,null],[17,"SIOCGIFFLAGS","","",null,null],[17,"SIOCSIFFLAGS","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"SIOCSIFADDR","","",null,null],[17,"SIOCGIFDSTADDR","","",null,null],[17,"SIOCSIFDSTADDR","","",null,null],[17,"SIOCGIFBRDADDR","","",null,null],[17,"SIOCSIFBRDADDR","","",null,null],[17,"SIOCGIFNETMASK","","",null,null],[17,"SIOCSIFNETMASK","","",null,null],[17,"SIOCGIFMETRIC","","",null,null],[17,"SIOCSIFMETRIC","","",null,null],[17,"SIOCGIFMEM","","",null,null],[17,"SIOCSIFMEM","","",null,null],[17,"SIOCGIFMTU","","",null,null],[17,"SIOCSIFMTU","","",null,null],[17,"SIOCSIFHWADDR","","",null,null],[17,"SIOCGIFENCAP","","",null,null],[17,"SIOCSIFENCAP","","",null,null],[17,"SIOCGIFHWADDR","","",null,null],[17,"SIOCGIFSLAVE","","",null,null],[17,"SIOCSIFSLAVE","","",null,null],[17,"SIOCADDMULTI","","",null,null],[17,"SIOCDELMULTI","","",null,null],[17,"SIOCDARP","","",null,null],[17,"SIOCGARP","","",null,null],[17,"SIOCSARP","","",null,null],[17,"SIOCDRARP","","",null,null],[17,"SIOCGRARP","","",null,null],[17,"SIOCSRARP","","",null,null],[17,"SIOCGIFMAP","","",null,null],[17,"SIOCSIFMAP","","",null,null],[17,"IPTOS_TOS_MASK","","",null,null],[17,"IPTOS_PREC_MASK","","",null,null],[17,"IPTOS_ECN_NOT_ECT","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REINSTATE","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_MTU","","",null,null],[17,"RTF_MSS","","",null,null],[17,"RTF_WINDOW","","",null,null],[17,"RTF_IRTT","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_NOFORWARD","","",null,null],[17,"RTF_THROW","","",null,null],[17,"RTF_NOPMTUDISC","","",null,null],[17,"RTF_DEFAULT","","",null,null],[17,"RTF_ALLONLINK","","",null,null],[17,"RTF_ADDRCONF","","",null,null],[17,"RTF_LINKRT","","",null,null],[17,"RTF_NONEXTHOP","","",null,null],[17,"RTF_CACHE","","",null,null],[17,"RTF_FLOW","","",null,null],[17,"RTF_POLICY","","",null,null],[17,"RTCF_VALVE","","",null,null],[17,"RTCF_MASQ","","",null,null],[17,"RTCF_NAT","","",null,null],[17,"RTCF_DOREDIRECT","","",null,null],[17,"RTCF_LOG","","",null,null],[17,"RTCF_DIRECTSRC","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_INTERFACE","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_NAT","","",null,null],[17,"RTF_ADDRCLASSMASK","","",null,null],[17,"RT_CLASS_UNSPEC","","",null,null],[17,"RT_CLASS_DEFAULT","","",null,null],[17,"RT_CLASS_MAIN","","",null,null],[17,"RT_CLASS_LOCAL","","",null,null],[17,"RT_CLASS_MAX","","",null,null],[17,"NUD_NONE","","",null,null],[17,"NUD_INCOMPLETE","","",null,null],[17,"NUD_REACHABLE","","",null,null],[17,"NUD_STALE","","",null,null],[17,"NUD_DELAY","","",null,null],[17,"NUD_PROBE","","",null,null],[17,"NUD_FAILED","","",null,null],[17,"NUD_NOARP","","",null,null],[17,"NUD_PERMANENT","","",null,null],[17,"NTF_USE","","",null,null],[17,"NTF_SELF","","",null,null],[17,"NTF_MASTER","","",null,null],[17,"NTF_PROXY","","",null,null],[17,"NTF_ROUTER","","",null,null],[17,"NDA_UNSPEC","","",null,null],[17,"NDA_DST","","",null,null],[17,"NDA_LLADDR","","",null,null],[17,"NDA_CACHEINFO","","",null,null],[17,"NDA_PROBES","","",null,null],[17,"NDA_VLAN","","",null,null],[17,"NDA_PORT","","",null,null],[17,"NDA_VNI","","",null,null],[17,"NDA_IFINDEX","","",null,null],[17,"NLA_ALIGNTO","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TCA_UNSPEC","","",null,null],[17,"TCA_KIND","","",null,null],[17,"TCA_OPTIONS","","",null,null],[17,"TCA_STATS","","",null,null],[17,"TCA_XSTATS","","",null,null],[17,"TCA_RATE","","",null,null],[17,"TCA_FCNT","","",null,null],[17,"TCA_STATS2","","",null,null],[17,"TCA_STAB","","",null,null],[17,"RTM_NEWLINK","","",null,null],[17,"RTM_DELLINK","","",null,null],[17,"RTM_GETLINK","","",null,null],[17,"RTM_SETLINK","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_GETADDR","","",null,null],[17,"RTM_NEWROUTE","","",null,null],[17,"RTM_DELROUTE","","",null,null],[17,"RTM_GETROUTE","","",null,null],[17,"RTM_NEWNEIGH","","",null,null],[17,"RTM_DELNEIGH","","",null,null],[17,"RTM_GETNEIGH","","",null,null],[17,"RTM_NEWRULE","","",null,null],[17,"RTM_DELRULE","","",null,null],[17,"RTM_GETRULE","","",null,null],[17,"RTM_NEWQDISC","","",null,null],[17,"RTM_DELQDISC","","",null,null],[17,"RTM_GETQDISC","","",null,null],[17,"RTM_NEWTCLASS","","",null,null],[17,"RTM_DELTCLASS","","",null,null],[17,"RTM_GETTCLASS","","",null,null],[17,"RTM_NEWTFILTER","","",null,null],[17,"RTM_DELTFILTER","","",null,null],[17,"RTM_GETTFILTER","","",null,null],[17,"RTM_NEWACTION","","",null,null],[17,"RTM_DELACTION","","",null,null],[17,"RTM_GETACTION","","",null,null],[17,"RTM_NEWPREFIX","","",null,null],[17,"RTM_GETMULTICAST","","",null,null],[17,"RTM_GETANYCAST","","",null,null],[17,"RTM_NEWNEIGHTBL","","",null,null],[17,"RTM_GETNEIGHTBL","","",null,null],[17,"RTM_SETNEIGHTBL","","",null,null],[17,"RTM_NEWNDUSEROPT","","",null,null],[17,"RTM_NEWADDRLABEL","","",null,null],[17,"RTM_DELADDRLABEL","","",null,null],[17,"RTM_GETADDRLABEL","","",null,null],[17,"RTM_GETDCB","","",null,null],[17,"RTM_SETDCB","","",null,null],[17,"RTM_NEWNETCONF","","",null,null],[17,"RTM_GETNETCONF","","",null,null],[17,"RTM_NEWMDB","","",null,null],[17,"RTM_DELMDB","","",null,null],[17,"RTM_GETMDB","","",null,null],[17,"RTM_NEWNSID","","",null,null],[17,"RTM_DELNSID","","",null,null],[17,"RTM_GETNSID","","",null,null],[17,"RTM_F_NOTIFY","","",null,null],[17,"RTM_F_CLONED","","",null,null],[17,"RTM_F_EQUALIZE","","",null,null],[17,"RTM_F_PREFIX","","",null,null],[17,"RTA_UNSPEC","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_SRC","","",null,null],[17,"RTA_IIF","","",null,null],[17,"RTA_OIF","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_PRIORITY","","",null,null],[17,"RTA_PREFSRC","","",null,null],[17,"RTA_METRICS","","",null,null],[17,"RTA_MULTIPATH","","",null,null],[17,"RTA_PROTOINFO","","",null,null],[17,"RTA_FLOW","","",null,null],[17,"RTA_CACHEINFO","","",null,null],[17,"RTA_SESSION","","",null,null],[17,"RTA_MP_ALGO","","",null,null],[17,"RTA_TABLE","","",null,null],[17,"RTA_MARK","","",null,null],[17,"RTA_MFC_STATS","","",null,null],[17,"RTN_UNSPEC","","",null,null],[17,"RTN_UNICAST","","",null,null],[17,"RTN_LOCAL","","",null,null],[17,"RTN_BROADCAST","","",null,null],[17,"RTN_ANYCAST","","",null,null],[17,"RTN_MULTICAST","","",null,null],[17,"RTN_BLACKHOLE","","",null,null],[17,"RTN_UNREACHABLE","","",null,null],[17,"RTN_PROHIBIT","","",null,null],[17,"RTN_THROW","","",null,null],[17,"RTN_NAT","","",null,null],[17,"RTN_XRESOLVE","","",null,null],[17,"RTPROT_UNSPEC","","",null,null],[17,"RTPROT_REDIRECT","","",null,null],[17,"RTPROT_KERNEL","","",null,null],[17,"RTPROT_BOOT","","",null,null],[17,"RTPROT_STATIC","","",null,null],[17,"RT_SCOPE_UNIVERSE","","",null,null],[17,"RT_SCOPE_SITE","","",null,null],[17,"RT_SCOPE_LINK","","",null,null],[17,"RT_SCOPE_HOST","","",null,null],[17,"RT_SCOPE_NOWHERE","","",null,null],[17,"RT_TABLE_UNSPEC","","",null,null],[17,"RT_TABLE_COMPAT","","",null,null],[17,"RT_TABLE_DEFAULT","","",null,null],[17,"RT_TABLE_MAIN","","",null,null],[17,"RT_TABLE_LOCAL","","",null,null],[17,"RTMSG_OVERRUN","","",null,null],[17,"RTMSG_NEWDEVICE","","",null,null],[17,"RTMSG_DELDEVICE","","",null,null],[17,"RTMSG_NEWROUTE","","",null,null],[17,"RTMSG_DELROUTE","","",null,null],[17,"RTMSG_NEWRULE","","",null,null],[17,"RTMSG_DELRULE","","",null,null],[17,"RTMSG_CONTROL","","",null,null],[17,"RTMSG_AR_FAILED","","",null,null],[17,"MAX_ADDR_LEN","","",null,null],[17,"ARPD_UPDATE","","",null,null],[17,"ARPD_LOOKUP","","",null,null],[17,"ARPD_FLUSH","","",null,null],[17,"ATF_MAGIC","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",null,null],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",null,null],[17,"SOF_TIMESTAMPING_TX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_TX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RX_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SOFTWARE","","",null,null],[17,"SOF_TIMESTAMPING_SYS_HARDWARE","","",null,null],[17,"SOF_TIMESTAMPING_RAW_HARDWARE","","",null,null],[17,"ALG_SET_KEY","","",null,null],[17,"ALG_SET_IV","","",null,null],[17,"ALG_SET_OP","","",null,null],[17,"ALG_SET_AEAD_ASSOCLEN","","",null,null],[17,"ALG_SET_AEAD_AUTHSIZE","","",null,null],[17,"ALG_OP_DECRYPT","","",null,null],[17,"ALG_OP_ENCRYPT","","",null,null],[17,"VMADDR_CID_ANY","","",null,null],[17,"VMADDR_CID_HYPERVISOR","","",null,null],[17,"VMADDR_CID_RESERVED","","",null,null],[17,"VMADDR_CID_HOST","","",null,null],[17,"VMADDR_PORT_ANY","","",null,null],[17,"IN_ACCESS","","",null,null],[17,"IN_MODIFY","","",null,null],[17,"IN_ATTRIB","","",null,null],[17,"IN_CLOSE_WRITE","","",null,null],[17,"IN_CLOSE_NOWRITE","","",null,null],[17,"IN_CLOSE","","",null,null],[17,"IN_OPEN","","",null,null],[17,"IN_MOVED_FROM","","",null,null],[17,"IN_MOVED_TO","","",null,null],[17,"IN_MOVE","","",null,null],[17,"IN_CREATE","","",null,null],[17,"IN_DELETE","","",null,null],[17,"IN_DELETE_SELF","","",null,null],[17,"IN_MOVE_SELF","","",null,null],[17,"IN_UNMOUNT","","",null,null],[17,"IN_Q_OVERFLOW","","",null,null],[17,"IN_IGNORED","","",null,null],[17,"IN_ONLYDIR","","",null,null],[17,"IN_DONT_FOLLOW","","",null,null],[17,"IN_ISDIR","","",null,null],[17,"IN_ONESHOT","","",null,null],[17,"IN_ALL_EVENTS","","",null,null],[17,"IN_CLOEXEC","","",null,null],[17,"IN_NONBLOCK","","",null,null],[17,"FUTEX_WAIT","","",null,null],[17,"FUTEX_WAKE","","",null,null],[17,"FUTEX_FD","","",null,null],[17,"FUTEX_REQUEUE","","",null,null],[17,"FUTEX_CMP_REQUEUE","","",null,null],[17,"FUTEX_WAKE_OP","","",null,null],[17,"FUTEX_LOCK_PI","","",null,null],[17,"FUTEX_UNLOCK_PI","","",null,null],[17,"FUTEX_TRYLOCK_PI","","",null,null],[17,"FUTEX_WAIT_BITSET","","",null,null],[17,"FUTEX_WAKE_BITSET","","",null,null],[17,"FUTEX_WAIT_REQUEUE_PI","","",null,null],[17,"FUTEX_CMP_REQUEUE_PI","","",null,null],[17,"FUTEX_PRIVATE_FLAG","","",null,null],[17,"FUTEX_CLOCK_REALTIME","","",null,null],[17,"FUTEX_CMD_MASK","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_NFC","","",null,null],[17,"SOL_XDP","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_SHARED_VALIDATE","","",null,null],[17,"MAP_FIXED_NOREPLACE","","",null,null],[17,"ENOTSUP","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_DCCP","","",null,null],[17,"SOCK_PACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",null,null],[17,"DCCP_SOCKOPT_SERVICE","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_L","","",null,null],[17,"DCCP_SOCKOPT_CHANGE_R","","",null,null],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",null,null],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",null,null],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",null,null],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",null,null],[17,"DCCP_SOCKOPT_CCID","","",null,null],[17,"DCCP_SOCKOPT_TX_CCID","","",null,null],[17,"DCCP_SOCKOPT_RX_CCID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",null,null],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",null,null],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",null,null],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",null,null],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening…",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"TCA_PAD","","",null,null],[17,"TCA_DUMP_INVISIBLE","","",null,null],[17,"TCA_CHAIN","","",null,null],[17,"TCA_HW_OFFLOAD","","",null,null],[17,"RTM_DELNETCONF","","",null,null],[17,"RTM_NEWSTATS","","",null,null],[17,"RTM_GETSTATS","","",null,null],[17,"RTM_NEWCACHEREPORT","","",null,null],[17,"RTM_F_LOOKUP_TABLE","","",null,null],[17,"RTM_F_FIB_MATCH","","",null,null],[17,"RTA_VIA","","",null,null],[17,"RTA_NEWDST","","",null,null],[17,"RTA_PREF","","",null,null],[17,"RTA_ENCAP_TYPE","","",null,null],[17,"RTA_ENCAP","","",null,null],[17,"RTA_EXPIRES","","",null,null],[17,"RTA_PAD","","",null,null],[17,"RTA_UID","","",null,null],[17,"RTA_TTL_PROPAGATE","","",null,null],[17,"NTF_EXT_LEARNED","","",null,null],[17,"NTF_OFFLOADED","","",null,null],[17,"NDA_MASTER","","",null,null],[17,"NDA_LINK_NETNSID","","",null,null],[17,"NDA_SRC_VNI","","",null,null],[17,"IFA_FLAGS","","",null,null],[17,"IFA_F_MANAGETEMPADDR","","",null,null],[17,"IFA_F_NOPREFIXROUTE","","",null,null],[17,"IFA_F_MCAUTOJOIN","","",null,null],[17,"IFA_F_STABLE_PRIVACY","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"GENL_UNS_ADMIN_PERM","","",null,null],[17,"GENL_ID_VFS_DQUOT","","",null,null],[17,"GENL_ID_PMCRAID","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"NF_NETDEV_INGRESS","","",null,null],[17,"NF_NETDEV_NUMHOOKS","","",null,null],[17,"NFPROTO_INET","","",null,null],[17,"NFPROTO_NETDEV","","",null,null],[17,"NFT_TABLE_MAXNAMELEN","","",null,null],[17,"NFT_CHAIN_MAXNAMELEN","","",null,null],[17,"NFT_SET_MAXNAMELEN","","",null,null],[17,"NFT_OBJ_MAXNAMELEN","","",null,null],[17,"NFT_USERDATA_MAXLEN","","",null,null],[17,"NFT_REG_VERDICT","","",null,null],[17,"NFT_REG_1","","",null,null],[17,"NFT_REG_2","","",null,null],[17,"NFT_REG_3","","",null,null],[17,"NFT_REG_4","","",null,null],[17,"__NFT_REG_MAX","","",null,null],[17,"NFT_REG32_00","","",null,null],[17,"NFT_REG32_01","","",null,null],[17,"NFT_REG32_02","","",null,null],[17,"NFT_REG32_03","","",null,null],[17,"NFT_REG32_04","","",null,null],[17,"NFT_REG32_05","","",null,null],[17,"NFT_REG32_06","","",null,null],[17,"NFT_REG32_07","","",null,null],[17,"NFT_REG32_08","","",null,null],[17,"NFT_REG32_09","","",null,null],[17,"NFT_REG32_10","","",null,null],[17,"NFT_REG32_11","","",null,null],[17,"NFT_REG32_12","","",null,null],[17,"NFT_REG32_13","","",null,null],[17,"NFT_REG32_14","","",null,null],[17,"NFT_REG32_15","","",null,null],[17,"NFT_REG_SIZE","","",null,null],[17,"NFT_REG32_SIZE","","",null,null],[17,"NFT_CONTINUE","","",null,null],[17,"NFT_BREAK","","",null,null],[17,"NFT_JUMP","","",null,null],[17,"NFT_GOTO","","",null,null],[17,"NFT_RETURN","","",null,null],[17,"NFT_MSG_NEWTABLE","","",null,null],[17,"NFT_MSG_GETTABLE","","",null,null],[17,"NFT_MSG_DELTABLE","","",null,null],[17,"NFT_MSG_NEWCHAIN","","",null,null],[17,"NFT_MSG_GETCHAIN","","",null,null],[17,"NFT_MSG_DELCHAIN","","",null,null],[17,"NFT_MSG_NEWRULE","","",null,null],[17,"NFT_MSG_GETRULE","","",null,null],[17,"NFT_MSG_DELRULE","","",null,null],[17,"NFT_MSG_NEWSET","","",null,null],[17,"NFT_MSG_GETSET","","",null,null],[17,"NFT_MSG_DELSET","","",null,null],[17,"NFT_MSG_NEWSETELEM","","",null,null],[17,"NFT_MSG_GETSETELEM","","",null,null],[17,"NFT_MSG_DELSETELEM","","",null,null],[17,"NFT_MSG_NEWGEN","","",null,null],[17,"NFT_MSG_GETGEN","","",null,null],[17,"NFT_MSG_TRACE","","",null,null],[17,"NFT_MSG_NEWOBJ","","",null,null],[17,"NFT_MSG_GETOBJ","","",null,null],[17,"NFT_MSG_DELOBJ","","",null,null],[17,"NFT_MSG_GETOBJ_RESET","","",null,null],[17,"NFT_MSG_MAX","","",null,null],[17,"NFT_SET_ANONYMOUS","","",null,null],[17,"NFT_SET_CONSTANT","","",null,null],[17,"NFT_SET_INTERVAL","","",null,null],[17,"NFT_SET_MAP","","",null,null],[17,"NFT_SET_TIMEOUT","","",null,null],[17,"NFT_SET_EVAL","","",null,null],[17,"NFT_SET_POL_PERFORMANCE","","",null,null],[17,"NFT_SET_POL_MEMORY","","",null,null],[17,"NFT_SET_ELEM_INTERVAL_END","","",null,null],[17,"NFT_DATA_VALUE","","",null,null],[17,"NFT_DATA_VERDICT","","",null,null],[17,"NFT_DATA_RESERVED_MASK","","",null,null],[17,"NFT_DATA_VALUE_MAXLEN","","",null,null],[17,"NFT_BYTEORDER_NTOH","","",null,null],[17,"NFT_BYTEORDER_HTON","","",null,null],[17,"NFT_CMP_EQ","","",null,null],[17,"NFT_CMP_NEQ","","",null,null],[17,"NFT_CMP_LT","","",null,null],[17,"NFT_CMP_LTE","","",null,null],[17,"NFT_CMP_GT","","",null,null],[17,"NFT_CMP_GTE","","",null,null],[17,"NFT_RANGE_EQ","","",null,null],[17,"NFT_RANGE_NEQ","","",null,null],[17,"NFT_LOOKUP_F_INV","","",null,null],[17,"NFT_DYNSET_OP_ADD","","",null,null],[17,"NFT_DYNSET_OP_UPDATE","","",null,null],[17,"NFT_DYNSET_F_INV","","",null,null],[17,"NFT_PAYLOAD_LL_HEADER","","",null,null],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",null,null],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",null,null],[17,"NFT_PAYLOAD_CSUM_NONE","","",null,null],[17,"NFT_PAYLOAD_CSUM_INET","","",null,null],[17,"NFT_META_LEN","","",null,null],[17,"NFT_META_PROTOCOL","","",null,null],[17,"NFT_META_PRIORITY","","",null,null],[17,"NFT_META_MARK","","",null,null],[17,"NFT_META_IIF","","",null,null],[17,"NFT_META_OIF","","",null,null],[17,"NFT_META_IIFNAME","","",null,null],[17,"NFT_META_OIFNAME","","",null,null],[17,"NFT_META_IIFTYPE","","",null,null],[17,"NFT_META_OIFTYPE","","",null,null],[17,"NFT_META_SKUID","","",null,null],[17,"NFT_META_SKGID","","",null,null],[17,"NFT_META_NFTRACE","","",null,null],[17,"NFT_META_RTCLASSID","","",null,null],[17,"NFT_META_SECMARK","","",null,null],[17,"NFT_META_NFPROTO","","",null,null],[17,"NFT_META_L4PROTO","","",null,null],[17,"NFT_META_BRI_IIFNAME","","",null,null],[17,"NFT_META_BRI_OIFNAME","","",null,null],[17,"NFT_META_PKTTYPE","","",null,null],[17,"NFT_META_CPU","","",null,null],[17,"NFT_META_IIFGROUP","","",null,null],[17,"NFT_META_OIFGROUP","","",null,null],[17,"NFT_META_CGROUP","","",null,null],[17,"NFT_META_PRANDOM","","",null,null],[17,"NFT_CT_STATE","","",null,null],[17,"NFT_CT_DIRECTION","","",null,null],[17,"NFT_CT_STATUS","","",null,null],[17,"NFT_CT_MARK","","",null,null],[17,"NFT_CT_SECMARK","","",null,null],[17,"NFT_CT_EXPIRATION","","",null,null],[17,"NFT_CT_HELPER","","",null,null],[17,"NFT_CT_L3PROTOCOL","","",null,null],[17,"NFT_CT_SRC","","",null,null],[17,"NFT_CT_DST","","",null,null],[17,"NFT_CT_PROTOCOL","","",null,null],[17,"NFT_CT_PROTO_SRC","","",null,null],[17,"NFT_CT_PROTO_DST","","",null,null],[17,"NFT_CT_LABELS","","",null,null],[17,"NFT_CT_PKTS","","",null,null],[17,"NFT_CT_BYTES","","",null,null],[17,"NFT_LIMIT_PKTS","","",null,null],[17,"NFT_LIMIT_PKT_BYTES","","",null,null],[17,"NFT_LIMIT_F_INV","","",null,null],[17,"NFT_QUEUE_FLAG_BYPASS","","",null,null],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",null,null],[17,"NFT_QUEUE_FLAG_MASK","","",null,null],[17,"NFT_QUOTA_F_INV","","",null,null],[17,"NFT_REJECT_ICMP_UNREACH","","",null,null],[17,"NFT_REJECT_TCP_RST","","",null,null],[17,"NFT_REJECT_ICMPX_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",null,null],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",null,null],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",null,null],[17,"NFT_NAT_SNAT","","",null,null],[17,"NFT_NAT_DNAT","","",null,null],[17,"NFT_TRACETYPE_UNSPEC","","",null,null],[17,"NFT_TRACETYPE_POLICY","","",null,null],[17,"NFT_TRACETYPE_RETURN","","",null,null],[17,"NFT_TRACETYPE_RULE","","",null,null],[17,"NFT_NG_INCREMENTAL","","",null,null],[17,"NFT_NG_RANDOM","","",null,null],[17,"M_MXFAST","","",null,null],[17,"M_NLBLKS","","",null,null],[17,"M_GRAIN","","",null,null],[17,"M_KEEP","","",null,null],[17,"M_TRIM_THRESHOLD","","",null,null],[17,"M_TOP_PAD","","",null,null],[17,"M_MMAP_THRESHOLD","","",null,null],[17,"M_MMAP_MAX","","",null,null],[17,"M_CHECK_ACTION","","",null,null],[17,"M_PERTURB","","",null,null],[17,"M_ARENA_TEST","","",null,null],[17,"M_ARENA_MAX","","",null,null],[17,"AT_STATX_SYNC_TYPE","","",null,null],[17,"AT_STATX_SYNC_AS_STAT","","",null,null],[17,"AT_STATX_FORCE_SYNC","","",null,null],[17,"AT_STATX_DONT_SYNC","","",null,null],[17,"STATX_TYPE","","",null,null],[17,"STATX_MODE","","",null,null],[17,"STATX_NLINK","","",null,null],[17,"STATX_UID","","",null,null],[17,"STATX_GID","","",null,null],[17,"STATX_ATIME","","",null,null],[17,"STATX_MTIME","","",null,null],[17,"STATX_CTIME","","",null,null],[17,"STATX_INO","","",null,null],[17,"STATX_SIZE","","",null,null],[17,"STATX_BLOCKS","","",null,null],[17,"STATX_BASIC_STATS","","",null,null],[17,"STATX_BTIME","","",null,null],[17,"STATX_ALL","","",null,null],[17,"STATX__RESERVED","","",null,null],[17,"STATX_ATTR_COMPRESSED","","",null,null],[17,"STATX_ATTR_IMMUTABLE","","",null,null],[17,"STATX_ATTR_APPEND","","",null,null],[17,"STATX_ATTR_NODUMP","","",null,null],[17,"STATX_ATTR_ENCRYPTED","","",null,null],[17,"STATX_ATTR_AUTOMOUNT","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"VEOF","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCGRS485","","",null,null],[17,"TIOCSRS485","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"MADV_SOFT_OFFLINE","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"BOTHER","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null],[17,"REG_R8","","",null,null],[17,"REG_R9","","",null,null],[17,"REG_R10","","",null,null],[17,"REG_R11","","",null,null],[17,"REG_R12","","",null,null],[17,"REG_R13","","",null,null],[17,"REG_R14","","",null,null],[17,"REG_R15","","",null,null],[17,"REG_RDI","","",null,null],[17,"REG_RSI","","",null,null],[17,"REG_RBP","","",null,null],[17,"REG_RBX","","",null,null],[17,"REG_RDX","","",null,null],[17,"REG_RAX","","",null,null],[17,"REG_RCX","","",null,null],[17,"REG_RSP","","",null,null],[17,"REG_RIP","","",null,null],[17,"REG_EFL","","",null,null],[17,"REG_CSGSFS","","",null,null],[17,"REG_ERR","","",null,null],[17,"REG_TRAPNO","","",null,null],[17,"REG_OLDMASK","","",null,null],[17,"REG_CR2","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",null,null],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null],[17,"SYS_statx","","",null,null],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"into","","",133,[[],["u"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"into","","",134,[[],["u"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"into","","",135,[[],["u"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"into","","",136,[[],["u"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"into","","",137,[[],["u"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into","","",49,[[],["u"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"into","","",50,[[],["u"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"into","","",51,[[],["u"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"into","","",52,[[],["u"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"into","","",53,[[],["u"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"into","","",54,[[],["u"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"into","","",55,[[],["u"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"into","","",56,[[],["u"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"into","","",57,[[],["u"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"into","","",58,[[],["u"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"into","","",59,[[],["u"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"into","","",60,[[],["u"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"into","","",61,[[],["u"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"into","","",62,[[],["u"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"into","","",63,[[],["u"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"into","","",64,[[],["u"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"into","","",65,[[],["u"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"into","","",66,[[],["u"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"into","","",67,[[],["u"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"into","","",68,[[],["u"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"into","","",69,[[],["u"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"into","","",70,[[],["u"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"into","","",71,[[],["u"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"into","","",72,[[],["u"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"into","","",73,[[],["u"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"into","","",74,[[],["u"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"into","","",75,[[],["u"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"into","","",76,[[],["u"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"into","","",77,[[],["u"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"into","","",138,[[],["u"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"into","","",139,[[],["u"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"into","","",78,[[],["u"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"into","","",79,[[],["u"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"into","","",80,[[],["u"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"into","","",81,[[],["u"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"into","","",82,[[],["u"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"into","","",83,[[],["u"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"into","","",84,[[],["u"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"into","","",85,[[],["u"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"into","","",86,[[],["u"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"into","","",87,[[],["u"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"into","","",88,[[],["u"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"into","","",89,[[],["u"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"into","","",90,[[],["u"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"into","","",91,[[],["u"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"into","","",92,[[],["u"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"into","","",93,[[],["u"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"into","","",94,[[],["u"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"into","","",95,[[],["u"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"into","","",96,[[],["u"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"into","","",97,[[],["u"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"into","","",98,[[],["u"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"into","","",99,[[],["u"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"into","","",100,[[],["u"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"into","","",101,[[],["u"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"into","","",102,[[],["u"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"into","","",103,[[],["u"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"into","","",104,[[],["u"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"into","","",105,[[],["u"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"into","","",106,[[],["u"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"into","","",140,[[],["u"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"into","","",107,[[],["u"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"into","","",108,[[],["u"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"into","","",109,[[],["u"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"into","","",110,[[],["u"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"into","","",111,[[],["u"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"into","","",112,[[],["u"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"into","","",113,[[],["u"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"into","","",114,[[],["u"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"into","","",115,[[],["u"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"into","","",116,[[],["u"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"into","","",117,[[],["u"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"into","","",118,[[],["u"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"into","","",141,[[],["u"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"into","","",119,[[],["u"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"into","","",120,[[],["u"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"into","","",121,[[],["u"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"into","","",122,[[],["u"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"into","","",123,[[],["u"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"into","","",124,[[],["u"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"into","","",125,[[],["u"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"into","","",126,[[],["u"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"into","","",127,[[],["u"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"into","","",128,[[],["u"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"into","","",129,[[],["u"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"into","","",130,[[],["u"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"into","","",131,[[],["u"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"into","","",142,[[],["u"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"into","","",143,[[],["u"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"into","","",144,[[],["u"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"into","","",145,[[],["u"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"into","","",146,[[],["u"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"into","","",147,[[],["u"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"into","","",148,[[],["u"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"into","","",149,[[],["u"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"into","","",132,[[],["u"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"into","","",150,[[],["u"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"into","","",151,[[],["u"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"into","","",152,[[],["u"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"into","","",153,[[],["u"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"into","","",154,[[],["u"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"fmt","","",133,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"clone","","",150,[[["self"]],["dir"]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",7,[[["self"]],["hostent"]]],[11,"clone","","",8,[[["self"]],["iovec"]]],[11,"clone","","",9,[[["self"]],["pollfd"]]],[11,"clone","","",10,[[["self"]],["winsize"]]],[11,"clone","","",11,[[["self"]],["linger"]]],[11,"clone","","",12,[[["self"]],["sigval"]]],[11,"clone","","",13,[[["self"]],["itimerval"]]],[11,"clone","","",14,[[["self"]],["tms"]]],[11,"clone","","",15,[[["self"]],["servent"]]],[11,"clone","","",16,[[["self"]],["protoent"]]],[11,"clone","","",151,[[["self"]],["file"]]],[11,"clone","","",152,[[["self"]],["fpos_t"]]],[11,"clone","","",153,[[["self"]],["timezone"]]],[11,"clone","","",17,[[["self"]],["in_addr"]]],[11,"clone","","",18,[[["self"]],["ip_mreq"]]],[11,"clone","","",19,[[["self"]],["ip_mreq_source"]]],[11,"clone","","",20,[[["self"]],["sockaddr"]]],[11,"clone","","",21,[[["self"]],["sockaddr_in"]]],[11,"clone","","",22,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",23,[[["self"]],["addrinfo"]]],[11,"clone","","",24,[[["self"]],["sockaddr_ll"]]],[11,"clone","","",134,[[["self"]],["fd_set"]]],[11,"clone","","",25,[[["self"]],["tm"]]],[11,"clone","","",26,[[["self"]],["sched_param"]]],[11,"clone","","",27,[[["self"]],["dl_info"]]],[11,"clone","","",28,[[["self"]],["lconv"]]],[11,"clone","","",29,[[["self"]],["in_pktinfo"]]],[11,"clone","","",30,[[["self"]],["ifaddrs"]]],[11,"clone","","",135,[[["self"]],["in6_rtmsg"]]],[11,"clone","","",31,[[["self"]],["arpreq"]]],[11,"clone","","",32,[[["self"]],["arpreq_old"]]],[11,"clone","","",33,[[["self"]],["arphdr"]]],[11,"clone","","",34,[[["self"]],["mmsghdr"]]],[11,"clone","","",35,[[["self"]],["epoll_event"]]],[11,"clone","","",36,[[["self"]],["sockaddr_un"]]],[11,"clone","","",37,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",38,[[["self"]],["utsname"]]],[11,"clone","","",39,[[["self"]],["sigevent"]]],[11,"clone","","",154,[[["self"]],["fpos64_t"]]],[11,"clone","","",40,[[["self"]],["rlimit64"]]],[11,"clone","","",41,[[["self"]],["glob_t"]]],[11,"clone","","",42,[[["self"]],["passwd"]]],[11,"clone","","",43,[[["self"]],["spwd"]]],[11,"clone","","",44,[[["self"]],["dqblk"]]],[11,"clone","","",45,[[["self"]],["signalfd_siginfo"]]],[11,"clone","","",46,[[["self"]],["itimerspec"]]],[11,"clone","","",136,[[["self"]],["fsid_t"]]],[11,"clone","","",47,[[["self"]],["packet_mreq"]]],[11,"clone","","",137,[[["self"]],["cpu_set_t"]]],[11,"clone","","",48,[[["self"]],["if_nameindex"]]],[11,"clone","","",49,[[["self"]],["msginfo"]]],[11,"clone","","",50,[[["self"]],["sembuf"]]],[11,"clone","","",51,[[["self"]],["input_event"]]],[11,"clone","","",52,[[["self"]],["input_id"]]],[11,"clone","","",53,[[["self"]],["input_absinfo"]]],[11,"clone","","",54,[[["self"]],["input_keymap_entry"]]],[11,"clone","","",55,[[["self"]],["input_mask"]]],[11,"clone","","",56,[[["self"]],["ff_replay"]]],[11,"clone","","",57,[[["self"]],["ff_trigger"]]],[11,"clone","","",58,[[["self"]],["ff_envelope"]]],[11,"clone","","",59,[[["self"]],["ff_constant_effect"]]],[11,"clone","","",60,[[["self"]],["ff_ramp_effect"]]],[11,"clone","","",61,[[["self"]],["ff_condition_effect"]]],[11,"clone","","",62,[[["self"]],["ff_periodic_effect"]]],[11,"clone","","",63,[[["self"]],["ff_rumble_effect"]]],[11,"clone","","",64,[[["self"]],["ff_effect"]]],[11,"clone","","",65,[[["self"]],["dl_phdr_info"]]],[11,"clone","","",66,[[["self"]],["elf32_ehdr"]]],[11,"clone","","",67,[[["self"]],["elf64_ehdr"]]],[11,"clone","","",68,[[["self"]],["elf32_sym"]]],[11,"clone","","",69,[[["self"]],["elf64_sym"]]],[11,"clone","","",70,[[["self"]],["elf32_phdr"]]],[11,"clone","","",71,[[["self"]],["elf64_phdr"]]],[11,"clone","","",72,[[["self"]],["elf32_shdr"]]],[11,"clone","","",73,[[["self"]],["elf64_shdr"]]],[11,"clone","","",74,[[["self"]],["elf32_chdr"]]],[11,"clone","","",75,[[["self"]],["elf64_chdr"]]],[11,"clone","","",76,[[["self"]],["ucred"]]],[11,"clone","","",77,[[["self"]],["mntent"]]],[11,"clone","","",138,[[["self"]],["posix_spawn_file_actions_t"]]],[11,"clone","","",139,[[["self"]],["posix_spawnattr_t"]]],[11,"clone","","",78,[[["self"]],["genlmsghdr"]]],[11,"clone","","",79,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",80,[[["self"]],["arpd_request"]]],[11,"clone","","",81,[[["self"]],["inotify_event"]]],[11,"clone","","",82,[[["self"]],["sockaddr_vm"]]],[11,"clone","","",83,[[["self"]],["sockaddr_nl"]]],[11,"clone","","",84,[[["self"]],["dirent"]]],[11,"clone","","",85,[[["self"]],["dirent64"]]],[11,"clone","","",86,[[["self"]],["sockaddr_alg"]]],[11,"clone","","",87,[[["self"]],["af_alg_iv"]]],[11,"clone","","",88,[[["self"]],["mq_attr"]]],[11,"clone","","",89,[[["self"]],["statx"]]],[11,"clone","","",90,[[["self"]],["statx_timestamp"]]],[11,"clone","","",91,[[["self"]],["aiocb"]]],[11,"clone","","",92,[[["self"]],["__exit_status"]]],[11,"clone","","",93,[[["self"]],["__timeval"]]],[11,"clone","","",94,[[["self"]],["glob64_t"]]],[11,"clone","","",95,[[["self"]],["msghdr"]]],[11,"clone","","",96,[[["self"]],["cmsghdr"]]],[11,"clone","","",97,[[["self"]],["termios"]]],[11,"clone","","",98,[[["self"]],["mallinfo"]]],[11,"clone","","",99,[[["self"]],["nlmsghdr"]]],[11,"clone","","",100,[[["self"]],["nlmsgerr"]]],[11,"clone","","",101,[[["self"]],["nl_pktinfo"]]],[11,"clone","","",102,[[["self"]],["nl_mmap_req"]]],[11,"clone","","",103,[[["self"]],["nl_mmap_hdr"]]],[11,"clone","","",104,[[["self"]],["nlattr"]]],[11,"clone","","",105,[[["self"]],["rtentry"]]],[11,"clone","","",106,[[["self"]],["utmpx"]]],[11,"clone","","",140,[[["self"]],["sigset_t"]]],[11,"clone","","",107,[[["self"]],["sysinfo"]]],[11,"clone","","",108,[[["self"]],["msqid_ds"]]],[11,"clone","","",109,[[["self"]],["sigaction"]]],[11,"clone","","",110,[[["self"]],["statfs"]]],[11,"clone","","",111,[[["self"]],["flock"]]],[11,"clone","","",112,[[["self"]],["flock64"]]],[11,"clone","","",113,[[["self"]],["siginfo_t"]]],[11,"clone","","",114,[[["self"]],["stack_t"]]],[11,"clone","","",115,[[["self"]],["stat"]]],[11,"clone","","",116,[[["self"]],["stat64"]]],[11,"clone","","",117,[[["self"]],["statfs64"]]],[11,"clone","","",118,[[["self"]],["statvfs64"]]],[11,"clone","","",141,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",119,[[["self"]],["_libc_fpxreg"]]],[11,"clone","","",120,[[["self"]],["_libc_xmmreg"]]],[11,"clone","","",121,[[["self"]],["_libc_fpstate"]]],[11,"clone","","",122,[[["self"]],["user_regs_struct"]]],[11,"clone","","",123,[[["self"]],["user"]]],[11,"clone","","",124,[[["self"]],["mcontext_t"]]],[11,"clone","","",125,[[["self"]],["ipc_perm"]]],[11,"clone","","",126,[[["self"]],["shmid_ds"]]],[11,"clone","","",127,[[["self"]],["termios2"]]],[11,"clone","","",128,[[["self"]],["ip_mreqn"]]],[11,"clone","","",129,[[["self"]],["user_fpregs_struct"]]],[11,"clone","","",130,[[["self"]],["ucontext_t"]]],[11,"clone","","",131,[[["self"]],["statvfs"]]],[11,"clone","","",142,[[["self"]],["max_align_t"]]],[11,"clone","","",143,[[["self"]],["sem_t"]]],[11,"clone","","",144,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",145,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",146,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",147,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",148,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",149,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",132,[[["self"]],["in6_addr"]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreq_source"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"Elf32_Chdr"],[3,"Elf64_Chdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"sockaddr_vm"],[3,"sockaddr_nl"],[3,"dirent"],[3,"dirent64"],[3,"sockaddr_alg"],[3,"af_alg_iv"],[3,"mq_attr"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"utmpx"],[3,"sysinfo"],[3,"msqid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"ip_mreqn"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"in6_addr"],[4,"c_void"],[3,"fd_set"],[3,"in6_rtmsg"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"sigset_t"],[3,"pthread_attr_t"],[3,"max_align_t"],[3,"sem_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"],[4,"fpos64_t"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","i":[[3,"Record","log","The \"payload\" of a log message.",null,null],[3,"RecordBuilder","","Builder for `Record`.",null,null],[3,"Metadata","","Metadata about a log message.",null,null],[3,"MetadataBuilder","","Builder for `Metadata`.",null,null],[3,"SetLoggerError","","The type returned by [`set_logger`] if [`set_logger`] has…",null,null],[3,"ParseLevelError","","The type returned by [`from_str`] when the string doesn't…",null,null],[4,"Level","","An enum representing the available verbosity levels of the…",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LevelFilter","","An enum representing the available verbosity level filters…",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter"]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter"]]],[5,"set_boxed_logger","","Sets the global logger to a `Box<Log>`.",null,[[["box",["log"]],["log"]],[["result",["setloggererror"]],["setloggererror"]]]],[5,"set_logger","","Sets the global logger to a `&'static Log`.",null,[[["log"]],[["result",["setloggererror"]],["setloggererror"]]]],[5,"set_logger_racy","","A thread-unsafe version of [`set_logger`].",null,[[["log"]],[["result",["setloggererror"]],["setloggererror"]]]],[5,"logger","","Returns a reference to the logger.",null,[[],["log"]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata…",2,[[["self"],["metadata"]],["bool"]]],[10,"log","","Logs the `Record`.",2,[[["record"],["self"]]]],[10,"flush","","Flushes any buffered records.",2,[[["self"]]]],[11,"max","","Returns the most verbose logging level.",0,[[],["level"]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,[[["self"]],["levelfilter"]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter"]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,[[["self"]],[["option",["level"]],["level"]]]],[11,"builder","","Returns a new builder.",3,[[],["recordbuilder"]]],[11,"args","","The message body.",3,[[["self"]],["arguments"]]],[11,"metadata","","Metadata about the log directive.",3,[[["self"]],["metadata"]]],[11,"level","","The verbosity level of the message.",3,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",3,[[["self"]],["str"]]],[11,"module_path","","The module path of the message.",3,[[["self"]],[["str"],["option",["str"]]]]],[11,"module_path_static","","The module path of the message, if it is a `'static` string.",3,[[["self"]],[["str"],["option",["str"]]]]],[11,"file","","The source file containing the message.",3,[[["self"]],[["str"],["option",["str"]]]]],[11,"file_static","","The module path of the message, if it is a `'static` string.",3,[[["self"]],[["str"],["option",["str"]]]]],[11,"line","","The line containing the message.",3,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"new","","Construct new `RecordBuilder`.",4,[[],["recordbuilder"]]],[11,"args","","Set `args`.",4,[[["self"],["arguments"]],["recordbuilder"]]],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with…",4,[[["self"],["metadata"]],["recordbuilder"]]],[11,"level","","Set `Metadata::level`.",4,[[["self"],["level"]],["recordbuilder"]]],[11,"target","","Set `Metadata::target`",4,[[["self"],["str"]],["recordbuilder"]]],[11,"module_path","","Set `module_path`",4,[[["self"],["str"],["option",["str"]]],["recordbuilder"]]],[11,"module_path_static","","Set `module_path` to a `'static` string",4,[[["self"],["str"],["option",["str"]]],["recordbuilder"]]],[11,"file","","Set `file`",4,[[["self"],["str"],["option",["str"]]],["recordbuilder"]]],[11,"file_static","","Set `file` to a `'static` string.",4,[[["self"],["str"],["option",["str"]]],["recordbuilder"]]],[11,"line","","Set `line`",4,[[["self"],["u32"],["option",["u32"]]],["recordbuilder"]]],[11,"build","","Invoke the builder and return a `Record`",4,[[["self"]],["record"]]],[11,"builder","","Returns a new builder.",5,[[],["metadatabuilder"]]],[11,"level","","The verbosity level of the message.",5,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",5,[[["self"]],["str"]]],[11,"new","","Construct a new `MetadataBuilder`.",6,[[],["metadatabuilder"]]],[11,"level","","Setter for `level`.",6,[[["self"],["level"]],["metadatabuilder"]]],[11,"target","","Setter for `target`.",6,[[["self"],["str"]],["metadatabuilder"]]],[11,"build","","Returns a `Metadata` object.",6,[[["self"]],["metadata"]]],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in…",null,null],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["level"]]],[11,"clone","","",1,[[["self"]],["levelfilter"]]],[11,"clone","","",3,[[["self"]],["record"]]],[11,"clone","","",5,[[["self"]],["metadata"]]],[11,"cmp","","",0,[[["self"],["level"]],["ordering"]]],[11,"cmp","","",1,[[["levelfilter"],["self"]],["ordering"]]],[11,"cmp","","",5,[[["metadata"],["self"]],["ordering"]]],[11,"cmp","","",6,[[["metadatabuilder"],["self"]],["ordering"]]],[11,"eq","","",0,[[["self"],["level"]],["bool"]]],[11,"eq","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"eq","","",1,[[["levelfilter"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["level"]],["bool"]]],[11,"eq","","",5,[[["metadata"],["self"]],["bool"]]],[11,"ne","","",5,[[["metadata"],["self"]],["bool"]]],[11,"eq","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"ne","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"],["parselevelerror"]],["bool"]]],[11,"ne","","",8,[[["self"],["parselevelerror"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["level"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"],["level"]],["bool"]]],[11,"le","","",0,[[["self"],["level"]],["bool"]]],[11,"gt","","",0,[[["self"],["level"]],["bool"]]],[11,"ge","","",0,[[["self"],["level"]],["bool"]]],[11,"partial_cmp","","",0,[[["levelfilter"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"le","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"gt","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"ge","","",0,[[["levelfilter"],["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["levelfilter"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["levelfilter"],["self"]],["bool"]]],[11,"le","","",1,[[["levelfilter"],["self"]],["bool"]]],[11,"gt","","",1,[[["levelfilter"],["self"]],["bool"]]],[11,"ge","","",1,[[["levelfilter"],["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["level"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["self"],["level"]],["bool"]]],[11,"le","","",1,[[["self"],["level"]],["bool"]]],[11,"gt","","",1,[[["self"],["level"]],["bool"]]],[11,"ge","","",1,[[["self"],["level"]],["bool"]]],[11,"partial_cmp","","",5,[[["metadata"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",5,[[["metadata"],["self"]],["bool"]]],[11,"le","","",5,[[["metadata"],["self"]],["bool"]]],[11,"gt","","",5,[[["metadata"],["self"]],["bool"]]],[11,"ge","","",5,[[["metadata"],["self"]],["bool"]]],[11,"partial_cmp","","",6,[[["metadatabuilder"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"le","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"gt","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"ge","","",6,[[["metadatabuilder"],["self"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"from_str","","",0,[[["str"]],[["result",["level"]],["level"]]]],[11,"from_str","","",1,[[["str"]],[["result",["levelfilter"]],["levelfilter"]]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"description","","",8,[[["self"]],["str"]]]],"p":[[4,"Level"],[4,"LevelFilter"],[8,"Log"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"]]};
searchIndex["matrixmultiply"] = {"doc":"General matrix multiplication for f32, f64 matrices.…","i":[[5,"sgemm","matrixmultiply","General matrix multiplication (f32)",null,[[["f32"],["usize"],["isize"]]]],[5,"dgemm","","General matrix multiplication (f64)",null,[[["usize"],["f64"],["isize"]]]]],"p":[]};
searchIndex["memoffset"] = {"doc":"A crate used for calculating offsets of struct members and…","i":[[14,"offset_of","memoffset","Calculates the offset of the specified field from the…",null,null],[14,"span_of","","Produces a range instance representing the sub-slice…",null,null]],"p":[]};
searchIndex["ndarray"] = {"doc":"The `ndarray` crate provides an n-dimensional container…","i":[[3,"Dim","ndarray","Dimension description.",null,null],[3,"Axis","","An axis index.",null,null],[12,"0","","",0,null],[3,"AxisDescription","","Description of the axis, its length and its stride.",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[12,"2","","",1,null],[3,"IxDynImpl","","Dynamic dimension or index type.",null,null],[3,"ShapeError","","An error related to array shape or layout.",null,null],[3,"Slice","","A slice (range with step size).",null,null],[12,"start","","",2,null],[12,"end","","",2,null],[12,"step","","",2,null],[3,"SliceInfo","","Represents all of the necessary information to perform a…",null,null],[3,"Zip","","Lock step function application across several arrays or…",null,null],[3,"ArrayBase","","An n-dimensional array.",null,null],[3,"OwnedRepr","","Array's representation.",null,null],[3,"OwnedArcRepr","","ArcArray's representation.",null,null],[3,"RawViewRepr","","Array pointer’s representation.",null,null],[3,"ViewRepr","","Array view’s representation.",null,null],[3,"Shape","","A contiguous array shape of n dimensions.",null,null],[3,"StrideShape","","An array shape of n dimensions in c-order, f-order or…",null,null],[4,"ErrorKind","","Error code for an error related to array shape or layout.",null,null],[13,"IncompatibleShape","","incompatible shape",3,null],[13,"IncompatibleLayout","","incompatible memory layout",3,null],[13,"RangeLimited","","the shape does not fit inside type limits",3,null],[13,"OutOfBounds","","out of bounds indexing",3,null],[13,"Unsupported","","aliasing array elements",3,null],[13,"Overflow","","overflow when computing offset, length, etc.",3,null],[4,"SliceOrIndex","","A slice (range with step) or an index.",null,null],[13,"Slice","","A range with step size. `end` is an exclusive index.…",4,null],[12,"start","ndarray::SliceOrIndex","",5,null],[12,"end","","",5,null],[12,"step","","",5,null],[13,"Index","ndarray","A single index.",4,null],[4,"FoldWhile","","Value controlling the execution of `.fold_while` on `Zip`.",null,null],[13,"Continue","","Continue folding with this value",6,null],[13,"Done","","Fold is complete and will return this value",6,null],[4,"CowRepr","","CowArray's representation.",null,null],[13,"View","","Borrowed data.",7,null],[13,"Owned","","Owned data.",7,null],[5,"Dim","","Create a new dimension value.",null,[[["t"]]]],[5,"indices","","Create an iterable of the array shape `shape`.",null,[[["e"]],["indices"]]],[5,"indices_of","","Return an iterable of the indices of the passed-in array.",null,[[["arraybase"]],["indices"]]],[5,"stack","","Stack arrays along the given axis.",null,[[["axis"]],[["array"],["shapeerror"],["result",["array","shapeerror"]]]]],[5,"Ix0","","Create a zero-dimensional index",null,[[],["ix0"]]],[5,"Ix1","","Create a one-dimensional index",null,[[["ix"]],["ix1"]]],[5,"Ix2","","Create a two-dimensional index",null,[[["ix"]],["ix2"]]],[5,"Ix3","","Create a three-dimensional index",null,[[["ix"]],["ix3"]]],[5,"Ix4","","Create a four-dimensional index",null,[[["ix"]],["ix4"]]],[5,"Ix5","","Create a five-dimensional index",null,[[["ix"]],["ix5"]]],[5,"Ix6","","Create a six-dimensional index",null,[[["ix"]],["ix6"]]],[5,"IxDyn","","Create a dynamic-dimensional index",null,[[],["ixdyn"]]],[5,"arr0","","Create a zero-dimensional array with the element `x`.",null,[[["a"]],["array0"]]],[5,"arr1","","Create a one-dimensional array with elements from `xs`.",null,[[],[["array1"],["clone"]]]],[5,"rcarr1","","Create a one-dimensional array with elements from `xs`.",null,[[],[["ix1"],["clone"],["arcarray",["ix1"]]]]],[5,"aview0","","Create a zero-dimensional array view borrowing `x`.",null,[[["a"]],["arrayview0"]]],[5,"aview1","","Create a one-dimensional array view with elements…",null,[[],["arrayview1"]]],[5,"aview2","","Create a two-dimensional array view with elements…",null,[[],["arrayview2"]]],[5,"aview_mut1","","Create a one-dimensional read-write array view with…",null,[[],["arrayviewmut1"]]],[5,"aview_mut2","","Create a two-dimensional read-write array view with…",null,[[],["arrayviewmut2"]]],[5,"arr2","","Create a two-dimensional array with elements from `xs`.",null,[[],[["array2"],["clone"]]]],[5,"rcarr2","","Create a two-dimensional array with elements from `xs`.",null,[[],[["ix2"],["clone"],["arcarray",["ix2"]]]]],[5,"arr3","","Create a three-dimensional array with elements from `xs`.",null,[[],[["clone"],["array3"]]]],[5,"rcarr3","","Create a three-dimensional array with elements from `xs`.",null,[[],[["ix3"],["clone"],["arcarray",["ix3"]]]]],[0,"iter","","Producers, iterables and iterators.",null,null],[3,"Axes","ndarray::iter","An iterator over the length and stride of each axis of an…",null,null],[3,"Indices","","Indices producer and iterable.",null,null],[3,"IndicesIter","","An iterator over the indexes of an array shape.",null,null],[3,"AxisChunksIter","","An iterator that traverses over the specified axis and…",null,null],[3,"AxisChunksIterMut","","An iterator that traverses over the specified axis and…",null,null],[3,"AxisIter","","An iterator that traverses over an axis and and yields…",null,null],[3,"AxisIterMut","","An iterator that traverses over an axis and and yields…",null,null],[3,"ExactChunks","","Exact chunks producer and iterable.",null,null],[3,"ExactChunksIter","","Exact chunks iterator.",null,null],[3,"ExactChunksIterMut","","Exact chunks iterator.",null,null],[3,"ExactChunksMut","","Exact chunks producer and iterable.",null,null],[3,"IndexedIter","","An iterator over the indexes and elements of an array.",null,null],[3,"IndexedIterMut","","An iterator over the indexes and elements of an array…",null,null],[3,"Iter","","An iterator over the elements of an array.",null,null],[3,"IterMut","","An iterator over the elements of an array (mutable).",null,null],[3,"Lanes","","See `.lanes()` for more information.",null,null],[3,"LanesIter","","An iterator that traverses over all axes but one, and…",null,null],[3,"LanesIterMut","","An iterator that traverses over all dimensions but the…",null,null],[3,"LanesMut","","See `.lanes_mut()` for more information.",null,null],[3,"Windows","","Window producer and iterable",null,null],[11,"kind","ndarray","Return the `ErrorKind` of this error.",8,[[["self"]],["errorkind"]]],[11,"from_kind","","Create a new `ShapeError`",8,[[["errorkind"]],["self"]]],[11,"split_at","ndarray::iter","Splits the iterator at `index`, yielding two disjoint…",9,[[["usize"]]]],[11,"split_at","","Splits the iterator at `index`, yielding two disjoint…",10,[[["usize"]]]],[11,"split_at","","Splits the iterator at index, yielding two disjoint…",11,[[["usize"]]]],[11,"split_at","","Splits the iterator at index, yielding two disjoint…",12,[[["usize"]]]],[11,"size","ndarray","Return the size of the shape in number of elements",13,[[["self"]],["usize"]]],[11,"new","","Create a new `Slice` with the given extents.",2,[[["isize"],["option",["isize"]]],["slice"]]],[11,"step_by","","Create a new `Slice` with the given step size (multiplied…",2,[[["isize"]],["self"]]],[11,"is_slice","","Returns `true` if `self` is a `Slice` value.",4,[[["self"]],["bool"]]],[11,"is_index","","Returns `true` if `self` is an `Index` value.",4,[[["self"]],["bool"]]],[11,"step_by","","Returns a new `SliceOrIndex` with the given step size…",4,[[["isize"]],["self"]]],[11,"new","","Returns a new `SliceInfo` instance.",14,[[["t"]],[["shapeerror"],["result",["sliceinfo","shapeerror"]],["sliceinfo"]]]],[11,"out_ndim","","Returns the number of dimensions after calling `.slice()`…",14,[[["self"]],["usize"]]],[11,"from","","Create a new `Zip` from the input array or other producer…",15,[[["ip"]],["self"]]],[11,"indexed","","Create a new `Zip` with an index producer and the producer…",15,[[["ip"]],["self"]]],[11,"size","","Return a the number of element tuples in the Zip",15,[[["self"]],["usize"]]],[11,"apply","","Apply a function to all elements of the input arrays,…",15,[[["f"]]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",15,[[["acc"],["f"]],["acc"]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",15,[[["acc"],["f"]],["foldwhile"]]],[11,"all","","Tests if every element of the iterator matches a predicate.",15,[[["f"]],["bool"]]],[11,"and","","Include the producer `p` in the Zip.",15,[[["p"]],["zip"]]],[11,"and_broadcast","","Include the producer `p` in the Zip, broadcasting if needed.",15,[[["p"]],["zip"]]],[11,"split","","Split the `Zip` evenly in two.",15,[[]]],[11,"apply","","Apply a function to all elements of the input arrays,…",15,[[["f"]]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",15,[[["acc"],["f"]],["acc"]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",15,[[["acc"],["f"]],["foldwhile"]]],[11,"all","","Tests if every element of the iterator matches a predicate.",15,[[["f"]],["bool"]]],[11,"and","","Include the producer `p` in the Zip.",15,[[["p"]],["zip"]]],[11,"and_broadcast","","Include the producer `p` in the Zip, broadcasting if needed.",15,[[["p"]],["zip"]]],[11,"split","","Split the `Zip` evenly in two.",15,[[]]],[11,"apply","","Apply a function to all elements of the input arrays,…",15,[[["f"]]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",15,[[["acc"],["f"]],["acc"]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",15,[[["acc"],["f"]],["foldwhile"]]],[11,"all","","Tests if every element of the iterator matches a predicate.",15,[[["f"]],["bool"]]],[11,"and","","Include the producer `p` in the Zip.",15,[[["p"]],["zip"]]],[11,"and_broadcast","","Include the producer `p` in the Zip, broadcasting if needed.",15,[[["p"]],["zip"]]],[11,"split","","Split the `Zip` evenly in two.",15,[[]]],[11,"apply","","Apply a function to all elements of the input arrays,…",15,[[["f"]]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",15,[[["acc"],["f"]],["acc"]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",15,[[["acc"],["f"]],["foldwhile"]]],[11,"all","","Tests if every element of the iterator matches a predicate.",15,[[["f"]],["bool"]]],[11,"and","","Include the producer `p` in the Zip.",15,[[["p"]],["zip"]]],[11,"and_broadcast","","Include the producer `p` in the Zip, broadcasting if needed.",15,[[["p"]],["zip"]]],[11,"split","","Split the `Zip` evenly in two.",15,[[]]],[11,"apply","","Apply a function to all elements of the input arrays,…",15,[[["f"]]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",15,[[["acc"],["f"]],["acc"]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",15,[[["acc"],["f"]],["foldwhile"]]],[11,"all","","Tests if every element of the iterator matches a predicate.",15,[[["f"]],["bool"]]],[11,"and","","Include the producer `p` in the Zip.",15,[[["p"]],["zip"]]],[11,"and_broadcast","","Include the producer `p` in the Zip, broadcasting if needed.",15,[[["p"]],["zip"]]],[11,"split","","Split the `Zip` evenly in two.",15,[[]]],[11,"apply","","Apply a function to all elements of the input arrays,…",15,[[["f"]]]],[11,"fold","","Apply a fold function to all elements of the input arrays,…",15,[[["acc"],["f"]],["acc"]]],[11,"fold_while","","Apply a fold function to the input arrays while the return…",15,[[["acc"],["f"]],["foldwhile"]]],[11,"all","","Tests if every element of the iterator matches a predicate.",15,[[["f"]],["bool"]]],[11,"split","","Split the `Zip` evenly in two.",15,[[]]],[11,"into_inner","","Return the inner value",6,[[],["t"]]],[11,"is_done","","Return true if it is `Done`, false if `Continue`",6,[[["self"]],["bool"]]],[11,"axis","","Return axis",1,[[],["axis"]]],[11,"len","","Return length",1,[[],["ix"]]],[11,"stride","","Return stride",1,[[],["ixs"]]],[11,"index","","Return the index of the axis.",0,[[],["usize"]]],[11,"zeros","","Create a new dimension value with `n` axes, all zeros",16,[[["usize"]],["ixdyn"]]],[0,"prelude","","ndarray prelude.",null,null],[11,"from_vec","","Create a one-dimensional array from a vector (no copying…",17,[[["vec"]],["self"]]],[11,"linspace","","Create a one-dimensional array with `n` evenly spaced…",17,[[["a"],["usize"]],["self"]]],[11,"range","","Create a one-dimensional array with elements from `start`…",17,[[["a"]],["self"]]],[11,"logspace","","Create a one-dimensional array with `n` logarithmically…",17,[[["a"],["usize"]],["self"]]],[11,"geomspace","","Create a one-dimensional array with `n` geometrically…",17,[[["a"],["usize"]],["option"]]],[11,"eye","","Create an identity matrix of size `n` (square 2D array).",17,[[["ix"]],["self"]]],[11,"from_diag","","Create a 2D matrix from its diagonal",17,[[["arraybase"]],["self"]]],[11,"from_elem","","Create an array with copies of `elem`, shape `shape`.",17,[[["a"],["sh"]],["self"]]],[11,"zeros","","Create an array with zeros, shape `shape`.",17,[[["sh"]],["self"]]],[11,"ones","","Create an array with ones, shape `shape`.",17,[[["sh"]],["self"]]],[11,"default","","Create an array with default values, shape `shape`",17,[[["sh"]],["self"]]],[11,"from_shape_fn","","Create an array with values created by the function `f`.",17,[[["f"],["sh"]],["self"]]],[11,"from_shape_vec","","Create an array with the given shape from a vector. (No…",17,[[["vec"],["sh"]],[["result",["shapeerror"]],["shapeerror"]]]],[11,"from_shape_vec_unchecked","","Creates an array from a vector and interpret it according…",17,[[["vec"],["sh"]],["self"]]],[11,"uninitialized","","Create an array with uninitalized elements, shape `shape`.",17,[[["sh"]],["self"]]],[11,"len","","Return the total number of elements in the array.",17,[[["self"]],["usize"]]],[11,"len_of","","Return the length of `axis`.",17,[[["axis"],["self"]],["usize"]]],[11,"is_empty","","Return whether the array has any elements",17,[[["self"]],["bool"]]],[11,"ndim","","Return the number of dimensions (axes) in the array",17,[[["self"]],["usize"]]],[11,"dim","","Return the shape of the array in its “pattern” form, an…",17,[[["self"]]]],[11,"raw_dim","","Return the shape of the array as it stored in the array.",17,[[["self"]],["d"]]],[11,"shape","","Return the shape of the array as a slice.",17,[[["self"]]]],[11,"strides","","Return the strides of the array as a slice.",17,[[["self"]]]],[11,"stride_of","","Return the stride of `axis`.",17,[[["axis"],["self"]],["isize"]]],[11,"view","","Return a read-only view of the array",17,[[["self"]],["arrayview"]]],[11,"view_mut","","Return a read-write view of the array",17,[[["self"]],["arrayviewmut"]]],[11,"to_owned","","Return an uniquely owned copy of the array.",17,[[["self"]],["array"]]],[11,"to_shared","","Return a shared ownership (copy on write) array.",17,[[["self"]],["arcarray"]]],[11,"into_owned","","Turn the array into a uniquely owned array, cloning the…",17,[[],["array"]]],[11,"into_shared","","Turn the array into a shared ownership (copy on write)…",17,[[],["arcarray"]]],[11,"first","","Returns a reference to the first element of the array, or…",17,[[["self"]],[["option"],["a"]]]],[11,"first_mut","","Returns a mutable reference to the first element of the…",17,[[["self"]],[["a"],["option"]]]],[11,"iter","","Return an iterator of references to the elements of the…",17,[[["self"]],["iter"]]],[11,"iter_mut","","Return an iterator of mutable references to the elements…",17,[[["self"]],["itermut"]]],[11,"indexed_iter","","Return an iterator of indexes and references to the…",17,[[["self"]],["indexediter"]]],[11,"indexed_iter_mut","","Return an iterator of indexes and mutable references to…",17,[[["self"]],["indexeditermut"]]],[11,"slice","","Return a sliced view of the array.",17,[[["sliceinfo"],["self"]],["arrayview"]]],[11,"slice_mut","","Return a sliced read-write view of the array.",17,[[["self"],["sliceinfo"]],["arrayviewmut"]]],[11,"slice_move","","Slice the array, possibly changing the number of dimensions.",17,[[["sliceinfo"]],["arraybase"]]],[11,"slice_collapse","","Slice the array in place without changing the number of…",17,[[["self"]]]],[11,"slice_inplace","","Slice the array in place without changing the number of…",17,[[["self"]]]],[11,"slice_axis","","Return a view of the array, sliced along the specified axis.",17,[[["slice"],["axis"],["self"]],["arrayview"]]],[11,"slice_axis_mut","","Return a mutable view of the array, sliced along the…",17,[[["slice"],["self"],["axis"]],["arrayviewmut"]]],[11,"slice_axis_inplace","","Slice the array in place along the specified axis.",17,[[["slice"],["self"],["axis"]]]],[11,"get","","Return a reference to the element at `index`, or return…",17,[[["i"],["self"]],[["option"],["a"]]]],[11,"get_mut","","Return a mutable reference to the element at `index`, or…",17,[[["self"],["i"]],[["a"],["option"]]]],[11,"uget","","Perform unchecked array indexing.",17,[[["i"],["self"]],["a"]]],[11,"uget_mut","","Perform unchecked array indexing.",17,[[["self"],["i"]],["a"]]],[11,"swap","","Swap elements at indices `index1` and `index2`.",17,[[["self"],["i"]]]],[11,"uswap","","Swap elements unchecked at indices `index1` and `index2`.",17,[[["self"],["i"]]]],[11,"index_axis","","Returns a view restricted to `index` along the axis, with…",17,[[["axis"],["self"],["usize"]],["arrayview"]]],[11,"index_axis_mut","","Returns a mutable view restricted to `index` along the…",17,[[["self"],["axis"],["usize"]],["arrayviewmut"]]],[11,"index_axis_move","","Collapses the array to `index` along the axis and removes…",17,[[["axis"],["usize"]],["arraybase"]]],[11,"collapse_axis","","Selects `index` along the axis, collapsing the axis into…",17,[[["self"],["axis"],["usize"]]]],[11,"subview","","Along `axis`, select the subview `index` and return a view…",17,[[["axis"],["self"],["ix"]],["arrayview"]]],[11,"subview_mut","","Along `axis`, select the subview `index` and return a…",17,[[["self"],["axis"],["ix"]],["arrayviewmut"]]],[11,"subview_inplace","","Collapse dimension `axis` into length one, and select the…",17,[[["self"],["axis"],["ix"]]]],[11,"into_subview","","Along `axis`, select the subview `index` and return `self`…",17,[[["axis"],["ix"]],["arraybase"]]],[11,"select","","Along `axis`, select arbitrary subviews corresponding to…",17,[[["axis"],["self"]],["array"]]],[11,"genrows","","Return a producer and iterable that traverses over the…",17,[[["self"]],["lanes"]]],[11,"genrows_mut","","Return a producer and iterable that traverses over the…",17,[[["self"]],["lanesmut"]]],[11,"gencolumns","","Return a producer and iterable that traverses over the…",17,[[["self"]],["lanes"]]],[11,"gencolumns_mut","","Return a producer and iterable that traverses over the…",17,[[["self"]],["lanesmut"]]],[11,"lanes","","Return a producer and iterable that traverses over all 1D…",17,[[["axis"],["self"]],["lanes"]]],[11,"lanes_mut","","Return a producer and iterable that traverses over all 1D…",17,[[["self"],["axis"]],["lanesmut"]]],[11,"outer_iter","","Return an iterator that traverses over the outermost…",17,[[["self"]],["axisiter"]]],[11,"outer_iter_mut","","Return an iterator that traverses over the outermost…",17,[[["self"]],["axisitermut"]]],[11,"axis_iter","","Return an iterator that traverses over `axis` and yields…",17,[[["axis"],["self"]],["axisiter"]]],[11,"axis_iter_mut","","Return an iterator that traverses over `axis` and yields…",17,[[["self"],["axis"]],["axisitermut"]]],[11,"axis_chunks_iter","","Return an iterator that traverses over `axis` by chunks of…",17,[[["axis"],["self"],["usize"]],["axischunksiter"]]],[11,"axis_chunks_iter_mut","","Return an iterator that traverses over `axis` by chunks of…",17,[[["self"],["axis"],["usize"]],["axischunksitermut"]]],[11,"exact_chunks","","Return an exact chunks producer (and iterable).",17,[[["self"],["e"]],["exactchunks"]]],[11,"exact_chunks_mut","","Return an exact chunks producer (and iterable).",17,[[["self"],["e"]],["exactchunksmut"]]],[11,"windows","","Return a window producer and iterable.",17,[[["self"],["e"]],["windows"]]],[11,"diag","","Return an view of the diagonal elements of the array.",17,[[["self"]],["arrayview1"]]],[11,"diag_mut","","Return a read-write view over the diagonal elements of the…",17,[[["self"]],["arrayviewmut1"]]],[11,"into_diag","","Return the diagonal as a one-dimensional array.",17,[[],[["arraybase",["ix1"]],["ix1"]]]],[11,"is_standard_layout","","Return `true` if the array data is laid out in contiguous…",17,[[["self"]],["bool"]]],[11,"as_standard_layout","","Return a standard-layout array containing the data,…",17,[[["self"]],["cowarray"]]],[11,"as_ptr","","Return a pointer to the first element in the array.",17,[[["self"]]]],[11,"as_mut_ptr","","Return a mutable pointer to the first element in the array.",17,[[["self"]]]],[11,"raw_view","","Return a raw view of the array.",17,[[["self"]],["rawarrayview"]]],[11,"raw_view_mut","","Return a raw mutable view of the array.",17,[[["self"]],["rawarrayviewmut"]]],[11,"as_slice","","Return the array’s data as a slice, if it is contiguous…",17,[[["self"]],["option"]]],[11,"as_slice_mut","","Return the array’s data as a slice, if it is contiguous…",17,[[["self"]],["option"]]],[11,"as_slice_memory_order","","Return the array’s data as a slice if it is contiguous,…",17,[[["self"]],["option"]]],[11,"as_slice_memory_order_mut","","Return the array’s data as a slice if it is contiguous,…",17,[[["self"]],["option"]]],[11,"into_shape","","Transform the array into `shape`; any shape with the same…",17,[[["e"]],[["result",["arraybase","shapeerror"]],["shapeerror"],["arraybase"]]]],[11,"reshape","","Note: Reshape is for `ArcArray` only. Use `.into_shape()`…",17,[[["self"],["e"]],["arraybase"]]],[11,"into_dyn","","Convert any array or array view to a dynamic dimensional…",17,[[],[["ixdyn"],["arraybase",["ixdyn"]]]]],[11,"into_dimensionality","","Convert an array or array view to another with the same…",17,[[],[["arraybase"],["shapeerror"],["result",["arraybase","shapeerror"]]]]],[11,"broadcast","","Act like a larger size and/or shape array by broadcasting…",17,[[["self"],["e"]],[["option",["arrayview"]],["arrayview"]]]],[11,"swap_axes","","Swap axes `ax` and `bx`.",17,[[["self"],["usize"]]]],[11,"permuted_axes","","Permute the axes.",17,[[["t"]],["arraybase"]]],[11,"reversed_axes","","Transpose the array by reversing axes.",17,[[],["arraybase"]]],[11,"t","","Return a transposed view of the array.",17,[[["self"]],["arrayview"]]],[11,"axes","","Return an iterator over the length and stride of each axis.",17,[[["self"]],["axes"]]],[11,"max_stride_axis","","Return the axis with the greatest stride (by absolute…",17,[[["self"]],["axis"]]],[11,"invert_axis","","Reverse the stride of `axis`.",17,[[["self"],["axis"]]]],[11,"merge_axes","","If possible, merge in the axis `take` to `into`.",17,[[["self"],["axis"]],["bool"]]],[11,"insert_axis","","Insert new array axis at `axis` and return the result.",17,[[["axis"]],["arraybase"]]],[11,"remove_axis","","Remove array axis `axis` and return the result.",17,[[["axis"]],["arraybase"]]],[11,"assign","","Perform an elementwise assigment to `self` from `rhs`.",17,[[["self"],["arraybase"]]]],[11,"fill","","Perform an elementwise assigment to `self` from element `x`.",17,[[["a"],["self"]]]],[11,"zip_mut_with","","Traverse two arrays in unspecified order, in lock step,…",17,[[["self"],["f"],["arraybase"]]]],[11,"fold","","Traverse the array elements and apply a fold, returning…",17,[[["f"],["self"],["b"]],["b"]]],[11,"map","","Call `f` by reference on each element and create a new…",17,[[["self"],["f"]],["array"]]],[11,"map_mut","","Call `f` on a mutable reference of each element and create…",17,[[["self"],["f"]],["array"]]],[11,"mapv","","Call `f` by value on each element and create a new array…",17,[[["self"],["f"]],["array"]]],[11,"mapv_into","","Call `f` by value on each element, update the array with…",17,[[["f"]],["self"]]],[11,"map_inplace","","Modify the array in place by calling `f` by mutable…",17,[[["self"],["f"]]]],[11,"mapv_inplace","","Modify the array in place by calling `f` by value on each…",17,[[["self"],["f"]]]],[11,"visit","","Visit each element in the array by calling `f` by…",17,[[["self"],["f"]]]],[11,"fold_axis","","Fold along an axis.",17,[[["f"],["axis"],["self"],["b"]],["array"]]],[11,"map_axis","","Reduce the values along an axis into just one value,…",17,[[["axis"],["self"],["f"]],["array"]]],[11,"map_axis_mut","","Reduce the values along an axis into just one value,…",17,[[["self"],["axis"],["f"]],["array"]]],[11,"accumulate_axis_inplace","","Iterates over pairs of consecutive elements along the axis.",17,[[["self"],["axis"],["f"]]]],[11,"into_scalar","","Returns the single element in the array without cloning it.",17,[[],["a"]]],[11,"into_raw_vec","","Return a vector of the elements in the array, in the way…",17,[[],["vec"]]],[0,"parallel","","Parallelization features for ndarray.",null,null],[3,"Parallel","ndarray::parallel","Parallel iterator wrapper.",null,null],[0,"prelude","","Into- traits for creating parallelized iterators and/or…",null,null],[11,"par_map_inplace","ndarray","Parallel version of `map_inplace`.",17,[[["self"],["f"]]]],[11,"par_mapv_inplace","","Parallel version of `mapv_inplace`.",17,[[["self"],["f"]]]],[11,"par_apply","","The `par_apply` method for `Zip`.",15,[[["f"]]]],[11,"par_apply","","The `par_apply` method for `Zip`.",15,[[["f"]]]],[11,"par_apply","","The `par_apply` method for `Zip`.",15,[[["f"]]]],[11,"par_apply","","The `par_apply` method for `Zip`.",15,[[["f"]]]],[11,"par_apply","","The `par_apply` method for `Zip`.",15,[[["f"]]]],[11,"par_apply","","The `par_apply` method for `Zip`.",15,[[["f"]]]],[11,"to_vec","","Return an vector with the elements of the one-dimensional…",17,[[["self"]],["vec"]]],[11,"row","","Return an array view of row `index`.",17,[[["self"],["ix"]],["arrayview1"]]],[11,"row_mut","","Return a mutable array view of row `index`.",17,[[["self"],["ix"]],["arrayviewmut1"]]],[11,"nrows","","Return the number of rows (length of `Axis(0)`) in the…",17,[[["self"]],["usize"]]],[11,"rows","","Return the number of rows (length of `Axis(0)`) in the…",17,[[["self"]],["usize"]]],[11,"column","","Return an array view of column `index`.",17,[[["self"],["ix"]],["arrayview1"]]],[11,"column_mut","","Return a mutable array view of column `index`.",17,[[["self"],["ix"]],["arrayviewmut1"]]],[11,"ncols","","Return the number of columns (length of `Axis(1)`) in the…",17,[[["self"]],["usize"]]],[11,"cols","","Return the number of columns (length of `Axis(1)`) in the…",17,[[["self"]],["usize"]]],[11,"is_square","","Return true if the array is square, false otherwise.",17,[[["self"]],["bool"]]],[11,"insert_axis_inplace","","Insert new array axis of length 1 at `axis`, modifying the…",17,[[["self"],["axis"]]]],[11,"index_axis_inplace","","Collapses the array to `index` along the axis and removes…",17,[[["self"],["axis"],["usize"]]]],[11,"sum","","Return the sum of all elements in the array.",17,[[["self"]],["a"]]],[11,"mean","","Returns the [arithmetic mean] x̅ of all elements in the…",17,[[["self"]],["option"]]],[11,"scalar_sum","","Return the sum of all elements in the array.",17,[[["self"]],["a"]]],[11,"product","","Return the product of all elements in the array.",17,[[["self"]],["a"]]],[11,"sum_axis","","Return sum along `axis`.",17,[[["axis"],["self"]],["array"]]],[11,"mean_axis","","Return mean along `axis`.",17,[[["axis"],["self"]],[["option",["array"]],["array"]]]],[11,"var_axis","","Return variance along `axis`.",17,[[["a"],["axis"],["self"]],["array"]]],[11,"std_axis","","Return standard deviation along `axis`.",17,[[["a"],["axis"],["self"]],["array"]]],[11,"all_close","","Return `true` if the arrays' elementwise differences are…",17,[[["a"],["self"],["arraybase"]],["bool"]]],[0,"linalg","","Linear algebra.",null,null],[5,"general_mat_mul","ndarray::linalg","General matrix-matrix multiplication.",null,[[["a"],["arraybase"],["arraybase"],["arraybase"]]]],[5,"general_mat_vec_mul","","General matrix-vector multiplication.",null,[[["a"],["arraybase"],["arraybase"],["arraybase"]]]],[11,"dot","ndarray","Perform dot product or matrix multiplication of arrays…",17,[[["rhs"],["self"]]]],[11,"dot","","Perform matrix multiplication of rectangular arrays `self`…",17,[[["rhs"],["self"]]]],[11,"scaled_add","","Perform the operation `self += alpha * rhs` efficiently,…",17,[[["a"],["self"],["arraybase"]]]],[8,"Dot","ndarray::linalg","Matrix Multiplication",null,null],[16,"Output","","The result of the operation.",18,null],[10,"dot","","",18,[[["rhs"],["self"]]]],[11,"from_shape","ndarray","Create a read-only array view borrowing its data from a…",17,[[["sh"]],[["result",["shapeerror"]],["shapeerror"]]]],[11,"from_shape_ptr","","Create an `ArrayView<A, D>` from shape information and a…",17,[[["sh"]],["self"]]],[11,"from_shape","","Create a read-write array view borrowing its data from a…",17,[[["sh"]],[["result",["shapeerror"]],["shapeerror"]]]],[11,"from_shape_ptr","","Create an `ArrayViewMut<A, D>` from shape information and…",17,[[["sh"]],["self"]]],[11,"reborrow","","Convert the view into an `ArrayViewMut<'b, A, D>` where…",17,[[],["arrayviewmut"]]],[11,"reborrow","","Convert the view into an `ArrayView<'b, A, D>` where `'b`…",17,[[],["arrayview"]]],[11,"into_slice","","Return the array’s data as a slice, if it is contiguous…",17,[[["self"]],["option"]]],[11,"to_slice","","Return the array’s data as a slice, if it is contiguous…",17,[[["self"]],["option"]]],[11,"into_scalar","","Consume the view and return a reference to the single…",17,[[],["a"]]],[11,"into_scalar","","Consume the mutable view and return a mutable reference to…",17,[[],["a"]]],[11,"into_slice","","Return the array’s data as a slice, if it is contiguous…",17,[[],["option"]]],[11,"split_at","","Split the array view along `axis` and return one view…",17,[[["axis"],["ix"]]]],[11,"split_at","","Split the array view along `axis` and return one mutable…",17,[[["axis"],["ix"]]]],[11,"from_shape_ptr","","Create an `RawArrayView<A, D>` from shape information and…",17,[[["sh"]],["self"]]],[11,"deref_into_view","","Converts to a read-only view of the array.",17,[[],["arrayview"]]],[11,"split_at","","Split the array view along `axis` and return one array…",17,[[["axis"],["ix"]]]],[11,"from_shape_ptr","","Create an `RawArrayViewMut<A, D>` from shape information…",17,[[["sh"]],["self"]]],[11,"deref_into_view","","Converts to a read-only view of the array.",17,[[],["arrayview"]]],[11,"deref_into_view_mut","","Converts to a mutable view of the array.",17,[[],["arrayviewmut"]]],[11,"split_at","","Split the array view along `axis` and return one array…",17,[[["axis"],["ix"]]]],[11,"is_view","","Returns `true` iff the array is the view (borrowed) variant.",17,[[["self"]],["bool"]]],[11,"is_owned","","Returns `true` iff the array is the owned variant.",17,[[["self"]],["bool"]]],[6,"Ix0","","zero-dimensionial",null,null],[6,"Ix1","","one-dimensional",null,null],[6,"Ix2","","two-dimensional",null,null],[6,"Ix3","","three-dimensional",null,null],[6,"Ix4","","four-dimensional",null,null],[6,"Ix5","","five-dimensional",null,null],[6,"Ix6","","six-dimensional",null,null],[6,"IxDyn","","dynamic-dimensional",null,null],[6,"Array0","","zero-dimensional array",null,null],[6,"Array1","","one-dimensional array",null,null],[6,"Array2","","two-dimensional array",null,null],[6,"Array3","","three-dimensional array",null,null],[6,"Array4","","four-dimensional array",null,null],[6,"Array5","","five-dimensional array",null,null],[6,"Array6","","six-dimensional array",null,null],[6,"ArrayD","","dynamic-dimensional array",null,null],[6,"ArrayView0","","zero-dimensional array view",null,null],[6,"ArrayView1","","one-dimensional array view",null,null],[6,"ArrayView2","","two-dimensional array view",null,null],[6,"ArrayView3","","three-dimensional array view",null,null],[6,"ArrayView4","","four-dimensional array view",null,null],[6,"ArrayView5","","five-dimensional array view",null,null],[6,"ArrayView6","","six-dimensional array view",null,null],[6,"ArrayViewD","","dynamic-dimensional array view",null,null],[6,"ArrayViewMut0","","zero-dimensional read-write array view",null,null],[6,"ArrayViewMut1","","one-dimensional read-write array view",null,null],[6,"ArrayViewMut2","","two-dimensional read-write array view",null,null],[6,"ArrayViewMut3","","three-dimensional read-write array view",null,null],[6,"ArrayViewMut4","","four-dimensional read-write array view",null,null],[6,"ArrayViewMut5","","five-dimensional read-write array view",null,null],[6,"ArrayViewMut6","","six-dimensional read-write array view",null,null],[6,"ArrayViewMutD","","dynamic-dimensional read-write array view",null,null],[6,"RcArray1","","one-dimensional shared ownership array",null,null],[6,"RcArray2","","two-dimensional shared ownership array",null,null],[6,"Ix","","Array index type",null,null],[6,"Ixs","","Array index type (signed)",null,null],[6,"RcArray","","An array where the data has shared ownership and is copy…",null,null],[6,"ArcArray","","An array where the data has shared ownership and is copy…",null,null],[6,"Array","","An array that owns its data uniquely.",null,null],[6,"CowArray","","An array with copy-on-write behavior.",null,null],[6,"ArrayView","","A read-only array view.",null,null],[6,"ArrayViewMut","","A read-write array view.",null,null],[6,"RawArrayView","","A read-only array view without a lifetime.",null,null],[6,"RawArrayViewMut","","A mutable array view without a lifetime.",null,null],[8,"Dimension","","Array shape and index trait.",null,null],[18,"NDIM","","For fixed-size dimension representations (e.g. `Ix2`),…",19,null],[16,"SliceArg","","`SliceArg` is the type which is used to specify slicing…",19,null],[16,"Pattern","","Pattern matching friendly form of the dimension value.",19,null],[16,"Smaller","","Next smaller dimension (if applicable)",19,null],[16,"Larger","","Next larger dimension",19,null],[10,"ndim","","Returns the number of dimensions (number of axes).",19,[[["self"]],["usize"]]],[10,"into_pattern","","Convert the dimension into a pattern matching friendly…",19,[[]]],[11,"size","","Compute the size of the dimension (number of elements)",19,[[["self"]],["usize"]]],[11,"size_checked","","Compute the size while checking for overflow.",19,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"as_array_view","","Borrow as a read-only array view.",19,[[["self"]],[["ix"],["arrayview1",["ix"]]]]],[11,"as_array_view_mut","","Borrow as a read-write array view.",19,[[["self"]],[["arrayviewmut1",["ix"]],["ix"]]]],[10,"zeros","","Creates a dimension of all zeros with the specified ndim.",19,[[["usize"]],["self"]]],[11,"into_dyn","","Convert the dimensional into a dynamic dimensional (IxDyn).",19,[[],["ixdyn"]]],[10,"__private__","","This trait is private to implement; this method exists to…",19,[[["self"]],["privatemarker"]]],[8,"IntoDimension","","Argument conversion a dimension.",null,null],[16,"Dim","","",20,null],[10,"into_dimension","","",20,[[]]],[8,"RemoveAxis","","Array shape with a next smaller dimension.",null,null],[10,"remove_axis","","",21,[[["axis"],["self"]]]],[8,"NdIndex","","Tuple or fixed size arrays that can be used to index an…",null,null],[8,"AsArray","","Argument conversion into an array view",null,null],[8,"LinalgScalar","","Elements that support linear algebra operations.",null,null],[8,"NdFloat","","Floating-point element types `f32` and `f64`.",null,null],[8,"IndexLonger","","Extra indexing methods for array views",null,null],[16,"Output","","The type of the reference to the element that is produced,…",22,null],[10,"index","","Get a reference of a element through the view.",22,[[["i"]]]],[10,"get","","Get a reference of a element through the view.",22,[[["i"]],["option"]]],[10,"uget","","Get a reference of a element through the view without…",22,[[["i"]]]],[8,"ShapeBuilder","","A trait for `Shape` and `D where D: Dimension` that allows…",null,null],[16,"Dim","","",23,null],[16,"Strides","","",23,null],[10,"into_shape","","",23,[[],["shape"]]],[10,"f","","",23,[[],["shape"]]],[10,"set_f","","",23,[[["bool"]],["shape"]]],[10,"strides","","",23,[[],["strideshape"]]],[8,"Data","","Array representation trait.",null,null],[8,"DataClone","","Array representation trait.",null,null],[8,"DataMut","","Array representation trait.",null,null],[8,"DataOwned","","Array representation trait.",null,null],[8,"DataShared","","Array representation trait.",null,null],[8,"RawData","","Array representation trait.",null,null],[16,"Elem","","The array element type.",24,null],[10,"__private__","","This trait is private to implement; this method exists to…",24,[[["self"]],["privatemarker"]]],[8,"RawDataClone","","Array representation trait.",null,null],[8,"RawDataMut","","Array representation trait.",null,null],[8,"FixedInitializer","","Fixed-size array used for array initialization",null,null],[16,"Elem","","",25,null],[10,"as_init_slice","","",25,[[["self"]]]],[10,"len","","",25,[[],["usize"]]],[8,"IntoNdProducer","","Argument conversion into a producer.",null,null],[16,"Item","","The element produced per iteration.",26,null],[16,"Dim","","Dimension type of the producer",26,null],[16,"Output","","",26,null],[10,"into_producer","","Convert the value into an `NdProducer`.",26,[[]]],[8,"NdProducer","","A producer of an n-dimensional set of elements; for…",null,null],[16,"Item","","The element produced per iteration.",27,null],[16,"Dim","","Dimension type",27,null],[10,"__private__","","This trait is private to implement; this method exists to…",27,[[["self"]],["privatemarker"]]],[8,"ScalarOperand","","Elements that can be used as direct operands in arithmetic…",null,null],[11,"is_view","","Returns `true` iff the data is the `View` variant.",7,[[["self"]],["bool"]]],[11,"is_owned","","Returns `true` iff the data is the `Owned` variant.",7,[[["self"]],["bool"]]],[14,"array","","Create an `Array` with one, two or three dimensions.",null,null],[14,"s","","Slice argument constructor.",null,null],[14,"stack","","Stack arrays along the given axis.",null,null],[14,"azip","","Array zip macro: lock step function application across…",null,null],[14,"par_azip","","Parallelized array zip macro: lock step function…",null,null],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"into_par_iter","","",15,[[],["t"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"into_iter","","",17,[[],["i"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"into_par_iter","","",17,[[],["t"]]],[11,"par_iter","","",17,[[["self"]]]],[11,"par_iter_mut","","",17,[[["self"]]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","ndarray::iter","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"into_iter","","",34,[[],["i"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"par_bridge","","",34,[[],["iterbridge"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"into_iter","","",35,[[],["i"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"into_iter","","",36,[[],["i"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"par_bridge","","",36,[[],["iterbridge"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"par_bridge","","",11,[[],["iterbridge"]]],[11,"into_par_iter","","",11,[[],["t"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"into_iter","","",12,[[],["i"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"par_bridge","","",12,[[],["iterbridge"]]],[11,"into_par_iter","","",12,[[],["t"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"par_bridge","","",9,[[],["iterbridge"]]],[11,"into_par_iter","","",9,[[],["t"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"par_bridge","","",10,[[],["iterbridge"]]],[11,"into_par_iter","","",10,[[],["t"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"into_iter","","",37,[[],["i"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"into_iter","","",38,[[],["i"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"par_bridge","","",38,[[],["iterbridge"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"into_iter","","",39,[[],["i"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"par_bridge","","",39,[[],["iterbridge"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"into_iter","","",40,[[],["i"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"into_iter","","",41,[[],["i"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"par_bridge","","",41,[[],["iterbridge"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"into_iter","","",42,[[],["i"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"par_bridge","","",42,[[],["iterbridge"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"into_iter","","",43,[[],["i"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"par_bridge","","",43,[[],["iterbridge"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"into_iter","","",44,[[],["i"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"par_bridge","","",44,[[],["iterbridge"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"into_iter","","",45,[[],["i"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"into_iter","","",46,[[],["i"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"par_bridge","","",46,[[],["iterbridge"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"into_iter","","",47,[[],["i"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"par_bridge","","",47,[[],["iterbridge"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"into_iter","","",48,[[],["i"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"into_iter","","",49,[[],["i"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","ndarray::parallel","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"into_par_iter","","",50,[[],["t"]]],[11,"_data_slice","ndarray","",31,[[["self"]],["option"]]],[11,"_data_slice","","",31,[[["self"]],["option"]]],[11,"_data_slice","","",30,[[["self"]],["option"]]],[11,"_data_slice","","",29,[[["self"]],["option"]]],[11,"_data_slice","","",32,[[["self"]],["option"]]],[11,"_data_slice","","",32,[[["self"]],["option"]]],[11,"_data_slice","","",7,[[["self"]],["option"]]],[11,"try_ensure_unique","","",31,[[["arraybase"]]]],[11,"try_is_unique","","",31,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"try_ensure_unique","","",30,[[["arraybase"]]]],[11,"try_is_unique","","",30,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"try_ensure_unique","","",29,[[["arraybase"]]]],[11,"try_is_unique","","",29,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"try_ensure_unique","","",32,[[["arraybase"]]]],[11,"try_is_unique","","",32,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"try_ensure_unique","","",7,[[["arraybase"]]]],[11,"try_is_unique","","",7,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"clone_with_ptr","","",31,[[["self"],["nonnull"]]]],[11,"clone_with_ptr","","",31,[[["self"],["nonnull"]]]],[11,"clone_with_ptr","","",30,[[["self"],["nonnull"]]]],[11,"clone_with_ptr","","",29,[[["self"],["nonnull"]]]],[11,"clone_from_with_ptr","","",29,[[["self"],["self"],["nonnull"]],["nonnull"]]],[11,"clone_with_ptr","","",32,[[["self"],["nonnull"]]]],[11,"clone_with_ptr","","",7,[[["self"],["nonnull"]]]],[11,"into_owned","","",30,[[["arraybase"]],[["ownedrepr"],["arraybase",["ownedrepr"]]]]],[11,"into_owned","","",29,[[["arraybase"]],[["ownedrepr"],["arraybase",["ownedrepr"]]]]],[11,"into_owned","","",32,[[["arraybase"]],[["ownedrepr"],["arraybase",["ownedrepr"]]]]],[11,"into_owned","","",32,[[["arraybase"]],[["ownedrepr"],["arraybase",["ownedrepr"]]]]],[11,"into_owned","","",7,[[["cowrepr"],["arraybase",["cowrepr"]]],[["ownedrepr"],["arraybase",["ownedrepr"]]]]],[11,"new","","",29,[[["vec"]],["self"]]],[11,"into_shared","","",29,[[],["ownedrcrepr"]]],[11,"new","","",30,[[["vec"]],["self"]]],[11,"into_shared","","",30,[[],["ownedrcrepr"]]],[11,"into_shape","","",13,[[],["shape"]]],[11,"f","","",13,[[],["self"]]],[11,"set_f","","",13,[[["bool"]],["self"]]],[11,"strides","","",13,[[["d"]],["strideshape"]]],[11,"contiguous_stride","ndarray::iter","",35,[[["self"]]]],[11,"contiguous_stride","","",9,[[["self"]],["isize"]]],[11,"contiguous_stride","","",10,[[["self"]],["isize"]]],[11,"contiguous_stride","ndarray","",51,[[["self"]]]],[11,"contiguous_stride","","",52,[[["self"]]]],[11,"contiguous_stride","","",53,[[["self"]]]],[11,"contiguous_stride","","",54,[[["self"]]]],[11,"into_dimension","","",55,[[],["ix1"]]],[11,"into_dimension","","",28,[[]]],[11,"ndim","","",16,[[["self"]],["usize"]]],[11,"slice","","",16,[[["self"]]]],[11,"slice_mut","","",16,[[["self"]]]],[11,"_fastest_varying_stride_order","","",16,[[["self"]],["self"]]],[11,"into_pattern","","",16,[[]]],[11,"zeros","","",16,[[["usize"]],["self"]]],[11,"next_for","","",16,[[["self"]],["option"]]],[11,"insert_axis","","",16,[[["axis"],["self"]]]],[11,"try_remove_axis","","",16,[[["axis"],["self"]]]],[11,"ndim","","",16,[[["self"]],["usize"]]],[11,"slice","","",16,[[["self"]]]],[11,"slice_mut","","",16,[[["self"]]]],[11,"into_pattern","","",16,[[]]],[11,"zeros","","",16,[[["usize"]],["self"]]],[11,"next_for","","",16,[[["self"]],["option"]]],[11,"equal","","",16,[[["self"]],["bool"]]],[11,"size","","",16,[[["self"]],["usize"]]],[11,"size_checked","","",16,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"default_strides","","",16,[[["self"]],["self"]]],[11,"_fastest_varying_stride_order","","",16,[[["self"]],["self"]]],[11,"min_stride_axis","","",16,[[["self"]],["axis"]]],[11,"max_stride_axis","","",16,[[["self"]],["axis"]]],[11,"first_index","","",16,[[["self"]],["option"]]],[11,"stride_offset","","Self is an index, return the stride offset",16,[[["self"]],["isize"]]],[11,"stride_offset_checked","","Return stride offset for this dimension and index.",16,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"insert_axis","","",16,[[["axis"],["self"]]]],[11,"try_remove_axis","","",16,[[["axis"],["self"]]]],[11,"ndim","","",16,[[["self"]],["usize"]]],[11,"into_pattern","","",16,[[]]],[11,"slice","","",16,[[["self"]]]],[11,"slice_mut","","",16,[[["self"]]]],[11,"zeros","","",16,[[["usize"]],["self"]]],[11,"next_for","","",16,[[["self"]],["option"]]],[11,"equal","","",16,[[["self"]],["bool"]]],[11,"size","","",16,[[["self"]],["usize"]]],[11,"size_checked","","",16,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"last_elem","","",16,[[["self"]],["usize"]]],[11,"set_last_elem","","",16,[[["self"],["usize"]]]],[11,"default_strides","","",16,[[["self"]],["self"]]],[11,"fortran_strides","","",16,[[["self"]],["self"]]],[11,"_fastest_varying_stride_order","","",16,[[["self"]],["self"]]],[11,"min_stride_axis","","",16,[[["self"]],["axis"]]],[11,"first_index","","",16,[[["self"]],["option"]]],[11,"stride_offset","","Self is an index, return the stride offset",16,[[["self"]],["isize"]]],[11,"stride_offset_checked","","Return stride offset for this dimension and index.",16,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"insert_axis","","",16,[[["axis"],["self"]]]],[11,"try_remove_axis","","",16,[[["axis"],["self"]]]],[11,"ndim","","",16,[[["self"]],["usize"]]],[11,"into_pattern","","",16,[[]]],[11,"slice","","",16,[[["self"]]]],[11,"slice_mut","","",16,[[["self"]]]],[11,"size","","",16,[[["self"]],["usize"]]],[11,"zeros","","",16,[[["usize"]],["self"]]],[11,"next_for","","",16,[[["self"]],["option"]]],[11,"stride_offset","","Self is an index, return the stride offset",16,[[["self"]],["isize"]]],[11,"stride_offset_checked","","Return stride offset for this dimension and index.",16,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"_fastest_varying_stride_order","","",16,[[["self"]],["self"]]],[11,"insert_axis","","",16,[[["axis"],["self"]]]],[11,"try_remove_axis","","",16,[[["axis"],["self"]]]],[11,"ndim","","",16,[[["self"]],["usize"]]],[11,"into_pattern","","",16,[[]]],[11,"slice","","",16,[[["self"]]]],[11,"slice_mut","","",16,[[["self"]]]],[11,"zeros","","",16,[[["usize"]],["self"]]],[11,"insert_axis","","",16,[[["axis"],["self"]]]],[11,"try_remove_axis","","",16,[[["axis"],["self"]]]],[11,"ndim","","",16,[[["self"]],["usize"]]],[11,"into_pattern","","",16,[[]]],[11,"slice","","",16,[[["self"]]]],[11,"slice_mut","","",16,[[["self"]]]],[11,"zeros","","",16,[[["usize"]],["self"]]],[11,"insert_axis","","",16,[[["axis"],["self"]]]],[11,"try_remove_axis","","",16,[[["axis"],["self"]]]],[11,"ndim","","",16,[[["self"]],["usize"]]],[11,"into_pattern","","",16,[[]]],[11,"slice","","",16,[[["self"]]]],[11,"slice_mut","","",16,[[["self"]]]],[11,"zeros","","",16,[[["usize"]],["self"]]],[11,"insert_axis","","",16,[[["axis"],["self"]]]],[11,"try_remove_axis","","",16,[[["axis"],["self"]]]],[11,"ndim","","",56,[[["self"]],["usize"]]],[11,"slice","","",56,[[["self"]]]],[11,"slice_mut","","",56,[[["self"]]]],[11,"into_pattern","","",56,[[]]],[11,"zeros","","",56,[[["usize"]],["self"]]],[11,"insert_axis","","",56,[[["axis"],["self"]]]],[11,"try_remove_axis","","",56,[[["axis"],["self"]]]],[11,"from_dimension","","",56,[[["d2"]],["option"]]],[11,"index_checked","","",55,[[["ix1"],["self"]],[["isize"],["option",["isize"]]]]],[11,"index_unchecked","","",55,[[["ix1"],["self"]],["isize"]]],[11,"index_checked","","",55,[[["ixdyn"],["self"]],[["isize"],["option",["isize"]]]]],[11,"index_unchecked","","",55,[[["ixdyn"],["self"]],["isize"]]],[11,"index_checked","","",16,[[["ixdyn"],["self"]],[["isize"],["option",["isize"]]]]],[11,"index_unchecked","","",16,[[["ixdyn"],["self"]],["isize"]]],[11,"index_checked","","",16,[[["ixdyn"],["self"]],[["isize"],["option",["isize"]]]]],[11,"index_unchecked","","",16,[[["ixdyn"],["self"]],["isize"]]],[11,"index_checked","","",16,[[["ixdyn"],["self"]],[["isize"],["option",["isize"]]]]],[11,"index_unchecked","","",16,[[["ixdyn"],["self"]],["isize"]]],[11,"index_checked","","",16,[[["ixdyn"],["self"]],[["isize"],["option",["isize"]]]]],[11,"index_unchecked","","",16,[[["ixdyn"],["self"]],["isize"]]],[11,"index_checked","","",16,[[["ixdyn"],["self"]],[["isize"],["option",["isize"]]]]],[11,"index_unchecked","","",16,[[["ixdyn"],["self"]],["isize"]]],[11,"index_checked","","",16,[[["ixdyn"],["self"]],[["isize"],["option",["isize"]]]]],[11,"index_unchecked","","",16,[[["ixdyn"],["self"]],["isize"]]],[11,"index_checked","","",16,[[["ixdyn"],["self"]],[["isize"],["option",["isize"]]]]],[11,"index_unchecked","","",16,[[["ixdyn"],["self"]],["isize"]]],[11,"remove_axis","","",16,[[["axis"],["self"]],["self"]]],[11,"remove_axis","","",16,[[["axis"],["self"]],["ix0"]]],[11,"remove_axis","","",16,[[["axis"],["self"]],["ix1"]]],[11,"remove_axis","","",16,[[["axis"],["self"]]]],[11,"remove_axis","","",16,[[["axis"],["self"]]]],[11,"remove_axis","","",16,[[["axis"],["self"]]]],[11,"remove_axis","","",16,[[["axis"],["self"]]]],[11,"dot","","Compute the dot product of one-dimensional arrays.",17,[[["self"],["arraybase"]],["a"]]],[11,"dot","","Perform the matrix multiplication of the row vector `self`…",17,[[["self"],["arraybase"]],[["array",["ix1"]],["ix1"]]]],[11,"dot","","",17,[[["self"],["arraybase"]],["array2"]]],[11,"dot","","",17,[[["self"],["arraybase"]],[["array",["ix1"]],["ix1"]]]],[11,"index","","Convert a mutable array view to a mutable reference of a…",52,[[["i"]],["a"]]],[11,"get","","Convert a mutable array view to a mutable reference of a…",52,[[["i"]],[["option"],["a"]]]],[11,"uget","","Convert a mutable array view to a mutable reference of a…",52,[[["i"]],["a"]]],[11,"as_ref","","",14,[[["self"]]]],[11,"as_ref","","",14,[[["self"]],["sliceinfo"]]],[11,"from","","Create a one-dimensional array from a vector (no copying…",17,[[["vec"]],["self"]]],[11,"from","","Create a one-dimensional read-only array view of the data…",51,[[["slice"]],["self"]]],[11,"from","","Create a read-only array view of the array.",51,[[["arraybase"]],["self"]]],[11,"from","","Create a one-dimensional read-write array view of the data…",52,[[["slice"]],["self"]]],[11,"from","","Create a read-write array view of the array.",52,[[["arraybase"]],["self"]]],[11,"from","","Converts the `Vec` of arrays to an owned 2-D array.",57,[[["vec"]],["self"]]],[11,"from","","Converts the `Vec` of arrays to an owned 3-D array.",58,[[["vec"]],["self"]]],[11,"from","","Create a `Shape` from `dimension`, using the default…",13,[[["d"]],["shape"]]],[11,"from","","",33,[[["t"]],["self"]]],[11,"from","","",2,[[["range",["isize"]],["isize"]],["slice"]]],[11,"from","","",2,[[["rangeinclusive",["isize"]],["isize"]],["slice"]]],[11,"from","","",2,[[["rangefrom",["isize"]],["isize"]],["slice"]]],[11,"from","","",2,[[["isize"],["rangeto",["isize"]]],["slice"]]],[11,"from","","",2,[[["rangetoinclusive",["isize"]],["isize"]],["slice"]]],[11,"from","","",2,[[["range",["usize"]],["usize"]],["slice"]]],[11,"from","","",2,[[["rangeinclusive",["usize"]],["usize"]],["slice"]]],[11,"from","","",2,[[["usize"],["rangefrom",["usize"]]],["slice"]]],[11,"from","","",2,[[["usize"],["rangeto",["usize"]]],["slice"]]],[11,"from","","",2,[[["usize"],["rangetoinclusive",["usize"]]],["slice"]]],[11,"from","","",2,[[["range",["i32"]],["i32"]],["slice"]]],[11,"from","","",2,[[["rangeinclusive",["i32"]],["i32"]],["slice"]]],[11,"from","","",2,[[["rangefrom",["i32"]],["i32"]],["slice"]]],[11,"from","","",2,[[["rangeto",["i32"]],["i32"]],["slice"]]],[11,"from","","",2,[[["rangetoinclusive",["i32"]],["i32"]],["slice"]]],[11,"from","","",4,[[["range",["isize"]],["isize"]],["sliceorindex"]]],[11,"from","","",4,[[["rangeinclusive",["isize"]],["isize"]],["sliceorindex"]]],[11,"from","","",4,[[["rangefrom",["isize"]],["isize"]],["sliceorindex"]]],[11,"from","","",4,[[["isize"],["rangeto",["isize"]]],["sliceorindex"]]],[11,"from","","",4,[[["rangetoinclusive",["isize"]],["isize"]],["sliceorindex"]]],[11,"from","","",4,[[["range",["usize"]],["usize"]],["sliceorindex"]]],[11,"from","","",4,[[["rangeinclusive",["usize"]],["usize"]],["sliceorindex"]]],[11,"from","","",4,[[["usize"],["rangefrom",["usize"]]],["sliceorindex"]]],[11,"from","","",4,[[["usize"],["rangeto",["usize"]]],["sliceorindex"]]],[11,"from","","",4,[[["usize"],["rangetoinclusive",["usize"]]],["sliceorindex"]]],[11,"from","","",4,[[["range",["i32"]],["i32"]],["sliceorindex"]]],[11,"from","","",4,[[["rangeinclusive",["i32"]],["i32"]],["sliceorindex"]]],[11,"from","","",4,[[["rangefrom",["i32"]],["i32"]],["sliceorindex"]]],[11,"from","","",4,[[["rangeto",["i32"]],["i32"]],["sliceorindex"]]],[11,"from","","",4,[[["rangetoinclusive",["i32"]],["i32"]],["sliceorindex"]]],[11,"from","","",2,[[["rangefull"]],["slice"]]],[11,"from","","",4,[[["rangefull"]],["sliceorindex"]]],[11,"from","","",4,[[["slice"]],["sliceorindex"]]],[11,"from","","",4,[[["isize"]],["sliceorindex"]]],[11,"from","","",4,[[["usize"]],["sliceorindex"]]],[11,"from","","",4,[[["i32"]],["sliceorindex"]]],[11,"from","","",28,[[],["self"]]],[11,"from","","",28,[[["vec",["ix"]],["ix"]],["self"]]],[11,"from","","",59,[[["arrayview"]],["cowarray"]]],[11,"from","","",59,[[["array"]],["cowarray"]]],[11,"next_back","ndarray::iter","",43,[[["self"]],[["a"],["option"]]]],[11,"nth_back","","",43,[[["self"],["usize"]],[["a"],["option"]]]],[11,"rfold","","",43,[[["acc"],["g"]],["acc"]]],[11,"next_back","","",44,[[["self"]],[["option"],["a"]]]],[11,"nth_back","","",44,[[["self"],["usize"]],[["option"],["a"]]]],[11,"rfold","","",44,[[["acc"],["g"]],["acc"]]],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",11,[[["self"]],["option"]]],[11,"next_back","","",12,[[["self"]],["option"]]],[11,"next_back","","",34,[[["self"]],["option"]]],[11,"len","","",43,[[["self"]],["usize"]]],[11,"len","","",41,[[["self"]],["usize"]]],[11,"len","","",44,[[["self"]],["usize"]]],[11,"len","","",42,[[["self"]],["usize"]]],[11,"len","","",46,[[["self"]],["usize"]]],[11,"len","","",47,[[["self"]],["usize"]]],[11,"len","","",9,[[["self"]],["usize"]]],[11,"len","","",10,[[["self"]],["usize"]]],[11,"into_iter","ndarray","",51,[[]]],[11,"into_iter","","",52,[[]]],[11,"into_iter","ndarray::iter","",35,[[]]],[11,"into_iter","","",37,[[]]],[11,"into_iter","","",40,[[]]],[11,"into_iter","","",45,[[]]],[11,"into_iter","","",48,[[]]],[11,"into_iter","","",49,[[]]],[11,"next","","",36,[[["self"]],["option"]]],[11,"size_hint","","",36,[[["self"]]]],[11,"next","","",38,[[["self"]],["option"]]],[11,"size_hint","","",38,[[["self"]]]],[11,"next","","",39,[[["self"]],["option"]]],[11,"size_hint","","",39,[[["self"]]]],[11,"next","","",43,[[["self"]],[["a"],["option"]]]],[11,"size_hint","","",43,[[["self"]]]],[11,"fold","","",43,[[["acc"],["g"]],["acc"]]],[11,"nth","","",43,[[["self"],["usize"]],["option"]]],[11,"collect","","",43,[[],["b"]]],[11,"all","","",43,[[["self"],["f"]],["bool"]]],[11,"any","","",43,[[["self"],["f"]],["bool"]]],[11,"find","","",43,[[["self"],["p"]],["option"]]],[11,"find_map","","",43,[[["self"],["f"]],["option"]]],[11,"count","","",43,[[],["usize"]]],[11,"last","","",43,[[],["option"]]],[11,"position","","",43,[[["self"],["p"]],[["option",["usize"]],["usize"]]]],[11,"next","","",41,[[["self"]],["option"]]],[11,"size_hint","","",41,[[["self"]]]],[11,"next","","",44,[[["self"]],[["option"],["a"]]]],[11,"size_hint","","",44,[[["self"]]]],[11,"fold","","",44,[[["acc"],["g"]],["acc"]]],[11,"nth","","",44,[[["self"],["usize"]],["option"]]],[11,"collect","","",44,[[],["b"]]],[11,"all","","",44,[[["self"],["f"]],["bool"]]],[11,"any","","",44,[[["self"],["f"]],["bool"]]],[11,"find","","",44,[[["self"],["p"]],["option"]]],[11,"find_map","","",44,[[["self"],["f"]],["option"]]],[11,"count","","",44,[[],["usize"]]],[11,"last","","",44,[[],["option"]]],[11,"position","","",44,[[["self"],["p"]],[["option",["usize"]],["usize"]]]],[11,"next","","",42,[[["self"]],["option"]]],[11,"size_hint","","",42,[[["self"]]]],[11,"next","","",46,[[["self"]],["option"]]],[11,"size_hint","","",46,[[["self"]]]],[11,"next","","",47,[[["self"]],["option"]]],[11,"size_hint","","",47,[[["self"]]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,[[["self"]]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,[[["self"]]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,[[["self"]]]],[11,"next","","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,[[["self"]]]],[11,"next","","",34,[[["self"]],["option"]]],[11,"fold","","",34,[[["b"],["f"]],["b"]]],[11,"size_hint","","",34,[[["self"]]]],[11,"clone","ndarray","",8,[[["self"]],["shapeerror"]]],[11,"clone","","",3,[[["self"]],["errorkind"]]],[11,"clone","ndarray::iter","",36,[[["self"]],["indicesiter"]]],[11,"clone","","",35,[[["self"]],["indices"]]],[11,"clone","","",37,[[["self"]],["self"]]],[11,"clone","","",38,[[["self"]],["self"]]],[11,"clone","","",45,[[["self"]],["self"]]],[11,"clone","","",49,[[["self"]],["self"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","","",41,[[["self"]],["indexediter"]]],[11,"clone","","",46,[[["self"]],["self"]]],[11,"clone","","",9,[[["self"]],["self"]]],[11,"clone","","",11,[[["self"]],["self"]]],[11,"clone","ndarray","",2,[[["self"]],["slice"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"clone","","",14,[[["self"]],["self"]]],[11,"clone","","",15,[[["self"]],["zip"]]],[11,"clone","","",6,[[["self"]],["foldwhile"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","ndarray::iter","",34,[[["self"]],["self"]]],[11,"clone","ndarray","",0,[[["self"]],["axis"]]],[11,"clone","","",16,[[["self"]],["dim"]]],[11,"clone","","",28,[[["self"]],["ixdynimpl"]]],[11,"clone","","",29,[[["self"]],["ownedrepr"]]],[11,"clone","","",30,[[["self"]],["self"]]],[11,"clone","","",31,[[["self"]],["rawviewrepr"]]],[11,"clone","","",32,[[["self"]],["viewrepr"]]],[11,"clone","","",17,[[["self"]],["arraybase"]]],[11,"clone_from","","`Array` implements `.clone_from()` to reuse an array's…",17,[[["self"],["self"]]]],[11,"clone","ndarray::parallel","",50,[[["self"]],["parallel"]]],[11,"clone","ndarray","",13,[[["self"]],["shape"]]],[11,"clone","","",33,[[["self"]],["strideshape"]]],[11,"default","","",17,[[],["self"]]],[11,"default","","",16,[[],["dim"]]],[11,"default","","",28,[[],["ixdynimpl"]]],[11,"cmp","","",0,[[["axis"],["self"]],["ordering"]]],[11,"eq","","",17,[[["arraybase"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"]],["bool"]]],[11,"eq","","",8,[[["self"]],["bool"]]],[11,"eq","","",2,[[["slice"],["self"]],["bool"]]],[11,"ne","","",2,[[["slice"],["self"]],["bool"]]],[11,"eq","","",4,[[["sliceorindex"],["self"]],["bool"]]],[11,"ne","","",4,[[["sliceorindex"],["self"]],["bool"]]],[11,"eq","","",0,[[["axis"],["self"]],["bool"]]],[11,"ne","","",0,[[["axis"],["self"]],["bool"]]],[11,"eq","","",16,[[["self"],["dim"]],["bool"]]],[11,"ne","","",16,[[["self"],["dim"]],["bool"]]],[11,"eq","","",16,[[["i"],["self"]],["bool"]]],[11,"eq","","",28,[[["ixdynimpl"],["self"]],["bool"]]],[11,"ne","","",28,[[["ixdynimpl"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["axis"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["axis"],["self"]],["bool"]]],[11,"le","","",0,[[["axis"],["self"]],["bool"]]],[11,"gt","","",0,[[["axis"],["self"]],["bool"]]],[11,"ge","","",0,[[["axis"],["self"]],["bool"]]],[11,"deref","","",14,[[["self"]]]],[11,"deref","","",28,[[["self"]]]],[11,"deref_mut","","",28,[[["self"]]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","ndarray::iter","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","ndarray","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","ndarray::iter","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","ndarray","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","ndarray::parallel","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","ndarray","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"div","","",17,[[["arraybase"]],["arraybase"]]],[11,"div","","",17,[[["arraybase"]],["arraybase"]]],[11,"div","","",17,[[["b"]],["arraybase"]]],[11,"rem","","",17,[[["arraybase"]],["arraybase"]]],[11,"rem","","",17,[[["arraybase"]],["arraybase"]]],[11,"rem","","",17,[[["b"]],["arraybase"]]],[11,"sub","","",16,[[],["self"]]],[11,"sub","","",16,[[["ix"]],["self"]]],[11,"sub","","",17,[[["arraybase"]],["arraybase"]]],[11,"sub","","",17,[[["arraybase"]],["arraybase"]]],[11,"sub","","",17,[[["b"]],["arraybase"]]],[11,"add","","",16,[[],["self"]]],[11,"add","","",16,[[["ix"]],["self"]]],[11,"add","","",17,[[["arraybase"]],["arraybase"]]],[11,"add","","",17,[[["arraybase"]],["arraybase"]]],[11,"add","","",17,[[["b"]],["arraybase"]]],[11,"mul","","",16,[[],["self"]]],[11,"mul","","",16,[[["ix"]],["self"]]],[11,"mul","","",17,[[["arraybase"]],["arraybase"]]],[11,"mul","","",17,[[["arraybase"]],["arraybase"]]],[11,"mul","","",17,[[["b"]],["arraybase"]]],[11,"neg","","Perform an elementwise negation of `self` and return the…",17,[[],["self"]]],[11,"add_assign","","",16,[[["self"]]]],[11,"add_assign","","",16,[[["self"],["self"]]]],[11,"add_assign","","",16,[[["self"],["ix"]]]],[11,"add_assign","","",17,[[["self"],["arraybase"]]]],[11,"add_assign","","",17,[[["a"],["self"]]]],[11,"sub_assign","","",16,[[["self"]]]],[11,"sub_assign","","",16,[[["self"],["self"]]]],[11,"sub_assign","","",16,[[["self"],["ix"]]]],[11,"sub_assign","","",17,[[["self"],["arraybase"]]]],[11,"sub_assign","","",17,[[["a"],["self"]]]],[11,"mul_assign","","",16,[[["self"]]]],[11,"mul_assign","","",16,[[["self"],["self"]]]],[11,"mul_assign","","",16,[[["self"],["ix"]]]],[11,"mul_assign","","",17,[[["self"],["arraybase"]]]],[11,"mul_assign","","",17,[[["a"],["self"]]]],[11,"div_assign","","",17,[[["self"],["arraybase"]]]],[11,"div_assign","","",17,[[["a"],["self"]]]],[11,"rem_assign","","",17,[[["self"],["arraybase"]]]],[11,"rem_assign","","",17,[[["a"],["self"]]]],[11,"not","","Perform an elementwise unary not of `self` and return the…",17,[[],["self"]]],[11,"bitand","","",17,[[["arraybase"]],["arraybase"]]],[11,"bitand","","",17,[[["arraybase"]],["arraybase"]]],[11,"bitand","","",17,[[["b"]],["arraybase"]]],[11,"bitor","","",17,[[["arraybase"]],["arraybase"]]],[11,"bitor","","",17,[[["arraybase"]],["arraybase"]]],[11,"bitor","","",17,[[["b"]],["arraybase"]]],[11,"bitxor","","",17,[[["arraybase"]],["arraybase"]]],[11,"bitxor","","",17,[[["arraybase"]],["arraybase"]]],[11,"bitxor","","",17,[[["b"]],["arraybase"]]],[11,"shl","","",17,[[["arraybase"]],["arraybase"]]],[11,"shl","","",17,[[["arraybase"]],["arraybase"]]],[11,"shl","","",17,[[["b"]],["arraybase"]]],[11,"shr","","",17,[[["arraybase"]],["arraybase"]]],[11,"shr","","",17,[[["arraybase"]],["arraybase"]]],[11,"shr","","",17,[[["b"]],["arraybase"]]],[11,"bitand_assign","","",17,[[["self"],["arraybase"]]]],[11,"bitand_assign","","",17,[[["a"],["self"]]]],[11,"bitor_assign","","",17,[[["self"],["arraybase"]]]],[11,"bitor_assign","","",17,[[["a"],["self"]]]],[11,"bitxor_assign","","",17,[[["self"],["arraybase"]]]],[11,"bitxor_assign","","",17,[[["a"],["self"]]]],[11,"shl_assign","","",17,[[["self"],["arraybase"]]]],[11,"shl_assign","","",17,[[["a"],["self"]]]],[11,"shr_assign","","",17,[[["self"],["arraybase"]]]],[11,"shr_assign","","",17,[[["a"],["self"]]]],[11,"index","","",17,[[["i"],["self"]]]],[11,"index","","",16,[[["self"],["usize"]]]],[11,"index","","",16,[[["self"],["usize"]]]],[11,"index","","",16,[[["self"],["usize"]]]],[11,"index","","",16,[[["self"],["usize"]]]],[11,"index","","",16,[[["self"],["usize"]]]],[11,"index","","",16,[[["self"],["usize"]]]],[11,"index","","",16,[[["self"],["usize"]]]],[11,"index","","",16,[[["self"],["usize"]]]],[11,"index","","",28,[[["j"],["self"]]]],[11,"index_mut","","",17,[[["self"],["i"]]]],[11,"index_mut","","",16,[[["self"],["usize"]]]],[11,"index_mut","","",16,[[["self"],["usize"]]]],[11,"index_mut","","",16,[[["self"],["usize"]]]],[11,"index_mut","","",16,[[["self"],["usize"]]]],[11,"index_mut","","",16,[[["self"],["usize"]]]],[11,"index_mut","","",16,[[["self"],["usize"]]]],[11,"index_mut","","",16,[[["self"],["usize"]]]],[11,"index_mut","","",16,[[["self"],["usize"]]]],[11,"index_mut","","",28,[[["j"],["self"]]]],[11,"hash","","",17,[[["self"],["h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",16,[[["self"],["__h"]]]],[11,"hash","","",28,[[["self"],["__h"]]]],[11,"from_iter","","Create a one-dimensional array from an iterable.",17,[[["i"]],[["arraybase",["ix1"]],["ix1"]]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"description","","",8,[[["self"]],["str"]]],[11,"serialize","","",16,[[["self"],["se"]],["result"]]],[11,"serialize","","",56,[[["self"],["se"]],["result"]]],[11,"serialize","","",17,[[["self"],["se"]],["result"]]],[11,"deserialize","","",16,[[["d"]],["result"]]],[11,"deserialize","","",56,[[["d"]],["result"]]],[11,"deserialize","","",17,[[["d"]],[["result",["arraybase"]],["arraybase"]]]],[11,"zero","","",16,[[],["self"]]],[11,"is_zero","","",16,[[["self"]],["bool"]]],[11,"zero","","",16,[[],["self"]]],[11,"is_zero","","",16,[[["self"]],["bool"]]],[11,"zero","","",16,[[],["self"]]],[11,"is_zero","","",16,[[["self"]],["bool"]]],[11,"zero","","",16,[[],["self"]]],[11,"is_zero","","",16,[[["self"]],["bool"]]],[11,"zero","","",16,[[],["self"]]],[11,"is_zero","","",16,[[["self"]],["bool"]]],[11,"zero","","",16,[[],["self"]]],[11,"is_zero","","",16,[[["self"]],["bool"]]],[11,"zero","","",16,[[],["self"]]],[11,"is_zero","","",16,[[["self"]],["bool"]]],[11,"with_producer","ndarray::parallel","",50,[[["cb"]]]],[11,"len","","",50,[[["self"]],["usize"]]],[11,"drive","","",50,[[["c"]]]],[11,"with_producer","","",50,[[["cb"]]]],[11,"len","","",50,[[["self"]],["usize"]]],[11,"drive","","",50,[[["c"]]]],[11,"with_producer","","",50,[[["cb"]]]],[11,"len","","",50,[[["self"]],["usize"]]],[11,"drive","","",50,[[["c"]]]],[11,"with_producer","","",50,[[["cb"]]]],[11,"len","","",50,[[["self"]],["usize"]]],[11,"drive","","",50,[[["c"]]]],[11,"into_par_iter","ndarray::iter","",9,[[]]],[11,"into_par_iter","","",10,[[]]],[11,"into_par_iter","","",11,[[]]],[11,"into_par_iter","","",12,[[]]],[11,"into_par_iter","ndarray","",51,[[]]],[11,"into_par_iter","","",52,[[]]],[11,"into_par_iter","","",15,[[]]],[11,"into_par_iter","","",15,[[]]],[11,"into_par_iter","","",15,[[]]],[11,"into_par_iter","","",15,[[]]],[11,"into_par_iter","","",15,[[]]],[11,"into_par_iter","","",15,[[]]],[11,"drive_unindexed","ndarray::parallel","",50,[[["c"]]]],[11,"opt_len","","",50,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",50,[[["c"]]]],[11,"opt_len","","",50,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",50,[[["c"]]]],[11,"opt_len","","",50,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",50,[[["c"]]]],[11,"opt_len","","",50,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",50,[[["c"]]]],[11,"opt_len","","",50,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",50,[[["c"]]]],[11,"opt_len","","",50,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",50,[[["cons"]]]],[11,"opt_len","","",50,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",50,[[["cons"]]]],[11,"opt_len","","",50,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",50,[[["cons"]]]],[11,"opt_len","","",50,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",50,[[["cons"]]]],[11,"opt_len","","",50,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",50,[[["cons"]]]],[11,"opt_len","","",50,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",50,[[["cons"]]]],[11,"opt_len","","",50,[[["self"]],[["option",["usize"]],["usize"]]]],[18,"NDIM","ndarray","For fixed-size dimension representations (e.g. `Ix2`),…",19,null],[11,"size","","Compute the size of the dimension (number of elements)",19,[[["self"]],["usize"]]],[11,"size_checked","","Compute the size while checking for overflow.",19,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"as_array_view","","Borrow as a read-only array view.",19,[[["self"]],[["ix"],["arrayview1",["ix"]]]]],[11,"as_array_view_mut","","Borrow as a read-write array view.",19,[[["self"]],[["arrayviewmut1",["ix"]],["ix"]]]],[11,"into_dyn","","Convert the dimensional into a dynamic dimensional (IxDyn).",19,[[],["ixdyn"]]],[11,"zeros","","Create a new dimension value with `n` axes, all zeros",56,[[["usize"]],["ixdyn"]]],[11,"into_scalar","","Returns the single element in the array without cloning it.",60,[[],["a"]]],[11,"into_raw_vec","","Return a vector of the elements in the array, in the way…",60,[[],["vec"]]],[11,"from_shape","","Create a read-only array view borrowing its data from a…",51,[[["sh"]],[["result",["shapeerror"]],["shapeerror"]]]],[11,"from_shape_ptr","","Create an `ArrayView<A, D>` from shape information and a…",51,[[["sh"]],["self"]]],[11,"from_shape","","Create a read-write array view borrowing its data from a…",52,[[["sh"]],[["result",["shapeerror"]],["shapeerror"]]]],[11,"from_shape_ptr","","Create an `ArrayViewMut<A, D>` from shape information and…",52,[[["sh"]],["self"]]],[11,"reborrow","","Convert the view into an `ArrayViewMut<'b, A, D>` where…",52,[[],["arrayviewmut"]]],[11,"reborrow","","Convert the view into an `ArrayView<'b, A, D>` where `'b`…",51,[[],["arrayview"]]],[11,"into_slice","","Return the array’s data as a slice, if it is contiguous…",51,[[["self"]],["option"]]],[11,"to_slice","","Return the array’s data as a slice, if it is contiguous…",51,[[["self"]],["option"]]],[11,"into_scalar","","Consume the view and return a reference to the single…",51,[[],["a"]]],[11,"into_scalar","","Consume the mutable view and return a mutable reference to…",52,[[],["a"]]],[11,"into_slice","","Return the array’s data as a slice, if it is contiguous…",52,[[],["option"]]],[11,"split_at","","Split the array view along `axis` and return one view…",51,[[["axis"],["ix"]]]],[11,"split_at","","Split the array view along `axis` and return one mutable…",52,[[["axis"],["ix"]]]],[11,"from_shape_ptr","","Create an `RawArrayView<A, D>` from shape information and…",53,[[["sh"]],["self"]]],[11,"deref_into_view","","Converts to a read-only view of the array.",53,[[],["arrayview"]]],[11,"split_at","","Split the array view along `axis` and return one array…",53,[[["axis"],["ix"]]]],[11,"from_shape_ptr","","Create an `RawArrayViewMut<A, D>` from shape information…",54,[[["sh"]],["self"]]],[11,"deref_into_view","","Converts to a read-only view of the array.",54,[[],["arrayview"]]],[11,"deref_into_view_mut","","Converts to a mutable view of the array.",54,[[],["arrayviewmut"]]],[11,"split_at","","Split the array view along `axis` and return one array…",54,[[["axis"],["ix"]]]],[11,"is_view","","Returns `true` iff the array is the view (borrowed) variant.",59,[[["self"]],["bool"]]],[11,"is_owned","","Returns `true` iff the array is the owned variant.",59,[[["self"]],["bool"]]]],"p":[[3,"Axis"],[3,"AxisDescription"],[3,"Slice"],[4,"ErrorKind"],[4,"SliceOrIndex"],[13,"Slice"],[4,"FoldWhile"],[4,"CowRepr"],[3,"ShapeError"],[3,"AxisIter"],[3,"AxisIterMut"],[3,"AxisChunksIter"],[3,"AxisChunksIterMut"],[3,"Shape"],[3,"SliceInfo"],[3,"Zip"],[3,"Dim"],[3,"ArrayBase"],[8,"Dot"],[8,"Dimension"],[8,"IntoDimension"],[8,"RemoveAxis"],[8,"IndexLonger"],[8,"ShapeBuilder"],[8,"RawData"],[8,"FixedInitializer"],[8,"IntoNdProducer"],[8,"NdProducer"],[3,"IxDynImpl"],[3,"OwnedRepr"],[3,"OwnedArcRepr"],[3,"RawViewRepr"],[3,"ViewRepr"],[3,"StrideShape"],[3,"Axes"],[3,"Indices"],[3,"IndicesIter"],[3,"ExactChunks"],[3,"ExactChunksIter"],[3,"ExactChunksIterMut"],[3,"ExactChunksMut"],[3,"IndexedIter"],[3,"IndexedIterMut"],[3,"Iter"],[3,"IterMut"],[3,"Lanes"],[3,"LanesIter"],[3,"LanesIterMut"],[3,"LanesMut"],[3,"Windows"],[3,"Parallel"],[6,"ArrayView"],[6,"ArrayViewMut"],[6,"RawArrayView"],[6,"RawArrayViewMut"],[6,"Ix"],[6,"IxDyn"],[6,"Array2"],[6,"Array3"],[6,"CowArray"],[6,"Array"]]};
searchIndex["num_complex"] = {"doc":"Complex numbers.","i":[[3,"Complex","num_complex","A complex number in Cartesian form.",null,null],[12,"re","","Real portion of the complex number",0,null],[12,"im","","Imaginary portion of the complex number",0,null],[3,"ParseComplexError","","",null,null],[6,"Complex32","","",null,null],[6,"Complex64","","",null,null],[11,"new","","Create a new Complex",0,[[["t"]],["self"]]],[11,"i","","Returns imaginary unit",0,[[],["self"]]],[11,"norm_sqr","","Returns the square of the norm (since `T` doesn't…",0,[[["self"]],["t"]]],[11,"scale","","Multiplies `self` by the scalar `t`.",0,[[["self"],["t"]],["self"]]],[11,"unscale","","Divides `self` by the scalar `t`.",0,[[["self"],["t"]],["self"]]],[11,"powu","","Raises `self` to an unsigned integer power.",0,[[["u32"],["self"]],["self"]]],[11,"conj","","Returns the complex conjugate. i.e. `re - i im`",0,[[["self"]],["self"]]],[11,"inv","","Returns `1/self`",0,[[["self"]],["self"]]],[11,"powi","","Raises `self` to a signed integer power.",0,[[["self"],["i32"]],["self"]]],[11,"l1_norm","","Returns the L1 norm `|re| + |im|` -- the [Manhattan…",0,[[["self"]],["t"]]],[11,"norm","","Calculate |self|",0,[[["self"]],["t"]]],[11,"arg","","Calculate the principal Arg of self.",0,[[["self"]],["t"]]],[11,"to_polar","","Convert to polar form (r, theta), such that `self = r *…",0,[[["self"]]]],[11,"from_polar","","Convert a polar representation into a complex number.",0,[[["t"]],["self"]]],[11,"exp","","Computes `e^(self)`, where `e` is the base of the natural…",0,[[["self"]],["self"]]],[11,"ln","","Computes the principal value of natural logarithm of `self`.",0,[[["self"]],["self"]]],[11,"sqrt","","Computes the principal value of the square root of `self`.",0,[[["self"]],["self"]]],[11,"cbrt","","Computes the principal value of the cube root of `self`.",0,[[["self"]],["self"]]],[11,"powf","","Raises `self` to a floating point power.",0,[[["self"],["t"]],["self"]]],[11,"log","","Returns the logarithm of `self` with respect to an…",0,[[["self"],["t"]],["self"]]],[11,"powc","","Raises `self` to a complex power.",0,[[["self"]],["self"]]],[11,"expf","","Raises a floating point number to the complex power `self`.",0,[[["self"],["t"]],["self"]]],[11,"sin","","Computes the sine of `self`.",0,[[["self"]],["self"]]],[11,"cos","","Computes the cosine of `self`.",0,[[["self"]],["self"]]],[11,"tan","","Computes the tangent of `self`.",0,[[["self"]],["self"]]],[11,"asin","","Computes the principal value of the inverse sine of `self`.",0,[[["self"]],["self"]]],[11,"acos","","Computes the principal value of the inverse cosine of…",0,[[["self"]],["self"]]],[11,"atan","","Computes the principal value of the inverse tangent of…",0,[[["self"]],["self"]]],[11,"sinh","","Computes the hyperbolic sine of `self`.",0,[[["self"]],["self"]]],[11,"cosh","","Computes the hyperbolic cosine of `self`.",0,[[["self"]],["self"]]],[11,"tanh","","Computes the hyperbolic tangent of `self`.",0,[[["self"]],["self"]]],[11,"asinh","","Computes the principal value of inverse hyperbolic sine of…",0,[[["self"]],["self"]]],[11,"acosh","","Computes the principal value of inverse hyperbolic cosine…",0,[[["self"]],["self"]]],[11,"atanh","","Computes the principal value of inverse hyperbolic tangent…",0,[[["self"]],["self"]]],[11,"finv","","Returns `1/self` using floating-point operations.",0,[[["self"]],["complex"]]],[11,"fdiv","","Returns `self/other` using floating-point operations.",0,[[["complex"],["self"]],["complex"]]],[11,"is_nan","","Checks if the given complex number is NaN",0,[[],["bool"]]],[11,"is_infinite","","Checks if the given complex number is infinite",0,[[],["bool"]]],[11,"is_finite","","Checks if the given complex number is finite",0,[[],["bool"]]],[11,"is_normal","","Checks if the given complex number is normal",0,[[],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",0,[[["t"]],["self"]]],[11,"from","","",0,[[["t"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"div","","",0,[[["complex"]]]],[11,"div","","",0,[[]]],[11,"div","","",0,[[["t"]]]],[11,"div","","",0,[[["t"]]]],[11,"rem","","",0,[[["complex"]]]],[11,"rem","","",0,[[]]],[11,"rem","","",0,[[["t"]]]],[11,"rem","","",0,[[["t"]]]],[11,"sub","","",0,[[["complex"]]]],[11,"sub","","",0,[[]]],[11,"sub","","",0,[[["t"]]]],[11,"sub","","",0,[[["t"]]]],[11,"eq","","",0,[[["complex"],["self"]],["bool"]]],[11,"ne","","",0,[[["complex"],["self"]],["bool"]]],[11,"eq","","",1,[[["parsecomplexerror"],["self"]],["bool"]]],[11,"ne","","",1,[[["parsecomplexerror"],["self"]],["bool"]]],[11,"add","","",0,[[["complex"]]]],[11,"add","","",0,[[]]],[11,"add","","",0,[[["t"]]]],[11,"add","","",0,[[["t"]]]],[11,"mul","","",0,[[["complex"]]]],[11,"mul","","",0,[[]]],[11,"mul","","",0,[[["t"]]]],[11,"mul","","",0,[[["t"]]]],[11,"neg","","",0,[[]]],[11,"add_assign","","",0,[[["self"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"add_assign","","",0,[[["self"],["self"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"],["self"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"],["self"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"],["self"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"],["self"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"product","","",0,[[["i"]],["self"]]],[11,"product","","",0,[[["i"]],["self"]]],[11,"sum","","",0,[[["i"]],["self"]]],[11,"sum","","",0,[[["i"]],["self"]]],[11,"from_str","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[["str"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["complex"]]],[11,"default","","",0,[[],["complex"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"to_usize","","",0,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"to_isize","","",0,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"to_u8","","",0,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16","","",0,[[["self"]],[["u16"],["option",["u16"]]]]],[11,"to_u32","","",0,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"to_u64","","",0,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_i8","","",0,[[["self"]],[["i8"],["option",["i8"]]]]],[11,"to_i16","","",0,[[["self"]],[["option",["i16"]],["i16"]]]],[11,"to_i32","","",0,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"to_i64","","",0,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"to_u128","","",0,[[["self"]],[["u128"],["option",["u128"]]]]],[11,"to_i128","","",0,[[["self"]],[["option",["i128"]],["i128"]]]],[11,"to_f32","","",0,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64","","",0,[[["self"]],[["option",["f64"]],["f64"]]]],[11,"from_usize","","",0,[[["usize"]],["option"]]],[11,"from_isize","","",0,[[["isize"]],["option"]]],[11,"from_u8","","",0,[[["u8"]],["option"]]],[11,"from_u16","","",0,[[["u16"]],["option"]]],[11,"from_u32","","",0,[[["u32"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_i8","","",0,[[["i8"]],["option"]]],[11,"from_i16","","",0,[[["i16"]],["option"]]],[11,"from_i32","","",0,[[["i32"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from","","",0,[[["toprimitive"]],["option"]]],[11,"as_","","",0,[[],["u"]]],[11,"from_str_radix","","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…",0,[[["str"],["u32"]],["result"]]],[11,"zero","","",0,[[],["self"]]],[11,"is_zero","","",0,[[["self"]],["bool"]]],[11,"set_zero","","",0,[[["self"]]]],[11,"one","","",0,[[],["self"]]],[11,"is_one","","",0,[[["self"]],["bool"]]],[11,"set_one","","",0,[[["self"]]]],[11,"inv","","",0,[[]]],[11,"mul_add","","",0,[[["complex"]],["complex"]]],[11,"mul_add_assign","","",0,[[["self"],["complex"]]]],[11,"mul_add_assign","","",0,[[["complex"],["self"]]]],[11,"pow","","",0,[[["f32"]]]],[11,"pow","","",0,[[["f32"]]]],[11,"pow","","",0,[[["f64"]]]],[11,"pow","","",0,[[["f64"]]]],[11,"pow","","",0,[[["complex"]]]],[11,"pow","","",0,[[["complex"]]]]],"p":[[3,"Complex"],[3,"ParseComplexError"]]};
searchIndex["num_cpus"] = {"doc":"A crate with utilities to determine the number of CPUs…","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",null,[[],["usize"]]],[5,"get_physical","","Returns the number of physical cores of the current system.",null,[[],["usize"]]]],"p":[]};
searchIndex["num_integer"] = {"doc":"Integer trait and functions.","i":[[3,"ExtendedGcd","num_integer","Greatest common divisor and Bézout coefficients",null,null],[12,"gcd","","",0,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"IterBinomial","","An iterator over binomial coefficients.",null,null],[5,"cbrt","","Returns the truncated principal cube root of an integer --…",null,[[["roots"]],["roots"]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer…",null,[[["roots"],["u32"]],["roots"]]],[5,"sqrt","","Returns the truncated principal square root of an integer…",null,[[["roots"]],["roots"]]],[5,"div_rem","","Simultaneous integer division and modulus",null,[[["integer"]]]],[5,"div_floor","","Floored integer division",null,[[["integer"]],["integer"]]],[5,"mod_floor","","Floored integer modulus",null,[[["integer"]],["integer"]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,[[["integer"]]]],[5,"div_ceil","","Ceiled integer division",null,[[["integer"]],["integer"]]],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",null,[[["integer"]],["integer"]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",null,[[["integer"]],["integer"]]],[5,"gcd_lcm","","Calculates the Greatest Common Divisor (GCD) and Lowest…",null,[[["integer"]]]],[5,"binomial","","Calculate the binomial coefficient.",null,[[["integer"],["clone"]],[["integer"],["clone"]]]],[5,"multinomial","","Calculate the multinomial coefficient.",null,[[],[["integer"],["clone"]]]],[8,"Roots","","Provides methods to compute an integer's square root, cube…",null,null],[10,"nth_root","","Returns the truncated principal `n`th root of an integer…",1,[[["u32"],["self"]],["self"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[["self"]],["self"]]],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",2,[[["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",2,[[["self"]],["self"]]],[11,"div_ceil","","Ceiled integer division.",2,[[["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",2,[[["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",2,[[["self"]],["self"]]],[11,"gcd_lcm","","Greatest Common Divisor (GCD) and Lowest Common Multiple…",2,[[["self"]]]],[11,"extended_gcd","","Greatest common divisor and Bézout coefficients.",2,[[["self"]],["extendedgcd"]]],[11,"extended_gcd_lcm","","Greatest common divisor, least common multiple, and Bézout…",2,[[["self"]]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",2,[[["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",2,[[["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",2,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",2,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",2,[[["self"]]]],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",2,[[["self"]]]],[11,"next_multiple_of","","Rounds up to nearest multiple of argument.",2,[[["self"]],["self"]]],[11,"prev_multiple_of","","Rounds down to nearest multiple of argument.",2,[[["self"]],["self"]]],[11,"new","","For a given n, iterate over all binomial coefficients…",3,[[["t"]],["iterbinomial"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["extendedgcd"]],["bool"]]],[11,"ne","","",0,[[["self"],["extendedgcd"]],["bool"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"clone","","",0,[[["self"]],["extendedgcd"]]],[11,"sqrt","","Returns the truncated principal square root of an integer…",1,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer --…",1,[[["self"]],["self"]]]],"p":[[3,"ExtendedGcd"],[8,"Roots"],[8,"Integer"],[3,"IterBinomial"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","i":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[5,"clamp","","A value bounded by a minimum and a maximum",null,[[["partialord"]],["partialord"]]],[5,"clamp_min","","A value bounded by a minimum value",null,[[["partialord"]],["partialord"]]],[5,"clamp_max","","A value bounded by a maximum value",null,[[["partialord"]],["partialord"]]],[0,"bounds","","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",2,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",2,[[],["self"]]],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,[[["numcast"]],[["option"],["numcast"]]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`. If the value…",3,[[["self"]],[["isize"],["option",["isize"]]]]],[11,"to_i8","","Converts the value of `self` to an `i8`. If the value…",3,[[["self"]],[["i8"],["option",["i8"]]]]],[11,"to_i16","","Converts the value of `self` to an `i16`. If the value…",3,[[["self"]],[["option",["i16"]],["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`. If the value…",3,[[["self"]],[["option",["i32"]],["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`. If the value…",3,[[["self"]],[["i64"],["option",["i64"]]]]],[11,"to_i128","","Converts the value of `self` to an `i128`. If the value…",3,[[["self"]],[["option",["i128"]],["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`. If the value…",3,[[["self"]],[["usize"],["option",["usize"]]]]],[11,"to_u8","","Converts the value of `self` to a `u8`. If the value…",3,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"to_u16","","Converts the value of `self` to a `u16`. If the value…",3,[[["self"]],[["u16"],["option",["u16"]]]]],[11,"to_u32","","Converts the value of `self` to a `u32`. If the value…",3,[[["self"]],[["u32"],["option",["u32"]]]]],[10,"to_u64","","Converts the value of `self` to a `u64`. If the value…",3,[[["self"]],[["option",["u64"]],["u64"]]]],[11,"to_u128","","Converts the value of `self` to a `u128`. If the value…",3,[[["self"]],[["u128"],["option",["u128"]]]]],[11,"to_f32","","Converts the value of `self` to an `f32`. If the value…",3,[[["self"]],[["f32"],["option",["f32"]]]]],[11,"to_f64","","Converts the value of `self` to an `f64`. If the value…",3,[[["self"]],[["option",["f64"]],["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Converts an `isize` to return an optional value of this…",4,[[["isize"]],["option"]]],[11,"from_i8","","Converts an `i8` to return an optional value of this type.…",4,[[["i8"]],["option"]]],[11,"from_i16","","Converts an `i16` to return an optional value of this…",4,[[["i16"]],["option"]]],[11,"from_i32","","Converts an `i32` to return an optional value of this…",4,[[["i32"]],["option"]]],[10,"from_i64","","Converts an `i64` to return an optional value of this…",4,[[["i64"]],["option"]]],[11,"from_i128","","Converts an `i128` to return an optional value of this…",4,[[["i128"]],["option"]]],[11,"from_usize","","Converts a `usize` to return an optional value of this…",4,[[["usize"]],["option"]]],[11,"from_u8","","Converts an `u8` to return an optional value of this type.…",4,[[["u8"]],["option"]]],[11,"from_u16","","Converts an `u16` to return an optional value of this…",4,[[["u16"]],["option"]]],[11,"from_u32","","Converts an `u32` to return an optional value of this…",4,[[["u32"]],["option"]]],[10,"from_u64","","Converts an `u64` to return an optional value of this…",4,[[["u64"]],["option"]]],[11,"from_u128","","Converts an `u128` to return an optional value of this…",4,[[["u128"]],["option"]]],[11,"from_f32","","Converts a `f32` to return an optional value of this type.…",4,[[["f32"]],["option"]]],[11,"from_f64","","Converts a `f64` to return an optional value of this type.…",4,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted…",5,[[["toprimitive"]],["option"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars…",null,null],[10,"as_","","Convert a value to another, using the `as` operator.",6,[[],["t"]]],[0,"float","num_traits","",null,null],[8,"FloatCore","num_traits::float","Generic trait for floating point numbers that works with…",null,null],[10,"infinity","","Returns positive infinity.",7,[[],["self"]]],[10,"neg_infinity","","Returns negative infinity.",7,[[],["self"]]],[10,"nan","","Returns NaN.",7,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",7,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",7,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",7,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",7,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",7,[[],["self"]]],[11,"is_nan","","Returns `true` if the number is NaN.",7,[[],["bool"]]],[11,"is_infinite","","Returns `true` if the number is infinite.",7,[[],["bool"]]],[11,"is_finite","","Returns `true` if the number is neither infinite or NaN.",7,[[],["bool"]]],[11,"is_normal","","Returns `true` if the number is neither zero, infinite,…",7,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",7,[[],["fpcategory"]]],[11,"floor","","Returns the largest integer less than or equal to a number.",7,[[],["self"]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",7,[[],["self"]]],[11,"round","","Returns the nearest integer to a number. Round half-way…",7,[[],["self"]]],[11,"trunc","","Return the integer part of a number.",7,[[],["self"]]],[11,"fract","","Returns the fractional part of a number.",7,[[],["self"]]],[11,"abs","","Computes the absolute value of `self`. Returns…",7,[[],["self"]]],[11,"signum","","Returns a number that represents the sign of `self`.",7,[[],["self"]]],[11,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",7,[[],["bool"]]],[11,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",7,[[],["bool"]]],[11,"min","","Returns the minimum of the two numbers.",7,[[],["self"]]],[11,"max","","Returns the maximum of the two numbers.",7,[[],["self"]]],[11,"recip","","Returns the reciprocal (multiplicative inverse) of the…",7,[[],["self"]]],[11,"powi","","Raise a number to an integer power.",7,[[["i32"]],["self"]]],[10,"to_degrees","","Converts to degrees, assuming the number is in radians.",7,[[],["self"]]],[10,"to_radians","","Converts to radians, assuming the number is in degrees.",7,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",7,[[]]],[8,"Float","","Generic trait for floating point numbers",null,null],[10,"nan","","Returns the `NaN` value.",8,[[],["self"]]],[10,"infinity","","Returns the infinite value.",8,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",8,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",8,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",8,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",8,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",8,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",8,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",8,[[],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",8,[[],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",8,[[],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",8,[[],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",8,[[],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",8,[[],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",8,[[],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",8,[[],["self"]]],[10,"trunc","","Return the integer part of a number.",8,[[],["self"]]],[10,"fract","","Returns the fractional part of a number.",8,[[],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",8,[[],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",8,[[],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",8,[[],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",8,[[],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",8,[[],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",8,[[],["self"]]],[10,"powi","","Raise a number to an integer power.",8,[[["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",8,[[],["self"]]],[10,"sqrt","","Take the square root of a number.",8,[[],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",8,[[],["self"]]],[10,"exp2","","Returns `2^(self)`.",8,[[],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",8,[[],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",8,[[],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",8,[[],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",8,[[],["self"]]],[11,"to_degrees","","Converts radians to degrees.",8,[[],["self"]]],[11,"to_radians","","Converts degrees to radians.",8,[[],["self"]]],[10,"max","","Returns the maximum of the two numbers.",8,[[],["self"]]],[10,"min","","Returns the minimum of the two numbers.",8,[[],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",8,[[],["self"]]],[10,"cbrt","","Take the cubic root of a number.",8,[[],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",8,[[],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",8,[[],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",8,[[],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",8,[[],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",8,[[],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",8,[[],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",8,[[],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",8,[[],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",8,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",8,[[],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",8,[[],["self"]]],[10,"sinh","","Hyperbolic sine function.",8,[[],["self"]]],[10,"cosh","","Hyperbolic cosine function.",8,[[],["self"]]],[10,"tanh","","Hyperbolic tangent function.",8,[[],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",8,[[],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",8,[[],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",8,[[],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",8,[[]]],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",9,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",9,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",9,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",9,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",9,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",9,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",9,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",9,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",9,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",9,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",9,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",9,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",9,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",9,[[],["self"]]],[10,"PI","","Return Archimedes’ constant `π`.",9,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",9,[[],["self"]]],[11,"TAU","","Return the full circle constant `τ`.",9,[[],["self"]]],[0,"identities","num_traits","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,[[],["zero"]]],[5,"one","","Returns the multiplicative identity, `1`.",null,[[],["one"]]],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`. #…",10,[[],["self"]]],[11,"set_zero","","Sets `self` to the additive identity element of `Self`, `0`.",10,[[["self"]]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",10,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",11,[[],["self"]]],[11,"set_one","","Sets `self` to the multiplicative identity element of…",11,[[["self"]]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative…",11,[[["self"]],["bool"]]],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of…",12,[[],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",12,[[],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",12,[[],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",12,[[],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",12,[[["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",12,[[],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",12,[[],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",12,[[],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",12,[[],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",12,[[],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",12,[[["u32"]],["self"]]],[0,"ops","num_traits","",null,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",13,[[["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",14,[[["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",15,[[["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",16,[[["self"]],["option"]]],[8,"CheckedRem","","Performs an integral remainder that returns `None` instead…",null,null],[10,"checked_rem","","Finds the remainder of dividing two numbers, checking for…",17,[[["self"]],["option"]]],[8,"CheckedNeg","","Performs negation that returns `None` if the result can't…",null,null],[10,"checked_neg","","Negates a number, returning `None` for results that can't…",18,[[["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on shifts larger…",null,null],[10,"checked_shl","","Checked shift left. Computes `self << rhs`, returning…",19,[[["u32"],["self"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on shifts…",null,null],[10,"checked_shr","","Checked shift right. Computes `self >> rhs`, returning…",20,[[["u32"],["self"]],["option"]]],[0,"inv","num_traits::ops","",null,null],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",null,null],[16,"Output","","The result after applying the operator.",21,null],[10,"inv","","Returns the multiplicative inverse of `self`.",21,[[]]],[0,"mul_add","num_traits::ops","",null,null],[8,"MulAdd","num_traits::ops::mul_add","Fused multiply-add. Computes `(self * a) + b` with only…",null,null],[16,"Output","","The resulting type after applying the fused multiply-add.",22,null],[10,"mul_add","","Performs the fused multiply-add operation.",22,[[["a"],["b"]]]],[8,"MulAddAssign","","The fused multiply-add assignment operation.",null,null],[10,"mul_add_assign","","Performs the fused multiply-add operation.",23,[[["a"],["self"],["b"]]]],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",24,[[],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",24,[[],["self"]]],[0,"wrapping","num_traits::ops","",null,null],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",null,null],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`,…",25,[[["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",null,null],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`,…",26,[[["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",null,null],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self *…",27,[[["self"]],["self"]]],[8,"WrappingShl","","Performs a left shift that does not panic.",null,null],[10,"wrapping_shl","","Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",28,[[["u32"],["self"]],["self"]]],[8,"WrappingShr","","Performs a right shift that does not panic.",null,null],[10,"wrapping_shr","","Panic-free bitwise shift-right; yields `self >>…",29,[[["u32"],["self"]],["self"]]],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",null,[[["one"],["usize"],["mul"],["clone"]],[["one"],["mul"],["clone"]]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",null,[[["one"],["usize"],["checkedmul"],["clone"]],[["option"],["one"],["checkedmul"],["clone"]]]],[8,"Pow","","Binary operator for raising a value to a power.",null,null],[16,"Output","","The result after applying the operator.",30,null],[10,"pow","","Returns `self` to the power `rhs`.",30,[[["rhs"]]]],[0,"real","num_traits","",null,null],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",null,null],[10,"min_value","","Returns the smallest finite value that this type can…",31,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",31,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",31,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",31,[[],["self"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",31,[[],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",31,[[],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",31,[[],["self"]]],[10,"trunc","","Return the integer part of a number.",31,[[],["self"]]],[10,"fract","","Returns the fractional part of a number.",31,[[],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",31,[[],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",31,[[],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`,…",31,[[],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`,…",31,[[],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",31,[[],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",31,[[],["self"]]],[10,"powi","","Raise a number to an integer power.",31,[[["i32"]],["self"]]],[10,"powf","","Raise a number to a real number power.",31,[[],["self"]]],[10,"sqrt","","Take the square root of a number.",31,[[],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",31,[[],["self"]]],[10,"exp2","","Returns `2^(self)`.",31,[[],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",31,[[],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",31,[[],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",31,[[],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",31,[[],["self"]]],[10,"to_degrees","","Converts radians to degrees.",31,[[],["self"]]],[10,"to_radians","","Converts degrees to radians.",31,[[],["self"]]],[10,"max","","Returns the maximum of the two numbers.",31,[[],["self"]]],[10,"min","","Returns the minimum of the two numbers.",31,[[],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",31,[[],["self"]]],[10,"cbrt","","Take the cubic root of a number.",31,[[],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",31,[[],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",31,[[],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",31,[[],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",31,[[],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",31,[[],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",31,[[],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",31,[[],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",31,[[],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",31,[[]]],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",31,[[],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",31,[[],["self"]]],[10,"sinh","","Hyperbolic sine function.",31,[[],["self"]]],[10,"cosh","","Hyperbolic cosine function.",31,[[],["self"]]],[10,"tanh","","Hyperbolic tangent function.",31,[[],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",31,[[],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",31,[[],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",31,[[],["self"]]],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,[[["signed"]],["signed"]]],[5,"abs_sub","","The positive difference of two numbers.",null,[[["signed"]],["signed"]]],[5,"signum","","Returns the sign of the number.",null,[[["signed"]],["signed"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",null,null],[10,"abs","","Computes the absolute value.",32,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",32,[[["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",32,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",32,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",32,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Num","num_traits","The base trait for numeric types, covering `0` and `1`…",null,null],[16,"FromStrRadixErr","","",33,null],[10,"from_str_radix","","Convert from a string and radix <= 36.",33,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",null,null],[8,"NumRef","","The trait for `Num` types which also implement numeric…",null,null],[8,"RefNum","","The trait for references which implement numeric…",null,null],[8,"NumAssignOps","","The trait for types implementing numeric assignment…",null,null],[8,"NumAssign","","The trait for `Num` types which also implement assignment…",null,null],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"p":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Saturating"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]};
searchIndex["proc_macro2"] = {"doc":"A wrapper around the procedural macro API of the…","i":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",null,null],[3,"LexError","","Error returned from `TokenStream::from_str`.",null,null],[3,"Span","","A region of source code, along with macro expansion…",null,null],[3,"Group","","A delimited token stream.",null,null],[3,"Punct","","An `Punct` is an single punctuation character like `+`,…",null,null],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Literal","","A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",null,null],[4,"TokenTree","","A single token or a delimited sequence of token trees…",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",0,null],[13,"Ident","","An identifier.",0,null],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,null],[13,"Literal","","A literal character (`'a'`), string (`\"hello\"`), number…",0,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","`( ... )`",1,null],[13,"Brace","","`{ ... }`",1,null],[13,"Bracket","","`[ ... ]`",1,null],[13,"None","","`Ø ... Ø`",1,null],[4,"Spacing","","Whether an `Punct` is followed immediately by another…",null,null],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,null],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `'` is `Joint` in `'#`.",2,null],[0,"token_stream","","Public implementation details for the `TokenStream` type,…",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`'s `TokenTree`s.",null,null],[11,"new","proc_macro2","Returns an empty `TokenStream` containing no token trees.",3,[[],["tokenstream"]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site","","The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"unwrap","","Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[],["span"]]],[11,"join","","Create a new span encompassing `self` and `other`.",4,[[["self"],["span"]],[["option",["span"]],["span"]]]],[11,"span","","Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,"set_span","","Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"new","","Creates a new `Group` with the given delimiter and token…",5,[[["delimiter"],["tokenstream"]],["group"]]],[11,"delimiter","","Returns the delimiter of this `Group`",5,[[["self"]],["delimiter"]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],["tokenstream"]]],[11,"span","","Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,"span_open","","Returns the span pointing to the opening delimiter of this…",5,[[["self"]],["span"]]],[11,"span_close","","Returns the span pointing to the closing delimiter of this…",5,[[["self"]],["span"]]],[11,"set_span","","Configures the span for this `Group`'s delimiters, but not…",5,[[["self"],["span"]]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["spacing"],["char"]],["punct"]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing","","Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span","","Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["self"],["span"]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",7,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",7,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",7,[[["self"],["span"]]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u8"]],["literal"]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u16"]],["literal"]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u32"]],["literal"]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u64"]],["literal"]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u128"]],["literal"]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["usize"]],["literal"]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i8"]],["literal"]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i16"]],["literal"]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i32"]],["literal"]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i64"]],["literal"]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i128"]],["literal"]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["isize"]],["literal"]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u8"]],["literal"]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u16"]],["literal"]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u32"]],["literal"]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u64"]],["literal"]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u128"]],["literal"]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["usize"]],["literal"]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i8"]],["literal"]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i16"]],["literal"]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i32"]],["literal"]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i64"]],["literal"]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i128"]],["literal"]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["isize"]],["literal"]]],[11,"f64_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f64"]],["literal"]]],[11,"f64_suffixed","","Creates a new suffixed floating-point literal.",8,[[["f64"]],["literal"]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"f32_suffixed","","Creates a new suffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"string","","String literal.",8,[[["str"]],["literal"]]],[11,"character","","Character literal.",8,[[["char"]],["literal"]]],[11,"byte_string","","Byte string literal.",8,[[],["literal"]]],[11,"span","","Returns the span encompassing this literal.",8,[[["self"]],["span"]]],[11,"set_span","","Configures the span associated for this literal.",8,[[["self"],["span"]]]],[11,"subspan","","Returns a `Span` that is a subset of `self.span()`…",8,[[["rangebounds",["usize"]],["self"],["usize"]],[["option",["span"]],["span"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","proc_macro2::token_stream","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","proc_macro2","",4,[[["span"]],["span"]]],[11,"from","","",3,[[["tokenstream"]],["tokenstream"]]],[11,"from","","",3,[[["tokentree"]],["self"]]],[11,"from","","",0,[[["group"]],["tokentree"]]],[11,"from","","",0,[[["ident"]],["tokentree"]]],[11,"from","","",0,[[["punct"]],["tokentree"]]],[11,"from","","",0,[[["literal"]],["tokentree"]]],[11,"extend","","",3,[[["self"],["intoiterator"]]]],[11,"extend","","",3,[[["intoiterator"],["self"]]]],[11,"into_iter","","",3,[[],["intoiter"]]],[11,"next","proc_macro2::token_stream","",10,[[["self"]],[["tokentree"],["option",["tokentree"]]]]],[11,"clone","proc_macro2","",3,[[["self"]],["tokenstream"]]],[11,"clone","","",4,[[["self"]],["span"]]],[11,"clone","","",0,[[["self"]],["tokentree"]]],[11,"clone","","",5,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["delimiter"]]],[11,"clone","","",6,[[["self"]],["punct"]]],[11,"clone","","",2,[[["self"]],["spacing"]]],[11,"clone","","",7,[[["self"]],["ident"]]],[11,"clone","","",8,[[["self"]],["literal"]]],[11,"clone","proc_macro2::token_stream","",10,[[["self"]],["intoiter"]]],[11,"default","proc_macro2","",3,[[],["self"]]],[11,"cmp","","",7,[[["ident"],["self"]],["ordering"]]],[11,"eq","","",1,[[["delimiter"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["spacing"]],["bool"]]],[11,"eq","","",7,[[["ident"],["self"]],["bool"]]],[11,"eq","","",7,[[["t"],["self"]],["bool"]]],[11,"partial_cmp","","",7,[[["ident"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","proc_macro2::token_stream","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","proc_macro2","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"hash","","",7,[[["self"],["h"]]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]],[11,"from_str","","",3,[[["str"]],[["result",["tokenstream","lexerror"]],["tokenstream"],["lexerror"]]]]],"p":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,"IntoIter"]]};
searchIndex["quadrature"] = {"doc":"The primary function of this library is `integrate`, witch…","i":[[3,"Output","quadrature","",null,null],[12,"num_function_evaluations","","",0,null],[12,"error_estimate","","",0,null],[12,"integral","","",0,null],[0,"double_exponential","","The double exponential algorithm is naturally adaptive, it…",null,null],[5,"integrate","quadrature::double_exponential","Integrate an analytic function over a finite interval. f…",null,[[["f64"],["f"]],["output"]]],[0,"clenshaw_curtis","quadrature","The `clenshaw_curtis` module provides a `integrate`…",null,null],[5,"integrate","quadrature::clenshaw_curtis","Integrate an analytic function over a finite interval. f…",null,[[["f64"],["f"]],["output"]]],[11,"from","quadrature","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["output"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Output"]]};
searchIndex["quote"] = {"doc":"This crate provides the [`quote!`] macro for turning Rust…","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",null,null],[10,"append","","For use by `ToTokens` implementations.",0,[[["u"],["self"]]]],[10,"append_all","","For use by `ToTokens` implementations.",0,[[["self"],["i"]]]],[10,"append_separated","","For use by `ToTokens` implementations.",0,[[["u"],["self"],["i"]]]],[10,"append_terminated","","For use by `ToTokens` implementations.",0,[[["u"],["self"],["i"]]]],[8,"IdentFragment","","Specialized formatting trait used by `format_ident!`.",null,null],[10,"fmt","","Format this value as an identifier fragment.",1,[[["formatter"],["self"]],["result"]]],[11,"span","","Span associated with this `IdentFragment`.",1,[[["self"]],[["option",["span"]],["span"]]]],[8,"ToTokens","","Types that can be interpolated inside a `quote!` invocation.",null,null],[10,"to_tokens","","Write `self` to the given `TokenStream`.",2,[[["tokenstream"],["self"]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[["self"]],["tokenstream"]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream"]]],[14,"format_ident","","Formatting macro for constructing `Ident`s.",null,null],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",null,null],[11,"span","","Span associated with this `IdentFragment`.",1,[[["self"]],[["option",["span"]],["span"]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[["self"]],["tokenstream"]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream"]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]};
searchIndex["rawpointer"] = {"doc":"Rawpointer adds extra utility methods to raw pointers…","i":[[5,"ptrdistance","rawpointer","Return the number of elements of `T` from `start` to…",null,[[],["usize"]]],[8,"PointerExt","","Extension methods for raw pointers",null,null],[10,"offset","","",0,[[["isize"]],["self"]]],[11,"add","","",0,[[["usize"]],["self"]]],[11,"sub","","",0,[[["usize"]],["self"]]],[11,"pre_inc","","Increment the pointer by 1, and return its new value.",0,[[["self"]],["self"]]],[11,"post_inc","","Increment the pointer by 1, but return its old value.",0,[[["self"]],["self"]]],[11,"pre_dec","","Decrement the pointer by 1, and return its new value.",0,[[["self"]],["self"]]],[11,"post_dec","","Decrement the pointer by 1, but return its old value.",0,[[["self"]],["self"]]],[11,"inc","","Increment by 1",0,[[["self"]]]],[11,"dec","","Decrement by 1",0,[[["self"]]]],[11,"stride_offset","","Offset the pointer by `s` multiplied by `index`.",0,[[["isize"],["usize"]],["self"]]]],"p":[[8,"PointerExt"]]};
searchIndex["rayon"] = {"doc":"Data-parallelism library that makes it easy to convert…","i":[[3,"FnContext","rayon","Provides the calling context to a closure called by…",null,null],[3,"ThreadBuilder","","Thread builder used for customization via…",null,null],[3,"ThreadPool","","Represents a user created [thread-pool].",null,null],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",null,null],[3,"ThreadPoolBuilder","","Used to create a new [`ThreadPool`] or to configure the…",null,null],[5,"current_num_threads","","Returns the number of threads in the current registry. If…",null,[[],["usize"]]],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index of…",null,[[],[["option",["usize"]],["usize"]]]],[5,"join","","Takes two closures and potentially runs them in parallel.…",null,[[["a"],["b"]]]],[5,"join_context","","Identical to `join`, except that the closures have a…",null,[[["a"],["b"]]]],[5,"scope","","Create a \"fork-join\" scope `s` and invokes the closure…",null,[[["op"]],["r"]]],[3,"Scope","","Represents a fork-join scope which can be used to spawn…",null,null],[5,"scope_fifo","","Create a \"fork-join\" scope `s` with FIFO order, and…",null,[[["op"]],["r"]]],[3,"ScopeFifo","","Represents a fork-join scope which can be used to spawn…",null,null],[5,"spawn","","Fires off a task into the Rayon threadpool in the \"static\"…",null,[[["f"]]]],[5,"spawn_fifo","","Fires off a task into the Rayon threadpool in the \"static\"…",null,[[["f"]]]],[0,"collections","","Parallel iterator types for [standard…",null,null],[0,"binary_heap","rayon::collections","This module contains the parallel iterator types for heaps…",null,null],[3,"IntoIter","rayon::collections::binary_heap","Parallel iterator over a binary heap",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a binary…",null,null],[0,"btree_map","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::btree_map","Parallel iterator over a B-Tree map",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree…",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a B-Tree map",null,null],[0,"btree_set","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::btree_set","Parallel iterator over a B-Tree set",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree…",null,null],[0,"hash_map","rayon::collections","This module contains the parallel iterator types for hash…",null,null],[3,"IntoIter","rayon::collections::hash_map","Parallel iterator over a hash map",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a hash map",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a hash map",null,null],[0,"hash_set","rayon::collections","This module contains the parallel iterator types for hash…",null,null],[3,"IntoIter","rayon::collections::hash_set","Parallel iterator over a hash set",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a hash set",null,null],[0,"linked_list","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::linked_list","Parallel iterator over a linked list",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a linked…",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a linked list",null,null],[0,"vec_deque","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::vec_deque","Parallel iterator over a double-ended queue",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a…",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a…",null,null],[0,"iter","rayon","Traits for writing parallel programs using an…",null,null],[4,"Either","rayon::iter","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[3,"IterBridge","","`IterBridge` is a parallel iterator that wraps a…",null,null],[3,"Chain","","`Chain` is an iterator that joins `b` after `a` in one…",null,null],[3,"Chunks","","`Chunks` is an iterator that groups elements of an…",null,null],[3,"Enumerate","","`Enumerate` is an iterator that returns the current count…",null,null],[3,"Filter","","`Filter` takes a predicate `filter_op` and filters out…",null,null],[3,"FilterMap","","`FilterMap` creates an iterator that uses `filter_op` to…",null,null],[3,"FlatMap","","`FlatMap` maps each element to an iterator, then flattens…",null,null],[3,"Flatten","","`Flatten` turns each element to an iterator, then flattens…",null,null],[3,"Fold","","`Fold` is an iterator that applies a function over an…",null,null],[3,"FoldWith","","`FoldWith` is an iterator that applies a function over an…",null,null],[3,"TryFold","","`TryFold` is an iterator that applies a function over an…",null,null],[3,"TryFoldWith","","`TryFoldWith` is an iterator that applies a function over…",null,null],[3,"Skip","","`Skip` is an iterator that skips over the first `n`…",null,null],[3,"Split","","`Split` is a parallel iterator using arbitrary data and a…",null,null],[3,"Take","","`Take` is an iterator that iterates over the first `n`…",null,null],[3,"Map","","`Map` is an iterator that transforms the elements of an…",null,null],[3,"MapInit","","`MapInit` is an iterator that transforms the elements of…",null,null],[3,"MapWith","","`MapWith` is an iterator that transforms the elements of…",null,null],[3,"Zip","","`Zip` is an iterator that zips up `a` and `b` into a…",null,null],[3,"ZipEq","","An [`IndexedParallelIterator`] that iterates over two…",null,null],[3,"MultiZip","","`MultiZip` is an iterator that zips up a tuple of parallel…",null,null],[3,"Interleave","","`Interleave` is an iterator that interleaves elements of…",null,null],[3,"InterleaveShortest","","`InterleaveShortest` is an iterator that works similarly…",null,null],[3,"Intersperse","","`Intersperse` is an iterator that inserts a particular…",null,null],[3,"Update","","`Update` is an iterator that mutates the elements of an…",null,null],[3,"Rev","","`Rev` is an iterator that produces elements in reverse…",null,null],[3,"MaxLen","","`MaxLen` is an iterator that imposes a maximum length on…",null,null],[3,"MinLen","","`MinLen` is an iterator that imposes a minimum length on…",null,null],[3,"Cloned","","`Cloned` is an iterator that clones the elements of an…",null,null],[3,"Copied","","`Copied` is an iterator that copies the elements of an…",null,null],[3,"Inspect","","`Inspect` is an iterator that calls a function with a…",null,null],[3,"PanicFuse","","`PanicFuse` is an adaptor that wraps an iterator with a…",null,null],[3,"WhileSome","","`WhileSome` is an iterator that yields the `Some` elements…",null,null],[3,"Repeat","","Iterator adaptor for the `repeat()` function.",null,null],[3,"RepeatN","","Iterator adaptor for the `repeatn()` function.",null,null],[3,"Empty","","Iterator adaptor for the `empty()` function.",null,null],[3,"Once","","Iterator adaptor for the `once()` function.",null,null],[5,"split","","The `split` function takes arbitrary data and a closure…",null,[[["d"],["s"]],["split"]]],[5,"repeat","","Creates a parallel iterator that endlessly repeats `elt`…",null,[[["send"],["clone"]],[["repeat"],["send"],["clone"]]]],[5,"repeatn","","Creates a parallel iterator that produces `n` repeats of…",null,[[["send"],["clone"],["usize"]],[["send"],["clone"],["repeatn"]]]],[5,"empty","","Creates a parallel iterator that produces nothing.",null,[[],[["send"],["empty"]]]],[5,"once","","Creates a parallel iterator that produces an element…",null,[[["send"]],[["once"],["send"]]]],[0,"plumbing","","Traits and functions used to implement parallel iteration.…",null,null],[5,"bridge","rayon::iter::plumbing","This helper function is used to \"connect\" a parallel…",null,[[["c"],["i"]]]],[5,"bridge_producer_consumer","","This helper function is used to \"connect\" a producer and a…",null,[[["c"],["usize"],["p"]]]],[5,"bridge_unindexed","","A variant of [`bridge_producer_consumer`] where the…",null,[[["c"],["p"]]]],[8,"ProducerCallback","","The `ProducerCallback` trait is a kind of generic closure,…",null,null],[16,"Output","","The type of value returned by this callback. Analogous to…",1,null],[10,"callback","","Invokes the callback with the given producer as argument.…",1,[[["p"]]]],[8,"Producer","","A `Producer` is effectively a \"splittable `IntoIterator`\".…",null,null],[16,"Item","","The type of item that will be produced by this producer…",2,null],[16,"IntoIter","","The type of iterator we will become.",2,null],[10,"into_iter","","Convert `self` into an iterator; at this point, no more…",2,[[]]],[11,"min_len","","The minimum number of items that we will process…",2,[[["self"]],["usize"]]],[11,"max_len","","The maximum number of items that we will process…",2,[[["self"]],["usize"]]],[10,"split_at","","Split into two producers; one produces items `0..index`,…",2,[[["usize"]]]],[11,"fold_with","","Iterate the producer, feeding each element to `folder`,…",2,[[["f"]],["f"]]],[8,"Consumer","","A consumer is effectively a [generalized \"fold\"…",null,null],[16,"Folder","","The type of folder that this consumer can be converted into.",3,null],[16,"Reducer","","The type of reducer that is produced if this consumer is…",3,null],[16,"Result","","The type of result that this consumer will ultimately…",3,null],[10,"split_at","","Divide the consumer into two consumers, one processing…",3,[[["usize"]]]],[10,"into_folder","","Convert the consumer into a folder that can consume items…",3,[[]]],[10,"full","","Hint whether this `Consumer` would like to stop processing…",3,[[["self"]],["bool"]]],[8,"Folder","","The `Folder` trait encapsulates [the standard fold…",null,null],[16,"Result","","The type of result that will ultimately be produced by the…",4,null],[10,"consume","","Consume next item and return new sequential state.",4,[[["item"]],["self"]]],[11,"consume_iter","","Consume items from the iterator until full, and return new…",4,[[["i"]],["self"]]],[10,"complete","","Finish consuming items, produce final result.",4,[[]]],[10,"full","","Hint whether this `Folder` would like to stop processing…",4,[[["self"]],["bool"]]],[8,"Reducer","","The reducer is the final step of a `Consumer` -- after a…",null,null],[10,"reduce","","Reduce two final results into one; this is executed after…",5,[[["result"]],["result"]]],[8,"UnindexedConsumer","","A stateless consumer can be freely copied. These consumers…",null,null],[10,"split_off_left","","Splits off a \"left\" consumer and returns it. The `self`…",6,[[["self"]],["self"]]],[10,"to_reducer","","Creates a reducer that can be used to combine the results…",6,[[["self"]]]],[8,"UnindexedProducer","","A variant on `Producer` which does not know its exact…",null,null],[16,"Item","","The type of item returned by this producer.",7,null],[10,"split","","Split midway into a new producer if possible, otherwise…",7,[[]]],[10,"fold_with","","Iterate the producer, feeding each element to `folder`,…",7,[[["f"]],["f"]]],[11,"take","rayon::iter","Take only `n` repeats of the element, similar to the…",8,[[["usize"]],["repeatn"]]],[11,"zip","","Iterate tuples repeating the element with items from…",8,[[["z"]],[["zip",["repeatn"]],["repeatn"]]]],[8,"ParallelBridge","","Conversion trait to convert an `Iterator` to a…",null,null],[10,"par_bridge","","Create a bridge from this type to a `ParallelIterator`.",9,[[],["iterbridge"]]],[8,"IntoParallelIterator","","`IntoParallelIterator` implements the conversion to a…",null,null],[16,"Iter","","The parallel iterator type that will be created.",10,null],[16,"Item","","The type of item that the parallel iterator will produce.",10,null],[10,"into_par_iter","","Converts `self` into a parallel iterator.",10,[[]]],[8,"IntoParallelRefIterator","","`IntoParallelRefIterator` implements the conversion to a…",null,null],[16,"Iter","","The type of the parallel iterator that will be returned.",11,null],[16,"Item","","The type of item that the parallel iterator will produce.…",11,null],[10,"par_iter","","Converts `self` into a parallel iterator.",11,[[["self"]]]],[8,"IntoParallelRefMutIterator","","`IntoParallelRefMutIterator` implements the conversion to…",null,null],[16,"Iter","","The type of iterator that will be created.",12,null],[16,"Item","","The type of item that will be produced; this is typically…",12,null],[10,"par_iter_mut","","Creates the parallel iterator from `self`.",12,[[["self"]]]],[8,"ParallelIterator","","Parallel version of the standard iterator trait.",null,null],[16,"Item","","The type of item that this parallel iterator produces. For…",13,null],[11,"for_each","","Executes `OP` on each item produced by the iterator, in…",13,[[["op"]]]],[11,"for_each_with","","Executes `OP` on the given `init` value with each item…",13,[[["op"],["t"]]]],[11,"for_each_init","","Executes `OP` on a value returned by `init` with each item…",13,[[["op"],["init"]]]],[11,"try_for_each","","Executes a fallible `OP` on each item produced by the…",13,[[["op"]],["r"]]],[11,"try_for_each_with","","Executes a fallible `OP` on the given `init` value with…",13,[[["op"],["t"]],["r"]]],[11,"try_for_each_init","","Executes a fallible `OP` on a value returned by `init`…",13,[[["op"],["init"]],["r"]]],[11,"count","","Counts the number of items in this parallel iterator.",13,[[],["usize"]]],[11,"map","","Applies `map_op` to each item of this iterator, producing…",13,[[["f"]],["map"]]],[11,"map_with","","Applies `map_op` to the given `init` value with each item…",13,[[["t"],["f"]],["mapwith"]]],[11,"map_init","","Applies `map_op` to a value returned by `init` with each…",13,[[["init"],["f"]],["mapinit"]]],[11,"cloned","","Creates an iterator which clones all of its elements. This…",13,[[],["cloned"]]],[11,"copied","","Creates an iterator which copies all of its elements. This…",13,[[],["copied"]]],[11,"inspect","","Applies `inspect_op` to a reference to each item of this…",13,[[["op"]],["inspect"]]],[11,"update","","Mutates each item of this iterator before yielding it.",13,[[["f"]],["update"]]],[11,"filter","","Applies `filter_op` to each item of this iterator,…",13,[[["p"]],["filter"]]],[11,"filter_map","","Applies `filter_op` to each item of this iterator to get…",13,[[["p"]],["filtermap"]]],[11,"flat_map","","Applies `map_op` to each item of this iterator to get…",13,[[["f"]],["flatmap"]]],[11,"flatten","","An adaptor that flattens iterable `Item`s into one large…",13,[[],["flatten"]]],[11,"reduce","","Reduces the items in the iterator into one item using…",13,[[["op"],["id"]]]],[11,"reduce_with","","Reduces the items in the iterator into one item using…",13,[[["op"]],["option"]]],[11,"try_reduce","","Reduces the items in the iterator into one item using a…",13,[[["op"],["id"]]]],[11,"try_reduce_with","","Reduces the items in the iterator into one item using a…",13,[[["op"]],["option"]]],[11,"fold","","Parallel fold is similar to sequential fold except that…",13,[[["id"],["f"]],["fold"]]],[11,"fold_with","","Applies `fold_op` to the given `init` value with each item…",13,[[["t"],["f"]],["foldwith"]]],[11,"try_fold","","Perform a fallible parallel fold.",13,[[["id"],["f"]],["tryfold"]]],[11,"try_fold_with","","Perform a fallible parallel fold with a cloneable `init`…",13,[[["t"],["f"]],["tryfoldwith"]]],[11,"sum","","Sums up the items in the iterator.",13,[[],["s"]]],[11,"product","","Multiplies all the items in the iterator.",13,[[],["p"]]],[11,"min","","Computes the minimum of all the items in the iterator. If…",13,[[],["option"]]],[11,"min_by","","Computes the minimum of all the items in the iterator with…",13,[[["f"]],["option"]]],[11,"min_by_key","","Computes the item that yields the minimum value for the…",13,[[["f"]],["option"]]],[11,"max","","Computes the maximum of all the items in the iterator. If…",13,[[],["option"]]],[11,"max_by","","Computes the maximum of all the items in the iterator with…",13,[[["f"]],["option"]]],[11,"max_by_key","","Computes the item that yields the maximum value for the…",13,[[["f"]],["option"]]],[11,"chain","","Takes two iterators and creates a new iterator over both.",13,[[["c"]],["chain"]]],[11,"find_any","","Searches for some item in the parallel iterator that…",13,[[["p"]],["option"]]],[11,"find_first","","Searches for the sequentially first item in the parallel…",13,[[["p"]],["option"]]],[11,"find_last","","Searches for the sequentially last item in the parallel…",13,[[["p"]],["option"]]],[11,"find_map_any","","Applies the given predicate to the items in the parallel…",13,[[["p"]],["option"]]],[11,"find_map_first","","Applies the given predicate to the items in the parallel…",13,[[["p"]],["option"]]],[11,"find_map_last","","Applies the given predicate to the items in the parallel…",13,[[["p"]],["option"]]],[11,"any","","Searches for some item in the parallel iterator that…",13,[[["p"]],["bool"]]],[11,"all","","Tests that every item in the parallel iterator matches the…",13,[[["p"]],["bool"]]],[11,"while_some","","Creates an iterator over the `Some` items of this…",13,[[],["whilesome"]]],[11,"panic_fuse","","Wraps an iterator with a fuse in case of panics, to halt…",13,[[],["panicfuse"]]],[11,"collect","","Create a fresh collection containing all the element…",13,[[],["c"]]],[11,"unzip","","Unzips the items of a parallel iterator into a pair of…",13,[[]]],[11,"partition","","Partitions the items of a parallel iterator into a pair of…",13,[[["p"]]]],[11,"partition_map","","Partitions and maps the items of a parallel iterator into…",13,[[["p"]]]],[11,"intersperse","","Intersperses clones of an element between items of this…",13,[[],["intersperse"]]],[10,"drive_unindexed","","Internal method used to define the behavior of this…",13,[[["c"]]]],[11,"opt_len","","Internal method used to define the behavior of this…",13,[[["self"]],[["option",["usize"]],["usize"]]]],[8,"IndexedParallelIterator","","An iterator that supports \"random access\" to its data,…",null,null],[11,"collect_into_vec","","Collects the results of the iterator into the specified…",14,[[["vec"]]]],[11,"unzip_into_vecs","","Unzips the results of the iterator into the specified…",14,[[["vec"],["vec"]]]],[11,"zip","","Iterate over tuples `(A, B)`, where the items `A` are from…",14,[[["z"]],["zip"]]],[11,"zip_eq","","The same as `Zip`, but requires that both iterators have…",14,[[["z"]],["zipeq"]]],[11,"interleave","","Interleave elements of this iterator and the other given…",14,[[["i"]],["interleave"]]],[11,"interleave_shortest","","Interleave elements of this iterator and the other given…",14,[[["i"]],["interleaveshortest"]]],[11,"chunks","","Split an iterator up into fixed-size chunks.",14,[[["usize"]],["chunks"]]],[11,"cmp","","Lexicographically compares the elements of this…",14,[[["i"]],["ordering"]]],[11,"partial_cmp","","Lexicographically compares the elements of this…",14,[[["i"]],[["option",["ordering"]],["ordering"]]]],[11,"eq","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"ne","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"lt","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"le","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"gt","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"ge","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"enumerate","","Yields an index along with each item.",14,[[],["enumerate"]]],[11,"skip","","Creates an iterator that skips the first `n` elements.",14,[[["usize"]],["skip"]]],[11,"take","","Creates an iterator that yields the first `n` elements.",14,[[["usize"]],["take"]]],[11,"position_any","","Searches for some item in the parallel iterator that…",14,[[["p"]],[["option",["usize"]],["usize"]]]],[11,"position_first","","Searches for the sequentially first item in the parallel…",14,[[["p"]],[["option",["usize"]],["usize"]]]],[11,"position_last","","Searches for the sequentially last item in the parallel…",14,[[["p"]],[["option",["usize"]],["usize"]]]],[11,"rev","","Produces a new iterator with the elements of this iterator…",14,[[],["rev"]]],[11,"with_min_len","","Sets the minimum length of iterators desired to process in…",14,[[["usize"]],["minlen"]]],[11,"with_max_len","","Sets the maximum length of iterators desired to process in…",14,[[["usize"]],["maxlen"]]],[10,"len","","Produces an exact count of how many items this iterator…",14,[[["self"]],["usize"]]],[10,"drive","","Internal method used to define the behavior of this…",14,[[["consumer"]]]],[10,"with_producer","","Internal method used to define the behavior of this…",14,[[["producercallback"]]]],[8,"FromParallelIterator","","`FromParallelIterator` implements the creation of a…",null,null],[10,"from_par_iter","","Creates an instance of the collection from the parallel…",15,[[["i"]],["self"]]],[8,"ParallelExtend","","`ParallelExtend` extends an existing collection with items…",null,null],[10,"par_extend","","Extends an instance of the collection with the elements…",16,[[["self"],["i"]]]],[0,"option","rayon","Parallel iterator types for [options][std::option]",null,null],[3,"IntoIter","rayon::option","A parallel iterator over the value in [`Some`] variant of…",null,null],[3,"Iter","","A parallel iterator over a reference to the [`Some`]…",null,null],[3,"IterMut","","A parallel iterator over a mutable reference to the…",null,null],[0,"prelude","rayon","The rayon prelude imports the various `ParallelIterator`…",null,null],[8,"ParallelBridge","rayon::prelude","Conversion trait to convert an `Iterator` to a…",null,null],[10,"par_bridge","","Create a bridge from this type to a `ParallelIterator`.",9,[[],["iterbridge"]]],[0,"range","rayon","Parallel iterator types for [ranges][std::range], the type…",null,null],[3,"Iter","rayon::range","Parallel iterator over a range, implemented for all…",null,null],[0,"range_inclusive","rayon","Parallel iterator types for [inclusive…",null,null],[3,"Iter","rayon::range_inclusive","Parallel iterator over an inclusive range, implemented for…",null,null],[0,"result","rayon","Parallel iterator types for [results][std::result]",null,null],[3,"IntoIter","rayon::result","Parallel iterator over a result",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a result",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a result",null,null],[0,"slice","rayon","Parallel iterator types for [slices][std::slice]",null,null],[3,"Iter","rayon::slice","Parallel iterator over immutable items in a slice",null,null],[3,"Chunks","","Parallel iterator over immutable non-overlapping chunks of…",null,null],[3,"Windows","","Parallel iterator over immutable overlapping windows of a…",null,null],[3,"IterMut","","Parallel iterator over mutable items in a slice",null,null],[3,"ChunksMut","","Parallel iterator over mutable non-overlapping chunks of a…",null,null],[3,"Split","","Parallel iterator over slices separated by a predicate",null,null],[3,"SplitMut","","Parallel iterator over mutable slices separated by a…",null,null],[8,"ParallelSlice","","Parallel extensions for slices.",null,null],[10,"as_parallel_slice","","Returns a plain slice, which is used to implement the rest…",17,[[["self"]]]],[11,"par_split","","Returns a parallel iterator over subslices separated by…",17,[[["self"],["p"]],["split"]]],[11,"par_windows","","Returns a parallel iterator over all contiguous windows of…",17,[[["self"],["usize"]],["windows"]]],[11,"par_chunks","","Returns a parallel iterator over at most `chunk_size`…",17,[[["self"],["usize"]],["chunks"]]],[8,"ParallelSliceMut","","Parallel extensions for mutable slices.",null,null],[10,"as_parallel_slice_mut","","Returns a plain mutable slice, which is used to implement…",18,[[["self"]]]],[11,"par_split_mut","","Returns a parallel iterator over mutable subslices…",18,[[["self"],["p"]],["splitmut"]]],[11,"par_chunks_mut","","Returns a parallel iterator over at most `chunk_size`…",18,[[["self"],["usize"]],["chunksmut"]]],[11,"par_sort","","Sorts the slice in parallel.",18,[[["self"]]]],[11,"par_sort_by","","Sorts the slice in parallel with a comparator function.",18,[[["self"],["f"]]]],[11,"par_sort_by_key","","Sorts the slice in parallel with a key extraction function.",18,[[["self"],["f"]]]],[11,"par_sort_unstable","","Sorts the slice in parallel, but may not preserve the…",18,[[["self"]]]],[11,"par_sort_unstable_by","","Sorts the slice in parallel with a comparator function,…",18,[[["self"],["f"]]]],[11,"par_sort_unstable_by_key","","Sorts the slice in parallel with a key extraction…",18,[[["self"],["f"]]]],[0,"str","rayon","Parallel iterator types for [strings][std::str]",null,null],[3,"Chars","rayon::str","Parallel iterator over the characters of a string",null,null],[3,"CharIndices","","Parallel iterator over the characters of a string, with…",null,null],[3,"Bytes","","Parallel iterator over the bytes of a string",null,null],[3,"EncodeUtf16","","Parallel iterator over a string encoded as UTF-16",null,null],[3,"Split","","Parallel iterator over substrings separated by a pattern",null,null],[3,"SplitTerminator","","Parallel iterator over substrings separated by a…",null,null],[3,"Lines","","Parallel iterator over lines in a string",null,null],[3,"SplitWhitespace","","Parallel iterator over substrings separated by whitespace",null,null],[3,"Matches","","Parallel iterator over substrings that match a pattern",null,null],[3,"MatchIndices","","Parallel iterator over substrings that match a pattern,…",null,null],[8,"ParallelString","","Parallel extensions for strings.",null,null],[10,"as_parallel_string","","Returns a plain string slice, which is used to implement…",19,[[["self"]],["str"]]],[11,"par_chars","","Returns a parallel iterator over the characters of a string.",19,[[["self"]],["chars"]]],[11,"par_char_indices","","Returns a parallel iterator over the characters of a…",19,[[["self"]],["charindices"]]],[11,"par_bytes","","Returns a parallel iterator over the bytes of a string.",19,[[["self"]],["bytes"]]],[11,"par_encode_utf16","","Returns a parallel iterator over a string encoded as UTF-16.",19,[[["self"]],["encodeutf16"]]],[11,"par_split","","Returns a parallel iterator over substrings separated by a…",19,[[["self"],["pattern"]],[["split"],["pattern"]]]],[11,"par_split_terminator","","Returns a parallel iterator over substrings terminated by…",19,[[["self"],["pattern"]],[["splitterminator"],["pattern"]]]],[11,"par_lines","","Returns a parallel iterator over the lines of a string,…",19,[[["self"]],["lines"]]],[11,"par_split_whitespace","","Returns a parallel iterator over the sub-slices of a…",19,[[["self"]],["splitwhitespace"]]],[11,"par_matches","","Returns a parallel iterator over substrings that match a…",19,[[["self"],["pattern"]],[["matches"],["pattern"]]]],[11,"par_match_indices","","Returns a parallel iterator over substrings that match a…",19,[[["self"],["pattern"]],[["matchindices"],["pattern"]]]],[0,"vec","rayon","Parallel iterator types for [vectors][std::vec] (`Vec<T>`)",null,null],[3,"IntoIter","rayon::vec","Parallel iterator that moves out of a vector.",null,null],[11,"from","rayon","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::binary_heap","",27,[[],["t"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"into_par_iter","","",28,[[],["t"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::btree_map","",29,[[],["t"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"into_par_iter","","",30,[[],["t"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"into_par_iter","","",31,[[],["t"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::btree_set","",32,[[],["t"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"into_par_iter","","",33,[[],["t"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::hash_map","",34,[[],["t"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"into_par_iter","","",35,[[],["t"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"into_par_iter","","",36,[[],["t"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::hash_set","",37,[[],["t"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"into_par_iter","","",38,[[],["t"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::linked_list","",39,[[],["t"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"into_par_iter","","",40,[[],["t"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"into_par_iter","","",41,[[],["t"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::vec_deque","",42,[[],["t"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"into_par_iter","","",43,[[],["t"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"into_par_iter","","",44,[[],["t"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::iter","",0,[[],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"into_par_iter","","",45,[[],["t"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"into_par_iter","","",46,[[],["t"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"into_par_iter","","",47,[[],["t"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"into_par_iter","","",48,[[],["t"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"into_par_iter","","",49,[[],["t"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"into_par_iter","","",50,[[],["t"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"into_par_iter","","",51,[[],["t"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"into_par_iter","","",52,[[],["t"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"into_par_iter","","",53,[[],["t"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"into_par_iter","","",54,[[],["t"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"into_par_iter","","",55,[[],["t"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"into_par_iter","","",56,[[],["t"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"into_par_iter","","",57,[[],["t"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"into_par_iter","","",58,[[],["t"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"into_par_iter","","",59,[[],["t"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"into_par_iter","","",60,[[],["t"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"into_par_iter","","",61,[[],["t"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"into_par_iter","","",62,[[],["t"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"into_par_iter","","",63,[[],["t"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"into_par_iter","","",64,[[],["t"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"into_par_iter","","",65,[[],["t"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"into_par_iter","","",66,[[],["t"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"into_par_iter","","",67,[[],["t"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"into_par_iter","","",68,[[],["t"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"into_par_iter","","",69,[[],["t"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"into_par_iter","","",70,[[],["t"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"into_par_iter","","",71,[[],["t"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"into_par_iter","","",72,[[],["t"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"into_par_iter","","",73,[[],["t"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"into_par_iter","","",74,[[],["t"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"into_par_iter","","",75,[[],["t"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"into_par_iter","","",76,[[],["t"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"into_par_iter","","",77,[[],["t"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"into_par_iter","","",8,[[],["t"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"into_par_iter","","",78,[[],["t"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"into_par_iter","","",79,[[],["t"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"into_par_iter","","",80,[[],["t"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::option","",81,[[],["t"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"into_par_iter","","",82,[[],["t"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"into_par_iter","","",83,[[],["t"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::range","",84,[[],["t"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::range_inclusive","",85,[[],["t"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::result","",86,[[],["t"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"into_par_iter","","",87,[[],["t"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"into_par_iter","","",88,[[],["t"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::slice","",89,[[],["t"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"into_par_iter","","",90,[[],["t"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"into_par_iter","","",91,[[],["t"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"into_par_iter","","",92,[[],["t"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"into_par_iter","","",93,[[],["t"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"into_par_iter","","",94,[[],["t"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"into_par_iter","","",95,[[],["t"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::str","",96,[[],["t"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"into_par_iter","","",97,[[],["t"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"into_par_iter","","",98,[[],["t"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"into_par_iter","","",99,[[],["t"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"into_par_iter","","",100,[[],["t"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"into_par_iter","","",101,[[],["t"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"into_par_iter","","",102,[[],["t"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"into_par_iter","","",103,[[],["t"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"into_par_iter","","",104,[[],["t"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"into_par_iter","","",105,[[],["t"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::vec","",106,[[],["t"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"into","rayon::iter","",0,[[],["result"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"as_ref","","",0,[[["self"]]]],[11,"eq","","",0,[[["self"],["either"]],["bool"]]],[11,"ne","","",0,[[["self"],["either"]],["bool"]]],[11,"cmp","","",0,[[["self"],["either"]],["ordering"]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"clone","","",0,[[["self"]],["either"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"partial_cmp","","",0,[[["self"],["either"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"],["either"]],["bool"]]],[11,"le","","",0,[[["self"],["either"]],["bool"]]],[11,"gt","","",0,[[["self"],["either"]],["bool"]]],[11,"ge","","",0,[[["self"],["either"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,[[["self"]]]],[11,"fold","","",0,[[["acc"],["g"]],["acc"]]],[11,"count","","",0,[[],["usize"]]],[11,"last","","",0,[[],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"deref_mut","","",0,[[["self"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"as_mut","","",0,[[["self"]]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"as_mut","","",0,[[["self"]],["str"]]],[11,"deref","","",0,[[["self"]]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"from","","",0,[[["result"]],["either"]]],[11,"fmt","rayon","",23,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"drop","","",22,[[["self"]]]],[11,"fmt","","",20,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",22,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",21,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",24,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",26,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",23,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",25,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"default","","",24,[[],[["threadpoolbuilder",["defaultspawn"]],["defaultspawn"]]]],[11,"description","","",23,[[["self"]],["str"]]],[11,"drive_unindexed","rayon::collections::binary_heap","",27,[[["c"]]]],[11,"opt_len","","",27,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",28,[[["c"]]]],[11,"opt_len","","",28,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::collections::btree_map","",29,[[["c"]]]],[11,"opt_len","","",29,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",30,[[["c"]]]],[11,"opt_len","","",30,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",31,[[["c"]]]],[11,"opt_len","","",31,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::collections::btree_set","",32,[[["c"]]]],[11,"opt_len","","",32,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",33,[[["c"]]]],[11,"opt_len","","",33,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::collections::hash_map","",34,[[["c"]]]],[11,"opt_len","","",34,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",35,[[["c"]]]],[11,"opt_len","","",35,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",36,[[["c"]]]],[11,"opt_len","","",36,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::collections::hash_set","",37,[[["c"]]]],[11,"opt_len","","",37,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",38,[[["c"]]]],[11,"opt_len","","",38,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::collections::linked_list","",39,[[["c"]]]],[11,"opt_len","","",39,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",40,[[["c"]]]],[11,"opt_len","","",40,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",41,[[["c"]]]],[11,"opt_len","","",41,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::collections::vec_deque","",42,[[["c"]]]],[11,"opt_len","","",42,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",43,[[["c"]]]],[11,"opt_len","","",43,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",44,[[["c"]]]],[11,"opt_len","","",44,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::iter","",45,[[["c"]]]],[11,"drive_unindexed","","",46,[[["c"]]]],[11,"opt_len","","",46,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",47,[[["c"]]]],[11,"opt_len","","",47,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",48,[[["c"]]]],[11,"opt_len","","",48,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",49,[[["c"]]]],[11,"drive_unindexed","","",50,[[["c"]]]],[11,"drive_unindexed","","",51,[[["c"]]]],[11,"drive_unindexed","","",52,[[["c"]]]],[11,"drive_unindexed","","",53,[[["c"]]]],[11,"drive_unindexed","","",54,[[["c"]]]],[11,"drive_unindexed","","",55,[[["c"]]]],[11,"drive_unindexed","","",56,[[["c"]]]],[11,"drive_unindexed","","",57,[[["c"]]]],[11,"opt_len","","",57,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",58,[[["c"]]]],[11,"drive_unindexed","","",59,[[["c"]]]],[11,"opt_len","","",59,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",60,[[["c"]]]],[11,"opt_len","","",60,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",62,[[["c"]]]],[11,"opt_len","","",62,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",61,[[["c"]]]],[11,"opt_len","","",61,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",63,[[["c"]]]],[11,"opt_len","","",63,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",64,[[["c"]]]],[11,"opt_len","","",64,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",66,[[["c"]]]],[11,"opt_len","","",66,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",67,[[["c"]]]],[11,"opt_len","","",67,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",68,[[["c"]]]],[11,"opt_len","","",68,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",69,[[["c"]]]],[11,"opt_len","","",69,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",70,[[["c"]]]],[11,"opt_len","","",70,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",72,[[["c"]]]],[11,"opt_len","","",72,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",71,[[["c"]]]],[11,"opt_len","","",71,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",73,[[["c"]]]],[11,"opt_len","","",73,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",74,[[["c"]]]],[11,"opt_len","","",74,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",75,[[["c"]]]],[11,"opt_len","","",75,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",76,[[["c"]]]],[11,"opt_len","","",76,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",77,[[["c"]]]],[11,"drive_unindexed","","",8,[[["c"]]]],[11,"drive_unindexed","","",78,[[["c"]]]],[11,"opt_len","","",78,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",79,[[["c"]]]],[11,"opt_len","","",79,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",80,[[["c"]]]],[11,"opt_len","","",80,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::option","",81,[[["c"]]]],[11,"opt_len","","",81,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",82,[[["c"]]]],[11,"opt_len","","",82,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",83,[[["c"]]]],[11,"opt_len","","",83,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::range","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::range_inclusive","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::result","",86,[[["c"]]]],[11,"opt_len","","",86,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",87,[[["c"]]]],[11,"opt_len","","",87,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",88,[[["c"]]]],[11,"opt_len","","",88,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::slice","",89,[[["c"]]]],[11,"opt_len","","",89,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",90,[[["c"]]]],[11,"opt_len","","",90,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",91,[[["c"]]]],[11,"opt_len","","",91,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",92,[[["c"]]]],[11,"opt_len","","",92,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",93,[[["c"]]]],[11,"opt_len","","",93,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",94,[[["c"]]]],[11,"drive_unindexed","","",95,[[["c"]]]],[11,"drive_unindexed","rayon::str","",96,[[["c"]]]],[11,"drive_unindexed","","",97,[[["c"]]]],[11,"drive_unindexed","","",98,[[["c"]]]],[11,"drive_unindexed","","",99,[[["c"]]]],[11,"drive_unindexed","","",100,[[["c"]]]],[11,"drive_unindexed","","",101,[[["c"]]]],[11,"drive_unindexed","","",102,[[["c"]]]],[11,"drive_unindexed","","",103,[[["c"]]]],[11,"drive_unindexed","","",104,[[["c"]]]],[11,"drive_unindexed","","",105,[[["c"]]]],[11,"drive_unindexed","rayon::vec","",106,[[["c"]]]],[11,"opt_len","","",106,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::iter","",0,[[["c"]]]],[11,"opt_len","","",0,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive","rayon::collections::binary_heap","",27,[[["c"]]]],[11,"len","","",27,[[["self"]],["usize"]]],[11,"with_producer","","",27,[[["cb"]]]],[11,"drive","","",28,[[["c"]]]],[11,"len","","",28,[[["self"]],["usize"]]],[11,"with_producer","","",28,[[["cb"]]]],[11,"drive","rayon::collections::vec_deque","",42,[[["c"]]]],[11,"len","","",42,[[["self"]],["usize"]]],[11,"with_producer","","",42,[[["cb"]]]],[11,"drive","","",43,[[["c"]]]],[11,"len","","",43,[[["self"]],["usize"]]],[11,"with_producer","","",43,[[["cb"]]]],[11,"drive","","",44,[[["c"]]]],[11,"len","","",44,[[["self"]],["usize"]]],[11,"with_producer","","",44,[[["cb"]]]],[11,"drive","rayon::iter","",46,[[["c"]]]],[11,"len","","",46,[[["self"]],["usize"]]],[11,"with_producer","","",46,[[["cb"]]]],[11,"drive","","",47,[[["c"]]]],[11,"len","","",47,[[["self"]],["usize"]]],[11,"with_producer","","",47,[[["cb"]]]],[11,"drive","","",48,[[["consumer"]]]],[11,"len","","",48,[[["self"]],["usize"]]],[11,"with_producer","","",48,[[["cb"]]]],[11,"len","","",57,[[["self"]],["usize"]]],[11,"drive","","",57,[[["consumer"]]]],[11,"with_producer","","",57,[[["cb"]]]],[11,"len","","",59,[[["self"]],["usize"]]],[11,"drive","","",59,[[["consumer"]]]],[11,"with_producer","","",59,[[["cb"]]]],[11,"drive","","",60,[[["c"]]]],[11,"len","","",60,[[["self"]],["usize"]]],[11,"with_producer","","",60,[[["cb"]]]],[11,"drive","","",62,[[["c"]]]],[11,"len","","",62,[[["self"]],["usize"]]],[11,"with_producer","","",62,[[["cb"]]]],[11,"drive","","",61,[[["c"]]]],[11,"len","","",61,[[["self"]],["usize"]]],[11,"with_producer","","",61,[[["cb"]]]],[11,"drive","","",63,[[["c"]]]],[11,"len","","",63,[[["self"]],["usize"]]],[11,"with_producer","","",63,[[["cb"]]]],[11,"drive","","",64,[[["c"]]]],[11,"len","","",64,[[["self"]],["usize"]]],[11,"with_producer","","",64,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",66,[[["c"]]]],[11,"len","","",66,[[["self"]],["usize"]]],[11,"with_producer","","",66,[[["cb"]]]],[11,"drive","","",67,[[["c"]]]],[11,"len","","",67,[[["self"]],["usize"]]],[11,"with_producer","","",67,[[["cb"]]]],[11,"drive","","",68,[[["c"]]]],[11,"len","","",68,[[["self"]],["usize"]]],[11,"with_producer","","",68,[[["cb"]]]],[11,"drive","","",69,[[["c"]]]],[11,"len","","",69,[[["self"]],["usize"]]],[11,"with_producer","","",69,[[["cb"]]]],[11,"drive","","",70,[[["consumer"]]]],[11,"len","","",70,[[["self"]],["usize"]]],[11,"with_producer","","",70,[[["cb"]]]],[11,"drive","","",72,[[["consumer"]]]],[11,"len","","",72,[[["self"]],["usize"]]],[11,"with_producer","","",72,[[["cb"]]]],[11,"drive","","",71,[[["consumer"]]]],[11,"len","","",71,[[["self"]],["usize"]]],[11,"with_producer","","",71,[[["cb"]]]],[11,"drive","","",73,[[["c"]]]],[11,"len","","",73,[[["self"]],["usize"]]],[11,"with_producer","","",73,[[["cb"]]]],[11,"drive","","",74,[[["c"]]]],[11,"len","","",74,[[["self"]],["usize"]]],[11,"with_producer","","",74,[[["cb"]]]],[11,"drive","","",75,[[["c"]]]],[11,"len","","",75,[[["self"]],["usize"]]],[11,"with_producer","","",75,[[["cb"]]]],[11,"drive","","",76,[[["c"]]]],[11,"len","","",76,[[["self"]],["usize"]]],[11,"with_producer","","",76,[[["cb"]]]],[11,"drive","","",78,[[["c"]]]],[11,"with_producer","","",78,[[["cb"]]]],[11,"len","","",78,[[["self"]],["usize"]]],[11,"drive","","",79,[[["c"]]]],[11,"len","","",79,[[["self"]],["usize"]]],[11,"with_producer","","",79,[[["cb"]]]],[11,"drive","","",80,[[["c"]]]],[11,"len","","",80,[[["self"]],["usize"]]],[11,"with_producer","","",80,[[["cb"]]]],[11,"drive","rayon::option","",81,[[["c"]]]],[11,"len","","",81,[[["self"]],["usize"]]],[11,"with_producer","","",81,[[["cb"]]]],[11,"drive","","",82,[[["c"]]]],[11,"len","","",82,[[["self"]],["usize"]]],[11,"with_producer","","",82,[[["cb"]]]],[11,"drive","","",83,[[["c"]]]],[11,"len","","",83,[[["self"]],["usize"]]],[11,"with_producer","","",83,[[["cb"]]]],[11,"drive","rayon::range","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","rayon::range_inclusive","",85,[[["c"]]]],[11,"len","","",85,[[["self"]],["usize"]]],[11,"with_producer","","",85,[[["cb"]]]],[11,"drive","","",85,[[["c"]]]],[11,"len","","",85,[[["self"]],["usize"]]],[11,"with_producer","","",85,[[["cb"]]]],[11,"drive","","",85,[[["c"]]]],[11,"len","","",85,[[["self"]],["usize"]]],[11,"with_producer","","",85,[[["cb"]]]],[11,"drive","","",85,[[["c"]]]],[11,"len","","",85,[[["self"]],["usize"]]],[11,"with_producer","","",85,[[["cb"]]]],[11,"drive","rayon::result","",86,[[["c"]]]],[11,"len","","",86,[[["self"]],["usize"]]],[11,"with_producer","","",86,[[["cb"]]]],[11,"drive","","",87,[[["c"]]]],[11,"len","","",87,[[["self"]],["usize"]]],[11,"with_producer","","",87,[[["cb"]]]],[11,"drive","","",88,[[["c"]]]],[11,"len","","",88,[[["self"]],["usize"]]],[11,"with_producer","","",88,[[["cb"]]]],[11,"drive","rayon::slice","",89,[[["c"]]]],[11,"len","","",89,[[["self"]],["usize"]]],[11,"with_producer","","",89,[[["cb"]]]],[11,"drive","","",90,[[["c"]]]],[11,"len","","",90,[[["self"]],["usize"]]],[11,"with_producer","","",90,[[["cb"]]]],[11,"drive","","",91,[[["c"]]]],[11,"len","","",91,[[["self"]],["usize"]]],[11,"with_producer","","",91,[[["cb"]]]],[11,"drive","","",92,[[["c"]]]],[11,"len","","",92,[[["self"]],["usize"]]],[11,"with_producer","","",92,[[["cb"]]]],[11,"drive","","",93,[[["c"]]]],[11,"len","","",93,[[["self"]],["usize"]]],[11,"with_producer","","",93,[[["cb"]]]],[11,"drive","rayon::vec","",106,[[["c"]]]],[11,"len","","",106,[[["self"]],["usize"]]],[11,"with_producer","","",106,[[["cb"]]]],[11,"drive","rayon::iter","",0,[[["c"]]]],[11,"len","","",0,[[["self"]],["usize"]]],[11,"with_producer","","",0,[[["cb"]]]],[11,"par_extend","","",0,[[["self"],["i"]]]],[11,"clone","rayon::collections::binary_heap","",27,[[["self"]],["intoiter"]]],[11,"clone","","",28,[[["self"]],["self"]]],[11,"clone","rayon::collections::btree_map","",30,[[["self"]],["self"]]],[11,"clone","rayon::collections::btree_set","",33,[[["self"]],["self"]]],[11,"clone","rayon::collections::hash_map","",35,[[["self"]],["self"]]],[11,"clone","rayon::collections::hash_set","",38,[[["self"]],["self"]]],[11,"clone","rayon::collections::linked_list","",39,[[["self"]],["intoiter"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"clone","rayon::collections::vec_deque","",42,[[["self"]],["intoiter"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","rayon::iter","",45,[[["self"]],["iterbridge"]]],[11,"clone","","",46,[[["self"]],["chain"]]],[11,"clone","","",47,[[["self"]],["chunks"]]],[11,"clone","","",48,[[["self"]],["enumerate"]]],[11,"clone","","",49,[[["self"]],["filter"]]],[11,"clone","","",50,[[["self"]],["filtermap"]]],[11,"clone","","",51,[[["self"]],["flatmap"]]],[11,"clone","","",52,[[["self"]],["flatten"]]],[11,"clone","","",53,[[["self"]],["fold"]]],[11,"clone","","",54,[[["self"]],["foldwith"]]],[11,"clone","","",55,[[["self"]],["tryfold"]]],[11,"clone","","",56,[[["self"]],["tryfoldwith"]]],[11,"clone","","",57,[[["self"]],["skip"]]],[11,"clone","","",58,[[["self"]],["split"]]],[11,"clone","","",59,[[["self"]],["take"]]],[11,"clone","","",60,[[["self"]],["map"]]],[11,"clone","","",62,[[["self"]],["mapwith"]]],[11,"clone","","",61,[[["self"]],["mapinit"]]],[11,"clone","","",63,[[["self"]],["zip"]]],[11,"clone","","",64,[[["self"]],["zipeq"]]],[11,"clone","","",65,[[["self"]],["multizip"]]],[11,"clone","","",66,[[["self"]],["interleave"]]],[11,"clone","","",67,[[["self"]],["interleaveshortest"]]],[11,"clone","","",68,[[["self"]],["intersperse"]]],[11,"clone","","",69,[[["self"]],["update"]]],[11,"clone","","",70,[[["self"]],["rev"]]],[11,"clone","","",72,[[["self"]],["minlen"]]],[11,"clone","","",71,[[["self"]],["maxlen"]]],[11,"clone","","",73,[[["self"]],["cloned"]]],[11,"clone","","",74,[[["self"]],["copied"]]],[11,"clone","","",75,[[["self"]],["inspect"]]],[11,"clone","","",76,[[["self"]],["panicfuse"]]],[11,"clone","","",77,[[["self"]],["whilesome"]]],[11,"clone","","",8,[[["self"]],["repeat"]]],[11,"clone","","",78,[[["self"]],["repeatn"]]],[11,"clone","","",79,[[["self"]],["self"]]],[11,"clone","","",80,[[["self"]],["once"]]],[11,"clone","rayon::option","",81,[[["self"]],["intoiter"]]],[11,"clone","","",82,[[["self"]],["self"]]],[11,"clone","rayon::range","",84,[[["self"]],["iter"]]],[11,"clone","rayon::range_inclusive","",85,[[["self"]],["iter"]]],[11,"clone","rayon::result","",86,[[["self"]],["intoiter"]]],[11,"clone","","",87,[[["self"]],["self"]]],[11,"clone","rayon::slice","",89,[[["self"]],["self"]]],[11,"clone","","",90,[[["self"]],["self"]]],[11,"clone","","",91,[[["self"]],["self"]]],[11,"clone","","",94,[[["self"]],["self"]]],[11,"clone","rayon::str","",96,[[["self"]],["chars"]]],[11,"clone","","",97,[[["self"]],["charindices"]]],[11,"clone","","",98,[[["self"]],["bytes"]]],[11,"clone","","",99,[[["self"]],["encodeutf16"]]],[11,"clone","","",100,[[["self"]],["split"]]],[11,"clone","","",101,[[["self"]],["splitterminator"]]],[11,"clone","","",102,[[["self"]],["lines"]]],[11,"clone","","",103,[[["self"]],["splitwhitespace"]]],[11,"clone","","",104,[[["self"]],["matches"]]],[11,"clone","","",105,[[["self"]],["matchindices"]]],[11,"clone","rayon::vec","",106,[[["self"]],["intoiter"]]],[11,"fmt","rayon::collections::binary_heap","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::collections::btree_map","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::collections::btree_set","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::collections::hash_map","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::collections::hash_set","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::collections::linked_list","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::collections::vec_deque","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::iter","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::option","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::range","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::range_inclusive","",85,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::result","",86,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::slice","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",92,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",93,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",94,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",95,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::str","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",98,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",100,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",101,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",102,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",103,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",104,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",105,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::vec","",106,[[["formatter"],["self"]],["result"]]],[11,"migrated","rayon","Returns `true` if the closure was called from a different…",20,[[["self"]],["bool"]]],[11,"index","","Get the index of this thread in the pool, within…",21,[[["self"]],["usize"]]],[11,"name","","Get the string that was specified by…",21,[[["self"]],[["str"],["option",["str"]]]]],[11,"stack_size","","Get the value that was specified by…",21,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"run","","Execute the main loop for this thread. This will not…",21,[[]]],[11,"new","","Deprecated in favor of `ThreadPoolBuilder::build`.",22,[[["configuration"]],[["result",["threadpool","box"]],["threadpool"],["box",["error"]]]]],[11,"install","","Executes `op` within the threadpool. Any attempts to use…",22,[[["op"],["self"]],["r"]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",22,[[["self"]],["usize"]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool,…",22,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has…",22,[[["self"]],[["bool"],["option",["bool"]]]]],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and…",22,[[["a"],["self"],["b"]]]],[11,"scope","","Creates a scope that executes within this thread-pool.…",22,[[["op"],["self"]],["r"]]],[11,"scope_fifo","","Creates a scope that executes within this thread-pool.…",22,[[["op"],["self"]],["r"]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task…",22,[[["op"],["self"]]]],[11,"spawn_fifo","","Spawns an asynchronous task in this thread-pool. This task…",22,[[["op"],["self"]]]],[11,"new","","Creates and returns a valid rayon thread pool builder, but…",24,[[],[["threadpoolbuilder",["defaultspawn"]],["defaultspawn"]]]],[11,"build","","Create a new `ThreadPool` initialized using this…",24,[[],[["result",["threadpool","threadpoolbuilderror"]],["threadpoolbuilderror"],["threadpool"]]]],[11,"build_global","","Initializes the global thread pool. This initialization is…",24,[[],[["result",["threadpoolbuilderror"]],["threadpoolbuilderror"]]]],[11,"build_scoped","","Create a scoped `ThreadPool` initialized using this…",24,[[["w"],["f"]],[["result",["threadpoolbuilderror"]],["threadpoolbuilderror"]]]],[11,"spawn_handler","","Set a custom function for spawning threads.",24,[[["f"]],[["threadpoolbuilder",["customspawn"]],["customspawn"]]]],[11,"thread_name","","Set a closure which takes a thread index and returns the…",24,[[["f"]],["threadpoolbuilder"]]],[11,"num_threads","","Set the number of threads to be used in the rayon…",24,[[["usize"]],["threadpoolbuilder"]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to…",24,[[["h"]],["threadpoolbuilder"]]],[11,"stack_size","","Set the stack size of the worker threads",24,[[["usize"]],["threadpoolbuilder"]]],[11,"breadth_first","","(DEPRECATED) Suggest to worker threads that they execute…",24,[[],["threadpoolbuilder"]]],[11,"start_handler","","Set a callback to be invoked on thread start.",24,[[["h"]],["threadpoolbuilder"]]],[11,"exit_handler","","Set a callback to be invoked on thread exit.",24,[[["h"]],["threadpoolbuilder"]]],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job…",25,[[["self"],["body"]]]],[11,"spawn_fifo","","Spawns a job into the fork-join scope `self`. This job…",26,[[["self"],["body"]]]],[11,"is_left","rayon::iter","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],[["l"],["either"],["r"]]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],[["either"],["l"],["r"]]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either"]]],[11,"left_or","","Return left value or given value",0,[[["l"]],["l"]]],[11,"left_or_default","","Return left or a default",0,[[],["l"]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[["f"]],["l"]]],[11,"right_or","","Return right value or given value",0,[[["r"]],["r"]]],[11,"right_or_default","","Return right or a default",0,[[],["r"]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[["f"]],["r"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[],["t"]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[["f"]],["either"]]]],"p":[[4,"Either"],[8,"ProducerCallback"],[8,"Producer"],[8,"Consumer"],[8,"Folder"],[8,"Reducer"],[8,"UnindexedConsumer"],[8,"UnindexedProducer"],[3,"Repeat"],[8,"ParallelBridge"],[8,"IntoParallelIterator"],[8,"IntoParallelRefIterator"],[8,"IntoParallelRefMutIterator"],[8,"ParallelIterator"],[8,"IndexedParallelIterator"],[8,"FromParallelIterator"],[8,"ParallelExtend"],[8,"ParallelSlice"],[8,"ParallelSliceMut"],[8,"ParallelString"],[3,"FnContext"],[3,"ThreadBuilder"],[3,"ThreadPool"],[3,"ThreadPoolBuildError"],[3,"ThreadPoolBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IterBridge"],[3,"Chain"],[3,"Chunks"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Flatten"],[3,"Fold"],[3,"FoldWith"],[3,"TryFold"],[3,"TryFoldWith"],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"Map"],[3,"MapInit"],[3,"MapWith"],[3,"Zip"],[3,"ZipEq"],[3,"MultiZip"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Intersperse"],[3,"Update"],[3,"Rev"],[3,"MaxLen"],[3,"MinLen"],[3,"Cloned"],[3,"Copied"],[3,"Inspect"],[3,"PanicFuse"],[3,"WhileSome"],[3,"RepeatN"],[3,"Empty"],[3,"Once"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Chunks"],[3,"Windows"],[3,"IterMut"],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"EncodeUtf16"],[3,"Split"],[3,"SplitTerminator"],[3,"Lines"],[3,"SplitWhitespace"],[3,"Matches"],[3,"MatchIndices"],[3,"IntoIter"]]};
searchIndex["rayon_core"] = {"doc":"Under construction","i":[[3,"ThreadBuilder","rayon_core","Thread builder used for customization via…",null,null],[3,"Scope","","Represents a fork-join scope which can be used to spawn…",null,null],[3,"ScopeFifo","","Represents a fork-join scope which can be used to spawn…",null,null],[3,"ThreadPool","","Represents a user created [thread-pool].",null,null],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",null,null],[3,"ThreadPoolBuilder","","Used to create a new [`ThreadPool`] or to configure the…",null,null],[3,"Configuration","","Contains the rayon thread pool configuration. Use…",null,null],[3,"FnContext","","Provides the calling context to a closure called by…",null,null],[5,"join","","Takes two closures and potentially runs them in parallel.…",null,[[["a"],["b"]]]],[5,"join_context","","Identical to `join`, except that the closures have a…",null,[[["a"],["b"]]]],[5,"scope","","Create a \"fork-join\" scope `s` and invokes the closure…",null,[[["op"]],["r"]]],[5,"scope_fifo","","Create a \"fork-join\" scope `s` with FIFO order, and…",null,[[["op"]],["r"]]],[5,"spawn","","Fires off a task into the Rayon threadpool in the \"static\"…",null,[[["f"]]]],[5,"spawn_fifo","","Fires off a task into the Rayon threadpool in the \"static\"…",null,[[["f"]]]],[5,"current_thread_has_pending_tasks","","If called from a Rayon worker thread, indicates whether…",null,[[],[["option",["bool"]],["bool"]]]],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index of…",null,[[],[["option",["usize"]],["usize"]]]],[5,"current_num_threads","","Returns the number of threads in the current registry. If…",null,[[],["usize"]]],[5,"initialize","","Deprecated in favor of `ThreadPoolBuilder::build_global`.",null,[[["configuration"]],[["result",["box"]],["box",["error"]]]]],[11,"index","","Get the index of this thread in the pool, within…",0,[[["self"]],["usize"]]],[11,"name","","Get the string that was specified by…",0,[[["self"]],[["str"],["option",["str"]]]]],[11,"stack_size","","Get the value that was specified by…",0,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"run","","Execute the main loop for this thread. This will not…",0,[[]]],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job…",1,[[["self"],["body"]]]],[11,"spawn_fifo","","Spawns a job into the fork-join scope `self`. This job…",2,[[["self"],["body"]]]],[11,"new","","Deprecated in favor of `ThreadPoolBuilder::build`.",3,[[["configuration"]],[["result",["threadpool","box"]],["threadpool"],["box",["error"]]]]],[11,"install","","Executes `op` within the threadpool. Any attempts to use…",3,[[["op"],["self"]],["r"]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",3,[[["self"]],["usize"]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool,…",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has…",3,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and…",3,[[["a"],["self"],["b"]]]],[11,"scope","","Creates a scope that executes within this thread-pool.…",3,[[["op"],["self"]],["r"]]],[11,"scope_fifo","","Creates a scope that executes within this thread-pool.…",3,[[["op"],["self"]],["r"]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task…",3,[[["op"],["self"]]]],[11,"spawn_fifo","","Spawns an asynchronous task in this thread-pool. This task…",3,[[["op"],["self"]]]],[11,"new","","Creates and returns a valid rayon thread pool builder, but…",4,[[],["self"]]],[11,"build","","Create a new `ThreadPool` initialized using this…",4,[[],[["threadpool"],["result",["threadpool","threadpoolbuilderror"]],["threadpoolbuilderror"]]]],[11,"build_global","","Initializes the global thread pool. This initialization is…",4,[[],[["result",["threadpoolbuilderror"]],["threadpoolbuilderror"]]]],[11,"build_scoped","","Create a scoped `ThreadPool` initialized using this…",4,[[["w"],["f"]],[["result",["threadpoolbuilderror"]],["threadpoolbuilderror"]]]],[11,"spawn_handler","","Set a custom function for spawning threads.",4,[[["f"]],[["customspawn"],["threadpoolbuilder",["customspawn"]]]]],[11,"thread_name","","Set a closure which takes a thread index and returns the…",4,[[["f"]],["self"]]],[11,"num_threads","","Set the number of threads to be used in the rayon…",4,[[["usize"]],["self"]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to…",4,[[["h"]],["self"]]],[11,"stack_size","","Set the stack size of the worker threads",4,[[["usize"]],["self"]]],[11,"breadth_first","","(DEPRECATED) Suggest to worker threads that they execute…",4,[[],["self"]]],[11,"start_handler","","Set a callback to be invoked on thread start.",4,[[["h"]],["self"]]],[11,"exit_handler","","Set a callback to be invoked on thread exit.",4,[[["h"]],["self"]]],[11,"new","","Creates and return a valid rayon thread pool…",5,[[],["configuration"]]],[11,"build","","Deprecated in favor of `ThreadPoolBuilder::build`.",5,[[],[["box",["error"]],["threadpool"],["result",["threadpool","box"]]]]],[11,"thread_name","","Deprecated in favor of `ThreadPoolBuilder::thread_name`.",5,[[["f"]],["self"]]],[11,"num_threads","","Deprecated in favor of `ThreadPoolBuilder::num_threads`.",5,[[["usize"]],["configuration"]]],[11,"panic_handler","","Deprecated in favor of `ThreadPoolBuilder::panic_handler`.",5,[[["h"]],["configuration"]]],[11,"stack_size","","Deprecated in favor of `ThreadPoolBuilder::stack_size`.",5,[[["usize"]],["self"]]],[11,"breadth_first","","Deprecated in favor of `ThreadPoolBuilder::breadth_first`.",5,[[],["self"]]],[11,"start_handler","","Deprecated in favor of `ThreadPoolBuilder::start_handler`.",5,[[["h"]],["configuration"]]],[11,"exit_handler","","Deprecated in favor of `ThreadPoolBuilder::exit_handler`.",5,[[["h"]],["configuration"]]],[11,"migrated","","Returns `true` if the closure was called from a different…",6,[[["self"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"drop","","",3,[[["self"]]]],[11,"default","","",4,[[],["self"]]],[11,"default","","",5,[[],["self"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"description","","",7,[[["self"]],["str"]]]],"p":[[3,"ThreadBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"ThreadPool"],[3,"ThreadPoolBuilder"],[3,"Configuration"],[3,"FnContext"],[3,"ThreadPoolBuildError"]]};
searchIndex["scopeguard"] = {"doc":"A scope guard will run a given closure when it goes out of…","i":[[3,"ScopeGuard","scopeguard","`ScopeGuard` is a scope guard that may own a protected…",null,null],[4,"Always","","Always run on scope exit.",null,null],[5,"guard","","Create a new `ScopeGuard` owning `v` and with deferred…",null,[[["t"],["f"]],[["always"],["scopeguard",["always"]]]]],[8,"Strategy","","Controls in which cases the associated code should be run",null,null],[10,"should_run","","Return `true` if the guard’s associated code should run…",0,[[],["bool"]]],[11,"with_strategy","","Create a `ScopeGuard` that owns `v` (accessible through…",1,[[["t"],["f"]],["scopeguard"]]],[11,"into_inner","","“Defuse” the guard and extract the value without calling…",1,[[],["t"]]],[14,"defer","","Macro to create a `ScopeGuard` (always run).",null,null],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"should_run","","",2,[[],["bool"]]],[11,"deref","","",1,[[["self"]],["t"]]],[11,"deref_mut","","",1,[[["self"]],["t"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"drop","","",1,[[["self"]]]]],"p":[[8,"Strategy"],[3,"ScopeGuard"],[4,"Always"]]};
searchIndex["serde"] = {"doc":"Serde","i":[[0,"de","serde","Generic data structure deserialization framework.",null,null],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any…",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",0,null],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32`…",0,null],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or…",0,null],[13,"Float","","The input contained a floating point `f32` or `f64` that…",0,null],[13,"Char","","The input contained a `char` that was not expected.",0,null],[13,"Str","","The input contained a `&str` or `String` that was not…",0,null],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not…",0,null],[13,"Unit","","The input contained a unit `()` that was not expected.",0,null],[13,"Option","","The input contained an `Option<T>` that was not expected.",0,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",0,null],[13,"Seq","","The input contained a sequence that was not expected.",0,null],[13,"Map","","The input contained a map that was not expected.",0,null],[13,"Enum","","The input contained an enum that was not expected.",0,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",0,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",0,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",0,null],[13,"StructVariant","","The input contained a struct variant that was not expected.",0,null],[13,"Other","","A message stating what uncategorized thing the input…",0,null],[0,"value","","Building blocks for deserializing basic values using the…",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can…",null,null],[3,"UnitDeserializer","","A deserializer holding a `()`.",null,null],[3,"BoolDeserializer","","A deserializer holding a `bool`.",null,null],[3,"I8Deserializer","","A deserializer holding an `i8`.",null,null],[3,"I16Deserializer","","A deserializer holding an `i16`.",null,null],[3,"I32Deserializer","","A deserializer holding an `i32`.",null,null],[3,"I64Deserializer","","A deserializer holding an `i64`.",null,null],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",null,null],[3,"U8Deserializer","","A deserializer holding a `u8`.",null,null],[3,"U16Deserializer","","A deserializer holding a `u16`.",null,null],[3,"U64Deserializer","","A deserializer holding a `u64`.",null,null],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",null,null],[3,"F32Deserializer","","A deserializer holding an `f32`.",null,null],[3,"F64Deserializer","","A deserializer holding an `f64`.",null,null],[3,"CharDeserializer","","A deserializer holding a `char`.",null,null],[3,"I128Deserializer","","A deserializer holding an `i128`.",null,null],[3,"U128Deserializer","","A deserializer holding a `u128`.",null,null],[3,"U32Deserializer","","A deserializer holding a `u32`.",null,null],[3,"StrDeserializer","","A deserializer holding a `&str`.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to…",null,null],[3,"StringDeserializer","","A deserializer holding a `String`.",null,null],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",null,null],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to…",null,null],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",null,null],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",null,null],[11,"new","","Create a new borrowed deserializer from the given string.",1,[[["str"]],["borrowedstrdeserializer"]]],[11,"new","","Create a new borrowed deserializer from the given byte…",2,[[],["borrowedbytesdeserializer"]]],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",3,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",3,[[],["result"]]],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",4,[[["a"]],["self"]]],[11,"new","","Construct a new `MapDeserializer<I, E>`.",5,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",5,[[],["result"]]],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",6,[[["a"]],["self"]]],[8,"Error","serde::de","The `Error` trait allows `Deserialize` implementations to…",null,null],[10,"custom","","Raised when there is general error when deserializing a…",7,[[["t"]],["self"]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from…",7,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right…",7,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input…",7,[[["usize"],["expected"]],["self"]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant…",7,[[["str"]],["self"]]],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field…",7,[[["str"]],["self"]]],[11,"missing_field","","Raised when a `Deserialize` struct type expected to…",7,[[["str"]],["self"]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than…",7,[[["str"]],["self"]]],[8,"Expected","","`Expected` represents an explanation of what data a…",null,null],[10,"fmt","","Format an explanation of what data was being expected.…",8,[[["formatter"],["self"]],["result"]]],[8,"Deserialize","","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"DeserializeOwned","","A data structure that can be deserialized without…",null,null],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the…",null,null],[16,"Value","","The type produced by using this seed.",10,null],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize`…",10,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Visitor","","This trait represents a visitor that walks through a…",null,null],[16,"Value","","The value produced by this visitor.",12,null],[10,"expecting","","Format a message stating what data this Visitor expects to…",12,[[["formatter"],["self"]],["result"]]],[11,"visit_bool","","The input contains a boolean.",12,[[["bool"]],["result"]]],[11,"visit_i8","","The input contains an `i8`.",12,[[["i8"]],["result"]]],[11,"visit_i16","","The input contains an `i16`.",12,[[["i16"]],["result"]]],[11,"visit_i32","","The input contains an `i32`.",12,[[["i32"]],["result"]]],[11,"visit_i64","","The input contains an `i64`.",12,[[["i64"]],["result"]]],[11,"visit_i128","","The input contains a `i128`.",12,[[["i128"]],["result"]]],[11,"visit_u8","","The input contains a `u8`.",12,[[["u8"]],["result"]]],[11,"visit_u16","","The input contains a `u16`.",12,[[["u16"]],["result"]]],[11,"visit_u32","","The input contains a `u32`.",12,[[["u32"]],["result"]]],[11,"visit_u64","","The input contains a `u64`.",12,[[["u64"]],["result"]]],[11,"visit_u128","","The input contains a `u128`.",12,[[["u128"]],["result"]]],[11,"visit_f32","","The input contains an `f32`.",12,[[["f32"]],["result"]]],[11,"visit_f64","","The input contains an `f64`.",12,[[["f64"]],["result"]]],[11,"visit_char","","The input contains a `char`.",12,[[["char"]],["result"]]],[11,"visit_str","","The input contains a string. The lifetime of the string is…",12,[[["str"]],["result"]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as…",12,[[["str"]],["result"]]],[11,"visit_string","","The input contains a string and ownership of the string is…",12,[[["string"]],["result"]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte…",12,[[],["result"]]],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as…",12,[[],["result"]]],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte…",12,[[["vec",["u8"]],["u8"]],["result"]]],[11,"visit_none","","The input contains an optional that is absent.",12,[[],["result"]]],[11,"visit_some","","The input contains an optional that is present.",12,[[["d"]],["result"]]],[11,"visit_unit","","The input contains a unit `()`.",12,[[],["result"]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",12,[[["d"]],["result"]]],[11,"visit_seq","","The input contains a sequence of elements.",12,[[["a"]],["result"]]],[11,"visit_map","","The input contains a key-value map.",12,[[["a"]],["result"]]],[11,"visit_enum","","The input contains an enum.",12,[[["a"]],["result"]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",13,null],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"],["t"]],[["result",["option"]],["option"]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"]],[["result",["option"]],["option"]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence,…",13,[[["self"]],[["option",["usize"]],["usize"]]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",14,null],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"],["k"]],[["result",["option"]],["option"]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"],["v"]],["result"]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"],["k"],["v"]],[["option"],["result",["option"]]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"]],[["result",["option"]],["option"]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"]],["result"]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"]],[["option"],["result",["option"]]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if…",14,[[["self"]],[["option",["usize"]],["usize"]]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",15,null],[16,"Variant","","The `Visitor` that will be used to deserialize the content…",15,null],[10,"variant_seed","","`variant` is called to identify which variant to…",15,[[["v"]],["result"]]],[11,"variant","","`variant` is called to identify which variant to…",15,[[],["result"]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",16,null],[10,"unit_variant","","Called when deserializing a variant with no values.",16,[[],["result"]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",16,[[["t"]],["result"]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",16,[[],["result"]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",16,[[["usize"],["v"]],["result"]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",16,[[["v"]],["result"]]],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from…",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",17,null],[10,"into_deserializer","","Convert this value into a deserializer.",17,[[]]],[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not…",null,null],[8,"Error","","Trait used by `Serialize` implementations to generically…",null,null],[10,"custom","","Used when a [`Serialize`] implementation encounters any…",18,[[["t"]],["self"]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["s"],["self"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result"]]],[10,"serialize_none","","Serialize a [`None`] value.",20,[[],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["str"],["u32"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["str"],["u32"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["option",["usize"]],["usize"]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["option",["usize"]],["usize"]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",21,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",21,null],[10,"serialize_element","","Serialize a sequence element.",21,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a sequence.",21,[[],["result"]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",22,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",22,null],[10,"serialize_element","","Serialize a tuple element.",22,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple.",22,[[],["result"]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",23,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",23,null],[10,"serialize_field","","Serialize a tuple struct field.",23,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple struct.",23,[[],["result"]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",24,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",24,null],[10,"serialize_field","","Serialize a tuple variant field.",24,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple variant.",24,[[],["result"]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",25,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",25,null],[10,"serialize_key","","Serialize a map key.",25,[[["self"],["t"]],["result"]]],[10,"serialize_value","","Serialize a map value.",25,[[["self"],["t"]],["result"]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",25,[[["k"],["self"],["v"]],["result"]]],[10,"end","","Finish serializing a map.",25,[[],["result"]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",26,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",26,null],[10,"serialize_field","","Serialize a struct field.",26,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct field has been skipped.",26,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct.",26,[[],["result"]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",27,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",27,null],[10,"serialize_field","","Serialize a struct variant field.",27,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",27,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct variant.",27,[[],["result"]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["s"],["self"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result"]]],[10,"serialize_none","","Serialize a [`None`] value.",20,[[],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["str"],["u32"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["str"],["u32"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["option",["usize"]],["usize"]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["option",["usize"]],["usize"]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of…",null,null],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is…",null,null],[11,"fmt","serde::de","",28,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","serde::de::value","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","serde::ser","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"deserialize","serde::de","",28,[[["d"]],[["result",["ignoredany"]],["ignoredany"]]]],[11,"deserialize_bool","serde::de::value","",30,[[["v"]],["result"]]],[11,"deserialize_i8","","",30,[[["v"]],["result"]]],[11,"deserialize_i16","","",30,[[["v"]],["result"]]],[11,"deserialize_i32","","",30,[[["v"]],["result"]]],[11,"deserialize_i64","","",30,[[["v"]],["result"]]],[11,"deserialize_i128","","",30,[[["v"]],["result"]]],[11,"deserialize_u8","","",30,[[["v"]],["result"]]],[11,"deserialize_u16","","",30,[[["v"]],["result"]]],[11,"deserialize_u32","","",30,[[["v"]],["result"]]],[11,"deserialize_u64","","",30,[[["v"]],["result"]]],[11,"deserialize_u128","","",30,[[["v"]],["result"]]],[11,"deserialize_f32","","",30,[[["v"]],["result"]]],[11,"deserialize_f64","","",30,[[["v"]],["result"]]],[11,"deserialize_char","","",30,[[["v"]],["result"]]],[11,"deserialize_str","","",30,[[["v"]],["result"]]],[11,"deserialize_string","","",30,[[["v"]],["result"]]],[11,"deserialize_bytes","","",30,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",30,[[["v"]],["result"]]],[11,"deserialize_unit","","",30,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",30,[[["v"]],["result"]]],[11,"deserialize_tuple","","",30,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",30,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",30,[[["v"]],["result"]]],[11,"deserialize_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",30,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",30,[[["v"]],["result"]]],[11,"deserialize_any","","",30,[[["v"]],["result"]]],[11,"deserialize_option","","",30,[[["v"]],["result"]]],[11,"deserialize_bool","","",31,[[["v"]],["result"]]],[11,"deserialize_i8","","",31,[[["v"]],["result"]]],[11,"deserialize_i16","","",31,[[["v"]],["result"]]],[11,"deserialize_i32","","",31,[[["v"]],["result"]]],[11,"deserialize_i64","","",31,[[["v"]],["result"]]],[11,"deserialize_i128","","",31,[[["v"]],["result"]]],[11,"deserialize_u8","","",31,[[["v"]],["result"]]],[11,"deserialize_u16","","",31,[[["v"]],["result"]]],[11,"deserialize_u32","","",31,[[["v"]],["result"]]],[11,"deserialize_u64","","",31,[[["v"]],["result"]]],[11,"deserialize_u128","","",31,[[["v"]],["result"]]],[11,"deserialize_f32","","",31,[[["v"]],["result"]]],[11,"deserialize_f64","","",31,[[["v"]],["result"]]],[11,"deserialize_char","","",31,[[["v"]],["result"]]],[11,"deserialize_str","","",31,[[["v"]],["result"]]],[11,"deserialize_string","","",31,[[["v"]],["result"]]],[11,"deserialize_bytes","","",31,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",31,[[["v"]],["result"]]],[11,"deserialize_option","","",31,[[["v"]],["result"]]],[11,"deserialize_unit","","",31,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",31,[[["v"]],["result"]]],[11,"deserialize_tuple","","",31,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",31,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",31,[[["v"]],["result"]]],[11,"deserialize_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",31,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",31,[[["v"]],["result"]]],[11,"deserialize_any","","",31,[[["v"]],["result"]]],[11,"deserialize_bool","","",32,[[["v"]],["result"]]],[11,"deserialize_i8","","",32,[[["v"]],["result"]]],[11,"deserialize_i16","","",32,[[["v"]],["result"]]],[11,"deserialize_i32","","",32,[[["v"]],["result"]]],[11,"deserialize_i64","","",32,[[["v"]],["result"]]],[11,"deserialize_i128","","",32,[[["v"]],["result"]]],[11,"deserialize_u8","","",32,[[["v"]],["result"]]],[11,"deserialize_u16","","",32,[[["v"]],["result"]]],[11,"deserialize_u32","","",32,[[["v"]],["result"]]],[11,"deserialize_u64","","",32,[[["v"]],["result"]]],[11,"deserialize_u128","","",32,[[["v"]],["result"]]],[11,"deserialize_f32","","",32,[[["v"]],["result"]]],[11,"deserialize_f64","","",32,[[["v"]],["result"]]],[11,"deserialize_char","","",32,[[["v"]],["result"]]],[11,"deserialize_str","","",32,[[["v"]],["result"]]],[11,"deserialize_string","","",32,[[["v"]],["result"]]],[11,"deserialize_bytes","","",32,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",32,[[["v"]],["result"]]],[11,"deserialize_option","","",32,[[["v"]],["result"]]],[11,"deserialize_unit","","",32,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",32,[[["v"]],["result"]]],[11,"deserialize_tuple","","",32,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",32,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",32,[[["v"]],["result"]]],[11,"deserialize_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",32,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",32,[[["v"]],["result"]]],[11,"deserialize_any","","",32,[[["v"]],["result"]]],[11,"deserialize_bool","","",33,[[["v"]],["result"]]],[11,"deserialize_i8","","",33,[[["v"]],["result"]]],[11,"deserialize_i16","","",33,[[["v"]],["result"]]],[11,"deserialize_i32","","",33,[[["v"]],["result"]]],[11,"deserialize_i64","","",33,[[["v"]],["result"]]],[11,"deserialize_i128","","",33,[[["v"]],["result"]]],[11,"deserialize_u8","","",33,[[["v"]],["result"]]],[11,"deserialize_u16","","",33,[[["v"]],["result"]]],[11,"deserialize_u32","","",33,[[["v"]],["result"]]],[11,"deserialize_u64","","",33,[[["v"]],["result"]]],[11,"deserialize_u128","","",33,[[["v"]],["result"]]],[11,"deserialize_f32","","",33,[[["v"]],["result"]]],[11,"deserialize_f64","","",33,[[["v"]],["result"]]],[11,"deserialize_char","","",33,[[["v"]],["result"]]],[11,"deserialize_str","","",33,[[["v"]],["result"]]],[11,"deserialize_string","","",33,[[["v"]],["result"]]],[11,"deserialize_bytes","","",33,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",33,[[["v"]],["result"]]],[11,"deserialize_option","","",33,[[["v"]],["result"]]],[11,"deserialize_unit","","",33,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",33,[[["v"]],["result"]]],[11,"deserialize_tuple","","",33,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",33,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",33,[[["v"]],["result"]]],[11,"deserialize_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",33,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",33,[[["v"]],["result"]]],[11,"deserialize_any","","",33,[[["v"]],["result"]]],[11,"deserialize_bool","","",34,[[["v"]],["result"]]],[11,"deserialize_i8","","",34,[[["v"]],["result"]]],[11,"deserialize_i16","","",34,[[["v"]],["result"]]],[11,"deserialize_i32","","",34,[[["v"]],["result"]]],[11,"deserialize_i64","","",34,[[["v"]],["result"]]],[11,"deserialize_i128","","",34,[[["v"]],["result"]]],[11,"deserialize_u8","","",34,[[["v"]],["result"]]],[11,"deserialize_u16","","",34,[[["v"]],["result"]]],[11,"deserialize_u32","","",34,[[["v"]],["result"]]],[11,"deserialize_u64","","",34,[[["v"]],["result"]]],[11,"deserialize_u128","","",34,[[["v"]],["result"]]],[11,"deserialize_f32","","",34,[[["v"]],["result"]]],[11,"deserialize_f64","","",34,[[["v"]],["result"]]],[11,"deserialize_char","","",34,[[["v"]],["result"]]],[11,"deserialize_str","","",34,[[["v"]],["result"]]],[11,"deserialize_string","","",34,[[["v"]],["result"]]],[11,"deserialize_bytes","","",34,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",34,[[["v"]],["result"]]],[11,"deserialize_option","","",34,[[["v"]],["result"]]],[11,"deserialize_unit","","",34,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",34,[[["v"]],["result"]]],[11,"deserialize_tuple","","",34,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",34,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",34,[[["v"]],["result"]]],[11,"deserialize_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",34,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",34,[[["v"]],["result"]]],[11,"deserialize_any","","",34,[[["v"]],["result"]]],[11,"deserialize_bool","","",35,[[["v"]],["result"]]],[11,"deserialize_i8","","",35,[[["v"]],["result"]]],[11,"deserialize_i16","","",35,[[["v"]],["result"]]],[11,"deserialize_i32","","",35,[[["v"]],["result"]]],[11,"deserialize_i64","","",35,[[["v"]],["result"]]],[11,"deserialize_i128","","",35,[[["v"]],["result"]]],[11,"deserialize_u8","","",35,[[["v"]],["result"]]],[11,"deserialize_u16","","",35,[[["v"]],["result"]]],[11,"deserialize_u32","","",35,[[["v"]],["result"]]],[11,"deserialize_u64","","",35,[[["v"]],["result"]]],[11,"deserialize_u128","","",35,[[["v"]],["result"]]],[11,"deserialize_f32","","",35,[[["v"]],["result"]]],[11,"deserialize_f64","","",35,[[["v"]],["result"]]],[11,"deserialize_char","","",35,[[["v"]],["result"]]],[11,"deserialize_str","","",35,[[["v"]],["result"]]],[11,"deserialize_string","","",35,[[["v"]],["result"]]],[11,"deserialize_bytes","","",35,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",35,[[["v"]],["result"]]],[11,"deserialize_option","","",35,[[["v"]],["result"]]],[11,"deserialize_unit","","",35,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",35,[[["v"]],["result"]]],[11,"deserialize_tuple","","",35,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",35,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",35,[[["v"]],["result"]]],[11,"deserialize_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",35,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",35,[[["v"]],["result"]]],[11,"deserialize_any","","",35,[[["v"]],["result"]]],[11,"deserialize_bool","","",36,[[["v"]],["result"]]],[11,"deserialize_i8","","",36,[[["v"]],["result"]]],[11,"deserialize_i16","","",36,[[["v"]],["result"]]],[11,"deserialize_i32","","",36,[[["v"]],["result"]]],[11,"deserialize_i64","","",36,[[["v"]],["result"]]],[11,"deserialize_i128","","",36,[[["v"]],["result"]]],[11,"deserialize_u8","","",36,[[["v"]],["result"]]],[11,"deserialize_u16","","",36,[[["v"]],["result"]]],[11,"deserialize_u32","","",36,[[["v"]],["result"]]],[11,"deserialize_u64","","",36,[[["v"]],["result"]]],[11,"deserialize_u128","","",36,[[["v"]],["result"]]],[11,"deserialize_f32","","",36,[[["v"]],["result"]]],[11,"deserialize_f64","","",36,[[["v"]],["result"]]],[11,"deserialize_char","","",36,[[["v"]],["result"]]],[11,"deserialize_str","","",36,[[["v"]],["result"]]],[11,"deserialize_string","","",36,[[["v"]],["result"]]],[11,"deserialize_bytes","","",36,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",36,[[["v"]],["result"]]],[11,"deserialize_option","","",36,[[["v"]],["result"]]],[11,"deserialize_unit","","",36,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",36,[[["v"]],["result"]]],[11,"deserialize_tuple","","",36,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",36,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",36,[[["v"]],["result"]]],[11,"deserialize_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",36,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",36,[[["v"]],["result"]]],[11,"deserialize_any","","",36,[[["v"]],["result"]]],[11,"deserialize_bool","","",37,[[["v"]],["result"]]],[11,"deserialize_i8","","",37,[[["v"]],["result"]]],[11,"deserialize_i16","","",37,[[["v"]],["result"]]],[11,"deserialize_i32","","",37,[[["v"]],["result"]]],[11,"deserialize_i64","","",37,[[["v"]],["result"]]],[11,"deserialize_i128","","",37,[[["v"]],["result"]]],[11,"deserialize_u8","","",37,[[["v"]],["result"]]],[11,"deserialize_u16","","",37,[[["v"]],["result"]]],[11,"deserialize_u32","","",37,[[["v"]],["result"]]],[11,"deserialize_u64","","",37,[[["v"]],["result"]]],[11,"deserialize_u128","","",37,[[["v"]],["result"]]],[11,"deserialize_f32","","",37,[[["v"]],["result"]]],[11,"deserialize_f64","","",37,[[["v"]],["result"]]],[11,"deserialize_char","","",37,[[["v"]],["result"]]],[11,"deserialize_str","","",37,[[["v"]],["result"]]],[11,"deserialize_string","","",37,[[["v"]],["result"]]],[11,"deserialize_bytes","","",37,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",37,[[["v"]],["result"]]],[11,"deserialize_option","","",37,[[["v"]],["result"]]],[11,"deserialize_unit","","",37,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",37,[[["v"]],["result"]]],[11,"deserialize_tuple","","",37,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",37,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",37,[[["v"]],["result"]]],[11,"deserialize_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",37,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",37,[[["v"]],["result"]]],[11,"deserialize_any","","",37,[[["v"]],["result"]]],[11,"deserialize_bool","","",38,[[["v"]],["result"]]],[11,"deserialize_i8","","",38,[[["v"]],["result"]]],[11,"deserialize_i16","","",38,[[["v"]],["result"]]],[11,"deserialize_i32","","",38,[[["v"]],["result"]]],[11,"deserialize_i64","","",38,[[["v"]],["result"]]],[11,"deserialize_i128","","",38,[[["v"]],["result"]]],[11,"deserialize_u8","","",38,[[["v"]],["result"]]],[11,"deserialize_u16","","",38,[[["v"]],["result"]]],[11,"deserialize_u32","","",38,[[["v"]],["result"]]],[11,"deserialize_u64","","",38,[[["v"]],["result"]]],[11,"deserialize_u128","","",38,[[["v"]],["result"]]],[11,"deserialize_f32","","",38,[[["v"]],["result"]]],[11,"deserialize_f64","","",38,[[["v"]],["result"]]],[11,"deserialize_char","","",38,[[["v"]],["result"]]],[11,"deserialize_str","","",38,[[["v"]],["result"]]],[11,"deserialize_string","","",38,[[["v"]],["result"]]],[11,"deserialize_bytes","","",38,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",38,[[["v"]],["result"]]],[11,"deserialize_option","","",38,[[["v"]],["result"]]],[11,"deserialize_unit","","",38,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",38,[[["v"]],["result"]]],[11,"deserialize_tuple","","",38,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",38,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",38,[[["v"]],["result"]]],[11,"deserialize_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",38,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",38,[[["v"]],["result"]]],[11,"deserialize_any","","",38,[[["v"]],["result"]]],[11,"deserialize_bool","","",39,[[["v"]],["result"]]],[11,"deserialize_i8","","",39,[[["v"]],["result"]]],[11,"deserialize_i16","","",39,[[["v"]],["result"]]],[11,"deserialize_i32","","",39,[[["v"]],["result"]]],[11,"deserialize_i64","","",39,[[["v"]],["result"]]],[11,"deserialize_i128","","",39,[[["v"]],["result"]]],[11,"deserialize_u8","","",39,[[["v"]],["result"]]],[11,"deserialize_u16","","",39,[[["v"]],["result"]]],[11,"deserialize_u32","","",39,[[["v"]],["result"]]],[11,"deserialize_u64","","",39,[[["v"]],["result"]]],[11,"deserialize_u128","","",39,[[["v"]],["result"]]],[11,"deserialize_f32","","",39,[[["v"]],["result"]]],[11,"deserialize_f64","","",39,[[["v"]],["result"]]],[11,"deserialize_char","","",39,[[["v"]],["result"]]],[11,"deserialize_str","","",39,[[["v"]],["result"]]],[11,"deserialize_string","","",39,[[["v"]],["result"]]],[11,"deserialize_bytes","","",39,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",39,[[["v"]],["result"]]],[11,"deserialize_option","","",39,[[["v"]],["result"]]],[11,"deserialize_unit","","",39,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",39,[[["v"]],["result"]]],[11,"deserialize_tuple","","",39,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",39,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",39,[[["v"]],["result"]]],[11,"deserialize_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",39,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",39,[[["v"]],["result"]]],[11,"deserialize_any","","",39,[[["v"]],["result"]]],[11,"deserialize_bool","","",40,[[["v"]],["result"]]],[11,"deserialize_i8","","",40,[[["v"]],["result"]]],[11,"deserialize_i16","","",40,[[["v"]],["result"]]],[11,"deserialize_i32","","",40,[[["v"]],["result"]]],[11,"deserialize_i64","","",40,[[["v"]],["result"]]],[11,"deserialize_i128","","",40,[[["v"]],["result"]]],[11,"deserialize_u8","","",40,[[["v"]],["result"]]],[11,"deserialize_u16","","",40,[[["v"]],["result"]]],[11,"deserialize_u32","","",40,[[["v"]],["result"]]],[11,"deserialize_u64","","",40,[[["v"]],["result"]]],[11,"deserialize_u128","","",40,[[["v"]],["result"]]],[11,"deserialize_f32","","",40,[[["v"]],["result"]]],[11,"deserialize_f64","","",40,[[["v"]],["result"]]],[11,"deserialize_char","","",40,[[["v"]],["result"]]],[11,"deserialize_str","","",40,[[["v"]],["result"]]],[11,"deserialize_string","","",40,[[["v"]],["result"]]],[11,"deserialize_bytes","","",40,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",40,[[["v"]],["result"]]],[11,"deserialize_option","","",40,[[["v"]],["result"]]],[11,"deserialize_unit","","",40,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",40,[[["v"]],["result"]]],[11,"deserialize_tuple","","",40,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",40,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",40,[[["v"]],["result"]]],[11,"deserialize_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",40,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",40,[[["v"]],["result"]]],[11,"deserialize_any","","",40,[[["v"]],["result"]]],[11,"deserialize_bool","","",41,[[["v"]],["result"]]],[11,"deserialize_i8","","",41,[[["v"]],["result"]]],[11,"deserialize_i16","","",41,[[["v"]],["result"]]],[11,"deserialize_i32","","",41,[[["v"]],["result"]]],[11,"deserialize_i64","","",41,[[["v"]],["result"]]],[11,"deserialize_i128","","",41,[[["v"]],["result"]]],[11,"deserialize_u8","","",41,[[["v"]],["result"]]],[11,"deserialize_u16","","",41,[[["v"]],["result"]]],[11,"deserialize_u32","","",41,[[["v"]],["result"]]],[11,"deserialize_u64","","",41,[[["v"]],["result"]]],[11,"deserialize_u128","","",41,[[["v"]],["result"]]],[11,"deserialize_f32","","",41,[[["v"]],["result"]]],[11,"deserialize_f64","","",41,[[["v"]],["result"]]],[11,"deserialize_char","","",41,[[["v"]],["result"]]],[11,"deserialize_str","","",41,[[["v"]],["result"]]],[11,"deserialize_string","","",41,[[["v"]],["result"]]],[11,"deserialize_bytes","","",41,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",41,[[["v"]],["result"]]],[11,"deserialize_option","","",41,[[["v"]],["result"]]],[11,"deserialize_unit","","",41,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",41,[[["v"]],["result"]]],[11,"deserialize_tuple","","",41,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",41,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",41,[[["v"]],["result"]]],[11,"deserialize_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",41,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",41,[[["v"]],["result"]]],[11,"deserialize_any","","",41,[[["v"]],["result"]]],[11,"deserialize_bool","","",42,[[["v"]],["result"]]],[11,"deserialize_i8","","",42,[[["v"]],["result"]]],[11,"deserialize_i16","","",42,[[["v"]],["result"]]],[11,"deserialize_i32","","",42,[[["v"]],["result"]]],[11,"deserialize_i64","","",42,[[["v"]],["result"]]],[11,"deserialize_i128","","",42,[[["v"]],["result"]]],[11,"deserialize_u8","","",42,[[["v"]],["result"]]],[11,"deserialize_u16","","",42,[[["v"]],["result"]]],[11,"deserialize_u32","","",42,[[["v"]],["result"]]],[11,"deserialize_u64","","",42,[[["v"]],["result"]]],[11,"deserialize_u128","","",42,[[["v"]],["result"]]],[11,"deserialize_f32","","",42,[[["v"]],["result"]]],[11,"deserialize_f64","","",42,[[["v"]],["result"]]],[11,"deserialize_char","","",42,[[["v"]],["result"]]],[11,"deserialize_str","","",42,[[["v"]],["result"]]],[11,"deserialize_string","","",42,[[["v"]],["result"]]],[11,"deserialize_bytes","","",42,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",42,[[["v"]],["result"]]],[11,"deserialize_option","","",42,[[["v"]],["result"]]],[11,"deserialize_unit","","",42,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",42,[[["v"]],["result"]]],[11,"deserialize_tuple","","",42,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",42,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",42,[[["v"]],["result"]]],[11,"deserialize_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",42,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",42,[[["v"]],["result"]]],[11,"deserialize_any","","",42,[[["v"]],["result"]]],[11,"deserialize_bool","","",43,[[["v"]],["result"]]],[11,"deserialize_i8","","",43,[[["v"]],["result"]]],[11,"deserialize_i16","","",43,[[["v"]],["result"]]],[11,"deserialize_i32","","",43,[[["v"]],["result"]]],[11,"deserialize_i64","","",43,[[["v"]],["result"]]],[11,"deserialize_i128","","",43,[[["v"]],["result"]]],[11,"deserialize_u8","","",43,[[["v"]],["result"]]],[11,"deserialize_u16","","",43,[[["v"]],["result"]]],[11,"deserialize_u32","","",43,[[["v"]],["result"]]],[11,"deserialize_u64","","",43,[[["v"]],["result"]]],[11,"deserialize_u128","","",43,[[["v"]],["result"]]],[11,"deserialize_f32","","",43,[[["v"]],["result"]]],[11,"deserialize_f64","","",43,[[["v"]],["result"]]],[11,"deserialize_char","","",43,[[["v"]],["result"]]],[11,"deserialize_str","","",43,[[["v"]],["result"]]],[11,"deserialize_string","","",43,[[["v"]],["result"]]],[11,"deserialize_bytes","","",43,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",43,[[["v"]],["result"]]],[11,"deserialize_option","","",43,[[["v"]],["result"]]],[11,"deserialize_unit","","",43,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",43,[[["v"]],["result"]]],[11,"deserialize_tuple","","",43,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",43,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",43,[[["v"]],["result"]]],[11,"deserialize_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",43,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",43,[[["v"]],["result"]]],[11,"deserialize_any","","",43,[[["v"]],["result"]]],[11,"deserialize_bool","","",44,[[["v"]],["result"]]],[11,"deserialize_i8","","",44,[[["v"]],["result"]]],[11,"deserialize_i16","","",44,[[["v"]],["result"]]],[11,"deserialize_i32","","",44,[[["v"]],["result"]]],[11,"deserialize_i64","","",44,[[["v"]],["result"]]],[11,"deserialize_i128","","",44,[[["v"]],["result"]]],[11,"deserialize_u8","","",44,[[["v"]],["result"]]],[11,"deserialize_u16","","",44,[[["v"]],["result"]]],[11,"deserialize_u32","","",44,[[["v"]],["result"]]],[11,"deserialize_u64","","",44,[[["v"]],["result"]]],[11,"deserialize_u128","","",44,[[["v"]],["result"]]],[11,"deserialize_f32","","",44,[[["v"]],["result"]]],[11,"deserialize_f64","","",44,[[["v"]],["result"]]],[11,"deserialize_char","","",44,[[["v"]],["result"]]],[11,"deserialize_str","","",44,[[["v"]],["result"]]],[11,"deserialize_string","","",44,[[["v"]],["result"]]],[11,"deserialize_bytes","","",44,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",44,[[["v"]],["result"]]],[11,"deserialize_option","","",44,[[["v"]],["result"]]],[11,"deserialize_unit","","",44,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",44,[[["v"]],["result"]]],[11,"deserialize_tuple","","",44,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",44,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",44,[[["v"]],["result"]]],[11,"deserialize_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",44,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",44,[[["v"]],["result"]]],[11,"deserialize_any","","",44,[[["v"]],["result"]]],[11,"deserialize_bool","","",45,[[["v"]],["result"]]],[11,"deserialize_i8","","",45,[[["v"]],["result"]]],[11,"deserialize_i16","","",45,[[["v"]],["result"]]],[11,"deserialize_i32","","",45,[[["v"]],["result"]]],[11,"deserialize_i64","","",45,[[["v"]],["result"]]],[11,"deserialize_i128","","",45,[[["v"]],["result"]]],[11,"deserialize_u8","","",45,[[["v"]],["result"]]],[11,"deserialize_u16","","",45,[[["v"]],["result"]]],[11,"deserialize_u32","","",45,[[["v"]],["result"]]],[11,"deserialize_u64","","",45,[[["v"]],["result"]]],[11,"deserialize_u128","","",45,[[["v"]],["result"]]],[11,"deserialize_f32","","",45,[[["v"]],["result"]]],[11,"deserialize_f64","","",45,[[["v"]],["result"]]],[11,"deserialize_char","","",45,[[["v"]],["result"]]],[11,"deserialize_str","","",45,[[["v"]],["result"]]],[11,"deserialize_string","","",45,[[["v"]],["result"]]],[11,"deserialize_bytes","","",45,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",45,[[["v"]],["result"]]],[11,"deserialize_option","","",45,[[["v"]],["result"]]],[11,"deserialize_unit","","",45,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",45,[[["v"]],["result"]]],[11,"deserialize_tuple","","",45,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",45,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",45,[[["v"]],["result"]]],[11,"deserialize_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",45,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",45,[[["v"]],["result"]]],[11,"deserialize_any","","",45,[[["v"]],["result"]]],[11,"deserialize_bool","","",46,[[["v"]],["result"]]],[11,"deserialize_i8","","",46,[[["v"]],["result"]]],[11,"deserialize_i16","","",46,[[["v"]],["result"]]],[11,"deserialize_i32","","",46,[[["v"]],["result"]]],[11,"deserialize_i64","","",46,[[["v"]],["result"]]],[11,"deserialize_i128","","",46,[[["v"]],["result"]]],[11,"deserialize_u8","","",46,[[["v"]],["result"]]],[11,"deserialize_u16","","",46,[[["v"]],["result"]]],[11,"deserialize_u32","","",46,[[["v"]],["result"]]],[11,"deserialize_u64","","",46,[[["v"]],["result"]]],[11,"deserialize_u128","","",46,[[["v"]],["result"]]],[11,"deserialize_f32","","",46,[[["v"]],["result"]]],[11,"deserialize_f64","","",46,[[["v"]],["result"]]],[11,"deserialize_char","","",46,[[["v"]],["result"]]],[11,"deserialize_str","","",46,[[["v"]],["result"]]],[11,"deserialize_string","","",46,[[["v"]],["result"]]],[11,"deserialize_bytes","","",46,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",46,[[["v"]],["result"]]],[11,"deserialize_option","","",46,[[["v"]],["result"]]],[11,"deserialize_unit","","",46,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",46,[[["v"]],["result"]]],[11,"deserialize_tuple","","",46,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",46,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",46,[[["v"]],["result"]]],[11,"deserialize_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",46,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",46,[[["v"]],["result"]]],[11,"deserialize_any","","",46,[[["v"]],["result"]]],[11,"deserialize_enum","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_any","","",47,[[["v"]],["result"]]],[11,"deserialize_enum","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",47,[[["v"]],["result"]]],[11,"deserialize_i8","","",47,[[["v"]],["result"]]],[11,"deserialize_i16","","",47,[[["v"]],["result"]]],[11,"deserialize_i32","","",47,[[["v"]],["result"]]],[11,"deserialize_i64","","",47,[[["v"]],["result"]]],[11,"deserialize_i128","","",47,[[["v"]],["result"]]],[11,"deserialize_u8","","",47,[[["v"]],["result"]]],[11,"deserialize_u16","","",47,[[["v"]],["result"]]],[11,"deserialize_u32","","",47,[[["v"]],["result"]]],[11,"deserialize_u64","","",47,[[["v"]],["result"]]],[11,"deserialize_u128","","",47,[[["v"]],["result"]]],[11,"deserialize_f32","","",47,[[["v"]],["result"]]],[11,"deserialize_f64","","",47,[[["v"]],["result"]]],[11,"deserialize_char","","",47,[[["v"]],["result"]]],[11,"deserialize_str","","",47,[[["v"]],["result"]]],[11,"deserialize_string","","",47,[[["v"]],["result"]]],[11,"deserialize_bytes","","",47,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",47,[[["v"]],["result"]]],[11,"deserialize_option","","",47,[[["v"]],["result"]]],[11,"deserialize_unit","","",47,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",47,[[["v"]],["result"]]],[11,"deserialize_tuple","","",47,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",47,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",47,[[["v"]],["result"]]],[11,"deserialize_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",47,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",47,[[["v"]],["result"]]],[11,"deserialize_any","","",1,[[["v"]],["result"]]],[11,"deserialize_enum","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",1,[[["v"]],["result"]]],[11,"deserialize_i8","","",1,[[["v"]],["result"]]],[11,"deserialize_i16","","",1,[[["v"]],["result"]]],[11,"deserialize_i32","","",1,[[["v"]],["result"]]],[11,"deserialize_i64","","",1,[[["v"]],["result"]]],[11,"deserialize_i128","","",1,[[["v"]],["result"]]],[11,"deserialize_u8","","",1,[[["v"]],["result"]]],[11,"deserialize_u16","","",1,[[["v"]],["result"]]],[11,"deserialize_u32","","",1,[[["v"]],["result"]]],[11,"deserialize_u64","","",1,[[["v"]],["result"]]],[11,"deserialize_u128","","",1,[[["v"]],["result"]]],[11,"deserialize_f32","","",1,[[["v"]],["result"]]],[11,"deserialize_f64","","",1,[[["v"]],["result"]]],[11,"deserialize_char","","",1,[[["v"]],["result"]]],[11,"deserialize_str","","",1,[[["v"]],["result"]]],[11,"deserialize_string","","",1,[[["v"]],["result"]]],[11,"deserialize_bytes","","",1,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",1,[[["v"]],["result"]]],[11,"deserialize_option","","",1,[[["v"]],["result"]]],[11,"deserialize_unit","","",1,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",1,[[["v"]],["result"]]],[11,"deserialize_tuple","","",1,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",1,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",1,[[["v"]],["result"]]],[11,"deserialize_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",1,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",1,[[["v"]],["result"]]],[11,"deserialize_any","","",48,[[["v"]],["result"]]],[11,"deserialize_enum","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",48,[[["v"]],["result"]]],[11,"deserialize_i8","","",48,[[["v"]],["result"]]],[11,"deserialize_i16","","",48,[[["v"]],["result"]]],[11,"deserialize_i32","","",48,[[["v"]],["result"]]],[11,"deserialize_i64","","",48,[[["v"]],["result"]]],[11,"deserialize_i128","","",48,[[["v"]],["result"]]],[11,"deserialize_u8","","",48,[[["v"]],["result"]]],[11,"deserialize_u16","","",48,[[["v"]],["result"]]],[11,"deserialize_u32","","",48,[[["v"]],["result"]]],[11,"deserialize_u64","","",48,[[["v"]],["result"]]],[11,"deserialize_u128","","",48,[[["v"]],["result"]]],[11,"deserialize_f32","","",48,[[["v"]],["result"]]],[11,"deserialize_f64","","",48,[[["v"]],["result"]]],[11,"deserialize_char","","",48,[[["v"]],["result"]]],[11,"deserialize_str","","",48,[[["v"]],["result"]]],[11,"deserialize_string","","",48,[[["v"]],["result"]]],[11,"deserialize_bytes","","",48,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",48,[[["v"]],["result"]]],[11,"deserialize_option","","",48,[[["v"]],["result"]]],[11,"deserialize_unit","","",48,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",48,[[["v"]],["result"]]],[11,"deserialize_tuple","","",48,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",48,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",48,[[["v"]],["result"]]],[11,"deserialize_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",48,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",48,[[["v"]],["result"]]],[11,"deserialize_any","","",49,[[["v"]],["result"]]],[11,"deserialize_enum","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",49,[[["v"]],["result"]]],[11,"deserialize_i8","","",49,[[["v"]],["result"]]],[11,"deserialize_i16","","",49,[[["v"]],["result"]]],[11,"deserialize_i32","","",49,[[["v"]],["result"]]],[11,"deserialize_i64","","",49,[[["v"]],["result"]]],[11,"deserialize_i128","","",49,[[["v"]],["result"]]],[11,"deserialize_u8","","",49,[[["v"]],["result"]]],[11,"deserialize_u16","","",49,[[["v"]],["result"]]],[11,"deserialize_u32","","",49,[[["v"]],["result"]]],[11,"deserialize_u64","","",49,[[["v"]],["result"]]],[11,"deserialize_u128","","",49,[[["v"]],["result"]]],[11,"deserialize_f32","","",49,[[["v"]],["result"]]],[11,"deserialize_f64","","",49,[[["v"]],["result"]]],[11,"deserialize_char","","",49,[[["v"]],["result"]]],[11,"deserialize_str","","",49,[[["v"]],["result"]]],[11,"deserialize_string","","",49,[[["v"]],["result"]]],[11,"deserialize_bytes","","",49,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",49,[[["v"]],["result"]]],[11,"deserialize_option","","",49,[[["v"]],["result"]]],[11,"deserialize_unit","","",49,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",49,[[["v"]],["result"]]],[11,"deserialize_tuple","","",49,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",49,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",49,[[["v"]],["result"]]],[11,"deserialize_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",49,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",49,[[["v"]],["result"]]],[11,"deserialize_any","","",2,[[["v"]],["result"]]],[11,"deserialize_bool","","",2,[[["v"]],["result"]]],[11,"deserialize_i8","","",2,[[["v"]],["result"]]],[11,"deserialize_i16","","",2,[[["v"]],["result"]]],[11,"deserialize_i32","","",2,[[["v"]],["result"]]],[11,"deserialize_i64","","",2,[[["v"]],["result"]]],[11,"deserialize_i128","","",2,[[["v"]],["result"]]],[11,"deserialize_u8","","",2,[[["v"]],["result"]]],[11,"deserialize_u16","","",2,[[["v"]],["result"]]],[11,"deserialize_u32","","",2,[[["v"]],["result"]]],[11,"deserialize_u64","","",2,[[["v"]],["result"]]],[11,"deserialize_u128","","",2,[[["v"]],["result"]]],[11,"deserialize_f32","","",2,[[["v"]],["result"]]],[11,"deserialize_f64","","",2,[[["v"]],["result"]]],[11,"deserialize_char","","",2,[[["v"]],["result"]]],[11,"deserialize_str","","",2,[[["v"]],["result"]]],[11,"deserialize_string","","",2,[[["v"]],["result"]]],[11,"deserialize_bytes","","",2,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",2,[[["v"]],["result"]]],[11,"deserialize_option","","",2,[[["v"]],["result"]]],[11,"deserialize_unit","","",2,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",2,[[["v"]],["result"]]],[11,"deserialize_tuple","","",2,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",2,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",2,[[["v"]],["result"]]],[11,"deserialize_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",2,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",2,[[["v"]],["result"]]],[11,"deserialize_enum","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_any","","",3,[[["v"]],["result"]]],[11,"deserialize_bool","","",3,[[["v"]],["result"]]],[11,"deserialize_i8","","",3,[[["v"]],["result"]]],[11,"deserialize_i16","","",3,[[["v"]],["result"]]],[11,"deserialize_i32","","",3,[[["v"]],["result"]]],[11,"deserialize_i64","","",3,[[["v"]],["result"]]],[11,"deserialize_i128","","",3,[[["v"]],["result"]]],[11,"deserialize_u8","","",3,[[["v"]],["result"]]],[11,"deserialize_u16","","",3,[[["v"]],["result"]]],[11,"deserialize_u32","","",3,[[["v"]],["result"]]],[11,"deserialize_u64","","",3,[[["v"]],["result"]]],[11,"deserialize_u128","","",3,[[["v"]],["result"]]],[11,"deserialize_f32","","",3,[[["v"]],["result"]]],[11,"deserialize_f64","","",3,[[["v"]],["result"]]],[11,"deserialize_char","","",3,[[["v"]],["result"]]],[11,"deserialize_str","","",3,[[["v"]],["result"]]],[11,"deserialize_string","","",3,[[["v"]],["result"]]],[11,"deserialize_bytes","","",3,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",3,[[["v"]],["result"]]],[11,"deserialize_option","","",3,[[["v"]],["result"]]],[11,"deserialize_unit","","",3,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",3,[[["v"]],["result"]]],[11,"deserialize_tuple","","",3,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",3,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",3,[[["v"]],["result"]]],[11,"deserialize_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",3,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",3,[[["v"]],["result"]]],[11,"deserialize_any","","",4,[[["v"]],["result"]]],[11,"deserialize_bool","","",4,[[["v"]],["result"]]],[11,"deserialize_i8","","",4,[[["v"]],["result"]]],[11,"deserialize_i16","","",4,[[["v"]],["result"]]],[11,"deserialize_i32","","",4,[[["v"]],["result"]]],[11,"deserialize_i64","","",4,[[["v"]],["result"]]],[11,"deserialize_i128","","",4,[[["v"]],["result"]]],[11,"deserialize_u8","","",4,[[["v"]],["result"]]],[11,"deserialize_u16","","",4,[[["v"]],["result"]]],[11,"deserialize_u32","","",4,[[["v"]],["result"]]],[11,"deserialize_u64","","",4,[[["v"]],["result"]]],[11,"deserialize_u128","","",4,[[["v"]],["result"]]],[11,"deserialize_f32","","",4,[[["v"]],["result"]]],[11,"deserialize_f64","","",4,[[["v"]],["result"]]],[11,"deserialize_char","","",4,[[["v"]],["result"]]],[11,"deserialize_str","","",4,[[["v"]],["result"]]],[11,"deserialize_string","","",4,[[["v"]],["result"]]],[11,"deserialize_bytes","","",4,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",4,[[["v"]],["result"]]],[11,"deserialize_option","","",4,[[["v"]],["result"]]],[11,"deserialize_unit","","",4,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",4,[[["v"]],["result"]]],[11,"deserialize_tuple","","",4,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",4,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",4,[[["v"]],["result"]]],[11,"deserialize_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",4,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",4,[[["v"]],["result"]]],[11,"deserialize_any","","",5,[[["v"]],["result"]]],[11,"deserialize_seq","","",5,[[["v"]],["result"]]],[11,"deserialize_tuple","","",5,[[["usize"],["v"]],["result"]]],[11,"deserialize_bool","","",5,[[["v"]],["result"]]],[11,"deserialize_i8","","",5,[[["v"]],["result"]]],[11,"deserialize_i16","","",5,[[["v"]],["result"]]],[11,"deserialize_i32","","",5,[[["v"]],["result"]]],[11,"deserialize_i64","","",5,[[["v"]],["result"]]],[11,"deserialize_i128","","",5,[[["v"]],["result"]]],[11,"deserialize_u8","","",5,[[["v"]],["result"]]],[11,"deserialize_u16","","",5,[[["v"]],["result"]]],[11,"deserialize_u32","","",5,[[["v"]],["result"]]],[11,"deserialize_u64","","",5,[[["v"]],["result"]]],[11,"deserialize_u128","","",5,[[["v"]],["result"]]],[11,"deserialize_f32","","",5,[[["v"]],["result"]]],[11,"deserialize_f64","","",5,[[["v"]],["result"]]],[11,"deserialize_char","","",5,[[["v"]],["result"]]],[11,"deserialize_str","","",5,[[["v"]],["result"]]],[11,"deserialize_string","","",5,[[["v"]],["result"]]],[11,"deserialize_bytes","","",5,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",5,[[["v"]],["result"]]],[11,"deserialize_option","","",5,[[["v"]],["result"]]],[11,"deserialize_unit","","",5,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",5,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",5,[[["v"]],["result"]]],[11,"deserialize_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",5,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",5,[[["v"]],["result"]]],[11,"deserialize_any","","",6,[[["v"]],["result"]]],[11,"deserialize_enum","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",6,[[["v"]],["result"]]],[11,"deserialize_i8","","",6,[[["v"]],["result"]]],[11,"deserialize_i16","","",6,[[["v"]],["result"]]],[11,"deserialize_i32","","",6,[[["v"]],["result"]]],[11,"deserialize_i64","","",6,[[["v"]],["result"]]],[11,"deserialize_i128","","",6,[[["v"]],["result"]]],[11,"deserialize_u8","","",6,[[["v"]],["result"]]],[11,"deserialize_u16","","",6,[[["v"]],["result"]]],[11,"deserialize_u32","","",6,[[["v"]],["result"]]],[11,"deserialize_u64","","",6,[[["v"]],["result"]]],[11,"deserialize_u128","","",6,[[["v"]],["result"]]],[11,"deserialize_f32","","",6,[[["v"]],["result"]]],[11,"deserialize_f64","","",6,[[["v"]],["result"]]],[11,"deserialize_char","","",6,[[["v"]],["result"]]],[11,"deserialize_str","","",6,[[["v"]],["result"]]],[11,"deserialize_string","","",6,[[["v"]],["result"]]],[11,"deserialize_bytes","","",6,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",6,[[["v"]],["result"]]],[11,"deserialize_option","","",6,[[["v"]],["result"]]],[11,"deserialize_unit","","",6,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",6,[[["v"]],["result"]]],[11,"deserialize_tuple","","",6,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",6,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",6,[[["v"]],["result"]]],[11,"deserialize_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",6,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",6,[[["v"]],["result"]]],[11,"expecting","serde::de","",28,[[["formatter"],["self"]],["result"]]],[11,"visit_bool","","",28,[[["bool"]],["result"]]],[11,"visit_i64","","",28,[[["i64"]],["result"]]],[11,"visit_u64","","",28,[[["u64"]],["result"]]],[11,"visit_f64","","",28,[[["f64"]],["result"]]],[11,"visit_str","","",28,[[["str"]],["result"]]],[11,"visit_none","","",28,[[],["result"]]],[11,"visit_some","","",28,[[["d"]],["result"]]],[11,"visit_newtype_struct","","",28,[[["d"]],["result"]]],[11,"visit_unit","","",28,[[],["result"]]],[11,"visit_seq","","",28,[[["a"]],["result"]]],[11,"visit_map","","",28,[[["a"]],["result"]]],[11,"visit_bytes","","",28,[[],["result"]]],[11,"visit_enum","","",28,[[["a"]],["result"]]],[11,"next_element_seed","serde::de::value","",3,[[["self"],["v"]],[["option"],["result",["option"]]]]],[11,"size_hint","","",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"next_element_seed","","",5,[[["self"],["t"]],[["result",["option"]],["option"]]]],[11,"size_hint","","",5,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"next_key_seed","","",5,[[["self"],["t"]],[["option"],["result",["option"]]]]],[11,"next_value_seed","","",5,[[["self"],["t"]],["result"]]],[11,"next_entry_seed","","",5,[[["tv"],["self"],["tk"]],[["result",["option"]],["option"]]]],[11,"size_hint","","",5,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"variant_seed","","",46,[[["t"]],["result"]]],[11,"variant_seed","","",47,[[["t"]],["result"]]],[11,"variant_seed","","",1,[[["t"]],["result"]]],[11,"variant_seed","","",48,[[["t"]],["result"]]],[11,"variant_seed","","",49,[[["t"]],["result"]]],[11,"variant_seed","","",6,[[["t"]],["result"]]],[11,"serialize_element","serde::ser","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_element","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_key","","",50,[[["self"],["t"]],["result"]]],[11,"serialize_value","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"custom","serde::de::value","",29,[[["t"]],["self"]]],[11,"custom","","",29,[[["t"]],["self"]]],[11,"clone","","",29,[[["self"]],["error"]]],[11,"clone","","",30,[[["self"]],["self"]]],[11,"clone","","",31,[[["self"]],["self"]]],[11,"clone","","",32,[[["self"]],["self"]]],[11,"clone","","",33,[[["self"]],["self"]]],[11,"clone","","",34,[[["self"]],["self"]]],[11,"clone","","",35,[[["self"]],["self"]]],[11,"clone","","",36,[[["self"]],["self"]]],[11,"clone","","",37,[[["self"]],["self"]]],[11,"clone","","",38,[[["self"]],["self"]]],[11,"clone","","",39,[[["self"]],["self"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"clone","","",41,[[["self"]],["self"]]],[11,"clone","","",42,[[["self"]],["self"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","","",44,[[["self"]],["self"]]],[11,"clone","","",45,[[["self"]],["self"]]],[11,"clone","","",46,[[["self"]],["self"]]],[11,"clone","","",47,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",48,[[["self"]],["self"]]],[11,"clone","","",49,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["seqdeserializer"]]],[11,"clone","","",4,[[["self"]],["seqaccessdeserializer"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["mapaccessdeserializer"]]],[11,"clone","serde::de","",28,[[["self"]],["ignoredany"]]],[11,"clone","","",0,[[["self"]],["unexpected"]]],[11,"default","","",28,[[],["ignoredany"]]],[11,"eq","serde::de::value","",29,[[["error"],["self"]],["bool"]]],[11,"ne","","",29,[[["error"],["self"]],["bool"]]],[11,"eq","serde::de","",0,[[["unexpected"],["self"]],["bool"]]],[11,"ne","","",0,[[["unexpected"],["self"]],["bool"]]],[11,"fmt","serde::de::value","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde::de","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","serde::de::value","",29,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","serde::de","",0,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"description","serde::de::value","",29,[[["self"]],["str"]]]],"p":[[4,"Unexpected"],[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"IgnoredAny"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"Impossible"]]};
searchIndex["serde_derive"] = {"doc":"This crate provides Serde's two derive macros.","i":[[24,"Serialize","serde_derive","",null,null],[24,"Deserialize","","",null,null]],"p":[]};
searchIndex["special_functions"] = {"doc":"Library providing pure rust implementation of various…","i":[[0,"approximations","special_functions","Approximations",null,null],[5,"polynomial","special_functions::approximations","Evaluates an arbitrary single-variable polynomial at a…",null,[[["f64"]],["f64"]]],[5,"piecewise_polynomial","","Evaluates an arbitrary piecewise single-variable…",null,[[["f64"]],["f64"]]],[5,"polynomial_ratio","","Evaluates an arbitrary ratio of single-variable…",null,[[["f64"]],["f64"]]],[5,"piecewise_polynomial_ratio","","Evaluates an arbitrary piecewise ratio of single-variable…",null,[[["f64"]],["f64"]]],[5,"chebyshev","","Evaluates a series of Chebyshev functions at x.",null,[[["f64"]],["f64"]]],[5,"piecewise_chebyshev","","Evaluates an arbitrary piecewise Chebyshev function at a…",null,[[["f64"]],["f64"]]],[0,"linear","","Linear interpolation",null,null],[5,"linear","special_functions::approximations::linear","Perform linear interpolation on data.",null,[[["f64"]],["f64"]]],[0,"basic","special_functions","Basic functions.",null,null],[0,"bessel","","Bessel functions",null,null],[5,"i0","special_functions::bessel","Approximation of modified Bessel function \\(I_0(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"i1","","Approximation of modified Bessel function \\(I_1(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"i2","","Approximation of modified Bessel function \\(I_2(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"i3","","Approximation of modified Bessel function \\(I_3(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"i4","","Approximation of modified Bessel function \\(I_4(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"i5","","Approximation of modified Bessel function \\(I_5(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"i6","","Approximation of modified Bessel function \\(I_6(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"i7","","Approximation of modified Bessel function \\(I_7(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"i8","","Approximation of modified Bessel function \\(I_8(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"i9","","Approximation of modified Bessel function \\(I_9(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"j0","","Approximation of modified Bessel function \\(J_0(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"j1","","Approximation of modified Bessel function \\(J_1(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"j2","","Approximation of modified Bessel function \\(J_2(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"j3","","Approximation of modified Bessel function \\(J_3(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"j4","","Approximation of modified Bessel function \\(J_4(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"j5","","Approximation of modified Bessel function \\(J_5(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"j6","","Approximation of modified Bessel function \\(J_6(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"j7","","Approximation of modified Bessel function \\(J_7(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"j8","","Approximation of modified Bessel function \\(J_8(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"j9","","Approximation of modified Bessel function \\(J_9(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"k0","","Approximation of modified Bessel function \\(K_0(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"k1","","Approximation of modified Bessel function \\(K_1(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"k2","","Approximation of modified Bessel function \\(K_2(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"k3","","Approximation of modified Bessel function \\(K_3(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"k4","","Approximation of modified Bessel function \\(K_4(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"k5","","Approximation of modified Bessel function \\(K_5(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"k6","","Approximation of modified Bessel function \\(K_6(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"k7","","Approximation of modified Bessel function \\(K_7(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"k8","","Approximation of modified Bessel function \\(K_8(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"k9","","Approximation of modified Bessel function \\(K_9(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"k1_on_k2","","Approximatino of the ratio of Bessel function \\(K_1(x) /…",null,[[["f64"]],["f64"]]],[5,"y0","","Approximation of modified Bessel function \\(Y_0(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"y1","","Approximation of modified Bessel function \\(Y_1(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"y2","","Approximation of modified Bessel function \\(Y_2(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"y3","","Approximation of modified Bessel function \\(Y_3(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"y4","","Approximation of modified Bessel function \\(Y_4(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"y5","","Approximation of modified Bessel function \\(Y_5(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"y6","","Approximation of modified Bessel function \\(Y_6(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"y7","","Approximation of modified Bessel function \\(Y_7(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"y8","","Approximation of modified Bessel function \\(Y_8(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"y9","","Approximation of modified Bessel function \\(Y_9(x)\\) for…",null,[[["f64"]],["f64"]]],[0,"other","special_functions","Miscellaneous functions",null,null],[5,"harmonic_number","special_functions::other","Approximation of the Harmonic number extended to all…",null,[[["f64"]],["f64"]]],[0,"polylog","","Polylogarithms functions",null,null],[5,"li0","special_functions::other::polylog","Approximation of polylogarithm function \\(Li_0(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"li1","","Approximation of polylogarithm function \\(Li_1(x)\\) for…",null,[[["f64"]],["f64"]]],[5,"li2","","Approximation of polylogarithm function (Li_2(x)) for all…",null,[[["f64"]],["f64"]]],[5,"li3","","Approximation of polylogarithm function (Li_3(x)) for all…",null,[[["f64"]],["f64"]]],[5,"li4","","Approximation of polylogarithm function (Li_4(x)) for all…",null,[[["f64"]],["f64"]]],[5,"li5","","Approximation of polylogarithm function (Li_5(x)) for all…",null,[[["f64"]],["f64"]]],[5,"li6","","Approximation of polylogarithm function (Li_6(x)) for all…",null,[[["f64"]],["f64"]]],[5,"li7","","Approximation of polylogarithm function (Li_7(x)) for all…",null,[[["f64"]],["f64"]]],[5,"li8","","Approximation of polylogarithm function (Li_8(x)) for all…",null,[[["f64"]],["f64"]]],[5,"li9","","Approximation of polylogarithm function (Li_9(x)) for all…",null,[[["f64"]],["f64"]]],[0,"particle_statistics","special_functions","Particle statistics",null,null],[5,"bose_einstein_massless","special_functions::particle_statistics","Equilibrium number density of a massless Bose-Einstein…",null,[[["f64"]],["f64"]]],[5,"bose_einstein_massive","","Equilibrium number density of massive Bose-Einstein…",null,[[["f64"]],["f64"]]],[5,"bose_einstein_normalized","","Equilibrium number density of massive Bose-Einstein…",null,[[["f64"]],["f64"]]],[5,"fermi_dirac_massless","","Equilibrium number density of a massless Fermi-Dirac…",null,[[["f64"]],["f64"]]],[5,"fermi_dirac_massive","","Equilibrium number density of massive Fermi-Dirac particle.",null,[[["f64"]],["f64"]]],[5,"fermi_dirac_normalized","","Equilibrium number density of massive Fermi-Dirac particle…",null,[[["f64"]],["f64"]]],[0,"pave","","Passarino-Veltman functions.",null,null],[14,"approx_fn","special_functions","Create a function from a module containing all the…",null,null]],"p":[]};
searchIndex["syn"] = {"doc":"Syn is a parsing library for parsing a stream of Rust…","i":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",null,null],[12,"pound_token","","",0,null],[12,"style","","",0,null],[12,"bracket_token","","",0,null],[12,"path","","",0,null],[12,"tokens","","",0,null],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",null,null],[12,"path","","",1,null],[12,"paren_token","","",1,null],[12,"nested","","",1,null],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",null,null],[12,"path","","",2,null],[12,"eq_token","","",2,null],[12,"lit","","",2,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",3,null],[12,"vis","","Visibility of the field.",3,null],[12,"ident","","Name of the field, if any.",3,null],[12,"colon_token","","",3,null],[12,"ty","","Type of the field.",3,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",null,null],[12,"brace_token","","",4,null],[12,"named","","",4,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",null,null],[12,"paren_token","","",5,null],[12,"unnamed","","",5,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",6,null],[12,"ident","","Name of the variant.",6,null],[12,"fields","","Content stored in the variant.",6,null],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,null],[3,"VisCrate","","A crate-level visibility: `crate`.",null,null],[12,"crate_token","","",7,null],[3,"VisPublic","","A public visibility level: `pub`.",null,null],[12,"pub_token","","",8,null],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",null,null],[12,"pub_token","","",9,null],[12,"paren_token","","",9,null],[12,"in_token","","",9,null],[12,"path","","",9,null],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",null,null],[3,"ExprAssign","","An assignment expression: `a = compute()`.",null,null],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",null,null],[3,"ExprAsync","","An async block: `async { ... }`.",null,null],[3,"ExprAwait","","An await expression: `fut.await`.",null,null],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",null,null],[12,"attrs","","",10,null],[12,"left","","",10,null],[12,"op","","",10,null],[12,"right","","",10,null],[3,"ExprBlock","","A blocked scope: `{ ... }`.",null,null],[3,"ExprBox","","A box expression: `box f`.",null,null],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",null,null],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",null,null],[12,"attrs","","",11,null],[12,"func","","",11,null],[12,"paren_token","","",11,null],[12,"args","","",11,null],[3,"ExprCast","","A cast expression: `foo as f64`.",null,null],[12,"attrs","","",12,null],[12,"expr","","",12,null],[12,"as_token","","",12,null],[12,"ty","","",12,null],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",null,null],[3,"ExprContinue","","A `continue`, with an optional label.",null,null],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",null,null],[12,"attrs","","",13,null],[12,"base","","",13,null],[12,"dot_token","","",13,null],[12,"member","","",13,null],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",null,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",null,null],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",null,null],[12,"attrs","","",14,null],[12,"expr","","",14,null],[12,"bracket_token","","",14,null],[12,"index","","",14,null],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",null,null],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",null,null],[12,"attrs","","",15,null],[12,"lit","","",15,null],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",null,null],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",null,null],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",null,null],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",null,null],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",null,null],[12,"attrs","","",16,null],[12,"paren_token","","",16,null],[12,"expr","","",16,null],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",null,null],[12,"attrs","","",17,null],[12,"qself","","",17,null],[12,"path","","",17,null],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",null,null],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",null,null],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",null,null],[3,"ExprReturn","","A `return`, with an optional value to be returned.",null,null],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",null,null],[3,"ExprTry","","A try-expression: `expr?`.",null,null],[3,"ExprTryBlock","","A try block: `try { ... }`.",null,null],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",null,null],[3,"ExprType","","A type ascription expression: `foo: f64`.",null,null],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",null,null],[12,"attrs","","",18,null],[12,"op","","",18,null],[12,"expr","","",18,null],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",null,null],[3,"ExprWhile","","A while loop: `while expr { ... }`.",null,null],[3,"ExprYield","","A yield expression: `yield expr`.",null,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",19,null],[12,"span","","",19,null],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",null,null],[12,"for_token","","",20,null],[12,"lt_token","","",20,null],[12,"lifetimes","","",20,null],[12,"gt_token","","",20,null],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",null,null],[12,"attrs","","",21,null],[12,"const_token","","",21,null],[12,"ident","","",21,null],[12,"colon_token","","",21,null],[12,"ty","","",21,null],[12,"eq_token","","",21,null],[12,"default","","",21,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",null,null],[12,"lt_token","","",22,null],[12,"params","","",22,null],[12,"gt_token","","",22,null],[12,"where_clause","","",22,null],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",null,null],[12,"attrs","","",23,null],[12,"lifetime","","",23,null],[12,"colon_token","","",23,null],[12,"bounds","","",23,null],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",null,null],[12,"lhs_ty","","",24,null],[12,"eq_token","","",24,null],[12,"rhs_ty","","",24,null],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",null,null],[12,"lifetime","","",25,null],[12,"colon_token","","",25,null],[12,"bounds","","",25,null],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",null,null],[12,"lifetimes","","Any lifetimes from a `for` binding",26,null],[12,"bounded_ty","","The type being bounded",26,null],[12,"colon_token","","",26,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",26,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",27,null],[12,"modifier","","",27,null],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",27,null],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",27,null],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",null,null],[12,"attrs","","",28,null],[12,"ident","","",28,null],[12,"colon_token","","",28,null],[12,"bounds","","",28,null],[12,"eq_token","","",28,null],[12,"default","","",28,null],[3,"WhereClause","","A `where` clause in a definition: `where T:…",null,null],[12,"where_token","","",29,null],[12,"predicates","","",29,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",null,null],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Lifetime","","A Rust lifetime: `'a`.",null,null],[12,"apostrophe","","",30,null],[12,"ident","","",30,null],[3,"LitBool","","A boolean literal: `true` or `false`.",null,null],[12,"value","","",31,null],[12,"span","","",31,null],[3,"LitByte","","A byte literal: `b'f'`.",null,null],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",null,null],[3,"LitChar","","A character literal: `'a'`.",null,null],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",null,null],[3,"LitInt","","An integer literal: `1` or `1u16`.",null,null],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",null,null],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",null,null],[12,"path","","",32,null],[12,"bang_token","","",32,null],[12,"delimiter","","",32,null],[12,"tokens","","",32,null],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",null,null],[12,"enum_token","","",33,null],[12,"brace_token","","",33,null],[12,"variants","","",33,null],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",null,null],[12,"struct_token","","",34,null],[12,"fields","","",34,null],[12,"semi_token","","",34,null],[3,"DataUnion","","An untagged union input to a `proc_macro_derive` macro.",null,null],[12,"union_token","","",35,null],[12,"fields","","",35,null],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",36,null],[12,"vis","","Visibility of the struct or enum.",36,null],[12,"ident","","Name of the struct or enum.",36,null],[12,"generics","","Generics required to complete the definition.",36,null],[12,"data","","Data within the struct or enum.",36,null],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",null,null],[12,"extern_token","","",37,null],[12,"name","","",37,null],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",null,null],[12,"attrs","","",38,null],[12,"name","","",38,null],[12,"ty","","",38,null],[3,"TypeArray","","A fixed size array type: `[T; n]`.",null,null],[12,"bracket_token","","",39,null],[12,"elem","","",39,null],[12,"semi_token","","",39,null],[12,"len","","",39,null],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",null,null],[12,"lifetimes","","",40,null],[12,"unsafety","","",40,null],[12,"abi","","",40,null],[12,"fn_token","","",40,null],[12,"paren_token","","",40,null],[12,"inputs","","",40,null],[12,"variadic","","",40,null],[12,"output","","",40,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",41,null],[12,"elem","","",41,null],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",null,null],[12,"impl_token","","",42,null],[12,"bounds","","",42,null],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",null,null],[12,"underscore_token","","",43,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",44,null],[3,"TypeNever","","The never type: `!`.",null,null],[12,"bang_token","","",45,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",46,null],[12,"elem","","",46,null],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",null,null],[12,"qself","","",47,null],[12,"path","","",47,null],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",null,null],[12,"star_token","","",48,null],[12,"const_token","","",48,null],[12,"mutability","","",48,null],[12,"elem","","",48,null],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",null,null],[12,"and_token","","",49,null],[12,"lifetime","","",49,null],[12,"mutability","","",49,null],[12,"elem","","",49,null],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",null,null],[12,"bracket_token","","",50,null],[12,"elem","","",50,null],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",null,null],[12,"dyn_token","","",51,null],[12,"bounds","","",51,null],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",null,null],[12,"paren_token","","",52,null],[12,"elems","","",52,null],[3,"Variadic","","The variadic argument of a foreign function.",null,null],[12,"attrs","","",53,null],[12,"dots","","",53,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",null,null],[12,"colon2_token","","",54,null],[12,"lt_token","","",54,null],[12,"args","","",54,null],[12,"gt_token","","",54,null],[3,"Binding","","A binding (equality constraint) on an associated type:…",null,null],[12,"ident","","",55,null],[12,"eq_token","","",55,null],[12,"ty","","",55,null],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",null,null],[12,"ident","","",56,null],[12,"colon_token","","",56,null],[12,"bounds","","",56,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",null,null],[12,"paren_token","","",57,null],[12,"inputs","","`(A, B)`",57,null],[12,"output","","`C`",57,null],[3,"Path","","A path at which a named item is exported:…",null,null],[12,"leading_colon","","",58,null],[12,"segments","","",58,null],[3,"PathSegment","","A segment of a path together with any path arguments on…",null,null],[12,"ident","","",59,null],[12,"arguments","","",59,null],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",null,null],[12,"lt_token","","",60,null],[12,"ty","","",60,null],[12,"position","","",60,null],[12,"as_token","","",60,null],[12,"gt_token","","",60,null],[3,"Error","","Error returned when a Syn parser cannot parse the input…",null,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and…",null,null],[13,"Outer","","",61,null],[13,"Inner","","",61,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Path","","",62,null],[13,"List","","A structured list within an attribute, like `derive(Copy,…",62,null],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",62,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the `Copy` in…",63,null],[13,"Lit","","A Rust literal, like the `\"new_name\"` in…",63,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as `Point…",64,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",64,null],[13,"Unit","","Unit struct or unit variant such as `None`.",64,null],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",null,null],[13,"Public","","A public visibility level: `pub`.",65,null],[13,"Crate","","A crate-level visibility: `crate`.",65,null],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",65,null],[13,"Inherited","","An inherited visibility, which usually means private.",65,null],[4,"Expr","","A Rust expression.",null,null],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",66,null],[13,"Assign","","An assignment expression: `a = compute()`.",66,null],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",66,null],[13,"Async","","An async block: `async { ... }`.",66,null],[13,"Await","","An await expression: `fut.await`.",66,null],[13,"Binary","","A binary operation: `a + b`, `a * b`.",66,null],[13,"Block","","A blocked scope: `{ ... }`.",66,null],[13,"Box","","A box expression: `box f`.",66,null],[13,"Break","","A `break`, with an optional label to break and an optional…",66,null],[13,"Call","","A function call expression: `invoke(a, b)`.",66,null],[13,"Cast","","A cast expression: `foo as f64`.",66,null],[13,"Closure","","A closure expression: `|a, b| a + b`.",66,null],[13,"Continue","","A `continue`, with an optional label.",66,null],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",66,null],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",66,null],[13,"Group","","An expression contained within invisible delimiters.",66,null],[13,"If","","An `if` expression with an optional `else` block: `if expr…",66,null],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",66,null],[13,"Let","","A `let` guard: `let Some(x) = opt`.",66,null],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",66,null],[13,"Loop","","Conditionless loop: `loop { ... }`.",66,null],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",66,null],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",66,null],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",66,null],[13,"Paren","","A parenthesized expression: `(a + b)`.",66,null],[13,"Path","","A path like `std::mem::replace` possibly containing…",66,null],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",66,null],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",66,null],[13,"Repeat","","An array literal constructed from one repeated element:…",66,null],[13,"Return","","A `return`, with an optional value to be returned.",66,null],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",66,null],[13,"Try","","A try-expression: `expr?`.",66,null],[13,"TryBlock","","A try block: `try { ... }`.",66,null],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",66,null],[13,"Type","","A type ascription expression: `foo: f64`.",66,null],[13,"Unary","","A unary operation: `!x`, `*x`.",66,null],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",66,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",66,null],[13,"While","","A while loop: `while expr { ... }`.",66,null],[13,"Yield","","A yield expression: `yield expr`.",66,null],[4,"Member","","A struct or tuple struct field accessed in a struct…",null,null],[13,"Named","","A named field like `self.x`.",67,null],[13,"Unnamed","","An unnamed field like `self.0`.",67,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",null,null],[13,"Type","","A generic type parameter: `T: Into<String>`.",68,null],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",68,null],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",68,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",null,null],[13,"None","","",69,null],[13,"Maybe","","",69,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",70,null],[13,"Lifetime","","",70,null],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",null,null],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",71,null],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",71,null],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",71,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",72,null],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",72,null],[13,"Byte","","A byte literal: `b'f'`.",72,null],[13,"Char","","A character literal: `'a'`.",72,null],[13,"Int","","An integer literal: `1` or `1u16`.",72,null],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",72,null],[13,"Bool","","A boolean literal: `true` or `false`.",72,null],[13,"Verbatim","","A raw token literal not interpreted by Syn.",72,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",null,null],[13,"Cooked","","An ordinary string like `\"data\"`.",73,null],[13,"Raw","","A raw string like `r##\"data\"##`.",73,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",null,null],[13,"Paren","","",74,null],[13,"Brace","","",74,null],[13,"Bracket","","",74,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",75,null],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",75,null],[13,"Union","","An untagged union input to a `proc_macro_derive` macro.",75,null],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",null,null],[13,"Add","","The `+` operator (addition)",76,null],[13,"Sub","","The `-` operator (subtraction)",76,null],[13,"Mul","","The `*` operator (multiplication)",76,null],[13,"Div","","The `/` operator (division)",76,null],[13,"Rem","","The `%` operator (modulus)",76,null],[13,"And","","The `&&` operator (logical and)",76,null],[13,"Or","","The `||` operator (logical or)",76,null],[13,"BitXor","","The `^` operator (bitwise xor)",76,null],[13,"BitAnd","","The `&` operator (bitwise and)",76,null],[13,"BitOr","","The `|` operator (bitwise or)",76,null],[13,"Shl","","The `<<` operator (shift left)",76,null],[13,"Shr","","The `>>` operator (shift right)",76,null],[13,"Eq","","The `==` operator (equality)",76,null],[13,"Lt","","The `<` operator (less than)",76,null],[13,"Le","","The `<=` operator (less than or equal to)",76,null],[13,"Ne","","The `!=` operator (not equal to)",76,null],[13,"Ge","","The `>=` operator (greater than or equal to)",76,null],[13,"Gt","","The `>` operator (greater than)",76,null],[13,"AddEq","","The `+=` operator",76,null],[13,"SubEq","","The `-=` operator",76,null],[13,"MulEq","","The `*=` operator",76,null],[13,"DivEq","","The `/=` operator",76,null],[13,"RemEq","","The `%=` operator",76,null],[13,"BitXorEq","","The `^=` operator",76,null],[13,"BitAndEq","","The `&=` operator",76,null],[13,"BitOrEq","","The `|=` operator",76,null],[13,"ShlEq","","The `<<=` operator",76,null],[13,"ShrEq","","The `>>=` operator",76,null],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",null,null],[13,"Deref","","The `*` operator for dereferencing",77,null],[13,"Not","","The `!` operator for logical inversion",77,null],[13,"Neg","","The `-` operator for negation",77,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",78,null],[13,"Type","","A particular type is returned.",78,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Array","","A fixed size array type: `[T; n]`.",79,null],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",79,null],[13,"Group","","A type contained within invisible delimiters.",79,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",79,null],[13,"Infer","","Indication that a type should be inferred by the compiler:…",79,null],[13,"Macro","","A macro in the type position.",79,null],[13,"Never","","The never type: `!`.",79,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",79,null],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",79,null],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",79,null],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",79,null],[13,"Slice","","A dynamically sized slice type: `[T]`.",79,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",79,null],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",79,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",79,null],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item =…",null,null],[13,"Lifetime","","A lifetime argument.",80,null],[13,"Type","","A type argument.",80,null],[13,"Binding","","A binding (equality constraint) on an associated type: the…",80,null],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",80,null],[13,"Const","","A const expression. Must be inside of a block.",80,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",null,null],[13,"None","","",81,null],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",81,null],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",81,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",null,[[["tokenstream"]],[["parse"],["result"]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",null,[[["tokenstream"]],[["parse"],["result"]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",null,[[["str"]],[["parse"],["result"]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and…",null,null],[3,"Underscore","syn::token","`_`",null,null],[12,"spans","","",82,null],[3,"Abstract","","`abstract`",null,null],[12,"span","","",83,null],[3,"As","","`as`",null,null],[12,"span","","",84,null],[3,"Async","","`async`",null,null],[12,"span","","",85,null],[3,"Auto","","`auto`",null,null],[12,"span","","",86,null],[3,"Await","","`await`",null,null],[12,"span","","",87,null],[3,"Become","","`become`",null,null],[12,"span","","",88,null],[3,"Box","","`box`",null,null],[12,"span","","",89,null],[3,"Break","","`break`",null,null],[12,"span","","",90,null],[3,"Const","","`const`",null,null],[12,"span","","",91,null],[3,"Continue","","`continue`",null,null],[12,"span","","",92,null],[3,"Crate","","`crate`",null,null],[12,"span","","",93,null],[3,"Default","","`default`",null,null],[12,"span","","",94,null],[3,"Do","","`do`",null,null],[12,"span","","",95,null],[3,"Dyn","","`dyn`",null,null],[12,"span","","",96,null],[3,"Else","","`else`",null,null],[12,"span","","",97,null],[3,"Enum","","`enum`",null,null],[12,"span","","",98,null],[3,"Extern","","`extern`",null,null],[12,"span","","",99,null],[3,"Final","","`final`",null,null],[12,"span","","",100,null],[3,"Fn","","`fn`",null,null],[12,"span","","",101,null],[3,"For","","`for`",null,null],[12,"span","","",102,null],[3,"If","","`if`",null,null],[12,"span","","",103,null],[3,"Impl","","`impl`",null,null],[12,"span","","",104,null],[3,"In","","`in`",null,null],[12,"span","","",105,null],[3,"Let","","`let`",null,null],[12,"span","","",106,null],[3,"Loop","","`loop`",null,null],[12,"span","","",107,null],[3,"Macro","","`macro`",null,null],[12,"span","","",108,null],[3,"Match","","`match`",null,null],[12,"span","","",109,null],[3,"Mod","","`mod`",null,null],[12,"span","","",110,null],[3,"Move","","`move`",null,null],[12,"span","","",111,null],[3,"Mut","","`mut`",null,null],[12,"span","","",112,null],[3,"Override","","`override`",null,null],[12,"span","","",113,null],[3,"Priv","","`priv`",null,null],[12,"span","","",114,null],[3,"Pub","","`pub`",null,null],[12,"span","","",115,null],[3,"Ref","","`ref`",null,null],[12,"span","","",116,null],[3,"Return","","`return`",null,null],[12,"span","","",117,null],[3,"SelfType","","`Self`",null,null],[12,"span","","",118,null],[3,"SelfValue","","`self`",null,null],[12,"span","","",119,null],[3,"Static","","`static`",null,null],[12,"span","","",120,null],[3,"Struct","","`struct`",null,null],[12,"span","","",121,null],[3,"Super","","`super`",null,null],[12,"span","","",122,null],[3,"Trait","","`trait`",null,null],[12,"span","","",123,null],[3,"Try","","`try`",null,null],[12,"span","","",124,null],[3,"Type","","`type`",null,null],[12,"span","","",125,null],[3,"Typeof","","`typeof`",null,null],[12,"span","","",126,null],[3,"Union","","`union`",null,null],[12,"span","","",127,null],[3,"Unsafe","","`unsafe`",null,null],[12,"span","","",128,null],[3,"Unsized","","`unsized`",null,null],[12,"span","","",129,null],[3,"Use","","`use`",null,null],[12,"span","","",130,null],[3,"Virtual","","`virtual`",null,null],[12,"span","","",131,null],[3,"Where","","`where`",null,null],[12,"span","","",132,null],[3,"While","","`while`",null,null],[12,"span","","",133,null],[3,"Yield","","`yield`",null,null],[12,"span","","",134,null],[3,"Add","","`+`",null,null],[12,"spans","","",135,null],[3,"AddEq","","`+=`",null,null],[12,"spans","","",136,null],[3,"And","","`&`",null,null],[12,"spans","","",137,null],[3,"AndAnd","","`&&`",null,null],[12,"spans","","",138,null],[3,"AndEq","","`&=`",null,null],[12,"spans","","",139,null],[3,"At","","`@`",null,null],[12,"spans","","",140,null],[3,"Bang","","`!`",null,null],[12,"spans","","",141,null],[3,"Caret","","`^`",null,null],[12,"spans","","",142,null],[3,"CaretEq","","`^=`",null,null],[12,"spans","","",143,null],[3,"Colon","","`:`",null,null],[12,"spans","","",144,null],[3,"Colon2","","`::`",null,null],[12,"spans","","",145,null],[3,"Comma","","`,`",null,null],[12,"spans","","",146,null],[3,"Div","","`/`",null,null],[12,"spans","","",147,null],[3,"DivEq","","`/=`",null,null],[12,"spans","","",148,null],[3,"Dollar","","`$`",null,null],[12,"spans","","",149,null],[3,"Dot","","`.`",null,null],[12,"spans","","",150,null],[3,"Dot2","","`..`",null,null],[12,"spans","","",151,null],[3,"Dot3","","`...`",null,null],[12,"spans","","",152,null],[3,"DotDotEq","","`..=`",null,null],[12,"spans","","",153,null],[3,"Eq","","`=`",null,null],[12,"spans","","",154,null],[3,"EqEq","","`==`",null,null],[12,"spans","","",155,null],[3,"Ge","","`>=`",null,null],[12,"spans","","",156,null],[3,"Gt","","`>`",null,null],[12,"spans","","",157,null],[3,"Le","","`<=`",null,null],[12,"spans","","",158,null],[3,"Lt","","`<`",null,null],[12,"spans","","",159,null],[3,"MulEq","","`*=`",null,null],[12,"spans","","",160,null],[3,"Ne","","`!=`",null,null],[12,"spans","","",161,null],[3,"Or","","`|`",null,null],[12,"spans","","",162,null],[3,"OrEq","","`|=`",null,null],[12,"spans","","",163,null],[3,"OrOr","","`||`",null,null],[12,"spans","","",164,null],[3,"Pound","","`#`",null,null],[12,"spans","","",165,null],[3,"Question","","`?`",null,null],[12,"spans","","",166,null],[3,"RArrow","","`->`",null,null],[12,"spans","","",167,null],[3,"LArrow","","`<-`",null,null],[12,"spans","","",168,null],[3,"Rem","","`%`",null,null],[12,"spans","","",169,null],[3,"RemEq","","`%=`",null,null],[12,"spans","","",170,null],[3,"FatArrow","","`=>`",null,null],[12,"spans","","",171,null],[3,"Semi","","`;`",null,null],[12,"spans","","",172,null],[3,"Shl","","`<<`",null,null],[12,"spans","","",173,null],[3,"ShlEq","","`<<=`",null,null],[12,"spans","","",174,null],[3,"Shr","","`>>`",null,null],[12,"spans","","",175,null],[3,"ShrEq","","`>>=`",null,null],[12,"spans","","",176,null],[3,"Star","","`*`",null,null],[12,"spans","","",177,null],[3,"Sub","","`-`",null,null],[12,"spans","","",178,null],[3,"SubEq","","`-=`",null,null],[12,"spans","","",179,null],[3,"Tilde","","`~`",null,null],[12,"spans","","",180,null],[3,"Brace","","`{...}`",null,null],[12,"span","","",181,null],[3,"Bracket","","`[...]`",null,null],[12,"span","","",182,null],[3,"Paren","","`(...)`",null,null],[12,"span","","",183,null],[3,"Group","","None-delimited group",null,null],[12,"span","","",184,null],[8,"Token","","Marker trait for types that represent single tokens.",null,null],[11,"surround","","",181,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",182,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",183,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",184,[[["tokenstream"],["self"],["f"]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[["self"]],[["meta"],["result",["meta"]]]]],[11,"parse_args","","Parse the arguments to the attribute as a syntax tree.",0,[[["self"]],[["parse"],["result"]]]],[11,"parse_args_with","","Parse the arguments to the attribute using the given parser.",0,[[["self"],["parser"]],["result"]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream"]],[["vec"],["result",["vec"]]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream"]],[["vec"],["result",["vec"]]]]],[11,"path","","Returns the identifier that begins this structured meta…",62,[[["self"]],["path"]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream"]],["result"]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream"]],["result"]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",64,[[["self"]],[["field"],["iter",["field"]]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",64,[[["self"]],[["field"],["itermut",["field"]]]]],[11,"len","","Returns the number of fields.",64,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if there are zero fields.",64,[[["self"]],["bool"]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",22,[[["self"]],["typeparams"]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",22,[[["self"]],["typeparamsmut"]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",22,[[["self"]],["lifetimes"]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",22,[[["self"]],["lifetimesmut"]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",22,[[["self"]],["constparams"]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",22,[[["self"]],["constparamsmut"]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",22,[[["self"]],["whereclause"]]],[11,"split_for_impl","","Split a type's generics into the pieces required for…",22,[[["self"]]]],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like…",185,[[["self"]],["turbofish"]]],[11,"new","","",23,[[["lifetime"]],["self"]]],[11,"new","","Panics",30,[[["str"],["span"]],["self"]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",72,[[["literal"]],["self"]]],[11,"new","","",186,[[["str"],["span"]],["self"]]],[11,"value","","",186,[[["self"]],["string"]]],[11,"parse","","Parse a syntax tree node from the content of this string…",186,[[["self"]],[["parse"],["result"]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",186,[[["self"],["parser"]],["result"]]],[11,"span","","",186,[[["self"]],["span"]]],[11,"set_span","","",186,[[["self"],["span"]]]],[11,"suffix","","",186,[[["self"]],["str"]]],[11,"new","","",187,[[["span"]],["self"]]],[11,"value","","",187,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"span","","",187,[[["self"]],["span"]]],[11,"set_span","","",187,[[["self"],["span"]]]],[11,"new","","",188,[[["span"],["u8"]],["self"]]],[11,"value","","",188,[[["self"]],["u8"]]],[11,"span","","",188,[[["self"]],["span"]]],[11,"set_span","","",188,[[["self"],["span"]]]],[11,"new","","",189,[[["char"],["span"]],["self"]]],[11,"value","","",189,[[["self"]],["char"]]],[11,"span","","",189,[[["self"]],["span"]]],[11,"set_span","","",189,[[["self"],["span"]]]],[11,"new","","",190,[[["str"],["span"]],["self"]]],[11,"base10_digits","","",190,[[["self"]],["str"]]],[11,"base10_parse","","Parses the literal into a selected number type.",190,[[["self"]],["result"]]],[11,"suffix","","",190,[[["self"]],["str"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"set_span","","",190,[[["self"],["span"]]]],[11,"new","","",191,[[["str"],["span"]],["self"]]],[11,"base10_digits","","",191,[[["self"]],["str"]]],[11,"base10_parse","","",191,[[["self"]],["result"]]],[11,"suffix","","",191,[[["self"]],["str"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"set_span","","",191,[[["self"],["span"]]]],[11,"parse_body","","Parse the tokens within the macro invocation's delimiters…",32,[[["self"]],[["parse"],["result"]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation's delimiters…",32,[[["self"],["parser"]],["result"]]],[11,"without_plus","","In some positions, types may not contain the `+`…",79,[[["parsestream"]],["result"]]],[11,"without_plus","","",78,[[["parsestream"]],["result"]]],[11,"parse","","",78,[[["bool"],["parsestream"]],["result"]]],[11,"without_plus","","",51,[[["parsestream"]],["result"]]],[11,"parse","","",51,[[["bool"],["parsestream"]],["result"]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",58,[[["parsestream"]],["result"]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",58,[[["i"],["self"]],["bool"]]],[11,"get_ident","","If this path consists of a single ident, returns the ident.",58,[[["self"]],[["ident"],["option",["ident"]]]]],[11,"is_empty","","",81,[[["self"]],["bool"]]],[0,"buffer","","A stably addressed token buffer supporting efficient…",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",null,null],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",null,null],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",192,[[["tokenstream"]],["tokenbuffer"]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",192,[[["tokenstream"]],["tokenbuffer"]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",192,[[["self"]],["cursor"]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",193,[[],["self"]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",193,[[],["bool"]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",193,[[["delimiter"]],["option"]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",193,[[],["option"]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",193,[[],["option"]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",193,[[],["option"]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",193,[[],["option"]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",193,[[],["tokenstream"]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",193,[[],["option"]]],[11,"span","","Returns the `Span` of the current token, or…",193,[[],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",null,null],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",null,null],[10,"parse_any","","Parses any identifier including keywords.",194,[[["parsestream"]],["result"]]],[18,"peek_any","","Peeks any identifier including keywords. Usage:…",194,null],[10,"unraw","","Strips the raw marker `r#`, if any, from the beginning of…",194,[[["self"]],["ident"]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",null,null],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",null,null],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",null,null],[3,"IntoIter","","An iterator over owned values of type `T`.",null,null],[3,"Iter","","An iterator over borrowed values of type `&T`.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",null,null],[4,"Pair","","A single syntax tree node of type `T` followed by its…",null,null],[13,"Punctuated","","",195,null],[13,"End","","",195,null],[11,"new","","Creates an empty punctuated sequence.",196,[[],["punctuated"]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",196,[[["self"]],["bool"]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",196,[[["self"]],["usize"]]],[11,"first","","Borrows the first element in this sequence.",196,[[["self"]],[["option"],["t"]]]],[11,"last","","Borrows the last element in this sequence.",196,[[["self"]],[["option"],["t"]]]],[11,"last_mut","","Mutably borrows the last element in this sequence.",196,[[["self"]],[["t"],["option"]]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",196,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",196,[[["self"]],["itermut"]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",196,[[["self"]],["pairs"]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",196,[[["self"]],["pairsmut"]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",196,[[],["intopairs"]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",196,[[["self"],["t"]]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",196,[[["self"],["p"]]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",196,[[["self"]],[["option",["pair"]],["pair"]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",196,[[["self"]],["bool"]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",196,[[["self"]],["bool"]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",196,[[["self"],["t"]]]],[11,"insert","","Inserts an element at position `index`.",196,[[["self"],["usize"],["t"]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",196,[[["parsestream"]],["result"]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",196,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",196,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",196,[[["parsestream"]],["result"]]],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",195,[[],["t"]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",195,[[["self"]],["t"]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",195,[[["self"]],["t"]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",195,[[["self"]],[["option"],["p"]]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",195,[[["option"],["t"]],["self"]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",195,[[]]],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",null,null],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",null,null],[10,"span","","Returns a `Span` covering the complete contents of this…",197,[[["self"]],["span"]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[5,"visit_abi","syn::visit","",null,[[["v"],["abi"]]]],[5,"visit_angle_bracketed_generic_arguments","","",null,[[["anglebracketedgenericarguments"],["v"]]]],[5,"visit_attr_style","","",null,[[["attrstyle"],["v"]]]],[5,"visit_attribute","","",null,[[["attribute"],["v"]]]],[5,"visit_bare_fn_arg","","",null,[[["v"],["barefnarg"]]]],[5,"visit_bin_op","","",null,[[["v"],["binop"]]]],[5,"visit_binding","","",null,[[["v"],["binding"]]]],[5,"visit_bound_lifetimes","","",null,[[["v"],["boundlifetimes"]]]],[5,"visit_const_param","","",null,[[["constparam"],["v"]]]],[5,"visit_constraint","","",null,[[["constraint"],["v"]]]],[5,"visit_data","","",null,[[["v"],["data"]]]],[5,"visit_data_enum","","",null,[[["v"],["dataenum"]]]],[5,"visit_data_struct","","",null,[[["v"],["datastruct"]]]],[5,"visit_data_union","","",null,[[["v"],["dataunion"]]]],[5,"visit_derive_input","","",null,[[["v"],["deriveinput"]]]],[5,"visit_expr","","",null,[[["expr"],["v"]]]],[5,"visit_expr_binary","","",null,[[["exprbinary"],["v"]]]],[5,"visit_expr_call","","",null,[[["exprcall"],["v"]]]],[5,"visit_expr_cast","","",null,[[["v"],["exprcast"]]]],[5,"visit_expr_field","","",null,[[["exprfield"],["v"]]]],[5,"visit_expr_index","","",null,[[["v"],["exprindex"]]]],[5,"visit_expr_lit","","",null,[[["exprlit"],["v"]]]],[5,"visit_expr_paren","","",null,[[["v"],["exprparen"]]]],[5,"visit_expr_path","","",null,[[["v"],["exprpath"]]]],[5,"visit_expr_unary","","",null,[[["v"],["exprunary"]]]],[5,"visit_field","","",null,[[["field"],["v"]]]],[5,"visit_fields","","",null,[[["fields"],["v"]]]],[5,"visit_fields_named","","",null,[[["v"],["fieldsnamed"]]]],[5,"visit_fields_unnamed","","",null,[[["fieldsunnamed"],["v"]]]],[5,"visit_generic_argument","","",null,[[["genericargument"],["v"]]]],[5,"visit_generic_param","","",null,[[["v"],["genericparam"]]]],[5,"visit_generics","","",null,[[["v"],["generics"]]]],[5,"visit_ident","","",null,[[["v"],["ident"]]]],[5,"visit_index","","",null,[[["index"],["v"]]]],[5,"visit_lifetime","","",null,[[["lifetime"],["v"]]]],[5,"visit_lifetime_def","","",null,[[["v"],["lifetimedef"]]]],[5,"visit_lit","","",null,[[["lit"],["v"]]]],[5,"visit_lit_bool","","",null,[[["litbool"],["v"]]]],[5,"visit_lit_byte","","",null,[[["litbyte"],["v"]]]],[5,"visit_lit_byte_str","","",null,[[["litbytestr"],["v"]]]],[5,"visit_lit_char","","",null,[[["v"],["litchar"]]]],[5,"visit_lit_float","","",null,[[["v"],["litfloat"]]]],[5,"visit_lit_int","","",null,[[["litint"],["v"]]]],[5,"visit_lit_str","","",null,[[["v"],["litstr"]]]],[5,"visit_macro","","",null,[[["macro"],["v"]]]],[5,"visit_macro_delimiter","","",null,[[["v"],["macrodelimiter"]]]],[5,"visit_member","","",null,[[["member"],["v"]]]],[5,"visit_meta","","",null,[[["meta"],["v"]]]],[5,"visit_meta_list","","",null,[[["v"],["metalist"]]]],[5,"visit_meta_name_value","","",null,[[["v"],["metanamevalue"]]]],[5,"visit_nested_meta","","",null,[[["nestedmeta"],["v"]]]],[5,"visit_parenthesized_generic_arguments","","",null,[[["v"],["parenthesizedgenericarguments"]]]],[5,"visit_path","","",null,[[["v"],["path"]]]],[5,"visit_path_arguments","","",null,[[["v"],["patharguments"]]]],[5,"visit_path_segment","","",null,[[["v"],["pathsegment"]]]],[5,"visit_predicate_eq","","",null,[[["v"],["predicateeq"]]]],[5,"visit_predicate_lifetime","","",null,[[["predicatelifetime"],["v"]]]],[5,"visit_predicate_type","","",null,[[["v"],["predicatetype"]]]],[5,"visit_qself","","",null,[[["qself"],["v"]]]],[5,"visit_return_type","","",null,[[["returntype"],["v"]]]],[5,"visit_span","","",null,[[["span"],["v"]]]],[5,"visit_trait_bound","","",null,[[["traitbound"],["v"]]]],[5,"visit_trait_bound_modifier","","",null,[[["v"],["traitboundmodifier"]]]],[5,"visit_type","","",null,[[["v"],["type"]]]],[5,"visit_type_array","","",null,[[["v"],["typearray"]]]],[5,"visit_type_bare_fn","","",null,[[["v"],["typebarefn"]]]],[5,"visit_type_group","","",null,[[["typegroup"],["v"]]]],[5,"visit_type_impl_trait","","",null,[[["v"],["typeimpltrait"]]]],[5,"visit_type_infer","","",null,[[["v"],["typeinfer"]]]],[5,"visit_type_macro","","",null,[[["v"],["typemacro"]]]],[5,"visit_type_never","","",null,[[["v"],["typenever"]]]],[5,"visit_type_param","","",null,[[["typeparam"],["v"]]]],[5,"visit_type_param_bound","","",null,[[["v"],["typeparambound"]]]],[5,"visit_type_paren","","",null,[[["typeparen"],["v"]]]],[5,"visit_type_path","","",null,[[["v"],["typepath"]]]],[5,"visit_type_ptr","","",null,[[["v"],["typeptr"]]]],[5,"visit_type_reference","","",null,[[["v"],["typereference"]]]],[5,"visit_type_slice","","",null,[[["typeslice"],["v"]]]],[5,"visit_type_trait_object","","",null,[[["v"],["typetraitobject"]]]],[5,"visit_type_tuple","","",null,[[["typetuple"],["v"]]]],[5,"visit_un_op","","",null,[[["v"],["unop"]]]],[5,"visit_variadic","","",null,[[["v"],["variadic"]]]],[5,"visit_variant","","",null,[[["variant"],["v"]]]],[5,"visit_vis_crate","","",null,[[["v"],["viscrate"]]]],[5,"visit_vis_public","","",null,[[["v"],["vispublic"]]]],[5,"visit_vis_restricted","","",null,[[["v"],["visrestricted"]]]],[5,"visit_visibility","","",null,[[["v"],["visibility"]]]],[5,"visit_where_clause","","",null,[[["whereclause"],["v"]]]],[5,"visit_where_predicate","","",null,[[["wherepredicate"],["v"]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[11,"visit_abi","","",198,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",198,[[["anglebracketedgenericarguments"],["self"]]]],[11,"visit_attr_style","","",198,[[["attrstyle"],["self"]]]],[11,"visit_attribute","","",198,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",198,[[["self"],["barefnarg"]]]],[11,"visit_bin_op","","",198,[[["self"],["binop"]]]],[11,"visit_binding","","",198,[[["self"],["binding"]]]],[11,"visit_bound_lifetimes","","",198,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",198,[[["self"],["constparam"]]]],[11,"visit_constraint","","",198,[[["self"],["constraint"]]]],[11,"visit_data","","",198,[[["self"],["data"]]]],[11,"visit_data_enum","","",198,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",198,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",198,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",198,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",198,[[["self"],["expr"]]]],[11,"visit_expr_binary","","",198,[[["exprbinary"],["self"]]]],[11,"visit_expr_call","","",198,[[["exprcall"],["self"]]]],[11,"visit_expr_cast","","",198,[[["self"],["exprcast"]]]],[11,"visit_expr_field","","",198,[[["self"],["exprfield"]]]],[11,"visit_expr_index","","",198,[[["self"],["exprindex"]]]],[11,"visit_expr_lit","","",198,[[["self"],["exprlit"]]]],[11,"visit_expr_paren","","",198,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",198,[[["self"],["exprpath"]]]],[11,"visit_expr_unary","","",198,[[["self"],["exprunary"]]]],[11,"visit_field","","",198,[[["field"],["self"]]]],[11,"visit_fields","","",198,[[["self"],["fields"]]]],[11,"visit_fields_named","","",198,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",198,[[["fieldsunnamed"],["self"]]]],[11,"visit_generic_argument","","",198,[[["genericargument"],["self"]]]],[11,"visit_generic_param","","",198,[[["self"],["genericparam"]]]],[11,"visit_generics","","",198,[[["self"],["generics"]]]],[11,"visit_ident","","",198,[[["self"],["ident"]]]],[11,"visit_index","","",198,[[["index"],["self"]]]],[11,"visit_lifetime","","",198,[[["lifetime"],["self"]]]],[11,"visit_lifetime_def","","",198,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",198,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",198,[[["litbool"],["self"]]]],[11,"visit_lit_byte","","",198,[[["litbyte"],["self"]]]],[11,"visit_lit_byte_str","","",198,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",198,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",198,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",198,[[["litint"],["self"]]]],[11,"visit_lit_str","","",198,[[["self"],["litstr"]]]],[11,"visit_macro","","",198,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",198,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",198,[[["member"],["self"]]]],[11,"visit_meta","","",198,[[["meta"],["self"]]]],[11,"visit_meta_list","","",198,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",198,[[["self"],["metanamevalue"]]]],[11,"visit_nested_meta","","",198,[[["nestedmeta"],["self"]]]],[11,"visit_parenthesized_generic_arguments","","",198,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_path","","",198,[[["self"],["path"]]]],[11,"visit_path_arguments","","",198,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",198,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",198,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",198,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",198,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",198,[[["self"],["qself"]]]],[11,"visit_return_type","","",198,[[["returntype"],["self"]]]],[11,"visit_span","","",198,[[["self"],["span"]]]],[11,"visit_trait_bound","","",198,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",198,[[["self"],["traitboundmodifier"]]]],[11,"visit_type","","",198,[[["self"],["type"]]]],[11,"visit_type_array","","",198,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",198,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",198,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",198,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",198,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",198,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",198,[[["self"],["typenever"]]]],[11,"visit_type_param","","",198,[[["typeparam"],["self"]]]],[11,"visit_type_param_bound","","",198,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",198,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",198,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",198,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",198,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",198,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",198,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",198,[[["self"],["typetuple"]]]],[11,"visit_un_op","","",198,[[["self"],["unop"]]]],[11,"visit_variadic","","",198,[[["self"],["variadic"]]]],[11,"visit_variant","","",198,[[["variant"],["self"]]]],[11,"visit_vis_crate","","",198,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",198,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",198,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",198,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",198,[[["whereclause"],["self"]]]],[11,"visit_where_predicate","","",198,[[["wherepredicate"],["self"]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",null,null],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[3,"Nothing","","An empty syntax tree node that consumes no tokens when…",null,null],[0,"discouraged","","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked…",199,[[["self"]]]],[6,"Result","syn::parse","The result of a Syn parser.",null,null],[6,"ParseStream","","Input to a Syn parser function.",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be…",null,null],[10,"parse","","",200,[[["parsestream"]],["result"]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",null,null],[16,"Output","","",201,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",201,[[["tokenstream"]],["result"]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",201,[[["tokenstream"]],["result"]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",201,[[["str"]],["result"]]],[11,"error","","Triggers an error at the current position of the parse…",202,[[["display"]],["error"]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",203,[[["self"]],[["parse"],["result"]]]],[11,"call","","Calls the given parser function to parse a syntax tree…",203,[[["self"]],["result"]]],[11,"peek","","Looks at the next token in the parse stream to determine…",203,[[["self"],["peek"]],["bool"]]],[11,"peek2","","Looks at the second-next token in the parse stream.",203,[[["self"],["peek"]],["bool"]]],[11,"peek3","","Looks at the third-next token in the parse stream.",203,[[["self"],["peek"]],["bool"]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",203,[[["self"]],[["punctuated"],["result",["punctuated"]]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",203,[[["self"]],["bool"]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",203,[[["self"]],["lookahead1"]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",203,[[["self"]],["self"]]],[11,"error","","Triggers an error at the current position of the parse…",203,[[["display"],["self"]],["error"]]],[11,"step","","Speculatively parses tokens from this parse stream,…",203,[[["self"],["f"]],["result"]]],[11,"span","","Returns the `Span` of the next token in the parse stream,…",203,[[["self"]],["span"]]],[11,"cursor","","Provides low-level access to the token representation…",203,[[["self"]],["cursor"]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",204,[[["display"],["span"]],["self"]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",204,[[["display"],["totokens"]],["self"]]],[11,"span","","The source location of the error.",204,[[["self"]],["span"]]],[11,"to_compile_error","","Render the error as an invocation of [`compile_error!`].",204,[[["self"]],["tokenstream"]]],[11,"combine","","Add another error message to self such that when…",204,[[["self"],["error"]]]],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",null,null],[6,"Result","","The result of a Syn parser.",null,null],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",null,null],[14,"braced","","Parse a set of curly braces and expose their content to…",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content to…",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type…",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the…",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a…",null,null],[11,"peek","","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"span","","",205,[[["self"]],["span"]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"into","","",205,[[],["u"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,[[["self"],["t"]]]],[11,"to_string","","",205,[[["self"]],["string"]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"try_into","","",205,[[],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"type_id","","",205,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"span","","",206,[[["self"]],["span"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,[[["self"],["t"]]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"try_into","","",206,[[],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"type_id","","",206,[[["self"]],["typeid"]]],[11,"span","","",207,[[["self"]],["span"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[],["u"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,[[["self"],["t"]]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"try_into","","",207,[[],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"type_id","","",207,[[["self"]],["typeid"]]],[11,"span","","",208,[[["self"]],["span"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[],["u"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,[[["self"],["t"]]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"try_into","","",208,[[],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"type_id","","",208,[[["self"]],["typeid"]]],[11,"span","","",209,[[["self"]],["span"]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,[[["self"],["t"]]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"try_into","","",209,[[],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"type_id","","",209,[[["self"]],["typeid"]]],[11,"span","","",210,[[["self"]],["span"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[],["u"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,[[["self"],["t"]]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"try_into","","",210,[[],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"type_id","","",210,[[["self"]],["typeid"]]],[11,"span","","",10,[[["self"]],["span"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"span","","",211,[[["self"]],["span"]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,[[["self"],["t"]]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"try_into","","",211,[[],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"type_id","","",211,[[["self"]],["typeid"]]],[11,"span","","",212,[[["self"]],["span"]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,[[["self"],["t"]]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"try_into","","",212,[[],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"type_id","","",212,[[["self"]],["typeid"]]],[11,"span","","",213,[[["self"]],["span"]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,[[["self"],["t"]]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"try_into","","",213,[[],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"type_id","","",213,[[["self"]],["typeid"]]],[11,"span","","",11,[[["self"]],["span"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"span","","",214,[[["self"]],["span"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,[[["self"],["t"]]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"try_into","","",214,[[],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"type_id","","",214,[[["self"]],["typeid"]]],[11,"span","","",215,[[["self"]],["span"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,[[["self"],["t"]]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"try_into","","",215,[[],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"type_id","","",215,[[["self"]],["typeid"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"span","","",216,[[["self"]],["span"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,[[["self"],["t"]]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"try_into","","",216,[[],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"type_id","","",216,[[["self"]],["typeid"]]],[11,"span","","",217,[[["self"]],["span"]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,[[["self"],["t"]]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"try_into","","",217,[[],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"type_id","","",217,[[["self"]],["typeid"]]],[11,"span","","",218,[[["self"]],["span"]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[],["u"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,[[["self"],["t"]]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"try_into","","",218,[[],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"type_id","","",218,[[["self"]],["typeid"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"span","","",219,[[["self"]],["span"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[],["u"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,[[["self"],["t"]]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"try_into","","",219,[[],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"type_id","","",219,[[["self"]],["typeid"]]],[11,"span","","",15,[[["self"]],["span"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"span","","",220,[[["self"]],["span"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[],["u"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,[[["self"],["t"]]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"try_into","","",220,[[],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"type_id","","",220,[[["self"]],["typeid"]]],[11,"span","","",221,[[["self"]],["span"]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"into","","",221,[[],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,[[["self"],["t"]]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"try_into","","",221,[[],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"type_id","","",221,[[["self"]],["typeid"]]],[11,"span","","",222,[[["self"]],["span"]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"into","","",222,[[],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,[[["self"],["t"]]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"try_into","","",222,[[],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"type_id","","",222,[[["self"]],["typeid"]]],[11,"span","","",223,[[["self"]],["span"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"into","","",223,[[],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,[[["self"],["t"]]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"try_into","","",223,[[],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"type_id","","",223,[[["self"]],["typeid"]]],[11,"span","","",16,[[["self"]],["span"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"span","","",17,[[["self"]],["span"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"span","","",224,[[["self"]],["span"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,[[["self"],["t"]]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"try_into","","",224,[[],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"type_id","","",224,[[["self"]],["typeid"]]],[11,"span","","",225,[[["self"]],["span"]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,[[["self"],["t"]]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"try_into","","",225,[[],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"type_id","","",225,[[["self"]],["typeid"]]],[11,"span","","",226,[[["self"]],["span"]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into","","",226,[[],["u"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,[[["self"],["t"]]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"try_into","","",226,[[],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"type_id","","",226,[[["self"]],["typeid"]]],[11,"span","","",227,[[["self"]],["span"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"into","","",227,[[],["u"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,[[["self"],["t"]]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"try_into","","",227,[[],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"type_id","","",227,[[["self"]],["typeid"]]],[11,"span","","",228,[[["self"]],["span"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into","","",228,[[],["u"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,[[["self"],["t"]]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"try_into","","",228,[[],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"type_id","","",228,[[["self"]],["typeid"]]],[11,"span","","",229,[[["self"]],["span"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"into","","",229,[[],["u"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,[[["self"],["t"]]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"try_into","","",229,[[],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"type_id","","",229,[[["self"]],["typeid"]]],[11,"span","","",230,[[["self"]],["span"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[],["u"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,[[["self"],["t"]]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"try_into","","",230,[[],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"type_id","","",230,[[["self"]],["typeid"]]],[11,"span","","",231,[[["self"]],["span"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[],["u"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,[[["self"],["t"]]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"try_into","","",231,[[],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"type_id","","",231,[[["self"]],["typeid"]]],[11,"span","","",232,[[["self"]],["span"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"into","","",232,[[],["u"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,[[["self"],["t"]]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"try_into","","",232,[[],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"type_id","","",232,[[["self"]],["typeid"]]],[11,"span","","",18,[[["self"]],["span"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"span","","",233,[[["self"]],["span"]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"into","","",233,[[],["u"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,[[["self"],["t"]]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"try_into","","",233,[[],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"type_id","","",233,[[["self"]],["typeid"]]],[11,"span","","",234,[[["self"]],["span"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into","","",234,[[],["u"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,[[["self"],["t"]]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"try_into","","",234,[[],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"type_id","","",234,[[["self"]],["typeid"]]],[11,"span","","",235,[[["self"]],["span"]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,[[["self"],["t"]]]],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"try_into","","",235,[[],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"type_id","","",235,[[["self"]],["typeid"]]],[11,"span","","",19,[[["self"]],["span"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"span","","",20,[[["self"]],["span"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"span","","",21,[[["self"]],["span"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"span","","",22,[[["self"]],["span"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"span","","",23,[[["self"]],["span"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"span","","",24,[[["self"]],["span"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"span","","",25,[[["self"]],["span"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"span","","",26,[[["self"]],["span"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"span","","",27,[[["self"]],["span"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"span","","",28,[[["self"]],["span"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"span","","",29,[[["self"]],["span"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"span","","",236,[[["self"]],["span"]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[],["u"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,[[["self"],["t"]]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"try_into","","",236,[[],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"type_id","","",236,[[["self"]],["typeid"]]],[11,"span","","",237,[[["self"]],["span"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[],["u"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,[[["self"],["t"]]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"try_into","","",237,[[],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"type_id","","",237,[[["self"]],["typeid"]]],[11,"span","","",185,[[["self"]],["span"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,[[["self"],["t"]]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"peek","","",30,[[["cursor"]],["bool"]]],[11,"display","","",30,[[],["str"]]],[11,"span","","",30,[[["self"]],["span"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"to_string","","",30,[[["self"]],["string"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"peek","","",31,[[["cursor"]],["bool"]]],[11,"display","","",31,[[],["str"]]],[11,"span","","",31,[[["self"]],["span"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"span","","",188,[[["self"]],["span"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,[[["self"],["t"]]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"try_into","","",188,[[],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"type_id","","",188,[[["self"]],["typeid"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"span","","",187,[[["self"]],["span"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,[[["self"],["t"]]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"span","","",189,[[["self"]],["span"]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,[[["self"],["t"]]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,[[["self"],["t"]]]],[11,"to_string","","",191,[[["self"]],["string"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"peek","","",190,[[["cursor"]],["bool"]]],[11,"display","","",190,[[],["str"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,[[["self"],["t"]]]],[11,"to_string","","",190,[[["self"]],["string"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"span","","",186,[[["self"]],["span"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,[[["self"],["t"]]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"span","","",32,[[["self"]],["span"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"span","","",36,[[["self"]],["span"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"span","","",37,[[["self"]],["span"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"span","","",38,[[["self"]],["span"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"span","","",39,[[["self"]],["span"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"span","","",40,[[["self"]],["span"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"span","","",41,[[["self"]],["span"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"span","","",42,[[["self"]],["span"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"span","","",43,[[["self"]],["span"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"span","","",44,[[["self"]],["span"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"span","","",45,[[["self"]],["span"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"span","","",46,[[["self"]],["span"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"span","","",47,[[["self"]],["span"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"span","","",48,[[["self"]],["span"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"span","","",49,[[["self"]],["span"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"span","","",50,[[["self"]],["span"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"span","","",51,[[["self"]],["span"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"span","","",52,[[["self"]],["span"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"span","","",53,[[["self"]],["span"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"span","","",54,[[["self"]],["span"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"span","","",55,[[["self"]],["span"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"span","","",56,[[["self"]],["span"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"span","","",57,[[["self"]],["span"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"span","","",58,[[["self"]],["span"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"span","","",59,[[["self"]],["span"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"into","","",204,[[],["u"]]],[11,"into_iter","","",204,[[],["i"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,[[["self"],["t"]]]],[11,"to_string","","",204,[[["self"]],["string"]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"try_into","","",204,[[],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"type_id","","",204,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"span","","",62,[[["self"]],["span"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"span","","",63,[[["self"]],["span"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"span","","",64,[[["self"]],["span"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"into_iter","","",64,[[],["i"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"span","","",65,[[["self"]],["span"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"span","","",66,[[["self"]],["span"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"span","","",67,[[["self"]],["span"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"span","","",68,[[["self"]],["span"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"span","","",69,[[["self"]],["span"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"span","","",70,[[["self"]],["span"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"span","","",71,[[["self"]],["span"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"peek","","",72,[[["cursor"]],["bool"]]],[11,"display","","",72,[[],["str"]]],[11,"span","","",72,[[["self"]],["span"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"span","","",76,[[["self"]],["span"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"span","","",77,[[["self"]],["span"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"span","","",78,[[["self"]],["span"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"span","","",79,[[["self"]],["span"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"span","","",80,[[["self"]],["span"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"span","","",81,[[["self"]],["span"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"peek","syn::token","",82,[[["cursor"]],["bool"]]],[11,"display","","",82,[[],["str"]]],[11,"span","","",82,[[["self"]],["span"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"peek","","",83,[[["cursor"]],["bool"]]],[11,"display","","",83,[[],["str"]]],[11,"span","","",83,[[["self"]],["span"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"peek","","",84,[[["cursor"]],["bool"]]],[11,"display","","",84,[[],["str"]]],[11,"span","","",84,[[["self"]],["span"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"peek","","",85,[[["cursor"]],["bool"]]],[11,"display","","",85,[[],["str"]]],[11,"span","","",85,[[["self"]],["span"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"peek","","",86,[[["cursor"]],["bool"]]],[11,"display","","",86,[[],["str"]]],[11,"span","","",86,[[["self"]],["span"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"peek","","",87,[[["cursor"]],["bool"]]],[11,"display","","",87,[[],["str"]]],[11,"span","","",87,[[["self"]],["span"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"peek","","",88,[[["cursor"]],["bool"]]],[11,"display","","",88,[[],["str"]]],[11,"span","","",88,[[["self"]],["span"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"peek","","",89,[[["cursor"]],["bool"]]],[11,"display","","",89,[[],["str"]]],[11,"span","","",89,[[["self"]],["span"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"peek","","",90,[[["cursor"]],["bool"]]],[11,"display","","",90,[[],["str"]]],[11,"span","","",90,[[["self"]],["span"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"peek","","",91,[[["cursor"]],["bool"]]],[11,"display","","",91,[[],["str"]]],[11,"span","","",91,[[["self"]],["span"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"peek","","",92,[[["cursor"]],["bool"]]],[11,"display","","",92,[[],["str"]]],[11,"span","","",92,[[["self"]],["span"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"peek","","",93,[[["cursor"]],["bool"]]],[11,"display","","",93,[[],["str"]]],[11,"span","","",93,[[["self"]],["span"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"peek","","",94,[[["cursor"]],["bool"]]],[11,"display","","",94,[[],["str"]]],[11,"span","","",94,[[["self"]],["span"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"peek","","",95,[[["cursor"]],["bool"]]],[11,"display","","",95,[[],["str"]]],[11,"span","","",95,[[["self"]],["span"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"peek","","",96,[[["cursor"]],["bool"]]],[11,"display","","",96,[[],["str"]]],[11,"span","","",96,[[["self"]],["span"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"peek","","",97,[[["cursor"]],["bool"]]],[11,"display","","",97,[[],["str"]]],[11,"span","","",97,[[["self"]],["span"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"peek","","",98,[[["cursor"]],["bool"]]],[11,"display","","",98,[[],["str"]]],[11,"span","","",98,[[["self"]],["span"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"peek","","",99,[[["cursor"]],["bool"]]],[11,"display","","",99,[[],["str"]]],[11,"span","","",99,[[["self"]],["span"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"span","","",100,[[["self"]],["span"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"span","","",101,[[["self"]],["span"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"peek","","",102,[[["cursor"]],["bool"]]],[11,"display","","",102,[[],["str"]]],[11,"span","","",102,[[["self"]],["span"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"peek","","",103,[[["cursor"]],["bool"]]],[11,"display","","",103,[[],["str"]]],[11,"span","","",103,[[["self"]],["span"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"peek","","",104,[[["cursor"]],["bool"]]],[11,"display","","",104,[[],["str"]]],[11,"span","","",104,[[["self"]],["span"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"peek","","",105,[[["cursor"]],["bool"]]],[11,"display","","",105,[[],["str"]]],[11,"span","","",105,[[["self"]],["span"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"peek","","",106,[[["cursor"]],["bool"]]],[11,"display","","",106,[[],["str"]]],[11,"span","","",106,[[["self"]],["span"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"peek","","",107,[[["cursor"]],["bool"]]],[11,"display","","",107,[[],["str"]]],[11,"span","","",107,[[["self"]],["span"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"peek","","",108,[[["cursor"]],["bool"]]],[11,"display","","",108,[[],["str"]]],[11,"span","","",108,[[["self"]],["span"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"peek","","",109,[[["cursor"]],["bool"]]],[11,"display","","",109,[[],["str"]]],[11,"span","","",109,[[["self"]],["span"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"peek","","",110,[[["cursor"]],["bool"]]],[11,"display","","",110,[[],["str"]]],[11,"span","","",110,[[["self"]],["span"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,[[["self"],["t"]]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"peek","","",111,[[["cursor"]],["bool"]]],[11,"display","","",111,[[],["str"]]],[11,"span","","",111,[[["self"]],["span"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"peek","","",112,[[["cursor"]],["bool"]]],[11,"display","","",112,[[],["str"]]],[11,"span","","",112,[[["self"]],["span"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"peek","","",113,[[["cursor"]],["bool"]]],[11,"display","","",113,[[],["str"]]],[11,"span","","",113,[[["self"]],["span"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"peek","","",114,[[["cursor"]],["bool"]]],[11,"display","","",114,[[],["str"]]],[11,"span","","",114,[[["self"]],["span"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"peek","","",115,[[["cursor"]],["bool"]]],[11,"display","","",115,[[],["str"]]],[11,"span","","",115,[[["self"]],["span"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"peek","","",116,[[["cursor"]],["bool"]]],[11,"display","","",116,[[],["str"]]],[11,"span","","",116,[[["self"]],["span"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"peek","","",117,[[["cursor"]],["bool"]]],[11,"display","","",117,[[],["str"]]],[11,"span","","",117,[[["self"]],["span"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"peek","","",118,[[["cursor"]],["bool"]]],[11,"display","","",118,[[],["str"]]],[11,"span","","",118,[[["self"]],["span"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,[[["self"],["t"]]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"peek","","",119,[[["cursor"]],["bool"]]],[11,"display","","",119,[[],["str"]]],[11,"span","","",119,[[["self"]],["span"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,[[["self"],["t"]]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"peek","","",120,[[["cursor"]],["bool"]]],[11,"display","","",120,[[],["str"]]],[11,"span","","",120,[[["self"]],["span"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,[[["self"],["t"]]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"peek","","",121,[[["cursor"]],["bool"]]],[11,"display","","",121,[[],["str"]]],[11,"span","","",121,[[["self"]],["span"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"peek","","",122,[[["cursor"]],["bool"]]],[11,"display","","",122,[[],["str"]]],[11,"span","","",122,[[["self"]],["span"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"peek","","",123,[[["cursor"]],["bool"]]],[11,"display","","",123,[[],["str"]]],[11,"span","","",123,[[["self"]],["span"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"peek","","",124,[[["cursor"]],["bool"]]],[11,"display","","",124,[[],["str"]]],[11,"span","","",124,[[["self"]],["span"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,[[["self"],["t"]]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"peek","","",125,[[["cursor"]],["bool"]]],[11,"display","","",125,[[],["str"]]],[11,"span","","",125,[[["self"]],["span"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"span","","",126,[[["self"]],["span"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"span","","",127,[[["self"]],["span"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,[[["self"],["t"]]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"peek","","",128,[[["cursor"]],["bool"]]],[11,"display","","",128,[[],["str"]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,[[["self"],["t"]]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"peek","","",129,[[["cursor"]],["bool"]]],[11,"display","","",129,[[],["str"]]],[11,"span","","",129,[[["self"]],["span"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,[[["self"],["t"]]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"peek","","",130,[[["cursor"]],["bool"]]],[11,"display","","",130,[[],["str"]]],[11,"span","","",130,[[["self"]],["span"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,[[["self"],["t"]]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"peek","","",131,[[["cursor"]],["bool"]]],[11,"display","","",131,[[],["str"]]],[11,"span","","",131,[[["self"]],["span"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,[[["self"],["t"]]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"peek","","",132,[[["cursor"]],["bool"]]],[11,"display","","",132,[[],["str"]]],[11,"span","","",132,[[["self"]],["span"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,[[["self"],["t"]]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"peek","","",133,[[["cursor"]],["bool"]]],[11,"display","","",133,[[],["str"]]],[11,"span","","",133,[[["self"]],["span"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,[[["self"],["t"]]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"peek","","",134,[[["cursor"]],["bool"]]],[11,"display","","",134,[[],["str"]]],[11,"span","","",134,[[["self"]],["span"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,[[["self"],["t"]]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"peek","","",135,[[["cursor"]],["bool"]]],[11,"display","","",135,[[],["str"]]],[11,"span","","",135,[[["self"]],["span"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,[[["self"],["t"]]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"peek","","",136,[[["cursor"]],["bool"]]],[11,"display","","",136,[[],["str"]]],[11,"span","","",136,[[["self"]],["span"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,[[["self"],["t"]]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"peek","","",137,[[["cursor"]],["bool"]]],[11,"display","","",137,[[],["str"]]],[11,"span","","",137,[[["self"]],["span"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,[[["self"],["t"]]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"peek","","",138,[[["cursor"]],["bool"]]],[11,"display","","",138,[[],["str"]]],[11,"span","","",138,[[["self"]],["span"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,[[["self"],["t"]]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"peek","","",139,[[["cursor"]],["bool"]]],[11,"display","","",139,[[],["str"]]],[11,"span","","",139,[[["self"]],["span"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,[[["self"],["t"]]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"peek","","",140,[[["cursor"]],["bool"]]],[11,"display","","",140,[[],["str"]]],[11,"span","","",140,[[["self"]],["span"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,[[["self"],["t"]]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"peek","","",141,[[["cursor"]],["bool"]]],[11,"display","","",141,[[],["str"]]],[11,"span","","",141,[[["self"]],["span"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,[[["self"],["t"]]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"peek","","",142,[[["cursor"]],["bool"]]],[11,"display","","",142,[[],["str"]]],[11,"span","","",142,[[["self"]],["span"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,[[["self"],["t"]]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"peek","","",143,[[["cursor"]],["bool"]]],[11,"display","","",143,[[],["str"]]],[11,"span","","",143,[[["self"]],["span"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"peek","","",144,[[["cursor"]],["bool"]]],[11,"display","","",144,[[],["str"]]],[11,"span","","",144,[[["self"]],["span"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,[[["self"],["t"]]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"peek","","",145,[[["cursor"]],["bool"]]],[11,"display","","",145,[[],["str"]]],[11,"span","","",145,[[["self"]],["span"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,[[["self"],["t"]]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"peek","","",146,[[["cursor"]],["bool"]]],[11,"display","","",146,[[],["str"]]],[11,"span","","",146,[[["self"]],["span"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,[[["self"],["t"]]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"peek","","",147,[[["cursor"]],["bool"]]],[11,"display","","",147,[[],["str"]]],[11,"span","","",147,[[["self"]],["span"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,[[["self"],["t"]]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"peek","","",148,[[["cursor"]],["bool"]]],[11,"display","","",148,[[],["str"]]],[11,"span","","",148,[[["self"]],["span"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,[[["self"],["t"]]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"peek","","",149,[[["cursor"]],["bool"]]],[11,"display","","",149,[[],["str"]]],[11,"span","","",149,[[["self"]],["span"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,[[["self"],["t"]]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"peek","","",150,[[["cursor"]],["bool"]]],[11,"display","","",150,[[],["str"]]],[11,"span","","",150,[[["self"]],["span"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,[[["self"],["t"]]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"peek","","",151,[[["cursor"]],["bool"]]],[11,"display","","",151,[[],["str"]]],[11,"span","","",151,[[["self"]],["span"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,[[["self"],["t"]]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"peek","","",152,[[["cursor"]],["bool"]]],[11,"display","","",152,[[],["str"]]],[11,"span","","",152,[[["self"]],["span"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,[[["self"],["t"]]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"peek","","",153,[[["cursor"]],["bool"]]],[11,"display","","",153,[[],["str"]]],[11,"span","","",153,[[["self"]],["span"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,[[["self"],["t"]]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"peek","","",154,[[["cursor"]],["bool"]]],[11,"display","","",154,[[],["str"]]],[11,"span","","",154,[[["self"]],["span"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,[[["self"],["t"]]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"peek","","",155,[[["cursor"]],["bool"]]],[11,"display","","",155,[[],["str"]]],[11,"span","","",155,[[["self"]],["span"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,[[["self"],["t"]]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"peek","","",156,[[["cursor"]],["bool"]]],[11,"display","","",156,[[],["str"]]],[11,"span","","",156,[[["self"]],["span"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,[[["self"],["t"]]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"peek","","",157,[[["cursor"]],["bool"]]],[11,"display","","",157,[[],["str"]]],[11,"span","","",157,[[["self"]],["span"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,[[["self"],["t"]]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"peek","","",158,[[["cursor"]],["bool"]]],[11,"display","","",158,[[],["str"]]],[11,"span","","",158,[[["self"]],["span"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,[[["self"],["t"]]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"peek","","",159,[[["cursor"]],["bool"]]],[11,"display","","",159,[[],["str"]]],[11,"span","","",159,[[["self"]],["span"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,[[["self"],["t"]]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"peek","","",160,[[["cursor"]],["bool"]]],[11,"display","","",160,[[],["str"]]],[11,"span","","",160,[[["self"]],["span"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,[[["self"],["t"]]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"peek","","",161,[[["cursor"]],["bool"]]],[11,"display","","",161,[[],["str"]]],[11,"span","","",161,[[["self"]],["span"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,[[["self"],["t"]]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"peek","","",162,[[["cursor"]],["bool"]]],[11,"display","","",162,[[],["str"]]],[11,"span","","",162,[[["self"]],["span"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,[[["self"],["t"]]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"peek","","",163,[[["cursor"]],["bool"]]],[11,"display","","",163,[[],["str"]]],[11,"span","","",163,[[["self"]],["span"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,[[["self"],["t"]]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"peek","","",164,[[["cursor"]],["bool"]]],[11,"display","","",164,[[],["str"]]],[11,"span","","",164,[[["self"]],["span"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,[[["self"],["t"]]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"peek","","",165,[[["cursor"]],["bool"]]],[11,"display","","",165,[[],["str"]]],[11,"span","","",165,[[["self"]],["span"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,[[["self"],["t"]]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"peek","","",166,[[["cursor"]],["bool"]]],[11,"display","","",166,[[],["str"]]],[11,"span","","",166,[[["self"]],["span"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,[[["self"],["t"]]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"peek","","",167,[[["cursor"]],["bool"]]],[11,"display","","",167,[[],["str"]]],[11,"span","","",167,[[["self"]],["span"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,[[["self"],["t"]]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"span","","",168,[[["self"]],["span"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,[[["self"],["t"]]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"peek","","",169,[[["cursor"]],["bool"]]],[11,"display","","",169,[[],["str"]]],[11,"span","","",169,[[["self"]],["span"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,[[["self"],["t"]]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"peek","","",170,[[["cursor"]],["bool"]]],[11,"display","","",170,[[],["str"]]],[11,"span","","",170,[[["self"]],["span"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,[[["self"],["t"]]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"peek","","",171,[[["cursor"]],["bool"]]],[11,"display","","",171,[[],["str"]]],[11,"span","","",171,[[["self"]],["span"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,[[["self"],["t"]]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"peek","","",172,[[["cursor"]],["bool"]]],[11,"display","","",172,[[],["str"]]],[11,"span","","",172,[[["self"]],["span"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,[[["self"],["t"]]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"peek","","",173,[[["cursor"]],["bool"]]],[11,"display","","",173,[[],["str"]]],[11,"span","","",173,[[["self"]],["span"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,[[["self"],["t"]]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"peek","","",174,[[["cursor"]],["bool"]]],[11,"display","","",174,[[],["str"]]],[11,"span","","",174,[[["self"]],["span"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,[[["self"],["t"]]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"peek","","",175,[[["cursor"]],["bool"]]],[11,"display","","",175,[[],["str"]]],[11,"span","","",175,[[["self"]],["span"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,[[["self"],["t"]]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"peek","","",176,[[["cursor"]],["bool"]]],[11,"display","","",176,[[],["str"]]],[11,"span","","",176,[[["self"]],["span"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,[[["self"],["t"]]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"peek","","",177,[[["cursor"]],["bool"]]],[11,"display","","",177,[[],["str"]]],[11,"span","","",177,[[["self"]],["span"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,[[["self"],["t"]]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"peek","","",178,[[["cursor"]],["bool"]]],[11,"display","","",178,[[],["str"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,[[["self"],["t"]]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"peek","","",179,[[["cursor"]],["bool"]]],[11,"display","","",179,[[],["str"]]],[11,"span","","",179,[[["self"]],["span"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,[[["self"],["t"]]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"peek","","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"span","","",180,[[["self"]],["span"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,[[["self"],["t"]]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,[[["self"],["t"]]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,[[["self"],["t"]]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,[[["self"],["t"]]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,[[["self"],["t"]]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"from","syn::buffer","",192,[[["t"]],["t"]]],[11,"into","","",192,[[],["u"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,[[["self"],["t"]]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"span","syn::punctuated","",196,[[["self"]],["span"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[],["u"]]],[11,"into_iter","","",196,[[],["i"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,[[["self"],["t"]]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"try_into","","",196,[[],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"type_id","","",196,[[["self"]],["typeid"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[],["u"]]],[11,"into_iter","","",238,[[],["i"]]],[11,"to_owned","","",238,[[["self"]],["t"]]],[11,"clone_into","","",238,[[["self"],["t"]]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"try_into","","",238,[[],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"type_id","","",238,[[["self"]],["typeid"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[],["u"]]],[11,"into_iter","","",239,[[],["i"]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"try_into","","",239,[[],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"type_id","","",239,[[["self"]],["typeid"]]],[11,"from","","",240,[[["t"]],["t"]]],[11,"into","","",240,[[],["u"]]],[11,"into_iter","","",240,[[],["i"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,[[["self"],["t"]]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"try_into","","",240,[[],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"type_id","","",240,[[["self"]],["typeid"]]],[11,"from","","",241,[[["t"]],["t"]]],[11,"into","","",241,[[],["u"]]],[11,"into_iter","","",241,[[],["i"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,[[["self"],["t"]]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"try_into","","",241,[[],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"type_id","","",241,[[["self"]],["typeid"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"into","","",242,[[],["u"]]],[11,"into_iter","","",242,[[],["i"]]],[11,"to_owned","","",242,[[["self"]],["t"]]],[11,"clone_into","","",242,[[["self"],["t"]]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"try_into","","",242,[[],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"type_id","","",242,[[["self"]],["typeid"]]],[11,"from","","",243,[[["t"]],["t"]]],[11,"into","","",243,[[],["u"]]],[11,"into_iter","","",243,[[],["i"]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"try_into","","",243,[[],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"type_id","","",243,[[["self"]],["typeid"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,[[["self"],["t"]]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"try_into","","",195,[[],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"type_id","","",195,[[["self"]],["typeid"]]],[11,"from","syn::parse","",244,[[["t"]],["t"]]],[11,"into","","",244,[[],["u"]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"try_into","","",244,[[],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"type_id","","",244,[[["self"]],["typeid"]]],[11,"from","","",203,[[["t"]],["t"]]],[11,"into","","",203,[[],["u"]]],[11,"to_string","","",203,[[["self"]],["string"]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"try_into","","",203,[[],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"type_id","","",203,[[["self"]],["typeid"]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[],["u"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,[[["self"],["t"]]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"try_into","","",202,[[],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"type_id","","",202,[[["self"]],["typeid"]]],[11,"from","","",245,[[["t"]],["t"]]],[11,"into","","",245,[[],["u"]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"try_into","","",245,[[],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"type_id","","",245,[[["self"]],["typeid"]]],[11,"hash","syn","",205,[[["self"],["h"]]]],[11,"fmt","","",205,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"clone","","",205,[[["self"]],["ident"]]],[11,"eq","","",205,[[["self"],["ident"]],["bool"]]],[11,"eq","","",205,[[["t"],["self"]],["bool"]]],[11,"fmt","","",205,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"partial_cmp","","",205,[[["self"],["ident"]],[["option",["ordering"]],["ordering"]]]],[11,"cmp","","",205,[[["self"],["ident"]],["ordering"]]],[11,"to_tokens","","",205,[[["self"],["tokenstream"]]]],[11,"span","","",205,[[["self"]],[["option",["span"]],["span"]]]],[11,"fmt","","",205,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"peek","","",30,[[["cursor"]],["bool"]]],[11,"display","","",30,[[],["str"]]],[11,"peek","","",72,[[["cursor"]],["bool"]]],[11,"display","","",72,[[],["str"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"peek","","",190,[[["cursor"]],["bool"]]],[11,"display","","",190,[[],["str"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"peek","","",31,[[["cursor"]],["bool"]]],[11,"display","","",31,[[],["str"]]],[11,"peek","syn::token","",82,[[["cursor"]],["bool"]]],[11,"display","","",82,[[],["str"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"peek","","",83,[[["cursor"]],["bool"]]],[11,"display","","",83,[[],["str"]]],[11,"peek","","",84,[[["cursor"]],["bool"]]],[11,"display","","",84,[[],["str"]]],[11,"peek","","",85,[[["cursor"]],["bool"]]],[11,"display","","",85,[[],["str"]]],[11,"peek","","",86,[[["cursor"]],["bool"]]],[11,"display","","",86,[[],["str"]]],[11,"peek","","",87,[[["cursor"]],["bool"]]],[11,"display","","",87,[[],["str"]]],[11,"peek","","",88,[[["cursor"]],["bool"]]],[11,"display","","",88,[[],["str"]]],[11,"peek","","",89,[[["cursor"]],["bool"]]],[11,"display","","",89,[[],["str"]]],[11,"peek","","",90,[[["cursor"]],["bool"]]],[11,"display","","",90,[[],["str"]]],[11,"peek","","",91,[[["cursor"]],["bool"]]],[11,"display","","",91,[[],["str"]]],[11,"peek","","",92,[[["cursor"]],["bool"]]],[11,"display","","",92,[[],["str"]]],[11,"peek","","",93,[[["cursor"]],["bool"]]],[11,"display","","",93,[[],["str"]]],[11,"peek","","",94,[[["cursor"]],["bool"]]],[11,"display","","",94,[[],["str"]]],[11,"peek","","",95,[[["cursor"]],["bool"]]],[11,"display","","",95,[[],["str"]]],[11,"peek","","",96,[[["cursor"]],["bool"]]],[11,"display","","",96,[[],["str"]]],[11,"peek","","",97,[[["cursor"]],["bool"]]],[11,"display","","",97,[[],["str"]]],[11,"peek","","",98,[[["cursor"]],["bool"]]],[11,"display","","",98,[[],["str"]]],[11,"peek","","",99,[[["cursor"]],["bool"]]],[11,"display","","",99,[[],["str"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"peek","","",102,[[["cursor"]],["bool"]]],[11,"display","","",102,[[],["str"]]],[11,"peek","","",103,[[["cursor"]],["bool"]]],[11,"display","","",103,[[],["str"]]],[11,"peek","","",104,[[["cursor"]],["bool"]]],[11,"display","","",104,[[],["str"]]],[11,"peek","","",105,[[["cursor"]],["bool"]]],[11,"display","","",105,[[],["str"]]],[11,"peek","","",106,[[["cursor"]],["bool"]]],[11,"display","","",106,[[],["str"]]],[11,"peek","","",107,[[["cursor"]],["bool"]]],[11,"display","","",107,[[],["str"]]],[11,"peek","","",108,[[["cursor"]],["bool"]]],[11,"display","","",108,[[],["str"]]],[11,"peek","","",109,[[["cursor"]],["bool"]]],[11,"display","","",109,[[],["str"]]],[11,"peek","","",110,[[["cursor"]],["bool"]]],[11,"display","","",110,[[],["str"]]],[11,"peek","","",111,[[["cursor"]],["bool"]]],[11,"display","","",111,[[],["str"]]],[11,"peek","","",112,[[["cursor"]],["bool"]]],[11,"display","","",112,[[],["str"]]],[11,"peek","","",113,[[["cursor"]],["bool"]]],[11,"display","","",113,[[],["str"]]],[11,"peek","","",114,[[["cursor"]],["bool"]]],[11,"display","","",114,[[],["str"]]],[11,"peek","","",115,[[["cursor"]],["bool"]]],[11,"display","","",115,[[],["str"]]],[11,"peek","","",116,[[["cursor"]],["bool"]]],[11,"display","","",116,[[],["str"]]],[11,"peek","","",117,[[["cursor"]],["bool"]]],[11,"display","","",117,[[],["str"]]],[11,"peek","","",118,[[["cursor"]],["bool"]]],[11,"display","","",118,[[],["str"]]],[11,"peek","","",119,[[["cursor"]],["bool"]]],[11,"display","","",119,[[],["str"]]],[11,"peek","","",120,[[["cursor"]],["bool"]]],[11,"display","","",120,[[],["str"]]],[11,"peek","","",121,[[["cursor"]],["bool"]]],[11,"display","","",121,[[],["str"]]],[11,"peek","","",122,[[["cursor"]],["bool"]]],[11,"display","","",122,[[],["str"]]],[11,"peek","","",123,[[["cursor"]],["bool"]]],[11,"display","","",123,[[],["str"]]],[11,"peek","","",124,[[["cursor"]],["bool"]]],[11,"display","","",124,[[],["str"]]],[11,"peek","","",125,[[["cursor"]],["bool"]]],[11,"display","","",125,[[],["str"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"peek","","",128,[[["cursor"]],["bool"]]],[11,"display","","",128,[[],["str"]]],[11,"peek","","",129,[[["cursor"]],["bool"]]],[11,"display","","",129,[[],["str"]]],[11,"peek","","",130,[[["cursor"]],["bool"]]],[11,"display","","",130,[[],["str"]]],[11,"peek","","",131,[[["cursor"]],["bool"]]],[11,"display","","",131,[[],["str"]]],[11,"peek","","",132,[[["cursor"]],["bool"]]],[11,"display","","",132,[[],["str"]]],[11,"peek","","",133,[[["cursor"]],["bool"]]],[11,"display","","",133,[[],["str"]]],[11,"peek","","",134,[[["cursor"]],["bool"]]],[11,"display","","",134,[[],["str"]]],[11,"peek","","",135,[[["cursor"]],["bool"]]],[11,"display","","",135,[[],["str"]]],[11,"peek","","",136,[[["cursor"]],["bool"]]],[11,"display","","",136,[[],["str"]]],[11,"peek","","",137,[[["cursor"]],["bool"]]],[11,"display","","",137,[[],["str"]]],[11,"peek","","",138,[[["cursor"]],["bool"]]],[11,"display","","",138,[[],["str"]]],[11,"peek","","",139,[[["cursor"]],["bool"]]],[11,"display","","",139,[[],["str"]]],[11,"peek","","",140,[[["cursor"]],["bool"]]],[11,"display","","",140,[[],["str"]]],[11,"peek","","",141,[[["cursor"]],["bool"]]],[11,"display","","",141,[[],["str"]]],[11,"peek","","",142,[[["cursor"]],["bool"]]],[11,"display","","",142,[[],["str"]]],[11,"peek","","",143,[[["cursor"]],["bool"]]],[11,"display","","",143,[[],["str"]]],[11,"peek","","",144,[[["cursor"]],["bool"]]],[11,"display","","",144,[[],["str"]]],[11,"peek","","",145,[[["cursor"]],["bool"]]],[11,"display","","",145,[[],["str"]]],[11,"peek","","",146,[[["cursor"]],["bool"]]],[11,"display","","",146,[[],["str"]]],[11,"peek","","",147,[[["cursor"]],["bool"]]],[11,"display","","",147,[[],["str"]]],[11,"peek","","",148,[[["cursor"]],["bool"]]],[11,"display","","",148,[[],["str"]]],[11,"peek","","",149,[[["cursor"]],["bool"]]],[11,"display","","",149,[[],["str"]]],[11,"peek","","",150,[[["cursor"]],["bool"]]],[11,"display","","",150,[[],["str"]]],[11,"peek","","",151,[[["cursor"]],["bool"]]],[11,"display","","",151,[[],["str"]]],[11,"peek","","",152,[[["cursor"]],["bool"]]],[11,"display","","",152,[[],["str"]]],[11,"peek","","",153,[[["cursor"]],["bool"]]],[11,"display","","",153,[[],["str"]]],[11,"peek","","",154,[[["cursor"]],["bool"]]],[11,"display","","",154,[[],["str"]]],[11,"peek","","",155,[[["cursor"]],["bool"]]],[11,"display","","",155,[[],["str"]]],[11,"peek","","",156,[[["cursor"]],["bool"]]],[11,"display","","",156,[[],["str"]]],[11,"peek","","",157,[[["cursor"]],["bool"]]],[11,"display","","",157,[[],["str"]]],[11,"peek","","",158,[[["cursor"]],["bool"]]],[11,"display","","",158,[[],["str"]]],[11,"peek","","",159,[[["cursor"]],["bool"]]],[11,"display","","",159,[[],["str"]]],[11,"peek","","",160,[[["cursor"]],["bool"]]],[11,"display","","",160,[[],["str"]]],[11,"peek","","",161,[[["cursor"]],["bool"]]],[11,"display","","",161,[[],["str"]]],[11,"peek","","",162,[[["cursor"]],["bool"]]],[11,"display","","",162,[[],["str"]]],[11,"peek","","",163,[[["cursor"]],["bool"]]],[11,"display","","",163,[[],["str"]]],[11,"peek","","",164,[[["cursor"]],["bool"]]],[11,"display","","",164,[[],["str"]]],[11,"peek","","",165,[[["cursor"]],["bool"]]],[11,"display","","",165,[[],["str"]]],[11,"peek","","",166,[[["cursor"]],["bool"]]],[11,"display","","",166,[[],["str"]]],[11,"peek","","",167,[[["cursor"]],["bool"]]],[11,"display","","",167,[[],["str"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"peek","","",169,[[["cursor"]],["bool"]]],[11,"display","","",169,[[],["str"]]],[11,"peek","","",170,[[["cursor"]],["bool"]]],[11,"display","","",170,[[],["str"]]],[11,"peek","","",171,[[["cursor"]],["bool"]]],[11,"display","","",171,[[],["str"]]],[11,"peek","","",172,[[["cursor"]],["bool"]]],[11,"display","","",172,[[],["str"]]],[11,"peek","","",173,[[["cursor"]],["bool"]]],[11,"display","","",173,[[],["str"]]],[11,"peek","","",174,[[["cursor"]],["bool"]]],[11,"display","","",174,[[],["str"]]],[11,"peek","","",175,[[["cursor"]],["bool"]]],[11,"display","","",175,[[],["str"]]],[11,"peek","","",176,[[["cursor"]],["bool"]]],[11,"display","","",176,[[],["str"]]],[11,"peek","","",177,[[["cursor"]],["bool"]]],[11,"display","","",177,[[],["str"]]],[11,"peek","","",178,[[["cursor"]],["bool"]]],[11,"display","","",178,[[],["str"]]],[11,"peek","","",179,[[["cursor"]],["bool"]]],[11,"display","","",179,[[],["str"]]],[11,"peek","","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"peek","syn","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"parse_any","","",205,[[["parsestream"]],["result"]]],[11,"unraw","","",205,[[["self"]],["ident"]]],[11,"advance_to","syn::parse","",203,[[["self"]]]],[11,"parse","syn::token","",82,[[["parsestream"]],["result"]]],[11,"parse","","",83,[[["parsestream"]],["result"]]],[11,"parse","","",84,[[["parsestream"]],["result"]]],[11,"parse","","",85,[[["parsestream"]],["result"]]],[11,"parse","","",86,[[["parsestream"]],["result"]]],[11,"parse","","",87,[[["parsestream"]],["result"]]],[11,"parse","","",88,[[["parsestream"]],["result"]]],[11,"parse","","",89,[[["parsestream"]],["result"]]],[11,"parse","","",90,[[["parsestream"]],["result"]]],[11,"parse","","",91,[[["parsestream"]],["result"]]],[11,"parse","","",92,[[["parsestream"]],["result"]]],[11,"parse","","",93,[[["parsestream"]],["result"]]],[11,"parse","","",94,[[["parsestream"]],["result"]]],[11,"parse","","",95,[[["parsestream"]],["result"]]],[11,"parse","","",96,[[["parsestream"]],["result"]]],[11,"parse","","",97,[[["parsestream"]],["result"]]],[11,"parse","","",98,[[["parsestream"]],["result"]]],[11,"parse","","",99,[[["parsestream"]],["result"]]],[11,"parse","","",100,[[["parsestream"]],["result"]]],[11,"parse","","",101,[[["parsestream"]],["result"]]],[11,"parse","","",102,[[["parsestream"]],["result"]]],[11,"parse","","",103,[[["parsestream"]],["result"]]],[11,"parse","","",104,[[["parsestream"]],["result"]]],[11,"parse","","",105,[[["parsestream"]],["result"]]],[11,"parse","","",106,[[["parsestream"]],["result"]]],[11,"parse","","",107,[[["parsestream"]],["result"]]],[11,"parse","","",108,[[["parsestream"]],["result"]]],[11,"parse","","",109,[[["parsestream"]],["result"]]],[11,"parse","","",110,[[["parsestream"]],["result"]]],[11,"parse","","",111,[[["parsestream"]],["result"]]],[11,"parse","","",112,[[["parsestream"]],["result"]]],[11,"parse","","",113,[[["parsestream"]],["result"]]],[11,"parse","","",114,[[["parsestream"]],["result"]]],[11,"parse","","",115,[[["parsestream"]],["result"]]],[11,"parse","","",116,[[["parsestream"]],["result"]]],[11,"parse","","",117,[[["parsestream"]],["result"]]],[11,"parse","","",118,[[["parsestream"]],["result"]]],[11,"parse","","",119,[[["parsestream"]],["result"]]],[11,"parse","","",120,[[["parsestream"]],["result"]]],[11,"parse","","",121,[[["parsestream"]],["result"]]],[11,"parse","","",122,[[["parsestream"]],["result"]]],[11,"parse","","",123,[[["parsestream"]],["result"]]],[11,"parse","","",124,[[["parsestream"]],["result"]]],[11,"parse","","",125,[[["parsestream"]],["result"]]],[11,"parse","","",126,[[["parsestream"]],["result"]]],[11,"parse","","",127,[[["parsestream"]],["result"]]],[11,"parse","","",128,[[["parsestream"]],["result"]]],[11,"parse","","",129,[[["parsestream"]],["result"]]],[11,"parse","","",130,[[["parsestream"]],["result"]]],[11,"parse","","",131,[[["parsestream"]],["result"]]],[11,"parse","","",132,[[["parsestream"]],["result"]]],[11,"parse","","",133,[[["parsestream"]],["result"]]],[11,"parse","","",134,[[["parsestream"]],["result"]]],[11,"parse","","",135,[[["parsestream"]],["result"]]],[11,"parse","","",136,[[["parsestream"]],["result"]]],[11,"parse","","",137,[[["parsestream"]],["result"]]],[11,"parse","","",138,[[["parsestream"]],["result"]]],[11,"parse","","",139,[[["parsestream"]],["result"]]],[11,"parse","","",140,[[["parsestream"]],["result"]]],[11,"parse","","",141,[[["parsestream"]],["result"]]],[11,"parse","","",142,[[["parsestream"]],["result"]]],[11,"parse","","",143,[[["parsestream"]],["result"]]],[11,"parse","","",144,[[["parsestream"]],["result"]]],[11,"parse","","",145,[[["parsestream"]],["result"]]],[11,"parse","","",146,[[["parsestream"]],["result"]]],[11,"parse","","",147,[[["parsestream"]],["result"]]],[11,"parse","","",148,[[["parsestream"]],["result"]]],[11,"parse","","",149,[[["parsestream"]],["result"]]],[11,"parse","","",150,[[["parsestream"]],["result"]]],[11,"parse","","",151,[[["parsestream"]],["result"]]],[11,"parse","","",152,[[["parsestream"]],["result"]]],[11,"parse","","",153,[[["parsestream"]],["result"]]],[11,"parse","","",154,[[["parsestream"]],["result"]]],[11,"parse","","",155,[[["parsestream"]],["result"]]],[11,"parse","","",156,[[["parsestream"]],["result"]]],[11,"parse","","",157,[[["parsestream"]],["result"]]],[11,"parse","","",158,[[["parsestream"]],["result"]]],[11,"parse","","",159,[[["parsestream"]],["result"]]],[11,"parse","","",160,[[["parsestream"]],["result"]]],[11,"parse","","",161,[[["parsestream"]],["result"]]],[11,"parse","","",162,[[["parsestream"]],["result"]]],[11,"parse","","",163,[[["parsestream"]],["result"]]],[11,"parse","","",164,[[["parsestream"]],["result"]]],[11,"parse","","",165,[[["parsestream"]],["result"]]],[11,"parse","","",166,[[["parsestream"]],["result"]]],[11,"parse","","",167,[[["parsestream"]],["result"]]],[11,"parse","","",168,[[["parsestream"]],["result"]]],[11,"parse","","",169,[[["parsestream"]],["result"]]],[11,"parse","","",170,[[["parsestream"]],["result"]]],[11,"parse","","",171,[[["parsestream"]],["result"]]],[11,"parse","","",172,[[["parsestream"]],["result"]]],[11,"parse","","",173,[[["parsestream"]],["result"]]],[11,"parse","","",174,[[["parsestream"]],["result"]]],[11,"parse","","",175,[[["parsestream"]],["result"]]],[11,"parse","","",176,[[["parsestream"]],["result"]]],[11,"parse","","",177,[[["parsestream"]],["result"]]],[11,"parse","","",178,[[["parsestream"]],["result"]]],[11,"parse","","",179,[[["parsestream"]],["result"]]],[11,"parse","","",180,[[["parsestream"]],["result"]]],[11,"parse","syn","",205,[[["parsestream"]],["result"]]],[11,"parse","","",62,[[["parsestream"]],["result"]]],[11,"parse","","",1,[[["parsestream"]],["result"]]],[11,"parse","","",2,[[["parsestream"]],["result"]]],[11,"parse","","",63,[[["parsestream"]],["result"]]],[11,"parse","","",6,[[["parsestream"]],["result"]]],[11,"parse","","",4,[[["parsestream"]],["result"]]],[11,"parse","","",5,[[["parsestream"]],["result"]]],[11,"parse","","",65,[[["parsestream"]],["result"]]],[11,"parse","","",66,[[["parsestream"]],["result"]]],[11,"parse","","",15,[[["parsestream"]],["result"]]],[11,"parse","","",17,[[["parsestream"]],["result"]]],[11,"parse","","",67,[[["parsestream"]],["result"]]],[11,"parse","","",19,[[["parsestream"]],["result"]]],[11,"parse","","",22,[[["parsestream"]],["result"]]],[11,"parse","","",68,[[["parsestream"]],["result"]]],[11,"parse","","",23,[[["parsestream"]],["result"]]],[11,"parse","","",20,[[["parsestream"]],["result"]]],[11,"parse","","",28,[[["parsestream"]],["result"]]],[11,"parse","","",70,[[["parsestream"]],["result"]]],[11,"parse","","",27,[[["parsestream"]],["result"]]],[11,"parse","","",69,[[["parsestream"]],["result"]]],[11,"parse","","",21,[[["parsestream"]],["result"]]],[11,"parse","","",29,[[["parsestream"]],["result"]]],[11,"parse","","",71,[[["parsestream"]],["result"]]],[11,"parse","","",30,[[["parsestream"]],["result"]]],[11,"parse","","",72,[[["parsestream"]],["result"]]],[11,"parse","","",186,[[["parsestream"]],["result"]]],[11,"parse","","",187,[[["parsestream"]],["result"]]],[11,"parse","","",188,[[["parsestream"]],["result"]]],[11,"parse","","",189,[[["parsestream"]],["result"]]],[11,"parse","","",190,[[["parsestream"]],["result"]]],[11,"parse","","",191,[[["parsestream"]],["result"]]],[11,"parse","","",31,[[["parsestream"]],["result"]]],[11,"parse","","",32,[[["parsestream"]],["result"]]],[11,"parse","","",36,[[["parsestream"]],["result"]]],[11,"parse","","",76,[[["parsestream"]],["result"]]],[11,"parse","","",77,[[["parsestream"]],["result"]]],[11,"parse","","",79,[[["parsestream"]],["result"]]],[11,"parse","","",50,[[["parsestream"]],["result"]]],[11,"parse","","",39,[[["parsestream"]],["result"]]],[11,"parse","","",48,[[["parsestream"]],["result"]]],[11,"parse","","",49,[[["parsestream"]],["result"]]],[11,"parse","","",40,[[["parsestream"]],["result"]]],[11,"parse","","",45,[[["parsestream"]],["result"]]],[11,"parse","","",43,[[["parsestream"]],["result"]]],[11,"parse","","",52,[[["parsestream"]],["result"]]],[11,"parse","","",44,[[["parsestream"]],["result"]]],[11,"parse","","",47,[[["parsestream"]],["result"]]],[11,"parse","","",78,[[["parsestream"]],["result"]]],[11,"parse","","",51,[[["parsestream"]],["result"]]],[11,"parse","","",42,[[["parsestream"]],["result"]]],[11,"parse","","",41,[[["parsestream"]],["result"]]],[11,"parse","","",46,[[["parsestream"]],["result"]]],[11,"parse","","",38,[[["parsestream"]],["result"]]],[11,"parse","","",37,[[["parsestream"]],["result"]]],[11,"parse","","",58,[[["parsestream"]],["result"]]],[11,"parse","","",80,[[["parsestream"]],["result"]]],[11,"parse","","",54,[[["parsestream"]],["result"]]],[11,"parse","","",57,[[["parsestream"]],["result"]]],[11,"parse","","",59,[[["parsestream"]],["result"]]],[11,"parse","","",55,[[["parsestream"]],["result"]]],[11,"parse","syn::parse","",245,[[["parsestream"]],["result"]]],[11,"drop","","",203,[[["self"]]]],[11,"from","syn","",205,[[["selfvalue"]],["ident"]]],[11,"from","","",205,[[["selftype"]],["ident"]]],[11,"from","","",205,[[["super"]],["ident"]]],[11,"from","","",205,[[["crate"]],["ident"]]],[11,"from","","",205,[[["extern"]],["ident"]]],[11,"from","","",205,[[["underscore"]],["ident"]]],[11,"from","","",62,[[["path"]],["meta"]]],[11,"from","","",62,[[["metalist"]],["meta"]]],[11,"from","","",62,[[["metanamevalue"]],["meta"]]],[11,"from","","",63,[[["meta"]],["nestedmeta"]]],[11,"from","","",63,[[["lit"]],["nestedmeta"]]],[11,"from","","",64,[[["fieldsnamed"]],["fields"]]],[11,"from","","",64,[[["fieldsunnamed"]],["fields"]]],[11,"from","","",65,[[["vispublic"]],["visibility"]]],[11,"from","","",65,[[["viscrate"]],["visibility"]]],[11,"from","","",65,[[["visrestricted"]],["visibility"]]],[11,"from","","",66,[[["exprarray"]],["expr"]]],[11,"from","","",66,[[["exprassign"]],["expr"]]],[11,"from","","",66,[[["exprassignop"]],["expr"]]],[11,"from","","",66,[[["exprasync"]],["expr"]]],[11,"from","","",66,[[["exprawait"]],["expr"]]],[11,"from","","",66,[[["exprbinary"]],["expr"]]],[11,"from","","",66,[[["exprblock"]],["expr"]]],[11,"from","","",66,[[["exprbox"]],["expr"]]],[11,"from","","",66,[[["exprbreak"]],["expr"]]],[11,"from","","",66,[[["exprcall"]],["expr"]]],[11,"from","","",66,[[["exprcast"]],["expr"]]],[11,"from","","",66,[[["exprclosure"]],["expr"]]],[11,"from","","",66,[[["exprcontinue"]],["expr"]]],[11,"from","","",66,[[["exprfield"]],["expr"]]],[11,"from","","",66,[[["exprforloop"]],["expr"]]],[11,"from","","",66,[[["exprgroup"]],["expr"]]],[11,"from","","",66,[[["exprif"]],["expr"]]],[11,"from","","",66,[[["exprindex"]],["expr"]]],[11,"from","","",66,[[["exprlet"]],["expr"]]],[11,"from","","",66,[[["exprlit"]],["expr"]]],[11,"from","","",66,[[["exprloop"]],["expr"]]],[11,"from","","",66,[[["exprmacro"]],["expr"]]],[11,"from","","",66,[[["exprmatch"]],["expr"]]],[11,"from","","",66,[[["exprmethodcall"]],["expr"]]],[11,"from","","",66,[[["exprparen"]],["expr"]]],[11,"from","","",66,[[["exprpath"]],["expr"]]],[11,"from","","",66,[[["exprrange"]],["expr"]]],[11,"from","","",66,[[["exprreference"]],["expr"]]],[11,"from","","",66,[[["exprrepeat"]],["expr"]]],[11,"from","","",66,[[["exprreturn"]],["expr"]]],[11,"from","","",66,[[["exprstruct"]],["expr"]]],[11,"from","","",66,[[["exprtry"]],["expr"]]],[11,"from","","",66,[[["exprtryblock"]],["expr"]]],[11,"from","","",66,[[["exprtuple"]],["expr"]]],[11,"from","","",66,[[["exprtype"]],["expr"]]],[11,"from","","",66,[[["exprunary"]],["expr"]]],[11,"from","","",66,[[["exprunsafe"]],["expr"]]],[11,"from","","",66,[[["exprwhile"]],["expr"]]],[11,"from","","",66,[[["expryield"]],["expr"]]],[11,"from","","",19,[[["usize"]],["index"]]],[11,"from","","",68,[[["typeparam"]],["genericparam"]]],[11,"from","","",68,[[["lifetimedef"]],["genericparam"]]],[11,"from","","",68,[[["constparam"]],["genericparam"]]],[11,"from","","",28,[[["ident"]],["self"]]],[11,"from","","",70,[[["traitbound"]],["typeparambound"]]],[11,"from","","",70,[[["lifetime"]],["typeparambound"]]],[11,"from","","",71,[[["predicatetype"]],["wherepredicate"]]],[11,"from","","",71,[[["predicatelifetime"]],["wherepredicate"]]],[11,"from","","",71,[[["predicateeq"]],["wherepredicate"]]],[11,"from","","",72,[[["litstr"]],["lit"]]],[11,"from","","",72,[[["litbytestr"]],["lit"]]],[11,"from","","",72,[[["litbyte"]],["lit"]]],[11,"from","","",72,[[["litchar"]],["lit"]]],[11,"from","","",72,[[["litint"]],["lit"]]],[11,"from","","",72,[[["litfloat"]],["lit"]]],[11,"from","","",72,[[["litbool"]],["lit"]]],[11,"from","","",190,[[["literal"]],["self"]]],[11,"from","","",191,[[["literal"]],["self"]]],[11,"from","","",75,[[["datastruct"]],["data"]]],[11,"from","","",75,[[["dataenum"]],["data"]]],[11,"from","","",75,[[["dataunion"]],["data"]]],[11,"from","","",79,[[["typearray"]],["type"]]],[11,"from","","",79,[[["typebarefn"]],["type"]]],[11,"from","","",79,[[["typegroup"]],["type"]]],[11,"from","","",79,[[["typeimpltrait"]],["type"]]],[11,"from","","",79,[[["typeinfer"]],["type"]]],[11,"from","","",79,[[["typemacro"]],["type"]]],[11,"from","","",79,[[["typenever"]],["type"]]],[11,"from","","",79,[[["typeparen"]],["type"]]],[11,"from","","",79,[[["typepath"]],["type"]]],[11,"from","","",79,[[["typeptr"]],["type"]]],[11,"from","","",79,[[["typereference"]],["type"]]],[11,"from","","",79,[[["typeslice"]],["type"]]],[11,"from","","",79,[[["typetraitobject"]],["type"]]],[11,"from","","",79,[[["typetuple"]],["type"]]],[11,"from","","",58,[[["t"]],["self"]]],[11,"from","","",59,[[["t"]],["self"]]],[11,"from","","",204,[[["lexerror"]],["self"]]],[11,"next_back","syn::punctuated","",238,[[["self"]],["option"]]],[11,"next_back","","",239,[[["self"]],["option"]]],[11,"next_back","","",240,[[["self"]],["option"]]],[11,"next_back","","",241,[[["self"]],["option"]]],[11,"next_back","","",242,[[["self"]],["option"]]],[11,"next_back","","",243,[[["self"]],["option"]]],[11,"len","","",238,[[["self"]],["usize"]]],[11,"len","","",239,[[["self"]],["usize"]]],[11,"len","","",240,[[["self"]],["usize"]]],[11,"len","","",241,[[["self"]],["usize"]]],[11,"len","","",242,[[["self"]],["usize"]]],[11,"len","","",243,[[["self"]],["usize"]]],[11,"extend","","",196,[[["intoiterator"],["self"]]]],[11,"extend","","",196,[[["self"],["intoiterator"]]]],[11,"into_iter","syn","",64,[[]]],[11,"into_iter","syn::punctuated","",196,[[]]],[11,"into_iter","syn","",204,[[]]],[11,"next","syn::punctuated","",238,[[["self"]],["option"]]],[11,"size_hint","","",238,[[["self"]]]],[11,"next","","",239,[[["self"]],["option"]]],[11,"size_hint","","",239,[[["self"]]]],[11,"next","","",240,[[["self"]],["option"]]],[11,"size_hint","","",240,[[["self"]]]],[11,"next","","",241,[[["self"]],["option"]]],[11,"size_hint","","",241,[[["self"]]]],[11,"next","","",242,[[["self"]],["option"]]],[11,"size_hint","","",242,[[["self"]]]],[11,"next","","",243,[[["self"]],["option"]]],[11,"size_hint","","",243,[[["self"]]]],[11,"clone","syn::token","",82,[[["self"]],["underscore"]]],[11,"clone","","",83,[[["self"]],["abstract"]]],[11,"clone","","",84,[[["self"]],["as"]]],[11,"clone","","",85,[[["self"]],["async"]]],[11,"clone","","",86,[[["self"]],["auto"]]],[11,"clone","","",87,[[["self"]],["await"]]],[11,"clone","","",88,[[["self"]],["become"]]],[11,"clone","","",89,[[["self"]],["box"]]],[11,"clone","","",90,[[["self"]],["break"]]],[11,"clone","","",91,[[["self"]],["const"]]],[11,"clone","","",92,[[["self"]],["continue"]]],[11,"clone","","",93,[[["self"]],["crate"]]],[11,"clone","","",94,[[["self"]],["default"]]],[11,"clone","","",95,[[["self"]],["do"]]],[11,"clone","","",96,[[["self"]],["dyn"]]],[11,"clone","","",97,[[["self"]],["else"]]],[11,"clone","","",98,[[["self"]],["enum"]]],[11,"clone","","",99,[[["self"]],["extern"]]],[11,"clone","","",100,[[["self"]],["final"]]],[11,"clone","","",101,[[["self"]],["fn"]]],[11,"clone","","",102,[[["self"]],["for"]]],[11,"clone","","",103,[[["self"]],["if"]]],[11,"clone","","",104,[[["self"]],["impl"]]],[11,"clone","","",105,[[["self"]],["in"]]],[11,"clone","","",106,[[["self"]],["let"]]],[11,"clone","","",107,[[["self"]],["loop"]]],[11,"clone","","",108,[[["self"]],["macro"]]],[11,"clone","","",109,[[["self"]],["match"]]],[11,"clone","","",110,[[["self"]],["mod"]]],[11,"clone","","",111,[[["self"]],["move"]]],[11,"clone","","",112,[[["self"]],["mut"]]],[11,"clone","","",113,[[["self"]],["override"]]],[11,"clone","","",114,[[["self"]],["priv"]]],[11,"clone","","",115,[[["self"]],["pub"]]],[11,"clone","","",116,[[["self"]],["ref"]]],[11,"clone","","",117,[[["self"]],["return"]]],[11,"clone","","",118,[[["self"]],["selftype"]]],[11,"clone","","",119,[[["self"]],["selfvalue"]]],[11,"clone","","",120,[[["self"]],["static"]]],[11,"clone","","",121,[[["self"]],["struct"]]],[11,"clone","","",122,[[["self"]],["super"]]],[11,"clone","","",123,[[["self"]],["trait"]]],[11,"clone","","",124,[[["self"]],["try"]]],[11,"clone","","",125,[[["self"]],["type"]]],[11,"clone","","",126,[[["self"]],["typeof"]]],[11,"clone","","",127,[[["self"]],["union"]]],[11,"clone","","",128,[[["self"]],["unsafe"]]],[11,"clone","","",129,[[["self"]],["unsized"]]],[11,"clone","","",130,[[["self"]],["use"]]],[11,"clone","","",131,[[["self"]],["virtual"]]],[11,"clone","","",132,[[["self"]],["where"]]],[11,"clone","","",133,[[["self"]],["while"]]],[11,"clone","","",134,[[["self"]],["yield"]]],[11,"clone","","",135,[[["self"]],["add"]]],[11,"clone","","",136,[[["self"]],["addeq"]]],[11,"clone","","",137,[[["self"]],["and"]]],[11,"clone","","",138,[[["self"]],["andand"]]],[11,"clone","","",139,[[["self"]],["andeq"]]],[11,"clone","","",140,[[["self"]],["at"]]],[11,"clone","","",141,[[["self"]],["bang"]]],[11,"clone","","",142,[[["self"]],["caret"]]],[11,"clone","","",143,[[["self"]],["careteq"]]],[11,"clone","","",144,[[["self"]],["colon"]]],[11,"clone","","",145,[[["self"]],["colon2"]]],[11,"clone","","",146,[[["self"]],["comma"]]],[11,"clone","","",147,[[["self"]],["div"]]],[11,"clone","","",148,[[["self"]],["diveq"]]],[11,"clone","","",149,[[["self"]],["dollar"]]],[11,"clone","","",150,[[["self"]],["dot"]]],[11,"clone","","",151,[[["self"]],["dot2"]]],[11,"clone","","",152,[[["self"]],["dot3"]]],[11,"clone","","",153,[[["self"]],["dotdoteq"]]],[11,"clone","","",154,[[["self"]],["eq"]]],[11,"clone","","",155,[[["self"]],["eqeq"]]],[11,"clone","","",156,[[["self"]],["ge"]]],[11,"clone","","",157,[[["self"]],["gt"]]],[11,"clone","","",158,[[["self"]],["le"]]],[11,"clone","","",159,[[["self"]],["lt"]]],[11,"clone","","",160,[[["self"]],["muleq"]]],[11,"clone","","",161,[[["self"]],["ne"]]],[11,"clone","","",162,[[["self"]],["or"]]],[11,"clone","","",163,[[["self"]],["oreq"]]],[11,"clone","","",164,[[["self"]],["oror"]]],[11,"clone","","",165,[[["self"]],["pound"]]],[11,"clone","","",166,[[["self"]],["question"]]],[11,"clone","","",167,[[["self"]],["rarrow"]]],[11,"clone","","",168,[[["self"]],["larrow"]]],[11,"clone","","",169,[[["self"]],["rem"]]],[11,"clone","","",170,[[["self"]],["remeq"]]],[11,"clone","","",171,[[["self"]],["fatarrow"]]],[11,"clone","","",172,[[["self"]],["semi"]]],[11,"clone","","",173,[[["self"]],["shl"]]],[11,"clone","","",174,[[["self"]],["shleq"]]],[11,"clone","","",175,[[["self"]],["shr"]]],[11,"clone","","",176,[[["self"]],["shreq"]]],[11,"clone","","",177,[[["self"]],["star"]]],[11,"clone","","",178,[[["self"]],["sub"]]],[11,"clone","","",179,[[["self"]],["subeq"]]],[11,"clone","","",180,[[["self"]],["tilde"]]],[11,"clone","","",181,[[["self"]],["brace"]]],[11,"clone","","",182,[[["self"]],["bracket"]]],[11,"clone","","",183,[[["self"]],["paren"]]],[11,"clone","","",184,[[["self"]],["group"]]],[11,"clone","syn","",0,[[["self"]],["attribute"]]],[11,"clone","","",61,[[["self"]],["attrstyle"]]],[11,"clone","","",62,[[["self"]],["meta"]]],[11,"clone","","",1,[[["self"]],["metalist"]]],[11,"clone","","",2,[[["self"]],["metanamevalue"]]],[11,"clone","","",63,[[["self"]],["nestedmeta"]]],[11,"clone","","",6,[[["self"]],["variant"]]],[11,"clone","","",64,[[["self"]],["fields"]]],[11,"clone","","",4,[[["self"]],["fieldsnamed"]]],[11,"clone","","",5,[[["self"]],["fieldsunnamed"]]],[11,"clone","","",3,[[["self"]],["field"]]],[11,"clone","","",65,[[["self"]],["visibility"]]],[11,"clone","","",8,[[["self"]],["vispublic"]]],[11,"clone","","",7,[[["self"]],["viscrate"]]],[11,"clone","","",9,[[["self"]],["visrestricted"]]],[11,"clone","","",66,[[["self"]],["expr"]]],[11,"clone","","",206,[[["self"]],["exprarray"]]],[11,"clone","","",207,[[["self"]],["exprassign"]]],[11,"clone","","",208,[[["self"]],["exprassignop"]]],[11,"clone","","",209,[[["self"]],["exprasync"]]],[11,"clone","","",210,[[["self"]],["exprawait"]]],[11,"clone","","",10,[[["self"]],["exprbinary"]]],[11,"clone","","",211,[[["self"]],["exprblock"]]],[11,"clone","","",212,[[["self"]],["exprbox"]]],[11,"clone","","",213,[[["self"]],["exprbreak"]]],[11,"clone","","",11,[[["self"]],["exprcall"]]],[11,"clone","","",12,[[["self"]],["exprcast"]]],[11,"clone","","",214,[[["self"]],["exprclosure"]]],[11,"clone","","",215,[[["self"]],["exprcontinue"]]],[11,"clone","","",13,[[["self"]],["exprfield"]]],[11,"clone","","",216,[[["self"]],["exprforloop"]]],[11,"clone","","",217,[[["self"]],["exprgroup"]]],[11,"clone","","",218,[[["self"]],["exprif"]]],[11,"clone","","",14,[[["self"]],["exprindex"]]],[11,"clone","","",219,[[["self"]],["exprlet"]]],[11,"clone","","",15,[[["self"]],["exprlit"]]],[11,"clone","","",220,[[["self"]],["exprloop"]]],[11,"clone","","",221,[[["self"]],["exprmacro"]]],[11,"clone","","",222,[[["self"]],["exprmatch"]]],[11,"clone","","",223,[[["self"]],["exprmethodcall"]]],[11,"clone","","",16,[[["self"]],["exprparen"]]],[11,"clone","","",17,[[["self"]],["exprpath"]]],[11,"clone","","",224,[[["self"]],["exprrange"]]],[11,"clone","","",225,[[["self"]],["exprreference"]]],[11,"clone","","",226,[[["self"]],["exprrepeat"]]],[11,"clone","","",227,[[["self"]],["exprreturn"]]],[11,"clone","","",228,[[["self"]],["exprstruct"]]],[11,"clone","","",229,[[["self"]],["exprtry"]]],[11,"clone","","",230,[[["self"]],["exprtryblock"]]],[11,"clone","","",231,[[["self"]],["exprtuple"]]],[11,"clone","","",232,[[["self"]],["exprtype"]]],[11,"clone","","",18,[[["self"]],["exprunary"]]],[11,"clone","","",233,[[["self"]],["exprunsafe"]]],[11,"clone","","",234,[[["self"]],["exprwhile"]]],[11,"clone","","",235,[[["self"]],["expryield"]]],[11,"clone","","",67,[[["self"]],["member"]]],[11,"clone","","",19,[[["self"]],["index"]]],[11,"clone","","",22,[[["self"]],["generics"]]],[11,"clone","","",68,[[["self"]],["genericparam"]]],[11,"clone","","",28,[[["self"]],["typeparam"]]],[11,"clone","","",23,[[["self"]],["lifetimedef"]]],[11,"clone","","",21,[[["self"]],["constparam"]]],[11,"clone","","",236,[[["self"]],["implgenerics"]]],[11,"clone","","",185,[[["self"]],["typegenerics"]]],[11,"clone","","",237,[[["self"]],["turbofish"]]],[11,"clone","","",20,[[["self"]],["boundlifetimes"]]],[11,"clone","","",70,[[["self"]],["typeparambound"]]],[11,"clone","","",27,[[["self"]],["traitbound"]]],[11,"clone","","",69,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",29,[[["self"]],["whereclause"]]],[11,"clone","","",71,[[["self"]],["wherepredicate"]]],[11,"clone","","",26,[[["self"]],["predicatetype"]]],[11,"clone","","",25,[[["self"]],["predicatelifetime"]]],[11,"clone","","",24,[[["self"]],["predicateeq"]]],[11,"clone","","",30,[[["self"]],["lifetime"]]],[11,"clone","","",72,[[["self"]],["lit"]]],[11,"clone","","",186,[[["self"]],["litstr"]]],[11,"clone","","",187,[[["self"]],["litbytestr"]]],[11,"clone","","",188,[[["self"]],["litbyte"]]],[11,"clone","","",189,[[["self"]],["litchar"]]],[11,"clone","","",190,[[["self"]],["litint"]]],[11,"clone","","",191,[[["self"]],["litfloat"]]],[11,"clone","","",31,[[["self"]],["litbool"]]],[11,"clone","","",73,[[["self"]],["strstyle"]]],[11,"clone","","",32,[[["self"]],["macro"]]],[11,"clone","","",74,[[["self"]],["macrodelimiter"]]],[11,"clone","","",36,[[["self"]],["deriveinput"]]],[11,"clone","","",75,[[["self"]],["data"]]],[11,"clone","","",34,[[["self"]],["datastruct"]]],[11,"clone","","",33,[[["self"]],["dataenum"]]],[11,"clone","","",35,[[["self"]],["dataunion"]]],[11,"clone","","",76,[[["self"]],["binop"]]],[11,"clone","","",77,[[["self"]],["unop"]]],[11,"clone","","",79,[[["self"]],["type"]]],[11,"clone","","",39,[[["self"]],["typearray"]]],[11,"clone","","",40,[[["self"]],["typebarefn"]]],[11,"clone","","",41,[[["self"]],["typegroup"]]],[11,"clone","","",42,[[["self"]],["typeimpltrait"]]],[11,"clone","","",43,[[["self"]],["typeinfer"]]],[11,"clone","","",44,[[["self"]],["typemacro"]]],[11,"clone","","",45,[[["self"]],["typenever"]]],[11,"clone","","",46,[[["self"]],["typeparen"]]],[11,"clone","","",47,[[["self"]],["typepath"]]],[11,"clone","","",48,[[["self"]],["typeptr"]]],[11,"clone","","",49,[[["self"]],["typereference"]]],[11,"clone","","",50,[[["self"]],["typeslice"]]],[11,"clone","","",51,[[["self"]],["typetraitobject"]]],[11,"clone","","",52,[[["self"]],["typetuple"]]],[11,"clone","","",37,[[["self"]],["abi"]]],[11,"clone","","",38,[[["self"]],["barefnarg"]]],[11,"clone","","",53,[[["self"]],["variadic"]]],[11,"clone","","",78,[[["self"]],["returntype"]]],[11,"clone","","",58,[[["self"]],["path"]]],[11,"clone","","",59,[[["self"]],["pathsegment"]]],[11,"clone","","",81,[[["self"]],["patharguments"]]],[11,"clone","","",80,[[["self"]],["genericargument"]]],[11,"clone","","",54,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone","","",55,[[["self"]],["binding"]]],[11,"clone","","",56,[[["self"]],["constraint"]]],[11,"clone","","",57,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone","","",60,[[["self"]],["qself"]]],[11,"clone","syn::buffer","",193,[[["self"]],["cursor"]]],[11,"clone","syn::punctuated","",196,[[["self"]],["punctuated"]]],[11,"clone","","",238,[[["self"]],["self"]]],[11,"clone","","",240,[[["self"]],["intopairs"]]],[11,"clone","","",241,[[["self"]],["intoiter"]]],[11,"clone","","",242,[[["self"]],["self"]]],[11,"clone","","",195,[[["self"]],["pair"]]],[11,"clone","syn::parse","",202,[[["self"]],["stepcursor"]]],[11,"clone","syn","",204,[[["self"]],["error"]]],[11,"default","syn::token","",82,[[],["self"]]],[11,"default","","",83,[[],["self"]]],[11,"default","","",84,[[],["self"]]],[11,"default","","",85,[[],["self"]]],[11,"default","","",86,[[],["self"]]],[11,"default","","",87,[[],["self"]]],[11,"default","","",88,[[],["self"]]],[11,"default","","",89,[[],["self"]]],[11,"default","","",90,[[],["self"]]],[11,"default","","",91,[[],["self"]]],[11,"default","","",92,[[],["self"]]],[11,"default","","",93,[[],["self"]]],[11,"default","","",94,[[],["self"]]],[11,"default","","",95,[[],["self"]]],[11,"default","","",96,[[],["self"]]],[11,"default","","",97,[[],["self"]]],[11,"default","","",98,[[],["self"]]],[11,"default","","",99,[[],["self"]]],[11,"default","","",100,[[],["self"]]],[11,"default","","",101,[[],["self"]]],[11,"default","","",102,[[],["self"]]],[11,"default","","",103,[[],["self"]]],[11,"default","","",104,[[],["self"]]],[11,"default","","",105,[[],["self"]]],[11,"default","","",106,[[],["self"]]],[11,"default","","",107,[[],["self"]]],[11,"default","","",108,[[],["self"]]],[11,"default","","",109,[[],["self"]]],[11,"default","","",110,[[],["self"]]],[11,"default","","",111,[[],["self"]]],[11,"default","","",112,[[],["self"]]],[11,"default","","",113,[[],["self"]]],[11,"default","","",114,[[],["self"]]],[11,"default","","",115,[[],["self"]]],[11,"default","","",116,[[],["self"]]],[11,"default","","",117,[[],["self"]]],[11,"default","","",118,[[],["self"]]],[11,"default","","",119,[[],["self"]]],[11,"default","","",120,[[],["self"]]],[11,"default","","",121,[[],["self"]]],[11,"default","","",122,[[],["self"]]],[11,"default","","",123,[[],["self"]]],[11,"default","","",124,[[],["self"]]],[11,"default","","",125,[[],["self"]]],[11,"default","","",126,[[],["self"]]],[11,"default","","",127,[[],["self"]]],[11,"default","","",128,[[],["self"]]],[11,"default","","",129,[[],["self"]]],[11,"default","","",130,[[],["self"]]],[11,"default","","",131,[[],["self"]]],[11,"default","","",132,[[],["self"]]],[11,"default","","",133,[[],["self"]]],[11,"default","","",134,[[],["self"]]],[11,"default","","",135,[[],["self"]]],[11,"default","","",136,[[],["self"]]],[11,"default","","",137,[[],["self"]]],[11,"default","","",138,[[],["self"]]],[11,"default","","",139,[[],["self"]]],[11,"default","","",140,[[],["self"]]],[11,"default","","",141,[[],["self"]]],[11,"default","","",142,[[],["self"]]],[11,"default","","",143,[[],["self"]]],[11,"default","","",144,[[],["self"]]],[11,"default","","",145,[[],["self"]]],[11,"default","","",146,[[],["self"]]],[11,"default","","",147,[[],["self"]]],[11,"default","","",148,[[],["self"]]],[11,"default","","",149,[[],["self"]]],[11,"default","","",150,[[],["self"]]],[11,"default","","",151,[[],["self"]]],[11,"default","","",152,[[],["self"]]],[11,"default","","",153,[[],["self"]]],[11,"default","","",154,[[],["self"]]],[11,"default","","",155,[[],["self"]]],[11,"default","","",156,[[],["self"]]],[11,"default","","",157,[[],["self"]]],[11,"default","","",158,[[],["self"]]],[11,"default","","",159,[[],["self"]]],[11,"default","","",160,[[],["self"]]],[11,"default","","",161,[[],["self"]]],[11,"default","","",162,[[],["self"]]],[11,"default","","",163,[[],["self"]]],[11,"default","","",164,[[],["self"]]],[11,"default","","",165,[[],["self"]]],[11,"default","","",166,[[],["self"]]],[11,"default","","",167,[[],["self"]]],[11,"default","","",168,[[],["self"]]],[11,"default","","",169,[[],["self"]]],[11,"default","","",170,[[],["self"]]],[11,"default","","",171,[[],["self"]]],[11,"default","","",172,[[],["self"]]],[11,"default","","",173,[[],["self"]]],[11,"default","","",174,[[],["self"]]],[11,"default","","",175,[[],["self"]]],[11,"default","","",176,[[],["self"]]],[11,"default","","",177,[[],["self"]]],[11,"default","","",178,[[],["self"]]],[11,"default","","",179,[[],["self"]]],[11,"default","","",180,[[],["self"]]],[11,"default","","",181,[[],["self"]]],[11,"default","","",182,[[],["self"]]],[11,"default","","",183,[[],["self"]]],[11,"default","","",184,[[],["self"]]],[11,"default","syn","",22,[[],["generics"]]],[11,"default","","",20,[[],["boundlifetimes"]]],[11,"default","","",81,[[],["self"]]],[11,"default","syn::punctuated","",196,[[],["self"]]],[11,"cmp","syn","",30,[[["self"],["lifetime"]],["ordering"]]],[11,"eq","","",67,[[["self"],["member"]],["bool"]]],[11,"ne","","",67,[[["self"],["member"]],["bool"]]],[11,"eq","","",19,[[["self"]],["bool"]]],[11,"eq","","",30,[[["self"],["lifetime"]],["bool"]]],[11,"eq","syn::buffer","",193,[[["self"],["cursor"]],["bool"]]],[11,"ne","","",193,[[["self"],["cursor"]],["bool"]]],[11,"partial_cmp","syn","",30,[[["self"],["lifetime"]],[["option",["ordering"]],["ordering"]]]],[11,"deref","syn::token","",82,[[["self"]]]],[11,"deref","","",135,[[["self"]]]],[11,"deref","","",137,[[["self"]]]],[11,"deref","","",140,[[["self"]]]],[11,"deref","","",141,[[["self"]]]],[11,"deref","","",142,[[["self"]]]],[11,"deref","","",144,[[["self"]]]],[11,"deref","","",146,[[["self"]]]],[11,"deref","","",147,[[["self"]]]],[11,"deref","","",149,[[["self"]]]],[11,"deref","","",150,[[["self"]]]],[11,"deref","","",154,[[["self"]]]],[11,"deref","","",157,[[["self"]]]],[11,"deref","","",159,[[["self"]]]],[11,"deref","","",162,[[["self"]]]],[11,"deref","","",165,[[["self"]]]],[11,"deref","","",166,[[["self"]]]],[11,"deref","","",169,[[["self"]]]],[11,"deref","","",172,[[["self"]]]],[11,"deref","","",177,[[["self"]]]],[11,"deref","","",178,[[["self"]]]],[11,"deref","","",180,[[["self"]]]],[11,"deref","syn::parse","",202,[[["self"]]]],[11,"deref_mut","syn::token","",82,[[["self"]]]],[11,"deref_mut","","",135,[[["self"]]]],[11,"deref_mut","","",137,[[["self"]]]],[11,"deref_mut","","",140,[[["self"]]]],[11,"deref_mut","","",141,[[["self"]]]],[11,"deref_mut","","",142,[[["self"]]]],[11,"deref_mut","","",144,[[["self"]]]],[11,"deref_mut","","",146,[[["self"]]]],[11,"deref_mut","","",147,[[["self"]]]],[11,"deref_mut","","",149,[[["self"]]]],[11,"deref_mut","","",150,[[["self"]]]],[11,"deref_mut","","",154,[[["self"]]]],[11,"deref_mut","","",157,[[["self"]]]],[11,"deref_mut","","",159,[[["self"]]]],[11,"deref_mut","","",162,[[["self"]]]],[11,"deref_mut","","",165,[[["self"]]]],[11,"deref_mut","","",166,[[["self"]]]],[11,"deref_mut","","",169,[[["self"]]]],[11,"deref_mut","","",172,[[["self"]]]],[11,"deref_mut","","",177,[[["self"]]]],[11,"deref_mut","","",178,[[["self"]]]],[11,"deref_mut","","",180,[[["self"]]]],[11,"fmt","syn::parse","",203,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",204,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",190,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",191,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn::parse","",203,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",204,[[["formatter"],["self"]],["result"]]],[11,"index","syn::punctuated","",196,[[["self"],["usize"]]]],[11,"index_mut","","",196,[[["self"],["usize"]]]],[11,"hash","syn","",67,[[["self"],["__h"]]]],[11,"hash","","",19,[[["self"],["h"]]]],[11,"hash","","",30,[[["self"],["h"]]]],[11,"from_iter","syn::punctuated","",196,[[["intoiterator"]],["self"]]],[11,"from_iter","","",196,[[["intoiterator"]],["self"]]],[11,"description","syn","",204,[[["self"]],["str"]]],[11,"to_tokens","syn::token","",82,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",83,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",84,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",85,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",86,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",87,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",88,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",89,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",90,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",91,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",92,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",93,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",94,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",95,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",96,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",97,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",98,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",99,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",100,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",101,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",102,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",103,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",104,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",105,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",106,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",107,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",108,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",109,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",110,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",111,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",112,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",113,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",114,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",115,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",116,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",117,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",118,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",119,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",120,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",121,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",122,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",123,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",124,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",125,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",126,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",127,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",128,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",129,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",130,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",131,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",132,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",133,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",134,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",135,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",136,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",137,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",138,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",139,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",140,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",141,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",142,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",143,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",144,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",145,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",146,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",147,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",148,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",149,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",150,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",151,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",152,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",153,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",154,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",155,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",156,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",157,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",158,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",159,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",160,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",161,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",162,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",163,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",164,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",165,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",166,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",167,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",168,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",169,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",170,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",171,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",172,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",173,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",174,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",175,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",176,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",177,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",178,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",179,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",180,[[["tokenstream"],["self"]]]],[11,"to_tokens","syn","",62,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",63,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",0,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",1,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",2,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",64,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",65,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",6,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",4,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",5,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",3,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",8,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",7,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",9,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",66,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",206,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",207,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",208,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",209,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",210,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",211,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",212,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",213,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",214,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",215,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",216,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",217,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",218,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",219,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",220,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",221,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",222,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",223,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",224,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",225,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",226,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",227,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",228,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",229,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",230,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",231,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",232,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",233,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",234,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",235,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",11,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",10,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",18,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",15,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",12,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",13,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",67,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",19,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",14,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",17,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",16,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",68,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",70,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",71,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",22,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",236,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",185,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",237,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",20,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",23,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",28,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",27,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",69,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",21,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",29,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",26,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",25,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",24,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",30,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",72,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",186,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",187,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",188,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",189,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",190,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",191,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",31,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",32,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",36,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",76,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",77,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",79,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",50,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",39,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",48,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",49,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",40,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",45,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",52,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",47,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",51,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",42,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",41,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",46,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",43,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",44,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",78,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",38,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",53,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",37,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",58,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",59,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",81,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",80,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",54,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",55,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",56,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",57,[[["tokenstream"],["self"]]]],[11,"to_tokens","syn::punctuated","",196,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",195,[[["tokenstream"],["self"]]]],[11,"fmt","syn","",67,[[["formatter"],["self"]],["result"]]],[11,"span","","",67,[[["self"]],[["option",["span"]],["span"]]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"span","","",19,[[["self"]],[["option",["span"]],["span"]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",205,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",205,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",205,[[["self"],["span"]]]],[11,"visit_abi","syn::visit","",198,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",198,[[["anglebracketedgenericarguments"],["self"]]]],[11,"visit_attr_style","","",198,[[["attrstyle"],["self"]]]],[11,"visit_attribute","","",198,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",198,[[["self"],["barefnarg"]]]],[11,"visit_bin_op","","",198,[[["self"],["binop"]]]],[11,"visit_binding","","",198,[[["self"],["binding"]]]],[11,"visit_bound_lifetimes","","",198,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",198,[[["self"],["constparam"]]]],[11,"visit_constraint","","",198,[[["self"],["constraint"]]]],[11,"visit_data","","",198,[[["self"],["data"]]]],[11,"visit_data_enum","","",198,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",198,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",198,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",198,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",198,[[["self"],["expr"]]]],[11,"visit_expr_binary","","",198,[[["exprbinary"],["self"]]]],[11,"visit_expr_call","","",198,[[["exprcall"],["self"]]]],[11,"visit_expr_cast","","",198,[[["self"],["exprcast"]]]],[11,"visit_expr_field","","",198,[[["self"],["exprfield"]]]],[11,"visit_expr_index","","",198,[[["self"],["exprindex"]]]],[11,"visit_expr_lit","","",198,[[["self"],["exprlit"]]]],[11,"visit_expr_paren","","",198,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",198,[[["self"],["exprpath"]]]],[11,"visit_expr_unary","","",198,[[["self"],["exprunary"]]]],[11,"visit_field","","",198,[[["field"],["self"]]]],[11,"visit_fields","","",198,[[["self"],["fields"]]]],[11,"visit_fields_named","","",198,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",198,[[["fieldsunnamed"],["self"]]]],[11,"visit_generic_argument","","",198,[[["genericargument"],["self"]]]],[11,"visit_generic_param","","",198,[[["self"],["genericparam"]]]],[11,"visit_generics","","",198,[[["self"],["generics"]]]],[11,"visit_ident","","",198,[[["self"],["ident"]]]],[11,"visit_index","","",198,[[["index"],["self"]]]],[11,"visit_lifetime","","",198,[[["lifetime"],["self"]]]],[11,"visit_lifetime_def","","",198,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",198,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",198,[[["litbool"],["self"]]]],[11,"visit_lit_byte","","",198,[[["litbyte"],["self"]]]],[11,"visit_lit_byte_str","","",198,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",198,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",198,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",198,[[["litint"],["self"]]]],[11,"visit_lit_str","","",198,[[["self"],["litstr"]]]],[11,"visit_macro","","",198,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",198,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",198,[[["member"],["self"]]]],[11,"visit_meta","","",198,[[["meta"],["self"]]]],[11,"visit_meta_list","","",198,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",198,[[["self"],["metanamevalue"]]]],[11,"visit_nested_meta","","",198,[[["nestedmeta"],["self"]]]],[11,"visit_parenthesized_generic_arguments","","",198,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_path","","",198,[[["self"],["path"]]]],[11,"visit_path_arguments","","",198,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",198,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",198,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",198,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",198,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",198,[[["self"],["qself"]]]],[11,"visit_return_type","","",198,[[["returntype"],["self"]]]],[11,"visit_span","","",198,[[["self"],["span"]]]],[11,"visit_trait_bound","","",198,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",198,[[["self"],["traitboundmodifier"]]]],[11,"visit_type","","",198,[[["self"],["type"]]]],[11,"visit_type_array","","",198,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",198,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",198,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",198,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",198,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",198,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",198,[[["self"],["typenever"]]]],[11,"visit_type_param","","",198,[[["typeparam"],["self"]]]],[11,"visit_type_param_bound","","",198,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",198,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",198,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",198,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",198,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",198,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",198,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",198,[[["self"],["typetuple"]]]],[11,"visit_un_op","","",198,[[["self"],["unop"]]]],[11,"visit_variadic","","",198,[[["self"],["variadic"]]]],[11,"visit_variant","","",198,[[["variant"],["self"]]]],[11,"visit_vis_crate","","",198,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",198,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",198,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",198,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",198,[[["whereclause"],["self"]]]],[11,"visit_where_predicate","","",198,[[["wherepredicate"],["self"]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",244,[[["self"],["peek"]],["bool"]]],[11,"error","","Triggers an error at the current position of the parse…",244,[[],["error"]]]],"p":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"ExprBinary"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprField"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprUnary"],[3,"Index"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"Lifetime"],[3,"LitBool"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"ReturnType"],[4,"Type"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TypeGenerics"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[8,"Spanned"],[8,"Visit"],[8,"Speculative"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,"ParseBuffer"],[3,"Error"],[3,"Ident"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprLet"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]};
searchIndex["unicode_xid"] = {"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid…",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[],["bool"]]]],"p":[[8,"UnicodeXID"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);