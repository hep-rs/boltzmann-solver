var N=null,E="",T="t",U="u",searchIndex={};
var R=["cfg_if","lazy_static","scopeguard","always","result","try_from","try_into","borrow","borrow_mut","type_id","should_run","formatter","Strategy","ScopeGuard","either","Apply the function `f` on the value in the `Left` variant…","Apply the function `f` on the value in the `Right` variant…","Factor out a homogeneous type from an either of pairs.","into_iter","ordering","option","into_inner","deref_mut","PointerExt","quadrature","integrate","Integrate an analytic function over a finite interval. f…","The enum `Either` with variants `Left` and `Right` is a…","A value of type `L`.","A value of type `R`.","interleave","multipeek","Create an iterator that merges elements of the contained…","enumerate","Iterate `i` and `j` in lock step.","An iterator adaptor that iterates over the cartesian…","Format all iterator elements lazily, separated by `sep`.","An iterator adapter to filter out duplicate elements.","An iterator which iterates two other iterators…","An iterator adaptor that merges the two base iterators in…","An iterator adaptor that merges an abitrary number of base…","put_back","itertools","is_right","as_ref","as_mut","eitherorboth","map_left","map_right","left_and_then","Apply the function `f` on the value `b` in `Right(b)` or…","right_and_then","Apply the function `f` on the value `a` in `Left(a)` or…","itertools::structs","An iterator adaptor to insert a particular value between…","intersperse","Create an iterator which iterates over both this and the…","A “meta iterator adaptor”. Its closure receives a…","batching","Return an iterator adaptor that merges the two base…","merge_join_by","mergejoinby","kmerge_by","Return an iterator adaptor that flattens an iterator of…","kmergeby","Return an iterator adaptor that iterates over the…","coalesce","Remove duplicates from sections of consecutive identical…","Return an iterator adaptor that filters out elements that…","combinations","permutations","positions","Combine all an iterator's elements into one element by…","Format all iterator elements, separated by `sep`.","Sort all iterator elements into a new iterator in…","intoiter","minmaxresult","Return the minimum and maximum element of an iterator, as…","exactlyoneerror","to_owned","clone_into","typeid","to_string","string","next_back","size_hint","partial_cmp","peeking_next","multiproduct","interleaveshortest","whilesome","combinationswithreplacement","padusing","putbackn","iterate","uniqueby","ziplongest","foldwhile","position","collect","Return true if the value is the `Left` variant.","Return true if the value is the `Right` variant.","Convert the left side of `Either<L, R>` to an `Option<L>`.","Convert the right side of `Either<L, R>` to an `Option<R>`.","Convert `&Either<L, R>` to `Either<&L, &R>`.","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.","Convert `Either<L, R>` to `Either<R, L>`.","Apply one of two functions depending on contents, unifying…","either_with","Like `either`, but provide some context to whichever of…","Convert the inner value to an iterator.","Return left value or given value","left_or_default","Return left or a default","left_or_else","Returns left value or computes it from a closure","Return right value or given value","right_or_default","Return right or a default","right_or_else","Returns right value or computes it from a closure","factor_first","factor_second","Extract the value of an either over two equivalent types.","Map `f` over the contained value and return the result in…","MinMaxResult","EitherOrBoth","FoldWhile","MultiPeek","PeekingNext","Itertools","Interleave","InterleaveShortest","MapResults","TakeWhileRef","WhileSome","TupleCombinations","Positions","MultiProduct","Combinations","CombinationsWithReplacement","ConsTuples","ExactlyOneError","FormatWith","IntoChunks","Intersperse","MergeJoinBy","PeekingTakeWhile","Permutations","ProcessResults","RepeatCall","TupleBuffer","TupleWindows","WithPosition","ZipLongest","levelfilter","setloggererror","metadata","The module path of the message, if it is a `'static` string.","recordbuilder","arguments","module_path","module_path_static","file_static","Returns a new builder.","The verbosity level of the message.","The name of the target of the directive.","metadatabuilder","parselevelerror","description","LevelFilter","RecordBuilder","MetadataBuilder","SetLoggerError","ParseLevelError","imr_multiaddr","imr_interface","arp_flags","arp_netmask","it_interval","envelope","e_machine","e_version","e_phentsize","e_shentsize","e_shstrndx","sh_offset","sh_addralign","sh_entsize","ch_addralign","st_blksize","st_blocks","st_atime_nsec","st_mtime_nsec","st_ctime_nsec","f_namelen","f_frsize","f_blocks","f_bavail","mxcr_mask","f_namemax","cpu_set_t","sigaction","statvfs64","if_nameindex","ipv6_mreq","itimerval","ip_mreq_source","sockaddr_in","sockaddr_in6","sockaddr_ll","sched_param","in_pktinfo","in6_rtmsg","arpreq_old","epoll_event","sockaddr_un","sockaddr_storage","signalfd_siginfo","itimerspec","packet_mreq","input_event","input_absinfo","input_keymap_entry","input_mask","ff_replay","ff_trigger","ff_envelope","ff_constant_effect","ff_ramp_effect","ff_condition_effect","ff_periodic_effect","ff_rumble_effect","ff_effect","dl_phdr_info","posix_spawn_file_actions_t","posix_spawnattr_t","genlmsghdr","in6_pktinfo","arpd_request","inotify_event","sockaddr_vm","sockaddr_nl","sockaddr_alg","af_alg_iv","statx_timestamp","__exit_status","__timeval","mallinfo","nl_pktinfo","nl_mmap_req","nl_mmap_hdr","siginfo_t","statfs64","pthread_attr_t","_libc_fpxreg","_libc_xmmreg","_libc_fpstate","user_regs_struct","mcontext_t","user_fpregs_struct","ucontext_t","max_align_t","pthread_mutexattr_t","pthread_rwlockattr_t","pthread_condattr_t","pthread_cond_t","pthread_mutex_t","pthread_rwlock_t","timespec","protoent","sockaddr","addrinfo","sigevent","rlimit64","input_id","Elf32_Ehdr","Elf64_Ehdr","Elf32_Sym","Elf64_Sym","Elf32_Phdr","Elf64_Phdr","Elf32_Shdr","Elf64_Shdr","Elf32_Chdr","Elf64_Chdr","dirent64","glob64_t","nlmsghdr","nlmsgerr","msqid_ds","ipc_perm","shmid_ds","termios2","ip_mreqn","in6_addr","sigset_t","timezone","fpos64_t","If the current value equals `current`, stores `new` into…","fetch_add","Increments the current value by `val` and returns the…","fetch_sub","Decrements the current value by `val` and returns the…","fetch_and","Applies bitwise \"and\" to the current value and returns the…","Applies bitwise \"or\" to the current value and returns the…","fetch_xor","Applies bitwise \"xor\" to the current value and returns the…","fetch_or","crossbeam_utils","Pads and aligns a value to the length of a cache line.","lockresult","shardedlockreadguard","trylockresult","shardedlockwriteguard","scopedthreadbuilder","scopedjoinhandle","crossbeam_utils::atomic","crossbeam_utils::sync","crossbeam_utils::thread","atomiccell","cachepadded","shardedlock","unparker","waitgroup","AtomicCell","AtomicConsume","CachePadded","ShardedLock","WaitGroup","ScopedThreadBuilder","ScopedJoinHandle","ShardedLockReadGuard","ShardedLockWriteGuard","partialord","num_traits","min_value","max_value","neg_infinity","Returns `-0.0`.","Returns the smallest finite value that this type can…","min_positive_value","Returns the smallest positive, normalized value that this…","Returns epsilon, a small positive value.","Returns the largest finite value that this type can…","is_infinite","is_finite","is_normal","Returns `true` if the number is neither zero, infinite,…","Returns the floating point category of the number. If only…","fpcategory","Returns the largest integer less than or equal to a number.","Returns the smallest integer greater than or equal to a…","Returns the nearest integer to a number. Round half-way…","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of `self`. Returns…","Returns a number that represents the sign of `self`.","is_sign_positive","is_sign_negative","Raise a number to an integer power.","to_degrees","to_radians","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","integer_decode","Returns the mantissa, base 2 exponent, and sign as…","Shifts the bits to the left by a specified amount amount,…","Shifts the bits to the right by a specified amount amount,…","num_traits::ops","Fused multiply-add. Computes `(self * a) + b` with only…","Performs the fused multiply-add operation.","checkedmul","The result after applying the operator.","Returns `true` if `self` is positive, including `+0.0`,…","Returns `true` if `self` is negative, including `-0.0`,…","Take the reciprocal (inverse) of a number, `1/x`.","Take the square root of a number.","Returns `e^(self)`, (the exponential function).","Returns `2^(self)`.","Returns the natural logarithm of the number.","Returns the logarithm of the number with respect to an…","Returns the base 2 logarithm of the number.","Returns the base 10 logarithm of the number.","Converts radians to degrees.","Converts degrees to radians.","The positive difference of two numbers.","Take the cubic root of a number.","Calculate the length of the hypotenuse of a right-angle…","Computes the sine of a number (in radians).","Computes the cosine of a number (in radians).","Computes the tangent of a number (in radians).","Computes the arcsine of a number. Return value is in…","Computes the arccosine of a number. Return value is in…","Computes the arctangent of a number. Return value is in…","Computes the four quadrant arctangent of `self` (`y`) and…","Simultaneously computes the sine and cosine of the number,…","Returns `e^(self) - 1` in a way that is accurate even if…","Returns `ln(1+n)` (natural logarithm) more accurately than…","Hyperbolic sine function.","Hyperbolic cosine function.","Hyperbolic tangent function.","Inverse hyperbolic sine function.","Inverse hyperbolic cosine function.","Inverse hyperbolic tangent function.","Computes the absolute value.","Returns the sign of the number.","ParseFloatError","FloatErrorKind","ToPrimitive","FromPrimitive","AsPrimitive","FloatCore","FloatConst","CheckedAdd","CheckedSub","CheckedMul","CheckedDiv","CheckedRem","CheckedNeg","CheckedShl","CheckedShr","MulAddAssign","Saturating","WrappingAdd","WrappingSub","WrappingMul","WrappingShl","WrappingShr","special_functions","Equilibrium number density of massive Bose-Einstein…","pusherror","poperror","Returns `true` if the queue is empty.","Returns the number of elements in the queue.","PushError","ArrayQueue","integer","Returns the truncated principal `n`th root of an integer…","Returns the truncated principal square root of an integer…","Returns the truncated principal cube root of an integer --…","div_floor","mod_floor","div_mod_floor","extendedgcd","ExtendedGcd","IterBinomial","parsecomplexerror","complex","add_assign","sub_assign","mul_assign","div_assign","rem_assign","from_str","default","Parses `a +/- bi`; `ai +/- b`; `a`; or `bi` where `a` and…","mul_add_assign","ParseComplexError","from_isize","from_i128","from_usize","from_u128","toprimitive","from_str_radix","Stores a `Shared` or `Owned` pointer into the atomic…","compareandseterror","Stores the pointer `new` (either `Shared` or `Owned`) into…","Dereferences the pointer.","into_owned","Takes ownership of the pointee.","Returns the tag stored within the pointer.","Returns the same pointer, but tagged with `tag`. `tag` is…","is_pinned","collector","Stores a function so that it can be executed at some point…","into_usize","Returns a new pointer pointing to the tagged pointer `data`.","CompareAndSetError","Collector","LocalHandle","CompareAndSetOrdering","load_consume","Pushes a task into the queue.","Steals a task from the queue.","steal_batch","steal_batch_and_pop","is_empty","Represents a fork-join scope which can be used to spawn…","Fires off a task into the Rayon threadpool in the \"static\"…","initialize","stack_size","spawn_fifo","Spawns a job into the fork-join scope `self`. This job…","configuration","threadpool","current_num_threads","current_thread_index","current_thread_has_pending_tasks","scope_fifo","Creates a scope that executes within this thread-pool.…","Spawns an asynchronous task in this thread-pool. This task…","threadpoolbuilderror","customspawn","Deprecated in favor of `ThreadPoolBuilder::build`.","thread_name","num_threads","panic_handler","breadth_first","start_handler","exit_handler","ThreadBuilder","ScopeFifo","ThreadPool","ThreadPoolBuilder","Configuration","FnContext","ThreadPoolBuildError","rayon::collections","This module contains the parallel iterator types for…","IntoIter","Parallel iterator over an immutable reference to a B-Tree…","This module contains the parallel iterator types for hash…","fold_with","Iterate the producer, feeding each element to `folder`,…","rayon::iter","repeatn","Converts `self` into a parallel iterator.","Reduces the items in the iterator into one item using…","Reduces the items in the iterator into one item using a…","product","Applies the given predicate to the items in the parallel…","Searches for some item in the parallel iterator that…","while_some","partition","partition_map","Internal method used to define the behavior of this…","interleave_shortest","Interleave elements of this iterator and the other given…","Lexicographically compares the elements of this…","Determines if the elements of this `ParallelIterator` are…","Searches for the sequentially first item in the parallel…","Searches for the sequentially last item in the parallel…","ParallelBridge","Conversion trait to convert an `Iterator` to a…","par_bridge","Create a bridge from this type to a `ParallelIterator`.","iterbridge","IterMut","Returns a parallel iterator over at most `chunk_size`…","par_split","pattern","Returns a parallel iterator over substrings that match a…","into_par_iter","rayon::collections::binary_heap","rayon::collections::btree_map","rayon::collections::btree_set","rayon::collections::hash_map","rayon::collections::hash_set","rayon::collections::linked_list","rayon::collections::vec_deque","rayon::option","rayon::range","rayon::range_inclusive","rayon::result","rayon::slice","rayon::str","rayon::vec","defaultspawn","drive_unindexed","opt_len","with_producer","consumer","par_extend","filtermap","tryfoldwith","panicfuse","charindices","encodeutf16","splitterminator","splitwhitespace","matchindices","threadpoolbuilder","right_or","ProducerCallback","UnindexedConsumer","UnindexedProducer","IntoParallelIterator","IntoParallelRefIterator","IntoParallelRefMutIterator","ParallelIterator","IndexedParallelIterator","FromParallelIterator","ParallelExtend","ParallelSlice","ParallelSliceMut","ParallelString","IterBridge","Enumerate","FilterMap","TryFoldWith","PanicFuse","ChunksMut","CharIndices","EncodeUtf16","SplitTerminator","SplitWhitespace","MatchIndices","Thread builder used for customization via…","Represents a user created [thread-pool].","Error when initializing a thread pool.","Used to create a new [`ThreadPool`] or to configure the…","Provides the calling context to a closure called by…","Takes two closures and potentially runs them in parallel.…","join_context","Identical to `join`, except that the closures have a…","Create a \"fork-join\" scope `s` and invokes the closure…","Create a \"fork-join\" scope `s` with FIFO order, and…","If called from a Rayon worker thread, returns the index of…","Returns the number of threads in the current registry. If…","Get the index of this thread in the pool, within…","Get the string that was specified by…","Get the value that was specified by…","Execute the main loop for this thread. This will not…","Executes `op` within the threadpool. Any attempts to use…","Returns the (current) number of threads in the thread pool.","If called from a Rayon worker thread in this thread-pool,…","Returns true if the current worker thread currently has…","Execute `oper_a` and `oper_b` in the thread-pool and…","Creates and returns a valid rayon thread pool builder, but…","Create a new `ThreadPool` initialized using this…","build_global","Initializes the global thread pool. This initialization is…","build_scoped","Create a scoped `ThreadPool` initialized using this…","spawn_handler","Set a custom function for spawning threads.","Set a closure which takes a thread index and returns the…","Set the number of threads to be used in the rayon…","Normally, whenever Rayon catches a panic, it tries to…","Set the stack size of the worker threads","(DEPRECATED) Suggest to worker threads that they execute…","Set a callback to be invoked on thread start.","Set a callback to be invoked on thread exit.","Returns `true` if the closure was called from a different…","Continue folding with this value","Fold is complete and will return this value","shapeerror","Create a one-dimensional array with elements from `xs`.","Create a two-dimensional array with elements from `xs`.","Create a three-dimensional array with elements from `xs`.","arcarray","An iterator that traverses over the specified axis and…","An iterator that traverses over an axis and and yields…","Exact chunks iterator.","Exact chunks producer and iterable.","errorkind","ndarray::iter","Splits the iterator at `index`, yielding two disjoint…","split_at","Splits the iterator at index, yielding two disjoint…","sliceinfo","fold_while","Apply a function to all elements of the input arrays,…","Apply a fold function to all elements of the input arrays,…","Apply a fold function to the input arrays while the return…","Tests if every element of the iterator matches a predicate.","Include the producer `p` in the Zip.","and_broadcast","Include the producer `p` in the Zip, broadcasting if needed.","Split the `Zip` evenly in two.","arraybase","into_shared","arrayview","arrayviewmut","Slice the array in place without changing the number of…","Perform unchecked array indexing.","Return a producer and iterable that traverses over the…","Return a producer and iterable that traverses over all 1D…","lanesmut","Return an iterator that traverses over the outermost…","Return an iterator that traverses over `axis` and yields…","axisitermut","Return an iterator that traverses over `axis` by chunks of…","Return an exact chunks producer (and iterable).","arrayview1","arrayviewmut1","Return the array’s data as a slice, if it is contiguous…","Return the array’s data as a slice if it is contiguous,…","Reduce the values along an axis into just one value,…","par_apply","The `par_apply` method for `Zip`.","Return the number of rows (length of `Axis(0)`) in the…","Return the number of columns (length of `Axis(1)`) in the…","Collapses the array to `index` along the axis and removes…","Return the sum of all elements in the array.","ndarray","ndarray::linalg","An array where the data has shared ownership and is copy…","remove_axis","Get a reference of a element through the view.","into_shape","Array representation trait.","__private__","This trait is private to implement; this method exists to…","privatemarker","The element produced per iteration.","Stack arrays along the given axis.","ndarray::parallel","_data_slice","try_ensure_unique","try_is_unique","clone_with_ptr","nonnull","ownedrepr","ownedrcrepr","strideshape","contiguous_stride","into_dimension","slice_mut","into_pattern","insert_axis","size_checked","_fastest_varying_stride_order","max_stride_axis","try_remove_axis","next_for","default_strides","min_stride_axis","first_index","stride_offset","Self is an index, return the stride offset","stride_offset_checked","Return stride offset for this dimension and index.","index_checked","index_unchecked","Convert a mutable array view to a mutable reference of a…","indexediter","ixdynimpl","sliceorindex","Create a one-dimensional array from a vector (no copying…","rangeinclusive","rangefrom","rangetoinclusive","rangeto","rangefull","cowarray","bitand_assign","bitor_assign","bitxor_assign","shl_assign","shr_assign","index_mut","from_iter","is_zero","For fixed-size dimension representations (e.g. `Ix2`),…","Compute the size of the dimension (number of elements)","Compute the size while checking for overflow.","as_array_view","Borrow as a read-only array view.","as_array_view_mut","Borrow as a read-write array view.","into_dyn","Convert the dimensional into a dynamic dimensional (IxDyn).","from_shape","from_shape_ptr","into_scalar","into_slice","deref_into_view","Converts to a read-only view of the array.","Split the array view along `axis` and return one array…","AxisDescription","ErrorKind","SliceOrIndex","ShapeError","AxisIterMut","AxisChunksIter","AxisChunksIterMut","SliceInfo","ArrayBase","Dimension","IntoDimension","RemoveAxis","IndexLonger","ShapeBuilder","FixedInitializer","IntoNdProducer","NdProducer","IxDynImpl","OwnedRepr","OwnedArcRepr","RawViewRepr","StrideShape","IndicesIter","ExactChunks","ExactChunksIter","ExactChunksIterMut","ExactChunksMut","IndexedIter","IndexedIterMut","LanesIter","LanesIterMut","ArrayView","ArrayViewMut","RawArrayView","RawArrayViewMut","par_iter_mut","boltzmann_solver","particles","boltzmann_solver::model","signed_particles","boltzmann_solver::model::Interaction","antiparticles","asymmetry","entropy_dof","particle","interactions","Particle type","Mass of the particle in GeV","Squared mass of the particle in GeV²","Width of the particle in GeV","Squared width of the particle in GeV²","StandardModel","The Standard Model of particle physics.","Inverse temperature in \\(GeV^{-1}\\)","Particles","Interactions","Hypercharge gauge coupling","Weak gauge coupling","Strong gauge coupling","Up-quark Yukawa","Down-quark Yukawa","Electron Yukawa","0-temperature mass of the Higgs","Vacuum expectation value of the Higgs","Quadratic coupling of the Higgs","Quartic term in scalar potential","hubble_rate","Interaction","Interaction between particles.","TwoParticle","Two particle interaction.","ThreeParticle","boltzmann_solver::prelude","Three particle interaction.","boltzmann_solver::prelude::Interaction","FourParticle","Four particle interaction.","The squared amplitude, as a function of the model and the…","Custom interaction.","Current context at a particular step in the numerical…","Evaluation step","step_size","Step size","Inverse temperature in GeV\\(^{-1}\\)","Hubble rate, in GeV","normalization","Normalization factor, which may be either \\begin{equation}…","Equilibrium number densities for the particles","Current number density","Current number density asymmetries","Model data","Boltzmann solver","SolverBuilder","Boltzmann solver builder","phase_space","number_density","normalized_number_density","Return number density for a particle following the…","Sample the spline at the specific `x` value.","boltzmann_solver::statistic","boltzmann_solver::utilities::spline","particles_mut","particle_idx","massless_number_density","Return number density for a massless particle following…","Particle","Statistic","Statistics","ConstCubicHermiteSpline","CubicHermiteSpline"];
searchIndex["boltzmann_solver"]={"doc":"`boltzmann-solver` is a library allowing for Boltzmann…","i":[[0,"constants",R[808],"Collection of physical and mathematical constants which…",N,N],[17,"PLANCK_MASS","boltzmann_solver::constants","Planck mass, \\(M_{\\text{Pl}} = \\sqrt{\\hbar c / G}\\), in…",N,N],[17,"REDUCED_PLANCK_MASS",E,"Reduced Planck mass, \\(m_{\\text{Pl}} = \\sqrt{\\hbar c / 8…",N,N],[17,"ZETA_3",E,"Riemann zeta function evaluated at 3: \\(\\zeta(3) \\approx…",N,N],[17,"EULER_GAMMA",E,"Euler gamma constant: \\(\\gamma_\\textsc{E} \\approx…",N,N],[17,"PI",E,"\\(\\pi\\)",N,N],[17,"PI_1",E,"\\(\\pi\\) [named to follow the convention `PI_n`]",N,N],[17,"PI_2",E,"\\(\\pi^2\\)",N,N],[17,"PI_3",E,"\\(\\pi^3\\)",N,N],[17,"PI_4",E,"\\(\\pi^4\\)",N,N],[17,"PI_5",E,"\\(\\pi^5\\)",N,N],[17,"PI_N1",E,"\\(\\pi^{-1}\\)",N,N],[17,"PI_N2",E,"\\(\\pi^{-2}\\)",N,N],[17,"PI_N3",E,"\\(\\pi^{-3}\\)",N,N],[17,"PI_N4",E,"\\(\\pi^{-4}\\)",N,N],[17,"PI_N5",E,"\\(\\pi^{-5}\\)",N,N],[0,"model",R[808],"Model information",N,N],[3,R[877],R[810],R[818],N,N],[12,"mass",E,R[819],0,N],[12,"mass2",E,R[820],0,N],[12,"width",E,R[821],0,N],[12,"width2",E,R[822],0,N],[12,"decays",E,"Decays",0,N],[12,"name",E,"Name",0,N],[3,R[823],E,R[824],N,N],[12,"beta",E,R[825],1,N],[12,R[809],E,R[826],1,N],[12,R[817],E,R[827],1,N],[12,"g1",E,R[828],1,N],[12,"g2",E,R[829],1,N],[12,"g3",E,R[830],1,N],[12,"yu",E,R[831],1,N],[12,"yd",E,R[832],1,N],[12,"ye",E,R[833],1,N],[12,"mh",E,R[834],1,N],[12,"vev",E,R[835],1,N],[12,"mu2",E,R[836],1,N],[12,"lambda",E,R[837],1,N],[4,R[839],E,R[840],N,N],[13,R[841],E,R[842],2,N],[12,R[811],R[812],E,2,N],[12,R[809],E,E,2,N],[12,R[813],E,E,2,N],[12,"m2",E,E,2,N],[13,R[843],R[810],R[845],2,N],[12,R[811],R[812],E,2,N],[12,R[809],E,E,2,N],[12,R[813],E,E,2,N],[12,"m2",E,E,2,N],[12,R[814],E,E,2,N],[13,R[847],R[810],R[848],2,N],[12,R[811],R[812],E,2,N],[12,R[809],E,E,2,N],[12,R[813],E,E,2,N],[12,"m2",E,R[849],2,N],[12,"gamma",E,E,2,N],[13,"Custom",R[810],R[850],2,N],[12,R[811],R[812],E,2,N],[12,R[809],E,E,2,N],[12,R[813],E,E,2,N],[12,"gamma",E,E,2,N],[11,"is_two_particle",R[810],"Check if this is a two-particle interaction.",2,[[["self"]],["bool"]]],[11,"is_three_particle",E,"Check if this is a three-particle interaction.",2,[[["self"]],["bool"]]],[11,"is_four_particle",E,"Check if this is a four-particle interaction.",2,[[["self"]],["bool"]]],[11,"is_custom",E,"Check if this is a custom interaction.",2,[[["self"]],["bool"]]],[11,"two_particle",E,"Create a new two-particle interaction.",2,[[["isize"],["f"]],["self"]]],[11,"three_particle",E,"Create a new three-particle interaction.",2,[[["isize"],["f"]],["self"]]],[11,"four_particle",E,"Add a new four-particle interaction.",2,[[["isize"],["f"]],["self"]]],[11,"custom",E,"Create a new custom interaction which takes `ingoing`…",2,[[["isize"],["vec",["isize"]],["f"]],["self"]]],[11,R[814],E,"Set the asymmetry between this interaction and its…",2,[[["f"]],["self"]]],[11,R[809],E,"Return the particles involved in this interaction.",2,[[["self"]],[["vec",["isize"]],["vec",["vec"]]]]],[11,"particles_idx",E,"Analogue of [`Interaction::particles`], but instead of…",2,[[["self"]],[["vec",["vec"]],["vec",["usize"]]]]],[11,"gamma",E,"Calculate the value(s) of `gamma`.",2,[[["self"],["context"]],[["vec",["f64"]],["f64"]]]],[11,"width",E,"Calculate the decay width associated with a particular…",2,[[["self"],["context"]]]],[11,"change",E,"Add this interaction to the `dn` array.",2,[[["self"],["array1",["f64"]],["context"],["f64"]]]],[11,"new",E,"Create a new particle with the specified spin and mass.",0,[[["f64"],["u8"]],["self"]]],[11,"set_mass",E,"Set the mass of the particle.",0,[[["self"],["f64"]],["self"]]],[11,"set_width",E,"Set the width of the particle.",0,[[["self"],["f64"]],["self"]]],[11,"real",E,"Indicate that the particle is real.",0,[[],["self"]]],[11,R[449],E,"Indicate that the particle is complex.",0,[[],["self"]]],[11,"dof",E,"Specify how many internal degrees of freedom this particle…",0,[[["f64"]],["self"]]],[11,"name",E,"Specify the particle's name",0,[[["str"]],["self"]]],[11,"is_real",E,"Returns true if the particle is real (real scalar,…",0,[[["self"]],["bool"]]],[11,"is_complex",E,"Returns true if the particle is complex (complex scalar,…",0,[[["self"]],["bool"]]],[11,"is_bosonic",E,"Returns true if the particle is bosonic.",0,[[["self"]],["bool"]]],[11,"is_fermionic",E,"Returns true if the particle is fermionic.",0,[[["self"]],["bool"]]],[11,"degrees_of_freedom",E,"Return the number of degrees of freedom for the underlying…",0,[[["self"]],["f64"]]],[11,R[866],E,"Return the equilibrium phase space occupation of the…",0,[[["self"],["f64"]],["f64"]]],[11,R[867],E,"Return the equilibrium number density of the particle.",0,[[["self"],["f64"]],["f64"]]],[11,R[868],E,"Return the equilibrium number density of the particle,…",0,[[["self"],["f64"]],["f64"]]],[11,R[815],E,"Return the entropy degrees of freedom associated with this…",0,[[["self"],["f64"]],["f64"]]],[8,"Model",E,"Contains all the information relevant to a particular…",N,N],[10,"zero",E,"Instantiate a new instance of the model at 0 temperature…",3,[[],["self"]]],[10,"set_beta",E,"Update the model to be valid at the given inverse…",3,[[["self"],["f64"]]]],[10,"get_beta",E,"Return the current value of beta for the model",3,[[["self"]],["f64"]]],[10,R[815],E,"Return the effective degrees of freedom contributing to…",3,[[["self"],["f64"]],["f64"]]],[11,R[838],E,"Return the Hubble rate at the specified inverse temperature.",3,[[["self"],["f64"]],["f64"]]],[10,R[809],E,"Return a list of particles in the model.",3,[[["self"]],["vec"]]],[10,R[873],E,"Return a mutable list of particles in the model.",3,[[["self"]],["vec"]]],[10,R[874],E,"Return the index corresponding to a particle's name and…",3,[[["str"],["usize"]],[[R[4],["usize"]],["usize"]]]],[11,R[816],E,"Return a reference to the matching particle by name.",3,[[["self"],["str"],["usize"]],[R[816]]]],[11,"particle_mut",E,"Return a mutable reference to the matching particle by name.",3,[[["self"],["str"],["usize"]],[R[816]]]],[10,R[817],E,"Return a list of interactions in the model.",3,[[["self"]],["vec"]]],[11,"as_context",E,"Return a instance of [`Context`] for the model.",3,[[["self"]],["context"]]],[11,"update_widths",E,"Calculate the widths of all particles.",3,[[["self"]]]],[0,"prelude",R[808],"Common imports for this crate.",N,N],[3,R[877],R[844],R[818],N,N],[12,"mass",E,R[819],0,N],[12,"mass2",E,R[820],0,N],[12,"width",E,R[821],0,N],[12,"width2",E,R[822],0,N],[12,"decays",E,"Decays",0,N],[12,"name",E,"Name",0,N],[3,R[823],E,R[824],N,N],[12,"beta",E,R[825],1,N],[12,R[809],E,R[826],1,N],[12,R[817],E,R[827],1,N],[12,"g1",E,R[828],1,N],[12,"g2",E,R[829],1,N],[12,"g3",E,R[830],1,N],[12,"yu",E,R[831],1,N],[12,"yd",E,R[832],1,N],[12,"ye",E,R[833],1,N],[12,"mh",E,R[834],1,N],[12,"vev",E,R[835],1,N],[12,"mu2",E,R[836],1,N],[12,"lambda",E,R[837],1,N],[3,"Context",E,R[851],N,N],[12,"step",E,R[852],4,N],[12,R[853],E,R[854],4,N],[12,"beta",E,R[855],4,N],[12,R[838],E,R[856],4,N],[12,R[857],E,R[858],4,N],[12,"eq",E,R[859],4,N],[12,"n",E,R[860],4,N],[12,"na",E,R[861],4,N],[12,"model",E,R[862],4,N],[3,"Solver",E,R[863],N,N],[3,R[864],E,R[865],N,N],[4,R[839],E,R[840],N,N],[13,R[841],E,R[842],2,N],[12,R[811],R[846],E,2,N],[12,R[809],E,E,2,N],[12,R[813],E,E,2,N],[12,"m2",E,E,2,N],[13,R[843],R[844],R[845],2,N],[12,R[811],R[846],E,2,N],[12,R[809],E,E,2,N],[12,R[813],E,E,2,N],[12,"m2",E,E,2,N],[12,R[814],E,E,2,N],[13,R[847],R[844],R[848],2,N],[12,R[811],R[846],E,2,N],[12,R[809],E,E,2,N],[12,R[813],E,E,2,N],[12,"m2",E,R[849],2,N],[12,"gamma",E,E,2,N],[13,"Custom",R[844],R[850],2,N],[12,R[811],R[846],E,2,N],[12,R[809],E,E,2,N],[12,R[813],E,E,2,N],[12,"gamma",E,E,2,N],[0,"solver",R[808],"Solver for the number density evolution given by…",N,N],[3,"Context","boltzmann_solver::solver",R[851],N,N],[12,"step",E,R[852],4,N],[12,R[853],E,R[854],4,N],[12,"beta",E,R[855],4,N],[12,R[838],E,R[856],4,N],[12,R[857],E,R[858],4,N],[12,"eq",E,R[859],4,N],[12,"n",E,R[860],4,N],[12,"na",E,R[861],4,N],[12,"model",E,R[862],4,N],[3,"Solver",E,R[863],N,N],[3,R[864],E,R[865],N,N],[11,"new",R[844],"Creates a new builder for the Boltzmann solver.",5,[[],["self"]]],[11,"normalized",E,"Specify whether the solver is dealing with normalized…",5,[[["bool"]],["self"]]],[11,"model",E,"Set a model function.",5,[[["m"]],["self"]]],[11,"initial_densities",E,"Specify initial number densities explicitly.",5,[[["array1",["f64"]],["f64"]],["self"]]],[11,"initial_asymmetries",E,"Specify initial number density asymmetries explicitly.",5,[[["array1",["f64"]],["f64"]],["self"]]],[11,"beta_range",E,"Set the range of inverse temperature values over which the…",5,[[["f64"]],["self"]]],[11,"temperature_range",E,"Set the range of temperature values over which the phase…",5,[[["f64"]],["self"]]],[11,"in_equilibrium",E,"Specify the particles which must remain in equilibrium.",5,[[["i"]],["self"]]],[11,"no_asymmetry",E,"Specify the particles which never develop an asymmetry.",5,[[["i"]],["self"]]],[11,"logger",E,"Set the logger.",5,[[["self"],["f"]]]],[11,"step_precision",E,"Specify how large or small the step size is allowed to…",5,[[["f64"]],["self"]]],[11,"error_tolerance",E,"Specify the local error tolerance.",5,[[["f64"]],["self"]]],[11,"build",E,"Build the Boltzmann solver.",5,[[],[[R[4],["solver","error"]],["solver"],["error"]]]],[11,"solve",E,"Evolve the initial conditions by solving the PDEs.",6,[[["self"]]]],[0,"statistic",R[808],"If the rate of collisions between particles is…",N,N],[4,R[878],R[871],"The statistics which describe the distribution of…",N,N],[13,"FermiDirac",E,"Fermi–Dirac statistic describing half-integer-spin…",7,N],[13,"BoseEinstein",E,"Bose–Einstein statistic describing integer-spin particles:",7,N],[13,"MaxwellBoltzmann",E,"Maxwell–Boltzmann statistic describing classical particles:",7,N],[13,"MaxwellJuttner",E,"Maxwell–Jüttner statistic describing relativistic…",7,N],[17,"BOSON_EQ_DENSITY",E,"Equilibrium number density for massless bosons, normalized…",N,N],[17,"FERMION_EQ_DENSITY",E,"Equilibrium number density for massless fermions,…",N,N],[8,R[879],E,"Equilibrium statistics.",N,N],[10,R[866],E,"Evaluate the phase space distribution, for a given energy,…",8,[[["self"],["f64"]],["f64"]]],[11,R[867],E,R[869],8,[[["self"],["f64"]],["f64"]]],[10,R[868],E,R[869],8,[[["self"],["f64"]],["f64"]]],[11,R[875],E,R[876],8,[[["self"],["f64"]],["f64"]]],[0,"utilities",R[808],"Module of various useful miscellaneous functions.",N,N],[5,"kallen_lambda","boltzmann_solver::utilities","Kallen lambda function:",N,[[["f64"]],["f64"]]],[5,"t_range",E,"Return the minimum and maximum value of the Mandelstam…",N,[[["f64"]]]],[5,"integrate_st",E,"Integrate the amplitude with respect to the Mandelstam…",N,[[["f64"],["f"]],["f64"]]],[5,"propagator",E,"Propagator with squared momentum `q2` involving particle…",N,[[["f64"],[R[816]]],[["f64"],[R[449],["f64"]]]]],[0,"spline",E,"Cubic Hermite interpolation",N,N],[3,R[880],R[872],"Cubic Hermite spline interpolator using a constant data…",N,N],[12,"data",E,"Data array arranged in triples of `(xi, yi, mi)` where…",9,N],[3,R[881],E,"Cubic Hermite spline interpolator",N,N],[5,"rec_geomspace",E,"Create a recursively generated geometrically spaced…",N,[[["f64"],["u32"]],[["vec",["f64"]],["f64"]]]],[5,"rec_linspace",E,"Create a recursively generated linearly spaced interval…",N,[[["f64"],["u32"]],[["vec",["f64"]],["f64"]]]],[11,"sample",E,R[870],9,[[["self"],["f64"]],["f64"]]],[11,"empty",E,"Create a new empty cubic Hermite Spline.",10,[[],["self"]]],[11,"len",E,"Return the number of data points in the underlying data.",10,[[["self"]],["usize"]]],[11,R[488],E,"Check whether the spline is empty",10,[[["self"]],["bool"]]],[11,"min_points",E,"Adjust the minimum number of points before accuracy is…",10,[[["self"],["usize"]]]],[11,"add",E,"Adds a data point to the spline.",10,[[["self"],["f64"]]]],[11,"accurate",E,"Check whether a given interval is accurate or not.",10,[[["self"],["f64"]],["bool"]]],[11,"sample",E,R[870],10,[[["self"],["f64"]],["f64"]]],[11,R[79],R[810],E,0,[[["self"]],[T]]],[11,R[80],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[81]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[5],E,E,1,[[[U]],[R[4]]]],[11,R[6],E,E,1,[[],[R[4]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[R[81]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[5],E,E,2,[[[U]],[R[4]]]],[11,R[6],E,E,2,[[],[R[4]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[R[81]]]],[11,"into",R[844],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[5],E,E,4,[[[U]],[R[4]]]],[11,R[6],E,E,4,[[],[R[4]]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[R[81]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[5],E,E,6,[[[U]],[R[4]]]],[11,R[6],E,E,6,[[],[R[4]]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[R[81]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[5],E,E,5,[[[U]],[R[4]]]],[11,R[6],E,E,5,[[],[R[4]]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[R[81]]]],[11,"into",R[871],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[5],E,E,7,[[[U]],[R[4]]]],[11,R[6],E,E,7,[[],[R[4]]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[R[81]]]],[11,"into",R[872],E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[5],E,E,9,[[[U]],[R[4]]]],[11,R[6],E,E,9,[[],[R[4]]]],[11,R[8],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[R[81]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[5],E,E,10,[[[U]],[R[4]]]],[11,R[6],E,E,10,[[],[R[4]]]],[11,R[8],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[R[81]]]],[11,"zero",R[810],E,1,[[],["self"]]],[11,"set_beta",E,"Update beta for the model.",1,[[["self"],["f64"]]]],[11,"get_beta",E,E,1,[[["self"]],["f64"]]],[11,R[815],E,E,1,[[["self"],["f64"]],["f64"]]],[11,R[809],E,E,1,[[["self"]],["vec"]]],[11,R[873],E,E,1,[[["self"]],["vec"]]],[11,R[874],E,E,1,[[["str"],["usize"]],[[R[4],["usize"]],["usize"]]]],[11,R[817],E,E,1,[[["self"]],["vec"]]],[11,R[866],R[871],"Evaluate the phase space distribution, \\(f\\) as defined…",7,[[["self"],["f64"]],["f64"]]],[11,R[867],E,R[869],7,[[["self"],["f64"]],["f64"]]],[11,R[868],E,R[869],7,[[["self"],["f64"]],["f64"]]],[11,R[875],E,R[876],7,[[["self"],["f64"]],["f64"]]],[11,R[456],R[844],E,5,[[],["self"]]],[11,"clone",R[810],E,0,[[["self"]],[R[816]]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[844],E,4,[[["self"],[R[11]]],[R[4]]]]],"p":[[3,R[877]],[3,R[823]],[4,R[839]],[8,"Model"],[3,"Context"],[3,R[864]],[3,"Solver"],[4,R[878]],[8,R[879]],[3,R[880]],[3,R[881]]]};
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,R[0],R[0],"The main macro provided by this crate. See crate…",N,N]],"p":[]};
searchIndex["crossbeam_deque"]={"doc":"Concurrent work-stealing deques.","i":[[3,"Worker","crossbeam_deque","A worker queue.",N,N],[3,"Stealer",E,"A stealer handle of a worker queue.",N,N],[3,"Injector",E,"An injector queue.",N,N],[4,"Steal",E,"Possible outcomes of a steal operation.",N,N],[13,"Empty",E,"The queue was empty at the time of stealing.",0,N],[13,"Success",E,"At least one task was successfully stolen.",0,N],[13,"Retry",E,"The steal operation needs to be retried.",0,N],[11,"new_fifo",E,"Creates a FIFO worker queue.",1,[[],["worker"]]],[11,"new_lifo",E,"Creates a LIFO worker queue.",1,[[],["worker"]]],[11,"stealer",E,"Creates a stealer for this queue.",1,[[["self"]],["stealer"]]],[11,R[488],E,R[434],1,[[["self"]],["bool"]]],[11,"push",E,R[484],1,[[["self"],[T]]]],[11,"pop",E,"Pops a task from the queue.",1,[[["self"]],[R[20]]]],[11,R[488],E,R[434],2,[[["self"]],["bool"]]],[11,"steal",E,R[485],2,[[["self"]],["steal"]]],[11,R[486],E,"Steals a batch of tasks and pushes them into another worker.",2,[[["self"],["worker"]],["steal"]]],[11,R[487],E,"Steals a batch of tasks, pushes them into another worker,…",2,[[["self"],["worker"]],["steal"]]],[11,"new",E,"Creates a new injector queue.",3,[[],["injector"]]],[11,"push",E,R[484],3,[[["self"],[T]]]],[11,"steal",E,R[485],3,[[["self"]],["steal"]]],[11,R[486],E,"Steals a batch of tasks and pushes them into a worker.",3,[[["self"],["worker"]],["steal"]]],[11,R[487],E,"Steals a batch of tasks, pushes them into a worker, and…",3,[[["self"],["worker"]],["steal"]]],[11,R[488],E,R[434],3,[[["self"]],["bool"]]],[11,R[488],E,"Returns `true` if the queue was empty at the time of…",0,[[["self"]],["bool"]]],[11,"is_success",E,"Returns `true` if at least one task was stolen.",0,[[["self"]],["bool"]]],[11,"is_retry",E,"Returns `true` if the steal operation needs to be retried.",0,[[["self"]],["bool"]]],[11,"success",E,"Returns the result of the operation, if successful.",0,[[],[R[20]]]],[11,"or_else",E,"If no task was stolen, attempts another steal operation.",0,[[["f"]],["steal"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[5],E,E,1,[[[U]],[R[4]]]],[11,R[6],E,E,1,[[],[R[4]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[R[81]]]],[11,R[79],E,E,2,[[["self"]],[T]]],[11,R[80],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[5],E,E,2,[[[U]],[R[4]]]],[11,R[6],E,E,2,[[],[R[4]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[R[81]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[5],E,E,3,[[[U]],[R[4]]]],[11,R[6],E,E,3,[[],[R[4]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[R[81]]]],[11,R[79],E,E,0,[[["self"]],[T]]],[11,R[80],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[81]]]],[11,"drop",E,E,3,[[["self"]]]],[11,"clone",E,E,2,[[["self"]],["stealer"]]],[11,"clone",E,E,0,[[["self"]],["steal"]]],[11,"eq",E,E,0,[[["self"],["steal"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["steal"]],["bool"]]],[11,"fmt",E,E,1,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,2,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,3,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]],[11,R[754],E,"Consumes items until a `Success` is found and returns it.",0,[[["i"]],["steal"]]]],"p":[[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"Injector"]]};
searchIndex["crossbeam_epoch"]={"doc":"Epoch-based memory reclamation.","i":[[3,"Atomic","crossbeam_epoch","An atomic pointer that can be safely shared between threads.",N,N],[3,R[479],E,"The error returned on failed compare-and-set operation.",N,N],[12,"current",E,"The value in the atomic pointer at the time of the failed…",0,N],[12,"new",E,"The new value, which the operation failed to store.",0,N],[3,"Owned",E,"An owned heap-allocated object.",N,N],[3,"Shared",E,"A pointer to an object protected by the epoch GC.",N,N],[3,R[480],E,"An epoch-based garbage collector.",N,N],[3,R[481],E,"A handle to a garbage collector.",N,N],[3,"Guard",E,"A guard that keeps the current thread pinned.",N,N],[5,"unprotected",E,"Returns a reference to a dummy guard that allows…",N,[[],["guard"]]],[5,"default_collector",E,"Returns the default global collector.",N,[[],[R[475]]]],[5,R[474],E,"Returns `true` if the current thread is pinned.",N,[[],["bool"]]],[5,"pin",E,"Pins the current thread.",N,[[],["guard"]]],[11,"null",E,"Returns a new null atomic pointer.",1,[[],["atomic"]]],[11,"new",E,"Allocates `value` on the heap and returns a new atomic…",1,[[[T]],["atomic"]]],[11,"load",E,"Loads a `Shared` from the atomic pointer.",1,[[["self"],["guard"],[R[19]]],["shared"]]],[11,R[483],E,"Loads a `Shared` from the atomic pointer using a \"consume\"…",1,[[["self"],["guard"]],["shared"]]],[11,"store",E,R[466],1,[[["self"],["pointer"],[R[19]]]]],[11,"swap",E,R[466],1,[[["self"],["pointer"],["guard"],[R[19]]],["shared"]]],[11,"compare_and_set",E,R[468],1,[[["self"],["o"],["guard"],["p"],["shared"]],[[R[4],["shared",R[467]]],[R[467]],["shared"]]]],[11,"compare_and_set_weak",E,R[468],1,[[["self"],["o"],["guard"],["p"],["shared"]],[[R[4],["shared",R[467]]],[R[467]],["shared"]]]],[11,R[304],E,"Bitwise \"and\" with the current tag.",1,[[["self"],["guard"],["usize"],[R[19]]],["shared"]]],[11,R[309],E,"Bitwise \"or\" with the current tag.",1,[[["self"],["guard"],["usize"],[R[19]]],["shared"]]],[11,R[307],E,"Bitwise \"xor\" with the current tag.",1,[[["self"],["guard"],["usize"],[R[19]]],["shared"]]],[11,R[470],E,R[471],1,[[],["owned"]]],[11,"new",E,"Allocates `value` on the heap and returns a new owned…",2,[[[T]],["owned"]]],[11,"from_raw",E,"Returns a new owned pointer pointing to `raw`.",2,[[],["owned"]]],[11,R[673],E,"Converts the owned pointer into a [`Shared`].",2,[[["guard"]],["shared"]]],[11,"into_box",E,"Converts the owned pointer into a `Box`.",2,[[],["box"]]],[11,"tag",E,R[472],2,[[["self"]],["usize"]]],[11,"with_tag",E,R[473],2,[[["usize"]],["owned"]]],[11,"null",E,"Returns a new null pointer.",3,[[],["shared"]]],[11,"is_null",E,"Returns `true` if the pointer is null.",3,[[["self"]],["bool"]]],[11,"as_raw",E,"Converts the pointer to a raw pointer (without the tag).",3,[[["self"]]]],[11,"deref",E,R[469],3,[[["self"]],[T]]],[11,R[22],E,R[469],3,[[["self"]],[T]]],[11,R[44],E,"Converts the pointer to a reference.",3,[[["self"]],[[T],[R[20]]]]],[11,R[470],E,R[471],3,[[],["owned"]]],[11,"tag",E,R[472],3,[[["self"]],["usize"]]],[11,"with_tag",E,R[473],3,[[["self"],["usize"]],["shared"]]],[11,"new",E,"Creates a new collector.",4,[[],["self"]]],[11,"register",E,"Registers a new handle for the collector.",4,[[["self"]],["localhandle"]]],[11,"pin",E,"Pins the handle.",5,[[["self"]],["guard"]]],[11,R[474],E,"Returns `true` if the handle is pinned.",5,[[["self"]],["bool"]]],[11,R[475],E,"Returns the `Collector` associated with this handle.",5,[[["self"]],[R[475]]]],[11,"defer",E,R[476],6,[[["self"],["f"]]]],[11,"defer_unchecked",E,R[476],6,[[["self"],["f"]]]],[11,"defer_destroy",E,"Stores a destructor for an object so that it can be…",6,[[["self"],["shared"]]]],[11,"flush",E,"Clears up the thread-local cache of deferred functions by…",6,[[["self"]]]],[11,"repin",E,"Unpins and then immediately re-pins the thread.",6,[[["self"]]]],[11,"repin_after",E,"Temporarily unpins the thread, executes the given function…",6,[[["self"],["f"]],["r"]]],[11,R[475],E,"Returns the `Collector` associated with this guard.",6,[[["self"]],[[R[20],[R[475]]],[R[475]]]]],[8,R[482],E,"Memory orderings for compare-and-set operations.",N,N],[10,"success",E,"The ordering of the operation when it succeeds.",7,[[["self"]],[R[19]]]],[10,"failure",E,"The ordering of the operation when it fails.",7,[[["self"]],[R[19]]]],[8,"Pointer",E,"A trait for either `Owned` or `Shared` pointers.",N,N],[10,R[477],E,"Returns the machine representation of the pointer.",8,[[],["usize"]]],[10,R[462],E,R[478],8,[[["usize"]],["self"]]],[11,R[79],E,E,1,[[["self"]],[T]]],[11,R[80],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[5],E,E,1,[[[U]],[R[4]]]],[11,R[6],E,E,1,[[],[R[4]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[R[81]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[81]]]],[11,R[79],E,E,2,[[["self"]],[T]]],[11,R[80],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[5],E,E,2,[[[U]],[R[4]]]],[11,R[6],E,E,2,[[],[R[4]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[R[81]]]],[11,R[79],E,E,3,[[["self"]],[T]]],[11,R[80],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[5],E,E,3,[[[U]],[R[4]]]],[11,R[6],E,E,3,[[],[R[4]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[R[81]]]],[11,R[79],E,E,4,[[["self"]],[T]]],[11,R[80],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[5],E,E,4,[[[U]],[R[4]]]],[11,R[6],E,E,4,[[],[R[4]]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[R[81]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[5],E,E,5,[[[U]],[R[4]]]],[11,R[6],E,E,5,[[],[R[4]]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[R[81]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[5],E,E,6,[[[U]],[R[4]]]],[11,R[6],E,E,6,[[],[R[4]]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[R[81]]]],[11,R[477],E,E,2,[[],["usize"]]],[11,R[462],E,R[478],2,[[["usize"]],["self"]]],[11,R[477],E,E,3,[[],["usize"]]],[11,R[462],E,E,3,[[["usize"]],["self"]]],[11,"drop",E,E,2,[[["self"]]]],[11,"drop",E,E,5,[[["self"]]]],[11,"drop",E,E,6,[[["self"]]]],[11,R[45],E,E,2,[[["self"]],[T]]],[11,R[456],E,E,1,[[],["self"]]],[11,R[456],E,E,3,[[],["self"]]],[11,"clone",E,"Returns a copy of the atomic value.",1,[[["self"]],["self"]]],[11,"clone",E,E,2,[[["self"]],["self"]]],[11,"clone",E,E,3,[[["self"]],["self"]]],[11,"clone",E,"Creates another reference to the same garbage collector.",4,[[["self"]],["self"]]],[11,R[44],E,E,2,[[["self"]],[T]]],[11,R[86],E,E,3,[[["self"]],[[R[19]],[R[20],[R[19]]]]]],[11,"eq",E,E,3,[[["self"]],["bool"]]],[11,"eq",E,"Checks if both handles point to the same collector.",4,[[["self"],[R[475]]],["bool"]]],[11,"cmp",E,E,3,[[["self"]],[R[19]]]],[11,"from",E,"Returns a new atomic pointer pointing to `owned`.",1,[[["owned"]],["self"]]],[11,"from",E,E,1,[[["box"]],["self"]]],[11,"from",E,E,1,[[[T]],["self"]]],[11,"from",E,"Returns a new atomic pointer pointing to `ptr`.",1,[[["shared"]],["self"]]],[11,"from",E,"Returns a new atomic pointer pointing to `raw`.",1,[[],["self"]]],[11,"from",E,E,2,[[[T]],["self"]]],[11,"from",E,"Returns a new owned pointer pointing to `b`.",2,[[["box"]],["self"]]],[11,"from",E,"Returns a new pointer pointing to `raw`.",3,[[],["self"]]],[11,R[22],E,E,2,[[["self"]],[T]]],[11,"deref",E,E,2,[[["self"]],[T]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,1,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,2,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,3,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,4,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,5,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,6,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,1,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,3,[[["self"],[R[11]]],[R[4]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]]],"p":[[3,R[479]],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,R[480]],[3,R[481]],[3,"Guard"],[8,R[482]],[8,"Pointer"]]};
searchIndex["crossbeam_queue"]={"doc":"Concurrent queues.","i":[[3,R[437],"crossbeam_queue","A bounded multi-producer multi-consumer queue.",N,N],[3,"PopError",E,"Error which occurs when popping from an empty queue.",N,N],[3,R[436],E,"Error which occurs when pushing into a full queue.",N,N],[12,"0",E,E,0,N],[3,"SegQueue",E,"An unbounded multi-producer multi-consumer queue.",N,N],[11,"new",E,"Creates a new bounded queue with the given capacity.",1,[[["usize"]],["arrayqueue"]]],[11,"push",E,"Attempts to push an element into the queue.",1,[[["self"],[T]],[[R[4],[R[432]]],[R[432]]]]],[11,"pop",E,"Attempts to pop an element from the queue.",1,[[["self"]],[[R[4],[R[433]]],[R[433]]]]],[11,"capacity",E,"Returns the capacity of the queue.",1,[[["self"]],["usize"]]],[11,R[488],E,R[434],1,[[["self"]],["bool"]]],[11,"is_full",E,"Returns `true` if the queue is full.",1,[[["self"]],["bool"]]],[11,"len",E,R[435],1,[[["self"]],["usize"]]],[11,"new",E,"Creates a new unbounded queue.",2,[[],["segqueue"]]],[11,"push",E,"Pushes an element into the queue.",2,[[["self"],[T]]]],[11,"pop",E,"Pops an element from the queue.",2,[[["self"]],[[R[4],[R[433]]],[R[433]]]]],[11,R[488],E,R[434],2,[[["self"]],["bool"]]],[11,"len",E,R[435],2,[[["self"]],["usize"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[5],E,E,1,[[[U]],[R[4]]]],[11,R[6],E,E,1,[[],[R[4]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[R[81]]]],[11,R[79],E,E,3,[[["self"]],[T]]],[11,R[80],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[82],E,E,3,[[["self"]],[R[83]]]],[11,R[5],E,E,3,[[[U]],[R[4]]]],[11,R[6],E,E,3,[[],[R[4]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[R[81]]]],[11,R[79],E,E,0,[[["self"]],[T]]],[11,R[80],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[82],E,E,0,[[["self"]],[R[83]]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[81]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[5],E,E,2,[[[U]],[R[4]]]],[11,R[6],E,E,2,[[],[R[4]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[R[81]]]],[11,"drop",E,E,1,[[["self"]]]],[11,"drop",E,E,2,[[["self"]]]],[11,R[456],E,E,2,[[],["segqueue"]]],[11,"clone",E,E,3,[[["self"]],[R[433]]]],[11,"clone",E,E,0,[[["self"]],[R[432]]]],[11,"eq",E,E,3,[[["self"],[R[433]]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[432]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[432]]],["bool"]]],[11,"fmt",E,E,1,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,3,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,2,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,3,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]],[11,R[169],E,E,3,[[["self"]],["str"]]],[11,R[169],E,E,0,[[["self"]],["str"]]]],"p":[[3,R[436]],[3,R[437]],[3,"SegQueue"],[3,"PopError"]]};
searchIndex["crossbeam_utils"]={"doc":"Miscellaneous tools for concurrent programming.","i":[[3,R[328],R[310],R[311],N,N],[3,"Backoff",E,"Performs exponential backoff in spin loops.",N,N],[0,"atomic",E,"Atomic types.",N,N],[3,R[326],R[318],"A thread-safe mutable memory location.",N,N],[11,"new",E,"Creates a new atomic cell initialized with `val`.",0,[[[T]],[R[321]]]],[11,R[21],E,"Unwraps the atomic cell and returns its inner value.",0,[[],[T]]],[11,"is_lock_free",E,"Returns `true` if operations on values of this type are…",0,[[],["bool"]]],[11,"store",E,"Stores `val` into the atomic cell.",0,[[["self"],[T]]]],[11,"swap",E,"Stores `val` into the atomic cell and returns the previous…",0,[[["self"],[T]],[T]]],[11,"as_ptr",E,"Returns a raw pointer to the underlying data in this…",0,[[["self"]]]],[11,"take",E,"Takes the value of the atomic cell, leaving…",0,[[["self"]],[T]]],[11,"load",E,"Loads a value.",0,[[["self"]],[T]]],[11,"compare_and_swap",E,R[299],0,[[["self"],[T]],[T]]],[11,"compare_exchange",E,R[299],0,[[["self"],[T]],[R[4]]]],[11,R[300],E,R[301],0,[[["self"],["u8"]],["u8"]]],[11,R[302],E,R[303],0,[[["self"],["u8"]],["u8"]]],[11,R[304],E,R[305],0,[[["self"],["u8"]],["u8"]]],[11,R[309],E,R[306],0,[[["self"],["u8"]],["u8"]]],[11,R[307],E,R[308],0,[[["self"],["u8"]],["u8"]]],[11,R[300],E,R[301],0,[[["self"],["i8"]],["i8"]]],[11,R[302],E,R[303],0,[[["self"],["i8"]],["i8"]]],[11,R[304],E,R[305],0,[[["self"],["i8"]],["i8"]]],[11,R[309],E,R[306],0,[[["self"],["i8"]],["i8"]]],[11,R[307],E,R[308],0,[[["self"],["i8"]],["i8"]]],[11,R[300],E,R[301],0,[[["self"],["u16"]],["u16"]]],[11,R[302],E,R[303],0,[[["self"],["u16"]],["u16"]]],[11,R[304],E,R[305],0,[[["self"],["u16"]],["u16"]]],[11,R[309],E,R[306],0,[[["self"],["u16"]],["u16"]]],[11,R[307],E,R[308],0,[[["self"],["u16"]],["u16"]]],[11,R[300],E,R[301],0,[[["self"],["i16"]],["i16"]]],[11,R[302],E,R[303],0,[[["self"],["i16"]],["i16"]]],[11,R[304],E,R[305],0,[[["self"],["i16"]],["i16"]]],[11,R[309],E,R[306],0,[[["self"],["i16"]],["i16"]]],[11,R[307],E,R[308],0,[[["self"],["i16"]],["i16"]]],[11,R[300],E,R[301],0,[[["self"],["u32"]],["u32"]]],[11,R[302],E,R[303],0,[[["self"],["u32"]],["u32"]]],[11,R[304],E,R[305],0,[[["self"],["u32"]],["u32"]]],[11,R[309],E,R[306],0,[[["self"],["u32"]],["u32"]]],[11,R[307],E,R[308],0,[[["self"],["u32"]],["u32"]]],[11,R[300],E,R[301],0,[[["self"],["i32"]],["i32"]]],[11,R[302],E,R[303],0,[[["self"],["i32"]],["i32"]]],[11,R[304],E,R[305],0,[[["self"],["i32"]],["i32"]]],[11,R[309],E,R[306],0,[[["self"],["i32"]],["i32"]]],[11,R[307],E,R[308],0,[[["self"],["i32"]],["i32"]]],[11,R[300],E,R[301],0,[[["self"],["u64"]],["u64"]]],[11,R[302],E,R[303],0,[[["self"],["u64"]],["u64"]]],[11,R[304],E,R[305],0,[[["self"],["u64"]],["u64"]]],[11,R[309],E,R[306],0,[[["self"],["u64"]],["u64"]]],[11,R[307],E,R[308],0,[[["self"],["u64"]],["u64"]]],[11,R[300],E,R[301],0,[[["self"],["i64"]],["i64"]]],[11,R[302],E,R[303],0,[[["self"],["i64"]],["i64"]]],[11,R[304],E,R[305],0,[[["self"],["i64"]],["i64"]]],[11,R[309],E,R[306],0,[[["self"],["i64"]],["i64"]]],[11,R[307],E,R[308],0,[[["self"],["i64"]],["i64"]]],[11,R[300],E,R[301],0,[[["self"],["u128"]],["u128"]]],[11,R[302],E,R[303],0,[[["self"],["u128"]],["u128"]]],[11,R[304],E,R[305],0,[[["self"],["u128"]],["u128"]]],[11,R[309],E,R[306],0,[[["self"],["u128"]],["u128"]]],[11,R[307],E,R[308],0,[[["self"],["u128"]],["u128"]]],[11,R[300],E,R[301],0,[[["self"],["i128"]],["i128"]]],[11,R[302],E,R[303],0,[[["self"],["i128"]],["i128"]]],[11,R[304],E,R[305],0,[[["self"],["i128"]],["i128"]]],[11,R[309],E,R[306],0,[[["self"],["i128"]],["i128"]]],[11,R[307],E,R[308],0,[[["self"],["i128"]],["i128"]]],[11,R[300],E,R[301],0,[[["self"],["usize"]],["usize"]]],[11,R[302],E,R[303],0,[[["self"],["usize"]],["usize"]]],[11,R[304],E,R[305],0,[[["self"],["usize"]],["usize"]]],[11,R[309],E,R[306],0,[[["self"],["usize"]],["usize"]]],[11,R[307],E,R[308],0,[[["self"],["usize"]],["usize"]]],[11,R[300],E,R[301],0,[[["self"],["isize"]],["isize"]]],[11,R[302],E,R[303],0,[[["self"],["isize"]],["isize"]]],[11,R[304],E,R[305],0,[[["self"],["isize"]],["isize"]]],[11,R[309],E,R[306],0,[[["self"],["isize"]],["isize"]]],[11,R[307],E,R[308],0,[[["self"],["isize"]],["isize"]]],[11,R[304],E,"Applies logical \"and\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,R[309],E,"Applies logical \"or\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,R[307],E,"Applies logical \"xor\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[8,R[327],E,"Trait which allows reading from primitive atomic types…",N,N],[16,"Val",E,"Type returned by `load_consume`.",1,N],[10,R[483],E,"Loads a value from the atomic using a \"consume\" memory…",1,[[["self"]]]],[11,"new",R[310],R[311],2,[[[T]],[R[322]]]],[11,R[21],E,"Returns the inner value.",2,[[],[T]]],[11,"new",E,"Creates a new `Backoff`.",3,[[],["self"]]],[11,"reset",E,"Resets the `Backoff`.",3,[[["self"]]]],[11,"spin",E,"Backs off in a lock-free loop.",3,[[["self"]]]],[11,"snooze",E,"Backs off in a blocking loop.",3,[[["self"]]]],[11,"is_completed",E,"Returns `true` if exponential backoff has completed and…",3,[[["self"]],["bool"]]],[0,"sync",E,"Thread synchronization primitives.",N,N],[3,R[329],R[319],"A sharded reader-writer lock.",N,N],[3,R[333],E,"A guard used to release the shared read access of a…",N,N],[3,R[334],E,"A guard used to release the exclusive write access of a…",N,N],[3,"Parker",E,"A thread parking primitive.",N,N],[3,"Unparker",E,"Unparks a thread parked by the associated [`Parker`].",N,N],[3,R[330],E,"Enables threads to synchronize the beginning or end of…",N,N],[11,"new",E,"Creates a new `Parker`.",4,[[],["parker"]]],[11,"park",E,"Blocks the current thread until the token is made available.",4,[[["self"]]]],[11,"park_timeout",E,"Blocks the current thread until the token is made…",4,[[["self"],["duration"]]]],[11,R[324],E,"Returns a reference to an associated [`Unparker`].",4,[[["self"]],[R[324]]]],[11,"unpark",E,"Atomically makes the token available if it is not already.",5,[[["self"]]]],[11,"new",E,"Creates a new sharded reader-writer lock.",6,[[[T]],[R[323]]]],[11,R[21],E,"Consumes this lock, returning the underlying data.",6,[[],[R[312]]]],[11,"is_poisoned",E,"Returns `true` if the lock is poisoned.",6,[[["self"]],["bool"]]],[11,"get_mut",E,"Returns a mutable reference to the underlying data.",6,[[["self"]],[[R[312]],[T]]]],[11,"try_read",E,"Attempts to acquire this lock with shared read access.",6,[[["self"]],[[R[314],[R[313]]],[R[313]]]]],[11,"read",E,"Locks with shared read access, blocking the current thread…",6,[[["self"]],[[R[313]],[R[312],[R[313]]]]]],[11,"try_write",E,"Attempts to acquire this lock with exclusive write access.",6,[[["self"]],[[R[314],[R[315]]],[R[315]]]]],[11,"write",E,"Locks with exclusive write access, blocking the current…",6,[[["self"]],[[R[315]],[R[312],[R[315]]]]]],[11,"new",E,"Creates a new wait group and returns the single reference…",7,[[],[R[325]]]],[11,"wait",E,"Drops this reference and waits until all other references…",7,[[]]],[0,"thread",R[310],"Threads that can borrow variables from the stack.",N,N],[3,"Scope",R[320],"A scope for spawning threads.",N,N],[3,R[331],E,"Configures the properties of a new thread.",N,N],[3,R[332],E,"A handle that can be used to join its scoped thread.",N,N],[5,"scope",E,"Creates a new scope for spawning threads.",N,[[["f"]],[R[4]]]],[11,"spawn",E,"Spawns a scoped thread.",8,[[["self"],["f"]],[R[317]]]],[11,"builder",E,"Creates a builder that can configure a thread before…",8,[[["self"]],[R[316]]]],[11,"name",E,"Sets the name for the new thread.",9,[[[R[83]]],[R[316]]]],[11,R[492],E,"Sets the size of the stack for the new thread.",9,[[["usize"]],[R[316]]]],[11,"spawn",E,"Spawns a scoped thread with this configuration.",9,[[["f"]],[[R[317]],[R[4],[R[317]]]]]],[11,"join",E,"Waits for the thread to finish and returns its result.",10,[[],[R[4]]]],[11,"thread",E,"Returns a handle to the underlying thread.",10,[[["self"]],["thread"]]],[11,R[79],R[310],E,2,[[["self"]],[T]]],[11,R[80],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[5],E,E,2,[[[U]],[R[4]]]],[11,R[6],E,E,2,[[],[R[4]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[R[81]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[5],E,E,3,[[[U]],[R[4]]]],[11,R[6],E,E,3,[[],[R[4]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[R[81]]]],[11,"into",R[318],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[81]]]],[11,"into",R[319],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[5],E,E,6,[[[U]],[R[4]]]],[11,R[6],E,E,6,[[],[R[4]]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[R[81]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[82],E,E,11,[[["self"]],[R[83]]]],[11,R[5],E,E,11,[[[U]],[R[4]]]],[11,R[6],E,E,11,[[],[R[4]]]],[11,R[8],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[R[81]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[82],E,E,12,[[["self"]],[R[83]]]],[11,R[5],E,E,12,[[[U]],[R[4]]]],[11,R[6],E,E,12,[[],[R[4]]]],[11,R[8],E,E,12,[[["self"]],[T]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[R[81]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[5],E,E,4,[[[U]],[R[4]]]],[11,R[6],E,E,4,[[],[R[4]]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[R[81]]]],[11,R[79],E,E,5,[[["self"]],[T]]],[11,R[80],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[5],E,E,5,[[[U]],[R[4]]]],[11,R[6],E,E,5,[[],[R[4]]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[R[81]]]],[11,R[79],E,E,7,[[["self"]],[T]]],[11,R[80],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[5],E,E,7,[[[U]],[R[4]]]],[11,R[6],E,E,7,[[],[R[4]]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[R[81]]]],[11,"into",R[320],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[5],E,E,8,[[[U]],[R[4]]]],[11,R[6],E,E,8,[[],[R[4]]]],[11,R[8],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[R[81]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[5],E,E,9,[[[U]],[R[4]]]],[11,R[6],E,E,9,[[],[R[4]]]],[11,R[8],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[R[81]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[5],E,E,10,[[[U]],[R[4]]]],[11,R[6],E,E,10,[[],[R[4]]]],[11,R[8],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[R[81]]]],[11,"drop",R[319],E,12,[[["self"]]]],[11,"drop",E,E,7,[[["self"]]]],[11,R[456],R[318],E,0,[[],[R[321]]]],[11,R[456],R[310],E,2,[[],[R[322]]]],[11,R[456],E,E,3,[[],["backoff"]]],[11,R[456],R[319],E,6,[[],[R[323]]]],[11,"clone",R[310],E,2,[[["self"]],[R[322]]]],[11,"clone",R[319],E,5,[[["self"]],[R[324]]]],[11,"clone",E,E,7,[[["self"]],[R[325]]]],[11,"eq",R[310],E,2,[[["self"],[R[322]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[322]]],["bool"]]],[11,"from",E,E,2,[[[T]],["self"]]],[11,"from",R[319],E,6,[[[T]],["self"]]],[11,R[22],R[310],E,2,[[["self"]],[T]]],[11,R[22],R[319],E,12,[[["self"]],[T]]],[11,"hash",R[310],E,2,[[["self"],["__h"]]]],[11,"deref",E,E,2,[[["self"]],[T]]],[11,"deref",R[319],E,11,[[["self"]],[T]]],[11,"deref",E,E,12,[[["self"]],[T]]],[11,"fmt",R[318],E,0,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[310],E,2,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,3,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[319],E,4,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,5,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,6,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,11,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,12,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,7,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[320],E,8,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,9,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,10,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[319],E,11,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,12,[[["self"],[R[11]]],[R[4]]]]],"p":[[3,R[326]],[8,R[327]],[3,R[328]],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,R[329]],[3,R[330]],[3,"Scope"],[3,R[331]],[3,R[332]],[3,R[333]],[3,R[334]]]};
searchIndex["either"]={"doc":"The enum [`Either`] with variants `Left` and `Right` is a…","i":[[4,"Either",R[14],R[27],N,N],[13,"Left",E,R[28],0,N],[13,"Right",E,R[29],0,N],[11,"is_left",E,R[100],0,[[["self"]],["bool"]]],[11,R[43],E,R[101],0,[[["self"]],["bool"]]],[11,"left",E,R[102],0,[[],[R[20]]]],[11,"right",E,R[103],0,[[],[R[20]]]],[11,R[44],E,R[104],0,[[["self"]],[[R[14]],["r"],["l"]]]],[11,R[45],E,R[105],0,[[["self"]],[["r"],[R[14]],["l"]]]],[11,"flip",E,R[106],0,[[],[R[14]]]],[11,R[47],E,R[15],0,[[["f"]],[R[14]]]],[11,R[48],E,R[16],0,[[["f"]],[R[14]]]],[11,R[14],E,R[107],0,[[["f"],["g"]],[T]]],[11,R[108],E,R[109],0,[[["ctx"],["f"],["g"]],[T]]],[11,R[49],E,R[15],0,[[["f"]],[R[14]]]],[11,R[51],E,R[16],0,[[["f"]],[R[14]]]],[11,R[18],E,R[110],0,[[],[R[14]]]],[11,"left_or",E,R[111],0,[[["l"]],["l"]]],[11,R[112],E,R[113],0,[[],["l"]]],[11,R[114],E,R[115],0,[[["f"]],["l"]]],[11,R[584],E,R[116],0,[[["r"]],["r"]]],[11,R[117],E,R[118],0,[[],["r"]]],[11,R[119],E,R[120],0,[[["f"]],["r"]]],[11,R[121],E,R[17],0,[[]]],[11,R[122],E,R[17],0,[[]]],[11,R[21],E,R[123],0,[[],[T]]],[11,"map",E,R[124],0,[[["f"]],[R[14]]]],[14,"try_left",E,"Macro for unwrapping the left side of an `Either`, which…",N,N],[14,"try_right",E,"Dual to `try_left!`, see its documentation for more…",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,"into",E,E,0,[[],[U]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[18],E,E,0,[[],["i"]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[81]]]],[11,R[22],E,E,0,[[["self"]]]],[11,"from",E,E,0,[[[R[4]]],["self"]]],[11,"eq",E,E,0,[[["self"],[R[14]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[14]]],["bool"]]],[11,"cmp",E,E,0,[[["self"],[R[14]]],[R[19]]]],[11,R[86],E,E,0,[[["self"],[R[14]]],[[R[19]],[R[20],[R[19]]]]]],[11,"lt",E,E,0,[[["self"],[R[14]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[14]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[14]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[14]]],["bool"]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"deref",E,E,0,[[["self"]]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]],[11,R[44],E,E,0,[[["self"]],["target"]]],[11,R[44],E,E,0,[[["self"]],["str"]]],[11,R[44],E,E,0,[[["self"]]]],[11,R[45],E,E,0,[[["self"]],["str"]]],[11,R[45],E,E,0,[[["self"]],["target"]]],[11,R[45],E,E,0,[[["self"]]]],[11,"into",E,E,0,[[],[R[4]]]],[11,"next",E,E,0,[[["self"]],[R[20]]]],[11,R[85],E,E,0,[[["self"]]]],[11,"fold",E,E,0,[[["acc"],["g"]],["acc"]]],[11,"count",E,E,0,[[],["usize"]]],[11,"last",E,E,0,[[],[R[20]]]],[11,"nth",E,E,0,[[["self"],["usize"]],[R[20]]]],[11,R[99],E,E,0,[[],["b"]]],[11,"all",E,E,0,[[["self"],["f"]],["bool"]]],[11,R[84],E,E,0,[[["self"]],[R[20]]]],[11,"extend",E,E,0,[[["self"],[T]]]],[11,"clone",E,E,0,[[["self"]],[R[14]]]]],"p":[[4,"Either"]]};
searchIndex["itertools"]={"doc":"Extra iterator adaptors, functions and macros.","i":[[4,"Either",R[42],R[27],N,N],[13,"Left",E,R[28],0,N],[13,"Right",E,R[29],0,N],[4,"Diff",E,"A type returned by the `diff_with` function.",N,N],[13,"FirstMismatch",E,"The index of the first non-matching element along with…",1,N],[13,"Shorter",E,"The total number of elements that were in `J` along with…",1,N],[13,"Longer",E,"The total number of elements that were in `I` along with…",1,N],[4,R[125],E,"`MinMaxResult` is an enum returned by `minmax`. See…",N,N],[13,"NoElements",E,"Empty iterator",2,N],[13,"OneElement",E,"Iterator with one element, so the minimum and maximum are…",2,N],[13,"MinMax",E,"More than one element in the iterator, the first element…",2,N],[4,"Position",E,"A value yielded by `WithPosition`. Indicates the position…",N,N],[13,"First",E,"This is the first element.",3,N],[13,"Middle",E,"This is neither the first nor the last element.",3,N],[13,"Last",E,"This is the last element.",3,N],[13,"Only",E,"This is the only element.",3,N],[4,R[126],E,"Value that either holds a single A or B, or both.",N,N],[13,"Both",E,"Both values are present.",4,N],[13,"Left",E,"Only the left value of type `A` is present.",4,N],[13,"Right",E,"Only the right value of type `B` is present.",4,N],[4,R[127],E,"An enum used for controlling the execution of…",N,N],[13,"Continue",E,R[646],5,N],[13,"Done",E,R[647],5,N],[5,"concat",E,R[72],N,[[["i"]]]],[5,"cons_tuples",E,"Create an iterator that maps for example iterators of…",N,[[["i"]],["constuples"]]],[5,"diff_with",E,"Compares every element yielded by both `i` and `j` with…",N,[[["j"],["i"],["f"]],[[R[20],["diff"]],["diff"]]]],[5,R[62],E,R[32],N,[[["i"],["f"]],[R[64]]]],[5,"process_results",E,"“Lift” a function of the values of an iterator so that it…",N,[[["i"],["f"]],[R[4]]]],[5,"repeat_n",E,"Create an iterator that produces `n` repetitions of…",N,[[["a"],["usize"]],[R[527]]]],[5,"repeat_call",E,"An iterator source that produces elements indefinitely by…",N,[[["f"]],["repeatcall"]]],[5,"unfold",E,"Creates a new unfold source with the specified closure as…",N,[[["f"],["st"]],["unfold"]]],[5,R[94],E,"Creates a new iterator that infinitely applies function to…",N,[[["f"],["st"]],[R[94]]]],[5,"multizip",E,"An iterator that generalizes .zip() and allows running…",N,[[[U]],["zip"]]],[5,R[30],E,"Create an iterator that interleaves elements in `i` and `j`.",N,[[["j"],["i"]],[R[30]]]],[5,"merge",E,"Create an iterator that merges elements in `i` and `j`.",N,[[["j"],["i"]],["merge"]]],[5,R[41],E,"Create an iterator where you can put back a single item",N,[[["i"]],["putback"]]],[5,"put_back_n",E,"Create an iterator where you can put back multiple values…",N,[[["i"]],[R[93]]]],[5,R[31],E,"An iterator adaptor that allows the user to peek at…",N,[[["i"]],[R[31]]]],[5,"kmerge",E,R[32],N,[[["i"]],["kmerge"]]],[5,"zip_eq",E,R[34],N,[[["j"],["i"]],["zipeq"]]],[5,R[60],E,"Return an iterator adaptor that merge-joins items from the…",N,[[["j"],["i"],["f"]],[R[61]]]],[5,"rciter",E,"Return an iterator inside a `Rc<RefCell<_>>` wrapper.",N,[[["i"]],["rciter"]]],[5,R[33],E,"Iterate `iterable` with a running index.",N,[[["i"]],[R[33]]]],[5,"rev",E,"Iterate `iterable` in reverse.",N,[[["i"]],["rev"]]],[5,"zip",E,R[34],N,[[["j"],["i"]],["zip"]]],[5,"chain",E,"Create an iterator that first iterates `i` and then `j`.",N,[[["j"],["i"]],["chain"]]],[5,"cloned",E,"Create an iterator that clones each element from &T to T",N,[[["i"]],["cloned"]]],[5,"fold",E,"Perform a fold operation over the iterable.",N,[[["i"],["b"],["f"]],["b"]]],[5,"all",E,"Test whether the predicate holds for all elements in the…",N,[[["i"],["f"]],["bool"]]],[5,"any",E,"Test whether the predicate holds for any elements in the…",N,[[["i"],["f"]],["bool"]]],[5,"max",E,"Return the maximum value of the iterable.",N,[[["i"]],[R[20]]]],[5,"min",E,"Return the minimum value of the iterable.",N,[[["i"]],[R[20]]]],[5,"join",E,"Combine all iterator elements into one String, seperated…",N,[[["i"],["str"]],[R[83]]]],[5,"sorted",E,R[74],N,[[["i"]],[R[75]]]],[5,"equal",E,"Return `true` if both iterables produce equal sequences…",N,[[["j"],["i"]],["bool"]]],[5,"assert_equal",E,"Assert that two iterables produce equal sequences, with…",N,[[["j"],["i"]]]],[5,R[535],E,"Partition a sequence using predicate `pred` so that…",N,[[["i"],["f"]],["usize"]]],[0,"structs",E,"The concrete iterator types.",N,N],[3,"DedupBy",R[53],"An iterator adaptor that removes repeated duplicates,…",N,N],[3,R[131],E,"An iterator adaptor that alternates elements from two…",N,N],[3,R[132],E,"An iterator adaptor that alternates elements from the two…",N,N],[3,"Product",E,R[35],N,N],[3,"PutBack",E,"An iterator adaptor that allows putting back a single item…",N,N],[3,"Batching",E,R[57],N,N],[3,"MapInto",E,"An iterator adapter to apply `Into` conversion to each…",N,N],[3,R[133],E,"An iterator adapter to apply a transformation within a…",N,N],[3,"MergeBy",E,R[39],N,N],[3,R[134],E,"An iterator adaptor that borrows from a `Clone`-able…",N,N],[3,R[135],E,"An iterator adaptor that filters `Option<A>` iterator…",N,N],[3,"Coalesce",E,"An iterator adaptor that may join together adjacent…",N,N],[3,R[136],E,"An iterator to iterate through all combinations in a…",N,N],[3,R[137],E,"An iterator adapter to get the positions of each element…",N,N],[3,"Update",E,"An iterator adapter to apply a mutating function to each…",N,N],[3,"Step",E,"An iterator adaptor that steps a number elements in the…",N,N],[3,R[138],E,R[35],N,N],[3,R[139],E,"An iterator to iterate through all the `k`-length…",N,N],[3,R[140],E,"An iterator to iterate through all the `n`-length…",N,N],[3,R[141],E,"An iterator that maps an iterator of tuples like `((A, B),…",N,N],[3,R[142],E,"Iterator returned for the error case of…",N,N],[3,"Format",E,R[36],N,N],[3,R[143],E,R[36],N,N],[3,R[144],E,"`ChunkLazy` is the storage for a lazy chunking operation.",N,N],[3,"Chunk",E,"An iterator for the elements in a single chunk.",N,N],[3,"Chunks",E,"An iterator that yields the Chunk iterators.",N,N],[3,"GroupBy",E,"`GroupBy` is the storage for the lazy grouping operation.",N,N],[3,"Group",E,"An iterator for the elements in a single group.",N,N],[3,"Groups",E,"An iterator that yields the Group iterators.",N,N],[3,R[145],E,R[54],N,N],[3,"KMergeBy",E,R[40],N,N],[3,R[146],E,"An iterator adaptor that merge-joins items from the two…",N,N],[3,R[128],E,"See `multipeek()` for more information.",N,N],[3,"PadUsing",E,"An iterator adaptor that pads a sequence to a minimum…",N,N],[3,R[147],E,"An iterator adaptor that takes items while a closure…",N,N],[3,R[148],E,"An iterator adaptor that iterates through all the…",N,N],[3,R[149],E,"An iterator that produces only the `T` values as long as…",N,N],[3,"PutBackN",E,"An iterator adaptor that allows putting multiple items in…",N,N],[3,"RcIter",E,"A wrapper for `Rc<RefCell<I>>`, that implements the…",N,N],[12,"rciter",E,"The boxed iterator.",6,N],[3,"RepeatN",E,"An iterator that produces n repetitions of an element.",N,N],[3,R[150],E,"See `repeat_call` for more information.",N,N],[3,"Unfold",E,"See `unfold` for more information.",N,N],[12,"state",E,"Internal state that will be passed to the closure on the…",7,N],[3,"Iterate",E,"An iterator that infinitely applies function to value and…",N,N],[3,"Tee",E,"One half of an iterator pair where both return the same…",N,N],[3,R[151],E,"An iterator over a incomplete tuple.",N,N],[3,R[152],E,"An iterator over all contiguous windows that produces…",N,N],[3,"Tuples",E,"An iterator that groups the items in tuples of a specific…",N,N],[3,"Unique",E,R[37],N,N],[3,"UniqueBy",E,R[37],N,N],[3,R[153],E,"An iterator adaptor that wraps each element in an…",N,N],[3,"ZipEq",E,R[38],N,N],[3,R[154],E,R[38],N,N],[3,"Zip",E,"See `multizip` for more information.",N,N],[6,"Dedup",E,"An iterator adaptor that removes repeated duplicates.",N,N],[6,"Merge",E,R[39],N,N],[6,"KMerge",E,R[40],N,N],[11,"with_value",E,"put back value `value` (builder method)",8,[[],["self"]]],[11,"into_parts",E,"Split the `PutBack` into its parts.",8,[[]]],[11,R[41],E,"Put back a single value to the front of the iterator.",8,[[["self"]]]],[11,"has_left",R[42],"If `Left`, or `Both`, return true, otherwise, return false.",4,[[["self"]],["bool"]]],[11,"has_right",E,"If `Right`, or `Both`, return true, otherwise, return false.",4,[[["self"]],["bool"]]],[11,"is_left",E,"If Left, return true otherwise, return false. Exclusive…",4,[[["self"]],["bool"]]],[11,R[43],E,"If Right, return true otherwise, return false. Exclusive…",4,[[["self"]],["bool"]]],[11,"is_both",E,"If Right, return true otherwise, return false. Equivalent…",4,[[["self"]],["bool"]]],[11,"left",E,"If `Left`, or `Both`, return `Some` with the left value,…",4,[[],[R[20]]]],[11,"right",E,"If `Right`, or `Both`, return `Some` with the right value,…",4,[[],[R[20]]]],[11,"both",E,"If Both, return `Some` tuple containing left and right.",4,[[],[R[20]]]],[11,R[44],E,"Converts from `&EitherOrBoth<A, B>` to `EitherOrBoth<&A,…",4,[[["self"]],[["b"],[R[46]],["a"]]]],[11,R[45],E,"Converts from `&mut EitherOrBoth<A, B>` to…",4,[[["self"]],[["a"],[R[46]],["b"]]]],[11,"flip",E,"Convert `EitherOrBoth<A, B>` to `EitherOrBoth<B, A>`.",4,[[],[R[46]]]],[11,R[47],E,R[52],4,[[["f"]],[R[46]]]],[11,R[48],E,R[50],4,[[["f"]],[R[46]]]],[11,"map_any",E,"Apply the functions `f` and `g` on the value `a` and `b`…",4,[[["f"],["g"]],[R[46]]]],[11,R[49],E,R[50],4,[[["f"]],[R[46]]]],[11,R[51],E,R[52],4,[[["f"]],[R[46]]]],[11,"reduce",E,"Return either value of left, right, or the product of `f`…",4,[[["f"]],[T]]],[11,"into_option",E,"`into_option` creates an `Option` of type `(T, T)`. The…",2,[[],[R[20]]]],[11,"reset_peek",R[53],"Reset the peeking “cursor”",9,[[["self"]]]],[11,"peek",E,"Works exactly like `.next()` with the only difference that…",9,[[["self"]],[R[20]]]],[11,R[41],E,"Puts x in front of the iterator. The values are yielded in…",10,[[["self"]]]],[11,"into_buffer",E,"Return a buffer with the produced items that was not…",11,[[],["tuplebuffer"]]],[11,R[21],R[42],"Return the inner value.",3,[[],[T]]],[8,R[129],E,"An iterator that allows peeking at an element before…",N,N],[10,R[87],E,"Pass a reference to the next iterator element to the…",12,[[["self"],["f"]],[R[20]]]],[8,R[130],E,"An [`Iterator`] blanket implementation that provides extra…",N,N],[11,R[30],E,"Alternate elements from two iterators until both have run…",13,[[["j"]],[R[30]]]],[11,R[538],E,"Alternate elements from two iterators until at least one…",13,[[["j"]],[R[89]]]],[11,R[55],E,R[54],13,[[],[R[55]]]],[11,"zip_longest",E,R[56],13,[[["j"]],[R[96]]]],[11,"zip_eq",E,R[56],13,[[["j"]],["zipeq"]]],[11,R[58],E,R[57],13,[[["f"]],[R[58]]]],[11,"group_by",E,"Return an iterable that can group iterator elements.…",13,[[["f"]],["groupby"]]],[11,"chunks",E,"Return an iterable that can chunk the iterator.",13,[[["usize"]],["intochunks"]]],[11,"tuple_windows",E,"Return an iterator over all contiguous windows producing…",13,[[],["tuplewindows"]]],[11,"tuples",E,"Return an iterator that groups the items in tuples of a…",13,[[],["tuples"]]],[11,"tee",E,"Split into an iterator pair that both yield all elements…",13,[[]]],[11,"step",E,"Return an iterator adaptor that steps `n` elements in the…",13,[[["usize"]],["step"]]],[11,"map_into",E,"Convert each item of the iterator using the `Into` trait.",13,[[],["mapinto"]]],[11,"map_results",E,"Return an iterator adaptor that applies the provided…",13,[[["f"]],["mapresults"]]],[11,"merge",E,R[59],13,[[["j"]],["merge"]]],[11,"merge_by",E,R[59],13,[[["j"],["f"]],["mergeby"]]],[11,R[60],E,"Create an iterator that merges items from both this and…",13,[[["j"],["f"]],[R[61]]]],[11,"kmerge",E,R[63],13,[[],["kmerge"]]],[11,R[62],E,R[63],13,[[["f"]],[R[64]]]],[11,"cartesian_product",E,R[65],13,[[["j"]],[R[531]]]],[11,"multi_cartesian_product",E,R[65],13,[[],[R[88]]]],[11,R[66],E,"Return an iterator adaptor that uses the passed-in closure…",13,[[["f"]],[R[66]]]],[11,"dedup",E,R[67],13,[[],["dedup"]]],[11,"dedup_by",E,R[67],13,[[["cmp"]],["dedupby"]]],[11,"unique",E,R[68],13,[[],["unique"]]],[11,"unique_by",E,R[68],13,[[["f"]],[R[95]]]],[11,"peeking_take_while",E,"Return an iterator adaptor that borrows from this iterator…",13,[[["self"],["f"]],["peekingtakewhile"]]],[11,"take_while_ref",E,"Return an iterator adaptor that borrows from a…",13,[[["self"],["f"]],["takewhileref"]]],[11,R[534],E,"Return an iterator adaptor that filters `Option<A>`…",13,[[],[R[90]]]],[11,"tuple_combinations",E,R[65],13,[[],["tuplecombinations"]]],[11,R[69],E,R[65],13,[[["usize"]],[R[69]]]],[11,"combinations_with_replacement",E,"Return an iterator that iterates over the `k`-length…",13,[[["usize"]],[R[91]]]],[11,R[70],E,"Return an iterator adaptor that iterates over all…",13,[[["usize"]],[R[70]]]],[11,"pad_using",E,"Return an iterator adaptor that pads the sequence to a…",13,[[["usize"],["f"]],[R[92]]]],[11,"with_position",E,"Return an iterator adaptor that wraps each element in a…",13,[[],["withposition"]]],[11,R[71],E,"Return an iterator adaptor that yields the indices of all…",13,[[["p"]],[R[71]]]],[11,"update",E,"Return an iterator adaptor that applies a mutating…",13,[[["f"]],["update"]]],[11,"next_tuple",E,"Advances the iterator and returns the next items grouped…",13,[[["self"]],[R[20]]]],[11,"collect_tuple",E,"Collects all items from the iterator into a tuple of a…",13,[[],[R[20]]]],[11,"find_position",E,"Find the position and value of the first element…",13,[[["self"],["p"]],[R[20]]]],[11,"all_equal",E,"Check whether all elements compare equal.",13,[[["self"]],["bool"]]],[11,"dropping",E,"Consume the first `n` elements from the iterator eagerly,…",13,[[["usize"]],["self"]]],[11,"dropping_back",E,"Consume the last `n` elements from the iterator eagerly,…",13,[[["usize"]],["self"]]],[11,"foreach",E,"Run the closure `f` eagerly on each element of the iterator.",13,[[["f"]]]],[11,"concat",E,R[72],13,[[]]],[11,"collect_vec",E,"`.collect_vec()` is simply a type specialization of…",13,[[],["vec"]]],[11,"set_from",E,"Assign to each reference in `self` from the `from`…",13,[[["self"],["j"]],["usize"]]],[11,"join",E,"Combine all iterator elements into one String, separated…",13,[[["self"],["str"]],[R[83]]]],[11,"format",E,R[73],13,[[["str"]],["format"]]],[11,"format_with",E,R[73],13,[[["str"],["f"]],["formatwith"]]],[11,"fold_results",E,"Fold `Result` values from an iterator.",13,[[["self"],["b"],["f"]],[R[4]]]],[11,"fold_options",E,"Fold `Option` values from an iterator.",13,[[["self"],["b"],["f"]],[R[20]]]],[11,"fold1",E,"Accumulator of the elements in the iterator.",13,[[["f"]],[R[20]]]],[11,"tree_fold1",E,"Accumulate the elements in the iterator in a tree-like…",13,[[["f"]],[R[20]]]],[11,R[663],E,"An iterator method that applies a function, producing a…",13,[[["self"],["b"],["f"]],[R[97]]]],[11,"sum1",E,"Iterate over the entire iterator and add all the elements.",13,[[],[R[20]]]],[11,"product1",E,"Iterate over the entire iterator and multiply all the…",13,[[],[R[20]]]],[11,"sorted",E,R[74],13,[[],[R[75]]]],[11,"sorted_by",E,R[74],13,[[["f"]],[R[75]]]],[11,"sorted_by_key",E,R[74],13,[[["f"]],[R[75]]]],[11,R[536],E,"Collect all iterator elements into one of two partitions.…",13,[[["f"]]]],[11,"into_group_map",E,"Return a `HashMap` of keys mapped to `Vec`s of values.…",13,[[],[["hashmap",["vec"]],["vec"]]]],[11,"minmax",E,"Return the minimum and maximum elements in the iterator.",13,[[],[R[76]]]],[11,"minmax_by_key",E,R[77],13,[[["f"]],[R[76]]]],[11,"minmax_by",E,R[77],13,[[["f"]],[R[76]]]],[11,"exactly_one",E,"If the iterator yields exactly one element, that element…",13,[[],[[R[78]],[R[4],[R[78]]]]]],[11,R[21],E,"Return the value in the continue or done.",5,[[],[T]]],[11,"is_done",E,"Return true if `self` is `Done`, false if it is `Continue`.",5,[[["self"]],["bool"]]],[14,"iproduct",E,"Create an iterator over the “cartesian product” of…",N,N],[14,"izip",E,"Create an iterator running multiple iterators in lockstep.",N,N],[11,R[79],E,E,0,[[["self"]],[T]]],[11,R[80],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,R[18],E,E,0,[[],["i"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[82],E,E,0,[[["self"]],[R[83]]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[81]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[5],E,E,1,[[[U]],[R[4]]]],[11,R[6],E,E,1,[[],[R[4]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[R[81]]]],[11,R[79],E,E,2,[[["self"]],[T]]],[11,R[80],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[5],E,E,2,[[[U]],[R[4]]]],[11,R[6],E,E,2,[[],[R[4]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[R[81]]]],[11,R[79],E,E,3,[[["self"]],[T]]],[11,R[80],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[5],E,E,3,[[[U]],[R[4]]]],[11,R[6],E,E,3,[[],[R[4]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[R[81]]]],[11,R[79],E,E,4,[[["self"]],[T]]],[11,R[80],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[5],E,E,4,[[[U]],[R[4]]]],[11,R[6],E,E,4,[[],[R[4]]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[R[81]]]],[11,R[79],E,E,5,[[["self"]],[T]]],[11,R[80],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[5],E,E,5,[[[U]],[R[4]]]],[11,R[6],E,E,5,[[],[R[4]]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[R[81]]]],[11,R[79],R[53],E,14,[[["self"]],[T]]],[11,R[80],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,R[18],E,E,14,[[],["i"]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[5],E,E,14,[[[U]],[R[4]]]],[11,R[6],E,E,14,[[],[R[4]]]],[11,R[8],E,E,14,[[["self"]],[T]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[R[81]]]],[11,R[79],E,E,15,[[["self"]],[T]]],[11,R[80],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,R[18],E,E,15,[[],["i"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[5],E,E,15,[[[U]],[R[4]]]],[11,R[6],E,E,15,[[],[R[4]]]],[11,R[8],E,E,15,[[["self"]],[T]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[["self"]],[R[81]]]],[11,R[79],E,E,16,[[["self"]],[T]]],[11,R[80],E,E,16,[[["self"],[T]]]],[11,"into",E,E,16,[[],[U]]],[11,R[18],E,E,16,[[],["i"]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[5],E,E,16,[[[U]],[R[4]]]],[11,R[6],E,E,16,[[],[R[4]]]],[11,R[8],E,E,16,[[["self"]],[T]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[9],E,E,16,[[["self"]],[R[81]]]],[11,R[79],E,E,17,[[["self"]],[T]]],[11,R[80],E,E,17,[[["self"],[T]]]],[11,"into",E,E,17,[[],[U]]],[11,R[18],E,E,17,[[],["i"]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[5],E,E,17,[[[U]],[R[4]]]],[11,R[6],E,E,17,[[],[R[4]]]],[11,R[8],E,E,17,[[["self"]],[T]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[["self"]],[R[81]]]],[11,R[79],E,E,8,[[["self"]],[T]]],[11,R[80],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,R[18],E,E,8,[[],["i"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[5],E,E,8,[[[U]],[R[4]]]],[11,R[6],E,E,8,[[],[R[4]]]],[11,R[8],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[R[81]]]],[11,R[79],E,E,18,[[["self"]],[T]]],[11,R[80],E,E,18,[[["self"],[T]]]],[11,"into",E,E,18,[[],[U]]],[11,R[18],E,E,18,[[],["i"]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[5],E,E,18,[[[U]],[R[4]]]],[11,R[6],E,E,18,[[],[R[4]]]],[11,R[8],E,E,18,[[["self"]],[T]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[9],E,E,18,[[["self"]],[R[81]]]],[11,"into",E,E,19,[[],[U]]],[11,R[18],E,E,19,[[],["i"]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[5],E,E,19,[[[U]],[R[4]]]],[11,R[6],E,E,19,[[],[R[4]]]],[11,R[8],E,E,19,[[["self"]],[T]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[9],E,E,19,[[["self"]],[R[81]]]],[11,"into",E,E,20,[[],[U]]],[11,R[18],E,E,20,[[],["i"]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[5],E,E,20,[[[U]],[R[4]]]],[11,R[6],E,E,20,[[],[R[4]]]],[11,R[8],E,E,20,[[["self"]],[T]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[["self"]],[R[81]]]],[11,R[79],E,E,21,[[["self"]],[T]]],[11,R[80],E,E,21,[[["self"],[T]]]],[11,"into",E,E,21,[[],[U]]],[11,R[18],E,E,21,[[],["i"]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[5],E,E,21,[[[U]],[R[4]]]],[11,R[6],E,E,21,[[],[R[4]]]],[11,R[8],E,E,21,[[["self"]],[T]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[["self"]],[R[81]]]],[11,"into",E,E,22,[[],[U]]],[11,R[18],E,E,22,[[],["i"]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[5],E,E,22,[[[U]],[R[4]]]],[11,R[6],E,E,22,[[],[R[4]]]],[11,R[8],E,E,22,[[["self"]],[T]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[["self"]],[R[81]]]],[11,R[79],E,E,23,[[["self"]],[T]]],[11,R[80],E,E,23,[[["self"],[T]]]],[11,"into",E,E,23,[[],[U]]],[11,R[18],E,E,23,[[],["i"]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[5],E,E,23,[[[U]],[R[4]]]],[11,R[6],E,E,23,[[],[R[4]]]],[11,R[8],E,E,23,[[["self"]],[T]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[["self"]],[R[81]]]],[11,R[79],E,E,24,[[["self"]],[T]]],[11,R[80],E,E,24,[[["self"],[T]]]],[11,"into",E,E,24,[[],[U]]],[11,R[18],E,E,24,[[],["i"]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[5],E,E,24,[[[U]],[R[4]]]],[11,R[6],E,E,24,[[],[R[4]]]],[11,R[8],E,E,24,[[["self"]],[T]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[["self"]],[R[81]]]],[11,"into",E,E,25,[[],[U]]],[11,R[18],E,E,25,[[],["i"]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[5],E,E,25,[[[U]],[R[4]]]],[11,R[6],E,E,25,[[],[R[4]]]],[11,R[8],E,E,25,[[["self"]],[T]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[["self"]],[R[81]]]],[11,"into",E,E,26,[[],[U]]],[11,R[18],E,E,26,[[],["i"]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[5],E,E,26,[[[U]],[R[4]]]],[11,R[6],E,E,26,[[],[R[4]]]],[11,R[8],E,E,26,[[["self"]],[T]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[9],E,E,26,[[["self"]],[R[81]]]],[11,"into",E,E,27,[[],[U]]],[11,R[18],E,E,27,[[],["i"]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[5],E,E,27,[[[U]],[R[4]]]],[11,R[6],E,E,27,[[],[R[4]]]],[11,R[8],E,E,27,[[["self"]],[T]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[["self"]],[R[81]]]],[11,R[79],E,E,28,[[["self"]],[T]]],[11,R[80],E,E,28,[[["self"],[T]]]],[11,"into",E,E,28,[[],[U]]],[11,R[18],E,E,28,[[],["i"]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[5],E,E,28,[[[U]],[R[4]]]],[11,R[6],E,E,28,[[],[R[4]]]],[11,R[8],E,E,28,[[["self"]],[T]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[["self"]],[R[81]]]],[11,R[79],E,E,29,[[["self"]],[T]]],[11,R[80],E,E,29,[[["self"],[T]]]],[11,"into",E,E,29,[[],[U]]],[11,R[18],E,E,29,[[],["i"]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[5],E,E,29,[[[U]],[R[4]]]],[11,R[6],E,E,29,[[],[R[4]]]],[11,R[8],E,E,29,[[["self"]],[T]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[["self"]],[R[81]]]],[11,"into",E,E,30,[[],[U]]],[11,R[18],E,E,30,[[],["i"]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[5],E,E,30,[[[U]],[R[4]]]],[11,R[6],E,E,30,[[],[R[4]]]],[11,R[8],E,E,30,[[["self"]],[T]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[["self"]],[R[81]]]],[11,R[79],E,E,31,[[["self"]],[T]]],[11,R[80],E,E,31,[[["self"],[T]]]],[11,"into",E,E,31,[[],[U]]],[11,R[18],E,E,31,[[],["i"]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[5],E,E,31,[[[U]],[R[4]]]],[11,R[6],E,E,31,[[],[R[4]]]],[11,R[8],E,E,31,[[["self"]],[T]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[["self"]],[R[81]]]],[11,R[79],E,E,32,[[["self"]],[T]]],[11,R[80],E,E,32,[[["self"],[T]]]],[11,"into",E,E,32,[[],[U]]],[11,R[18],E,E,32,[[],["i"]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[5],E,E,32,[[[U]],[R[4]]]],[11,R[6],E,E,32,[[],[R[4]]]],[11,R[8],E,E,32,[[["self"]],[T]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[["self"]],[R[81]]]],[11,R[79],E,E,33,[[["self"]],[T]]],[11,R[80],E,E,33,[[["self"],[T]]]],[11,"into",E,E,33,[[],[U]]],[11,R[18],E,E,33,[[],["i"]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[5],E,E,33,[[[U]],[R[4]]]],[11,R[6],E,E,33,[[],[R[4]]]],[11,R[8],E,E,33,[[["self"]],[T]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[["self"]],[R[81]]]],[11,R[79],E,E,34,[[["self"]],[T]]],[11,R[80],E,E,34,[[["self"],[T]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[82],E,E,34,[[["self"]],[R[83]]]],[11,R[5],E,E,34,[[[U]],[R[4]]]],[11,R[6],E,E,34,[[],[R[4]]]],[11,R[8],E,E,34,[[["self"]],[T]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[9],E,E,34,[[["self"]],[R[81]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[82],E,E,35,[[["self"]],[R[83]]]],[11,R[5],E,E,35,[[[U]],[R[4]]]],[11,R[6],E,E,35,[[],[R[4]]]],[11,R[8],E,E,35,[[["self"]],[T]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[9],E,E,35,[[["self"]],[R[81]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[5],E,E,36,[[[U]],[R[4]]]],[11,R[6],E,E,36,[[],[R[4]]]],[11,R[8],E,E,36,[[["self"]],[T]]],[11,R[7],E,E,36,[[["self"]],[T]]],[11,R[9],E,E,36,[[["self"]],[R[81]]]],[11,"into",E,E,37,[[],[U]]],[11,R[18],E,E,37,[[],["i"]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[5],E,E,37,[[[U]],[R[4]]]],[11,R[6],E,E,37,[[],[R[4]]]],[11,R[8],E,E,37,[[["self"]],[T]]],[11,R[7],E,E,37,[[["self"]],[T]]],[11,R[9],E,E,37,[[["self"]],[R[81]]]],[11,"into",E,E,38,[[],[U]]],[11,R[18],E,E,38,[[],["i"]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[5],E,E,38,[[[U]],[R[4]]]],[11,R[6],E,E,38,[[],[R[4]]]],[11,R[8],E,E,38,[[["self"]],[T]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[9],E,E,38,[[["self"]],[R[81]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[5],E,E,39,[[[U]],[R[4]]]],[11,R[6],E,E,39,[[],[R[4]]]],[11,R[8],E,E,39,[[["self"]],[T]]],[11,R[7],E,E,39,[[["self"]],[T]]],[11,R[9],E,E,39,[[["self"]],[R[81]]]],[11,"into",E,E,40,[[],[U]]],[11,R[18],E,E,40,[[],["i"]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[5],E,E,40,[[[U]],[R[4]]]],[11,R[6],E,E,40,[[],[R[4]]]],[11,R[8],E,E,40,[[["self"]],[T]]],[11,R[7],E,E,40,[[["self"]],[T]]],[11,R[9],E,E,40,[[["self"]],[R[81]]]],[11,"into",E,E,41,[[],[U]]],[11,R[18],E,E,41,[[],["i"]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[5],E,E,41,[[[U]],[R[4]]]],[11,R[6],E,E,41,[[],[R[4]]]],[11,R[8],E,E,41,[[["self"]],[T]]],[11,R[7],E,E,41,[[["self"]],[T]]],[11,R[9],E,E,41,[[["self"]],[R[81]]]],[11,R[79],E,E,42,[[["self"]],[T]]],[11,R[80],E,E,42,[[["self"],[T]]]],[11,"into",E,E,42,[[],[U]]],[11,R[18],E,E,42,[[],["i"]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[5],E,E,42,[[[U]],[R[4]]]],[11,R[6],E,E,42,[[],[R[4]]]],[11,R[8],E,E,42,[[["self"]],[T]]],[11,R[7],E,E,42,[[["self"]],[T]]],[11,R[9],E,E,42,[[["self"]],[R[81]]]],[11,R[79],E,E,43,[[["self"]],[T]]],[11,R[80],E,E,43,[[["self"],[T]]]],[11,"into",E,E,43,[[],[U]]],[11,R[18],E,E,43,[[],["i"]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[5],E,E,43,[[[U]],[R[4]]]],[11,R[6],E,E,43,[[],[R[4]]]],[11,R[8],E,E,43,[[["self"]],[T]]],[11,R[7],E,E,43,[[["self"]],[T]]],[11,R[9],E,E,43,[[["self"]],[R[81]]]],[11,"into",E,E,44,[[],[U]]],[11,R[18],E,E,44,[[],["i"]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[5],E,E,44,[[[U]],[R[4]]]],[11,R[6],E,E,44,[[],[R[4]]]],[11,R[8],E,E,44,[[["self"]],[T]]],[11,R[7],E,E,44,[[["self"]],[T]]],[11,R[9],E,E,44,[[["self"]],[R[81]]]],[11,R[79],E,E,9,[[["self"]],[T]]],[11,R[80],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,R[18],E,E,9,[[],["i"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[5],E,E,9,[[[U]],[R[4]]]],[11,R[6],E,E,9,[[],[R[4]]]],[11,R[8],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[R[81]]]],[11,R[79],E,E,45,[[["self"]],[T]]],[11,R[80],E,E,45,[[["self"],[T]]]],[11,"into",E,E,45,[[],[U]]],[11,R[18],E,E,45,[[],["i"]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[5],E,E,45,[[[U]],[R[4]]]],[11,R[6],E,E,45,[[],[R[4]]]],[11,R[8],E,E,45,[[["self"]],[T]]],[11,R[7],E,E,45,[[["self"]],[T]]],[11,R[9],E,E,45,[[["self"]],[R[81]]]],[11,"into",E,E,46,[[],[U]]],[11,R[18],E,E,46,[[],["i"]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[5],E,E,46,[[[U]],[R[4]]]],[11,R[6],E,E,46,[[],[R[4]]]],[11,R[8],E,E,46,[[["self"]],[T]]],[11,R[7],E,E,46,[[["self"]],[T]]],[11,R[9],E,E,46,[[["self"]],[R[81]]]],[11,"into",E,E,47,[[],[U]]],[11,R[18],E,E,47,[[],["i"]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[5],E,E,47,[[[U]],[R[4]]]],[11,R[6],E,E,47,[[],[R[4]]]],[11,R[8],E,E,47,[[["self"]],[T]]],[11,R[7],E,E,47,[[["self"]],[T]]],[11,R[9],E,E,47,[[["self"]],[R[81]]]],[11,"into",E,E,48,[[],[U]]],[11,R[18],E,E,48,[[],["i"]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[5],E,E,48,[[[U]],[R[4]]]],[11,R[6],E,E,48,[[],[R[4]]]],[11,R[8],E,E,48,[[["self"]],[T]]],[11,R[7],E,E,48,[[["self"]],[T]]],[11,R[9],E,E,48,[[["self"]],[R[81]]]],[11,R[79],E,E,10,[[["self"]],[T]]],[11,R[80],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,R[18],E,E,10,[[],["i"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[5],E,E,10,[[[U]],[R[4]]]],[11,R[6],E,E,10,[[],[R[4]]]],[11,R[8],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[R[81]]]],[11,R[79],E,E,6,[[["self"]],[T]]],[11,R[80],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,R[18],E,E,6,[[],["i"]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[5],E,E,6,[[[U]],[R[4]]]],[11,R[6],E,E,6,[[],[R[4]]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[R[81]]]],[11,"into",E,E,49,[[],[U]]],[11,R[18],E,E,49,[[],["i"]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[5],E,E,49,[[[U]],[R[4]]]],[11,R[6],E,E,49,[[],[R[4]]]],[11,R[8],E,E,49,[[["self"]],[T]]],[11,R[7],E,E,49,[[["self"]],[T]]],[11,R[9],E,E,49,[[["self"]],[R[81]]]],[11,"into",E,E,50,[[],[U]]],[11,R[18],E,E,50,[[],["i"]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[5],E,E,50,[[[U]],[R[4]]]],[11,R[6],E,E,50,[[],[R[4]]]],[11,R[8],E,E,50,[[["self"]],[T]]],[11,R[7],E,E,50,[[["self"]],[T]]],[11,R[9],E,E,50,[[["self"]],[R[81]]]],[11,R[79],E,E,7,[[["self"]],[T]]],[11,R[80],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,R[18],E,E,7,[[],["i"]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[5],E,E,7,[[[U]],[R[4]]]],[11,R[6],E,E,7,[[],[R[4]]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[R[81]]]],[11,R[79],E,E,51,[[["self"]],[T]]],[11,R[80],E,E,51,[[["self"],[T]]]],[11,"into",E,E,51,[[],[U]]],[11,R[18],E,E,51,[[],["i"]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[5],E,E,51,[[[U]],[R[4]]]],[11,R[6],E,E,51,[[],[R[4]]]],[11,R[8],E,E,51,[[["self"]],[T]]],[11,R[7],E,E,51,[[["self"]],[T]]],[11,R[9],E,E,51,[[["self"]],[R[81]]]],[11,"into",E,E,52,[[],[U]]],[11,R[18],E,E,52,[[],["i"]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[5],E,E,52,[[[U]],[R[4]]]],[11,R[6],E,E,52,[[],[R[4]]]],[11,R[8],E,E,52,[[["self"]],[T]]],[11,R[7],E,E,52,[[["self"]],[T]]],[11,R[9],E,E,52,[[["self"]],[R[81]]]],[11,"into",E,E,53,[[],[U]]],[11,R[18],E,E,53,[[],["i"]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[5],E,E,53,[[[U]],[R[4]]]],[11,R[6],E,E,53,[[],[R[4]]]],[11,R[8],E,E,53,[[["self"]],[T]]],[11,R[7],E,E,53,[[["self"]],[T]]],[11,R[9],E,E,53,[[["self"]],[R[81]]]],[11,"into",E,E,54,[[],[U]]],[11,R[18],E,E,54,[[],["i"]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[5],E,E,54,[[[U]],[R[4]]]],[11,R[6],E,E,54,[[],[R[4]]]],[11,R[8],E,E,54,[[["self"]],[T]]],[11,R[7],E,E,54,[[["self"]],[T]]],[11,R[9],E,E,54,[[["self"]],[R[81]]]],[11,"into",E,E,11,[[],[U]]],[11,R[18],E,E,11,[[],["i"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[5],E,E,11,[[[U]],[R[4]]]],[11,R[6],E,E,11,[[],[R[4]]]],[11,R[8],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[R[81]]]],[11,R[79],E,E,55,[[["self"]],[T]]],[11,R[80],E,E,55,[[["self"],[T]]]],[11,"into",E,E,55,[[],[U]]],[11,R[18],E,E,55,[[],["i"]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[5],E,E,55,[[[U]],[R[4]]]],[11,R[6],E,E,55,[[],[R[4]]]],[11,R[8],E,E,55,[[["self"]],[T]]],[11,R[7],E,E,55,[[["self"]],[T]]],[11,R[9],E,E,55,[[["self"]],[R[81]]]],[11,R[79],E,E,56,[[["self"]],[T]]],[11,R[80],E,E,56,[[["self"],[T]]]],[11,"into",E,E,56,[[],[U]]],[11,R[18],E,E,56,[[],["i"]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[5],E,E,56,[[[U]],[R[4]]]],[11,R[6],E,E,56,[[],[R[4]]]],[11,R[8],E,E,56,[[["self"]],[T]]],[11,R[7],E,E,56,[[["self"]],[T]]],[11,R[9],E,E,56,[[["self"]],[R[81]]]],[11,"into",E,E,57,[[],[U]]],[11,R[18],E,E,57,[[],["i"]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[5],E,E,57,[[[U]],[R[4]]]],[11,R[6],E,E,57,[[],[R[4]]]],[11,R[8],E,E,57,[[["self"]],[T]]],[11,R[7],E,E,57,[[["self"]],[T]]],[11,R[9],E,E,57,[[["self"]],[R[81]]]],[11,R[79],E,E,58,[[["self"]],[T]]],[11,R[80],E,E,58,[[["self"],[T]]]],[11,"into",E,E,58,[[],[U]]],[11,R[18],E,E,58,[[],["i"]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[5],E,E,58,[[[U]],[R[4]]]],[11,R[6],E,E,58,[[],[R[4]]]],[11,R[8],E,E,58,[[["self"]],[T]]],[11,R[7],E,E,58,[[["self"]],[T]]],[11,R[9],E,E,58,[[["self"]],[R[81]]]],[11,R[79],E,E,59,[[["self"]],[T]]],[11,R[80],E,E,59,[[["self"],[T]]]],[11,"into",E,E,59,[[],[U]]],[11,R[18],E,E,59,[[],["i"]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[5],E,E,59,[[[U]],[R[4]]]],[11,R[6],E,E,59,[[],[R[4]]]],[11,R[8],E,E,59,[[["self"]],[T]]],[11,R[7],E,E,59,[[["self"]],[T]]],[11,R[9],E,E,59,[[["self"]],[R[81]]]],[11,R[79],E,E,60,[[["self"]],[T]]],[11,R[80],E,E,60,[[["self"],[T]]]],[11,"into",E,E,60,[[],[U]]],[11,R[18],E,E,60,[[],["i"]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[5],E,E,60,[[[U]],[R[4]]]],[11,R[6],E,E,60,[[],[R[4]]]],[11,R[8],E,E,60,[[["self"]],[T]]],[11,R[7],E,E,60,[[["self"]],[T]]],[11,R[9],E,E,60,[[["self"]],[R[81]]]],[11,"into",R[42],E,0,[[],[R[4]]]],[11,"eq",E,E,0,[[["self"],[R[14]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[14]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[[R[4],["error"]],["error"]]]],[11,R[84],E,E,0,[[["self"]],[R[20]]]],[11,R[44],E,E,0,[[["self"]]]],[11,R[44],E,E,0,[[["self"]],["target"]]],[11,R[44],E,E,0,[[["self"]],["str"]]],[11,"next",E,E,0,[[["self"]],[R[20]]]],[11,R[85],E,E,0,[[["self"]]]],[11,"fold",E,E,0,[[["acc"],["g"]],["acc"]]],[11,"count",E,E,0,[[],["usize"]]],[11,"last",E,E,0,[[],[R[20]]]],[11,"nth",E,E,0,[[["self"],["usize"]],[R[20]]]],[11,R[99],E,E,0,[[],["b"]]],[11,"all",E,E,0,[[["self"],["f"]],["bool"]]],[11,R[86],E,E,0,[[["self"],[R[14]]],[[R[19]],[R[20],[R[19]]]]]],[11,"lt",E,E,0,[[["self"],[R[14]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[14]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[14]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[14]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[[R[4],["error"]],["error"]]]],[11,R[45],E,E,0,[[["self"]],["str"]]],[11,R[45],E,E,0,[[["self"]]]],[11,R[45],E,E,0,[[["self"]],["target"]]],[11,"deref",E,E,0,[[["self"]]]],[11,"from",E,E,0,[[[R[4]]],[R[14]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,R[22],E,E,0,[[["self"]]]],[11,"cmp",E,E,0,[[["self"],[R[14]]],[R[19]]]],[11,"clone",E,E,0,[[["self"]],[R[14]]]],[11,"extend",E,E,0,[[["self"],[T]]]],[11,R[87],R[53],E,9,[[["self"],["f"]],[R[20]]]],[11,R[87],E,E,8,[[["self"],["f"]],[R[20]]]],[11,R[87],E,E,10,[[["self"],["f"]],[R[20]]]],[11,"drop",E,E,40,[[["self"]]]],[11,"drop",E,E,37,[[["self"]]]],[11,"into",R[42],E,4,[[],[[R[14]],[R[20],[R[14]]]]]],[11,"clone",R[53],E,29,[[["self"]],[R[88]]]],[11,"clone",E,E,15,[[["self"]],[R[30]]]],[11,"clone",E,E,16,[[["self"]],[R[89]]]],[11,"clone",E,E,8,[[["self"]],["putback"]]],[11,"clone",E,E,17,[[["self"]],[R[531]]]],[11,"clone",E,E,18,[[["self"]],[R[58]]]],[11,"clone",E,E,28,[[["self"]],["step"]]],[11,"clone",E,E,21,[[["self"]],["self"]]],[11,"clone",E,E,24,[[["self"]],["self"]]],[11,"clone",E,E,14,[[["self"]],["self"]]],[11,"clone",E,E,23,[[["self"]],[R[90]]]],[11,"clone",R[42],E,4,[[["self"]],[R[46]]]],[11,"clone",R[53],E,32,[[["self"]],["self"]]],[11,"clone",E,E,31,[[["self"]],[R[91]]]],[11,"clone",E,E,33,[[["self"]],[R[78]]]],[11,"clone",E,E,34,[[["self"]],["format"]]],[11,"clone",E,E,42,[[["self"]],[R[55]]]],[11,"clone",E,E,43,[[["self"]],[R[64]]]],[11,"clone",R[42],E,2,[[["self"]],[R[76]]]],[11,"clone",R[53],E,9,[[["self"]],[R[31]]]],[11,"clone",E,E,45,[[["self"]],[R[92]]]],[11,"clone",E,E,10,[[["self"]],[R[93]]]],[11,"clone",E,E,6,[[["self"]],["rciter"]]],[11,"clone",E,E,7,[[["self"]],["unfold"]]],[11,"clone",E,E,51,[[["self"]],[R[94]]]],[11,"clone",E,E,56,[[["self"]],[R[95]]]],[11,"clone",E,E,55,[[["self"]],["unique"]]],[11,"clone",R[42],E,3,[[["self"]],[R[98]]]],[11,"clone",R[53],E,58,[[["self"]],["zipeq"]]],[11,"clone",E,E,59,[[["self"]],[R[96]]]],[11,"clone",E,E,60,[[["self"]],["zip"]]],[11,"clone",R[42],E,5,[[["self"]],[R[97]]]],[11,R[84],R[53],E,19,[[["self"]],[R[20]]]],[11,R[84],E,E,26,[[["self"]],[R[20]]]],[11,R[84],E,E,27,[[["self"]],[R[20]]]],[11,R[84],E,E,32,[[["self"]],[R[20]]]],[11,R[84],E,E,32,[[["self"]],[R[20]]]],[11,R[84],E,E,32,[[["self"]],[R[20]]]],[11,R[84],E,E,32,[[["self"]],[R[20]]]],[11,R[84],E,E,32,[[["self"]],[R[20]]]],[11,R[84],E,E,32,[[["self"]],[R[20]]]],[11,R[84],E,E,45,[[["self"]],[R[20]]]],[11,R[84],E,E,6,[[["self"]],[R[20]]]],[11,R[84],E,E,49,[[["self"]],[R[20]]]],[11,R[84],E,E,59,[[["self"]],[R[20]]]],[11,"eq",R[42],E,4,[[["self"],[R[46]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[46]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[76]]],["bool"]]],[11,"ne",E,E,2,[[["self"],[R[76]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[98]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[98]]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[97]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[97]]],["bool"]]],[11,"from",R[53],E,60,[[],["self"]]],[11,"from",E,E,60,[[],["self"]]],[11,"from",E,E,60,[[],["self"]]],[11,"from",E,E,60,[[],["self"]]],[11,"from",E,E,60,[[],["self"]]],[11,"from",E,E,60,[[],["self"]]],[11,"from",E,E,60,[[],["self"]]],[11,"from",E,E,60,[[],["self"]]],[11,"next",E,E,29,[[["self"]],[R[20]]]],[11,"count",E,E,29,[[],["usize"]]],[11,R[85],E,E,29,[[["self"]]]],[11,"last",E,E,29,[[],[R[20]]]],[11,"next",E,E,15,[[["self"]],[R[20]]]],[11,R[85],E,E,15,[[["self"]]]],[11,"next",E,E,16,[[["self"]],[R[20]]]],[11,R[85],E,E,16,[[["self"]]]],[11,"next",E,E,8,[[["self"]],[R[20]]]],[11,R[85],E,E,8,[[["self"]]]],[11,"all",E,E,8,[[["self"],["g"]],["bool"]]],[11,"fold",E,E,8,[[["acc"],["g"]],["acc"]]],[11,"next",E,E,17,[[["self"]],[R[20]]]],[11,R[85],E,E,17,[[["self"]]]],[11,"fold",E,E,17,[[["acc"],["g"]],["acc"]]],[11,"next",E,E,18,[[["self"]],[R[20]]]],[11,R[85],E,E,18,[[["self"]]]],[11,"next",E,E,28,[[["self"]],[R[20]]]],[11,R[85],E,E,28,[[["self"]]]],[11,"next",E,E,21,[[["self"]],[R[20]]]],[11,R[85],E,E,21,[[["self"]]]],[11,"next",E,E,24,[[["self"]],[R[20]]]],[11,R[85],E,E,24,[[["self"]]]],[11,"next",E,E,14,[[["self"]],[R[20]]]],[11,R[85],E,E,14,[[["self"]]]],[11,"fold",E,E,14,[[["acc"],["g"]],["acc"]]],[11,"next",E,E,22,[[["self"]],[R[20]]]],[11,R[85],E,E,22,[[["self"]]]],[11,"next",E,E,23,[[["self"]],[R[20]]]],[11,R[85],E,E,23,[[["self"]]]],[11,"next",E,E,25,[[["self"]],[R[20]]]],[11,"next",E,E,19,[[["self"]],[R[20]]]],[11,R[85],E,E,19,[[["self"]]]],[11,"fold",E,E,19,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,20,[[["self"]],[R[20]]]],[11,R[85],E,E,20,[[["self"]]]],[11,"fold",E,E,20,[[["acc"],["fold"]],["acc"]]],[11,R[99],E,E,20,[[],["c"]]],[11,"next",E,E,26,[[["self"]],[R[20]]]],[11,R[85],E,E,26,[[["self"]]]],[11,"next",E,E,27,[[["self"]],[R[20]]]],[11,R[85],E,E,27,[[["self"]]]],[11,"fold",E,E,27,[[["acc"],["g"]],["acc"]]],[11,R[99],E,E,27,[[],["c"]]],[11,"next",E,E,32,[[["self"]],[R[20]]]],[11,R[85],E,E,32,[[["self"]]]],[11,"fold",E,E,32,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,32,[[["self"]],[R[20]]]],[11,R[85],E,E,32,[[["self"]]]],[11,"fold",E,E,32,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,32,[[["self"]],[R[20]]]],[11,R[85],E,E,32,[[["self"]]]],[11,"fold",E,E,32,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,32,[[["self"]],[R[20]]]],[11,R[85],E,E,32,[[["self"]]]],[11,"fold",E,E,32,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,32,[[["self"]],[R[20]]]],[11,R[85],E,E,32,[[["self"]]]],[11,"fold",E,E,32,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,32,[[["self"]],[R[20]]]],[11,R[85],E,E,32,[[["self"]]]],[11,"fold",E,E,32,[[["acc"],["fold"]],["acc"]]],[11,"next",E,E,30,[[["self"]],[R[20]]]],[11,"next",E,E,31,[[["self"]],[R[20]]]],[11,"next",E,E,33,[[["self"]],[R[20]]]],[11,R[85],E,E,33,[[["self"]]]],[11,"next",E,E,41,[[["self"]],[R[20]]]],[11,"next",E,E,40,[[["self"]],[R[20]]]],[11,"next",E,E,38,[[["self"]],[R[20]]]],[11,"next",E,E,37,[[["self"]],[R[20]]]],[11,"next",E,E,42,[[["self"]],[R[20]]]],[11,R[85],E,E,42,[[["self"]]]],[11,"fold",E,E,42,[[["b"],["f"]],["b"]]],[11,"next",E,E,43,[[["self"]],[R[20]]]],[11,R[85],E,E,43,[[["self"]]]],[11,"next",E,E,44,[[["self"]],[R[20]]]],[11,R[85],E,E,44,[[["self"]]]],[11,"next",E,E,9,[[["self"]],[R[20]]]],[11,R[85],E,E,9,[[["self"]]]],[11,"next",E,E,45,[[["self"]],[R[20]]]],[11,R[85],E,E,45,[[["self"]]]],[11,"next",E,E,46,[[["self"]],[R[20]]]],[11,R[85],E,E,46,[[["self"]]]],[11,"next",E,E,47,[[["self"]],[R[20]]]],[11,"count",E,E,47,[[],["usize"]]],[11,R[85],E,E,47,[[["self"]]]],[11,"next",E,E,48,[[["self"]],[R[20]]]],[11,R[85],E,E,48,[[["self"]]]],[11,"next",E,E,10,[[["self"]],[R[20]]]],[11,R[85],E,E,10,[[["self"]]]],[11,"next",E,E,6,[[["self"]],[R[20]]]],[11,R[85],E,E,6,[[["self"]]]],[11,"next",E,E,49,[[["self"]],[R[20]]]],[11,R[85],E,E,49,[[["self"]]]],[11,"next",E,E,50,[[["self"]],[R[20]]]],[11,R[85],E,E,50,[[["self"]]]],[11,"next",E,E,7,[[["self"]],[R[20]]]],[11,R[85],E,E,7,[[["self"]]]],[11,"next",E,E,51,[[["self"]],[R[20]]]],[11,R[85],E,E,51,[[["self"]]]],[11,"next",E,E,52,[[["self"]],[R[20]]]],[11,R[85],E,E,52,[[["self"]]]],[11,"next",E,E,53,[[["self"]],[R[20]]]],[11,R[85],E,E,53,[[["self"]]]],[11,"next",E,E,11,[[["self"]],[R[20]]]],[11,"next",E,E,54,[[["self"]],[R[20]]]],[11,"next",E,E,56,[[["self"]],[R[20]]]],[11,R[85],E,E,56,[[["self"]]]],[11,"count",E,E,56,[[],["usize"]]],[11,"next",E,E,55,[[["self"]],[R[20]]]],[11,R[85],E,E,55,[[["self"]]]],[11,"count",E,E,55,[[],["usize"]]],[11,"next",E,E,57,[[["self"]],[R[20]]]],[11,R[85],E,E,57,[[["self"]]]],[11,"next",E,E,58,[[["self"]],[R[20]]]],[11,R[85],E,E,58,[[["self"]]]],[11,"next",E,E,59,[[["self"]],[R[20]]]],[11,R[85],E,E,59,[[["self"]]]],[11,"next",E,E,60,[[["self"]],[R[20]]]],[11,R[85],E,E,60,[[["self"]]]],[11,"next",E,E,60,[[["self"]],[R[20]]]],[11,R[85],E,E,60,[[["self"]]]],[11,"next",E,E,60,[[["self"]],[R[20]]]],[11,R[85],E,E,60,[[["self"]]]],[11,"next",E,E,60,[[["self"]],[R[20]]]],[11,R[85],E,E,60,[[["self"]]]],[11,"next",E,E,60,[[["self"]],[R[20]]]],[11,R[85],E,E,60,[[["self"]]]],[11,"next",E,E,60,[[["self"]],[R[20]]]],[11,R[85],E,E,60,[[["self"]]]],[11,"next",E,E,60,[[["self"]],[R[20]]]],[11,R[85],E,E,60,[[["self"]]]],[11,"next",E,E,60,[[["self"]],[R[20]]]],[11,R[85],E,E,60,[[["self"]]]],[11,"fmt",E,E,34,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,15,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,16,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,8,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,17,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,18,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,28,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,21,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,24,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,14,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,22,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,23,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,25,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[42],E,4,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[53],E,32,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,30,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,31,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,33,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,34,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,42,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,43,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,44,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[42],E,2,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[53],E,9,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,47,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,48,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,10,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,6,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,49,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,50,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,7,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,51,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,52,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,53,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,54,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,56,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,55,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[42],E,3,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[53],E,58,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,59,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,60,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[42],E,5,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[53],E,34,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,35,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,34,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,34,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,34,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,34,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,34,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,34,[[["self"],[R[11]]],[R[4]]]],[11,"is_left",R[42],R[100],0,[[["self"]],["bool"]]],[11,R[43],E,R[101],0,[[["self"]],["bool"]]],[11,"left",E,R[102],0,[[],[R[20]]]],[11,"right",E,R[103],0,[[],[R[20]]]],[11,R[44],E,R[104],0,[[["self"]],[["r"],[R[14]],["l"]]]],[11,R[45],E,R[105],0,[[["self"]],[["r"],["l"],[R[14]]]]],[11,"flip",E,R[106],0,[[],[R[14]]]],[11,R[47],E,R[15],0,[[["f"]],[R[14]]]],[11,R[48],E,R[16],0,[[["f"]],[R[14]]]],[11,R[14],E,R[107],0,[[["f"],["g"]],[T]]],[11,R[108],E,R[109],0,[[["ctx"],["f"],["g"]],[T]]],[11,R[49],E,R[15],0,[[["f"]],[R[14]]]],[11,R[51],E,R[16],0,[[["f"]],[R[14]]]],[11,R[18],E,R[110],0,[[],[R[14]]]],[11,"left_or",E,R[111],0,[[["l"]],["l"]]],[11,R[112],E,R[113],0,[[],["l"]]],[11,R[114],E,R[115],0,[[["f"]],["l"]]],[11,R[584],E,R[116],0,[[["r"]],["r"]]],[11,R[117],E,R[118],0,[[],["r"]]],[11,R[119],E,R[120],0,[[["f"]],["r"]]],[11,R[121],E,R[17],0,[[]]],[11,R[122],E,R[17],0,[[]]],[11,R[21],E,R[123],0,[[],[T]]],[11,"map",E,R[124],0,[[["f"]],[R[14]]]]],"p":[[4,"Either"],[4,"Diff"],[4,R[125]],[4,"Position"],[4,R[126]],[4,R[127]],[3,"RcIter"],[3,"Unfold"],[3,"PutBack"],[3,R[128]],[3,"PutBackN"],[3,"Tuples"],[8,R[129]],[8,R[130]],[3,"DedupBy"],[3,R[131]],[3,R[132]],[3,"Product"],[3,"Batching"],[3,"MapInto"],[3,R[133]],[3,"MergeBy"],[3,R[134]],[3,R[135]],[3,"Coalesce"],[3,R[136]],[3,R[137]],[3,"Update"],[3,"Step"],[3,R[138]],[3,R[139]],[3,R[140]],[3,R[141]],[3,R[142]],[3,"Format"],[3,R[143]],[3,R[144]],[3,"Chunk"],[3,"Chunks"],[3,"GroupBy"],[3,"Group"],[3,"Groups"],[3,R[145]],[3,"KMergeBy"],[3,R[146]],[3,"PadUsing"],[3,R[147]],[3,R[148]],[3,R[149]],[3,"RepeatN"],[3,R[150]],[3,"Iterate"],[3,"Tee"],[3,R[151]],[3,R[152]],[3,"Unique"],[3,"UniqueBy"],[3,R[153]],[3,"ZipEq"],[3,R[154]],[3,"Zip"]]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","i":[[5,R[491],R[1],"Takes a shared reference to a lazy static and initializes…",N,[[[T]]]],[8,"LazyStatic",E,"Support trait for enabling a few common operation on lazy…",N,N],[14,R[1],E,E,N,N]],"p":[]};
searchIndex["libc"]={"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",N,N],[3,"group",E,E,N,N],[12,"gr_name",E,E,0,N],[12,"gr_passwd",E,E,0,N],[12,"gr_gid",E,E,0,N],[12,"gr_mem",E,E,0,N],[3,"utimbuf",E,E,N,N],[12,"actime",E,E,1,N],[12,"modtime",E,E,1,N],[3,"timeval",E,E,N,N],[12,"tv_sec",E,E,2,N],[12,"tv_usec",E,E,2,N],[3,R[269],E,E,N,N],[12,"tv_sec",E,E,3,N],[12,"tv_nsec",E,E,3,N],[3,"rlimit",E,E,N,N],[12,"rlim_cur",E,E,4,N],[12,"rlim_max",E,E,4,N],[3,"rusage",E,E,N,N],[12,"ru_utime",E,E,5,N],[12,"ru_stime",E,E,5,N],[12,"ru_maxrss",E,E,5,N],[12,"ru_ixrss",E,E,5,N],[12,"ru_idrss",E,E,5,N],[12,"ru_isrss",E,E,5,N],[12,"ru_minflt",E,E,5,N],[12,"ru_majflt",E,E,5,N],[12,"ru_nswap",E,E,5,N],[12,"ru_inblock",E,E,5,N],[12,"ru_oublock",E,E,5,N],[12,"ru_msgsnd",E,E,5,N],[12,"ru_msgrcv",E,E,5,N],[12,"ru_nsignals",E,E,5,N],[12,"ru_nvcsw",E,E,5,N],[12,"ru_nivcsw",E,E,5,N],[3,R[205],E,E,N,N],[12,"ipv6mr_multiaddr",E,E,6,N],[12,"ipv6mr_interface",E,E,6,N],[3,"hostent",E,E,N,N],[12,"h_name",E,E,7,N],[12,"h_aliases",E,E,7,N],[12,"h_addrtype",E,E,7,N],[12,"h_length",E,E,7,N],[12,"h_addr_list",E,E,7,N],[3,"iovec",E,E,N,N],[12,"iov_base",E,E,8,N],[12,"iov_len",E,E,8,N],[3,"pollfd",E,E,N,N],[12,"fd",E,E,9,N],[12,"events",E,E,9,N],[12,"revents",E,E,9,N],[3,"winsize",E,E,N,N],[12,"ws_row",E,E,10,N],[12,"ws_col",E,E,10,N],[12,"ws_xpixel",E,E,10,N],[12,"ws_ypixel",E,E,10,N],[3,"linger",E,E,N,N],[12,"l_onoff",E,E,11,N],[12,"l_linger",E,E,11,N],[3,"sigval",E,E,N,N],[12,"sival_ptr",E,E,12,N],[3,R[206],E,E,N,N],[12,R[179],E,E,13,N],[12,"it_value",E,E,13,N],[3,"tms",E,E,N,N],[12,"tms_utime",E,E,14,N],[12,"tms_stime",E,E,14,N],[12,"tms_cutime",E,E,14,N],[12,"tms_cstime",E,E,14,N],[3,"servent",E,E,N,N],[12,"s_name",E,E,15,N],[12,"s_aliases",E,E,15,N],[12,"s_port",E,E,15,N],[12,"s_proto",E,E,15,N],[3,R[270],E,E,N,N],[12,"p_name",E,E,16,N],[12,"p_aliases",E,E,16,N],[12,"p_proto",E,E,16,N],[3,"in_addr",E,E,N,N],[12,"s_addr",E,E,17,N],[3,"ip_mreq",E,E,N,N],[12,R[175],E,E,18,N],[12,R[176],E,E,18,N],[3,R[207],E,E,N,N],[12,R[175],E,E,19,N],[12,R[176],E,E,19,N],[12,"imr_sourceaddr",E,E,19,N],[3,R[271],E,E,N,N],[12,"sa_family",E,E,20,N],[12,"sa_data",E,E,20,N],[3,R[208],E,E,N,N],[12,"sin_family",E,E,21,N],[12,"sin_port",E,E,21,N],[12,"sin_addr",E,E,21,N],[12,"sin_zero",E,E,21,N],[3,R[209],E,E,N,N],[12,"sin6_family",E,E,22,N],[12,"sin6_port",E,E,22,N],[12,"sin6_flowinfo",E,E,22,N],[12,"sin6_addr",E,E,22,N],[12,"sin6_scope_id",E,E,22,N],[3,R[272],E,E,N,N],[12,"ai_flags",E,E,23,N],[12,"ai_family",E,E,23,N],[12,"ai_socktype",E,E,23,N],[12,"ai_protocol",E,E,23,N],[12,"ai_addrlen",E,E,23,N],[12,"ai_addr",E,E,23,N],[12,"ai_canonname",E,E,23,N],[12,"ai_next",E,E,23,N],[3,R[210],E,E,N,N],[12,"sll_family",E,E,24,N],[12,"sll_protocol",E,E,24,N],[12,"sll_ifindex",E,E,24,N],[12,"sll_hatype",E,E,24,N],[12,"sll_pkttype",E,E,24,N],[12,"sll_halen",E,E,24,N],[12,"sll_addr",E,E,24,N],[3,"fd_set",E,E,N,N],[3,"tm",E,E,N,N],[12,"tm_sec",E,E,25,N],[12,"tm_min",E,E,25,N],[12,"tm_hour",E,E,25,N],[12,"tm_mday",E,E,25,N],[12,"tm_mon",E,E,25,N],[12,"tm_year",E,E,25,N],[12,"tm_wday",E,E,25,N],[12,"tm_yday",E,E,25,N],[12,"tm_isdst",E,E,25,N],[12,"tm_gmtoff",E,E,25,N],[12,"tm_zone",E,E,25,N],[3,R[211],E,E,N,N],[12,"sched_priority",E,E,26,N],[3,"Dl_info",E,E,N,N],[12,"dli_fname",E,E,27,N],[12,"dli_fbase",E,E,27,N],[12,"dli_sname",E,E,27,N],[12,"dli_saddr",E,E,27,N],[3,"lconv",E,E,N,N],[12,"decimal_point",E,E,28,N],[12,"thousands_sep",E,E,28,N],[12,"grouping",E,E,28,N],[12,"int_curr_symbol",E,E,28,N],[12,"currency_symbol",E,E,28,N],[12,"mon_decimal_point",E,E,28,N],[12,"mon_thousands_sep",E,E,28,N],[12,"mon_grouping",E,E,28,N],[12,"positive_sign",E,E,28,N],[12,"negative_sign",E,E,28,N],[12,"int_frac_digits",E,E,28,N],[12,"frac_digits",E,E,28,N],[12,"p_cs_precedes",E,E,28,N],[12,"p_sep_by_space",E,E,28,N],[12,"n_cs_precedes",E,E,28,N],[12,"n_sep_by_space",E,E,28,N],[12,"p_sign_posn",E,E,28,N],[12,"n_sign_posn",E,E,28,N],[12,"int_p_cs_precedes",E,E,28,N],[12,"int_p_sep_by_space",E,E,28,N],[12,"int_n_cs_precedes",E,E,28,N],[12,"int_n_sep_by_space",E,E,28,N],[12,"int_p_sign_posn",E,E,28,N],[12,"int_n_sign_posn",E,E,28,N],[3,R[212],E,E,N,N],[12,"ipi_ifindex",E,E,29,N],[12,"ipi_spec_dst",E,E,29,N],[12,"ipi_addr",E,E,29,N],[3,"ifaddrs",E,E,N,N],[12,"ifa_next",E,E,30,N],[12,"ifa_name",E,E,30,N],[12,"ifa_flags",E,E,30,N],[12,"ifa_addr",E,E,30,N],[12,"ifa_netmask",E,E,30,N],[12,"ifa_ifu",E,E,30,N],[12,"ifa_data",E,E,30,N],[3,R[213],E,E,N,N],[3,"arpreq",E,E,N,N],[12,"arp_pa",E,E,31,N],[12,"arp_ha",E,E,31,N],[12,R[177],E,E,31,N],[12,R[178],E,E,31,N],[12,"arp_dev",E,E,31,N],[3,R[214],E,E,N,N],[12,"arp_pa",E,E,32,N],[12,"arp_ha",E,E,32,N],[12,R[177],E,E,32,N],[12,R[178],E,E,32,N],[3,"arphdr",E,E,N,N],[12,"ar_hrd",E,E,33,N],[12,"ar_pro",E,E,33,N],[12,"ar_hln",E,E,33,N],[12,"ar_pln",E,E,33,N],[12,"ar_op",E,E,33,N],[3,"mmsghdr",E,E,N,N],[12,"msg_hdr",E,E,34,N],[12,"msg_len",E,E,34,N],[3,R[215],E,E,N,N],[12,"events",E,E,35,N],[12,"u64",E,E,35,N],[3,R[216],E,E,N,N],[12,"sun_family",E,E,36,N],[12,"sun_path",E,E,36,N],[3,R[217],E,E,N,N],[12,"ss_family",E,E,37,N],[3,"utsname",E,E,N,N],[12,"sysname",E,E,38,N],[12,"nodename",E,E,38,N],[12,"release",E,E,38,N],[12,"version",E,E,38,N],[12,"machine",E,E,38,N],[12,"domainname",E,E,38,N],[3,R[273],E,E,N,N],[12,"sigev_value",E,E,39,N],[12,"sigev_signo",E,E,39,N],[12,"sigev_notify",E,E,39,N],[12,"sigev_notify_thread_id",E,E,39,N],[3,R[274],E,E,N,N],[12,"rlim_cur",E,E,40,N],[12,"rlim_max",E,E,40,N],[3,"glob_t",E,E,N,N],[12,"gl_pathc",E,E,41,N],[12,"gl_pathv",E,E,41,N],[12,"gl_offs",E,E,41,N],[12,"gl_flags",E,E,41,N],[3,"passwd",E,E,N,N],[12,"pw_name",E,E,42,N],[12,"pw_passwd",E,E,42,N],[12,"pw_uid",E,E,42,N],[12,"pw_gid",E,E,42,N],[12,"pw_gecos",E,E,42,N],[12,"pw_dir",E,E,42,N],[12,"pw_shell",E,E,42,N],[3,"spwd",E,E,N,N],[12,"sp_namp",E,E,43,N],[12,"sp_pwdp",E,E,43,N],[12,"sp_lstchg",E,E,43,N],[12,"sp_min",E,E,43,N],[12,"sp_max",E,E,43,N],[12,"sp_warn",E,E,43,N],[12,"sp_inact",E,E,43,N],[12,"sp_expire",E,E,43,N],[12,"sp_flag",E,E,43,N],[3,"dqblk",E,E,N,N],[12,"dqb_bhardlimit",E,E,44,N],[12,"dqb_bsoftlimit",E,E,44,N],[12,"dqb_curspace",E,E,44,N],[12,"dqb_ihardlimit",E,E,44,N],[12,"dqb_isoftlimit",E,E,44,N],[12,"dqb_curinodes",E,E,44,N],[12,"dqb_btime",E,E,44,N],[12,"dqb_itime",E,E,44,N],[12,"dqb_valid",E,E,44,N],[3,R[218],E,E,N,N],[12,"ssi_signo",E,E,45,N],[12,"ssi_errno",E,E,45,N],[12,"ssi_code",E,E,45,N],[12,"ssi_pid",E,E,45,N],[12,"ssi_uid",E,E,45,N],[12,"ssi_fd",E,E,45,N],[12,"ssi_tid",E,E,45,N],[12,"ssi_band",E,E,45,N],[12,"ssi_overrun",E,E,45,N],[12,"ssi_trapno",E,E,45,N],[12,"ssi_status",E,E,45,N],[12,"ssi_int",E,E,45,N],[12,"ssi_ptr",E,E,45,N],[12,"ssi_utime",E,E,45,N],[12,"ssi_stime",E,E,45,N],[12,"ssi_addr",E,E,45,N],[12,"ssi_addr_lsb",E,E,45,N],[12,"ssi_syscall",E,E,45,N],[12,"ssi_call_addr",E,E,45,N],[12,"ssi_arch",E,E,45,N],[3,R[219],E,E,N,N],[12,R[179],E,E,46,N],[12,"it_value",E,E,46,N],[3,"fsid_t",E,E,N,N],[3,R[220],E,E,N,N],[12,"mr_ifindex",E,E,47,N],[12,"mr_type",E,E,47,N],[12,"mr_alen",E,E,47,N],[12,"mr_address",E,E,47,N],[3,R[201],E,E,N,N],[3,R[204],E,E,N,N],[12,"if_index",E,E,48,N],[12,"if_name",E,E,48,N],[3,"msginfo",E,E,N,N],[12,"msgpool",E,E,49,N],[12,"msgmap",E,E,49,N],[12,"msgmax",E,E,49,N],[12,"msgmnb",E,E,49,N],[12,"msgmni",E,E,49,N],[12,"msgssz",E,E,49,N],[12,"msgtql",E,E,49,N],[12,"msgseg",E,E,49,N],[3,"sembuf",E,E,N,N],[12,"sem_num",E,E,50,N],[12,"sem_op",E,E,50,N],[12,"sem_flg",E,E,50,N],[3,R[221],E,E,N,N],[12,"time",E,E,51,N],[12,"type_",E,E,51,N],[12,"code",E,E,51,N],[12,"value",E,E,51,N],[3,R[275],E,E,N,N],[12,"bustype",E,E,52,N],[12,"vendor",E,E,52,N],[12,R[531],E,E,52,N],[12,"version",E,E,52,N],[3,R[222],E,E,N,N],[12,"value",E,E,53,N],[12,"minimum",E,E,53,N],[12,"maximum",E,E,53,N],[12,"fuzz",E,E,53,N],[12,"flat",E,E,53,N],[12,"resolution",E,E,53,N],[3,R[223],E,E,N,N],[12,"flags",E,E,54,N],[12,"len",E,E,54,N],[12,"index",E,E,54,N],[12,"keycode",E,E,54,N],[12,"scancode",E,E,54,N],[3,R[224],E,E,N,N],[12,"type_",E,E,55,N],[12,"codes_size",E,E,55,N],[12,"codes_ptr",E,E,55,N],[3,R[225],E,E,N,N],[12,"length",E,E,56,N],[12,"delay",E,E,56,N],[3,R[226],E,E,N,N],[12,"button",E,E,57,N],[12,"interval",E,E,57,N],[3,R[227],E,E,N,N],[12,"attack_length",E,E,58,N],[12,"attack_level",E,E,58,N],[12,"fade_length",E,E,58,N],[12,"fade_level",E,E,58,N],[3,R[228],E,E,N,N],[12,"level",E,E,59,N],[12,R[180],E,E,59,N],[3,R[229],E,E,N,N],[12,"start_level",E,E,60,N],[12,"end_level",E,E,60,N],[12,R[180],E,E,60,N],[3,R[230],E,E,N,N],[12,"right_saturation",E,E,61,N],[12,"left_saturation",E,E,61,N],[12,"right_coeff",E,E,61,N],[12,"left_coeff",E,E,61,N],[12,"deadband",E,E,61,N],[12,"center",E,E,61,N],[3,R[231],E,E,N,N],[12,"waveform",E,E,62,N],[12,"period",E,E,62,N],[12,"magnitude",E,E,62,N],[12,"offset",E,E,62,N],[12,"phase",E,E,62,N],[12,R[180],E,E,62,N],[12,"custom_len",E,E,62,N],[12,"custom_data",E,E,62,N],[3,R[232],E,E,N,N],[12,"strong_magnitude",E,E,63,N],[12,"weak_magnitude",E,E,63,N],[3,R[233],E,E,N,N],[12,"type_",E,E,64,N],[12,"id",E,E,64,N],[12,"direction",E,E,64,N],[12,"trigger",E,E,64,N],[12,"replay",E,E,64,N],[12,U,E,E,64,N],[3,R[234],E,E,N,N],[12,"dlpi_addr",E,E,65,N],[12,"dlpi_name",E,E,65,N],[12,"dlpi_phdr",E,E,65,N],[12,"dlpi_phnum",E,E,65,N],[12,"dlpi_adds",E,E,65,N],[12,"dlpi_subs",E,E,65,N],[12,"dlpi_tls_modid",E,E,65,N],[12,"dlpi_tls_data",E,E,65,N],[3,R[276],E,E,N,N],[12,"e_ident",E,E,66,N],[12,"e_type",E,E,66,N],[12,R[181],E,E,66,N],[12,R[182],E,E,66,N],[12,"e_entry",E,E,66,N],[12,"e_phoff",E,E,66,N],[12,"e_shoff",E,E,66,N],[12,"e_flags",E,E,66,N],[12,"e_ehsize",E,E,66,N],[12,R[183],E,E,66,N],[12,"e_phnum",E,E,66,N],[12,R[184],E,E,66,N],[12,"e_shnum",E,E,66,N],[12,R[185],E,E,66,N],[3,R[277],E,E,N,N],[12,"e_ident",E,E,67,N],[12,"e_type",E,E,67,N],[12,R[181],E,E,67,N],[12,R[182],E,E,67,N],[12,"e_entry",E,E,67,N],[12,"e_phoff",E,E,67,N],[12,"e_shoff",E,E,67,N],[12,"e_flags",E,E,67,N],[12,"e_ehsize",E,E,67,N],[12,R[183],E,E,67,N],[12,"e_phnum",E,E,67,N],[12,R[184],E,E,67,N],[12,"e_shnum",E,E,67,N],[12,R[185],E,E,67,N],[3,R[278],E,E,N,N],[12,"st_name",E,E,68,N],[12,"st_value",E,E,68,N],[12,"st_size",E,E,68,N],[12,"st_info",E,E,68,N],[12,"st_other",E,E,68,N],[12,"st_shndx",E,E,68,N],[3,R[279],E,E,N,N],[12,"st_name",E,E,69,N],[12,"st_info",E,E,69,N],[12,"st_other",E,E,69,N],[12,"st_shndx",E,E,69,N],[12,"st_value",E,E,69,N],[12,"st_size",E,E,69,N],[3,R[280],E,E,N,N],[12,"p_type",E,E,70,N],[12,"p_offset",E,E,70,N],[12,"p_vaddr",E,E,70,N],[12,"p_paddr",E,E,70,N],[12,"p_filesz",E,E,70,N],[12,"p_memsz",E,E,70,N],[12,"p_flags",E,E,70,N],[12,"p_align",E,E,70,N],[3,R[281],E,E,N,N],[12,"p_type",E,E,71,N],[12,"p_flags",E,E,71,N],[12,"p_offset",E,E,71,N],[12,"p_vaddr",E,E,71,N],[12,"p_paddr",E,E,71,N],[12,"p_filesz",E,E,71,N],[12,"p_memsz",E,E,71,N],[12,"p_align",E,E,71,N],[3,R[282],E,E,N,N],[12,"sh_name",E,E,72,N],[12,"sh_type",E,E,72,N],[12,"sh_flags",E,E,72,N],[12,"sh_addr",E,E,72,N],[12,R[186],E,E,72,N],[12,"sh_size",E,E,72,N],[12,"sh_link",E,E,72,N],[12,"sh_info",E,E,72,N],[12,R[187],E,E,72,N],[12,R[188],E,E,72,N],[3,R[283],E,E,N,N],[12,"sh_name",E,E,73,N],[12,"sh_type",E,E,73,N],[12,"sh_flags",E,E,73,N],[12,"sh_addr",E,E,73,N],[12,R[186],E,E,73,N],[12,"sh_size",E,E,73,N],[12,"sh_link",E,E,73,N],[12,"sh_info",E,E,73,N],[12,R[187],E,E,73,N],[12,R[188],E,E,73,N],[3,R[284],E,E,N,N],[12,"ch_type",E,E,74,N],[12,"ch_size",E,E,74,N],[12,R[189],E,E,74,N],[3,R[285],E,E,N,N],[12,"ch_type",E,E,75,N],[12,"ch_reserved",E,E,75,N],[12,"ch_size",E,E,75,N],[12,R[189],E,E,75,N],[3,"ucred",E,E,N,N],[12,"pid",E,E,76,N],[12,"uid",E,E,76,N],[12,"gid",E,E,76,N],[3,"mntent",E,E,N,N],[12,"mnt_fsname",E,E,77,N],[12,"mnt_dir",E,E,77,N],[12,"mnt_type",E,E,77,N],[12,"mnt_opts",E,E,77,N],[12,"mnt_freq",E,E,77,N],[12,"mnt_passno",E,E,77,N],[3,R[235],E,E,N,N],[3,R[236],E,E,N,N],[3,R[237],E,E,N,N],[12,"cmd",E,E,78,N],[12,"version",E,E,78,N],[12,"reserved",E,E,78,N],[3,R[238],E,E,N,N],[12,"ipi6_addr",E,E,79,N],[12,"ipi6_ifindex",E,E,79,N],[3,R[239],E,E,N,N],[12,"req",E,E,80,N],[12,"ip",E,E,80,N],[12,"dev",E,E,80,N],[12,"stamp",E,E,80,N],[12,"updated",E,E,80,N],[12,"ha",E,E,80,N],[3,R[240],E,E,N,N],[12,"wd",E,E,81,N],[12,"mask",E,E,81,N],[12,"cookie",E,E,81,N],[12,"len",E,E,81,N],[3,R[241],E,E,N,N],[12,"svm_family",E,E,82,N],[12,"svm_reserved1",E,E,82,N],[12,"svm_port",E,E,82,N],[12,"svm_cid",E,E,82,N],[12,"svm_zero",E,E,82,N],[3,R[242],E,E,N,N],[12,"nl_family",E,E,83,N],[12,"nl_pid",E,E,83,N],[12,"nl_groups",E,E,83,N],[3,"dirent",E,E,N,N],[12,"d_ino",E,E,84,N],[12,"d_off",E,E,84,N],[12,"d_reclen",E,E,84,N],[12,"d_type",E,E,84,N],[12,"d_name",E,E,84,N],[3,R[286],E,E,N,N],[12,"d_ino",E,E,85,N],[12,"d_off",E,E,85,N],[12,"d_reclen",E,E,85,N],[12,"d_type",E,E,85,N],[12,"d_name",E,E,85,N],[3,R[243],E,E,N,N],[12,"salg_family",E,E,86,N],[12,"salg_type",E,E,86,N],[12,"salg_feat",E,E,86,N],[12,"salg_mask",E,E,86,N],[12,"salg_name",E,E,86,N],[3,R[244],E,E,N,N],[12,"ivlen",E,E,87,N],[12,"iv",E,E,87,N],[3,"mq_attr",E,E,N,N],[12,"mq_flags",E,E,88,N],[12,"mq_maxmsg",E,E,88,N],[12,"mq_msgsize",E,E,88,N],[12,"mq_curmsgs",E,E,88,N],[3,"statx",E,E,N,N],[12,"stx_mask",E,E,89,N],[12,"stx_blksize",E,E,89,N],[12,"stx_attributes",E,E,89,N],[12,"stx_nlink",E,E,89,N],[12,"stx_uid",E,E,89,N],[12,"stx_gid",E,E,89,N],[12,"stx_mode",E,E,89,N],[12,"__statx_pad1",E,E,89,N],[12,"stx_ino",E,E,89,N],[12,"stx_size",E,E,89,N],[12,"stx_blocks",E,E,89,N],[12,"stx_attributes_mask",E,E,89,N],[12,"stx_atime",E,E,89,N],[12,"stx_btime",E,E,89,N],[12,"stx_ctime",E,E,89,N],[12,"stx_mtime",E,E,89,N],[12,"stx_rdev_major",E,E,89,N],[12,"stx_rdev_minor",E,E,89,N],[12,"stx_dev_major",E,E,89,N],[12,"stx_dev_minor",E,E,89,N],[12,"__statx_pad2",E,E,89,N],[3,R[245],E,E,N,N],[12,"tv_sec",E,E,90,N],[12,"tv_nsec",E,E,90,N],[12,"__statx_timestamp_pad1",E,E,90,N],[3,"aiocb",E,E,N,N],[12,"aio_fildes",E,E,91,N],[12,"aio_lio_opcode",E,E,91,N],[12,"aio_reqprio",E,E,91,N],[12,"aio_buf",E,E,91,N],[12,"aio_nbytes",E,E,91,N],[12,"aio_sigevent",E,E,91,N],[12,"aio_offset",E,E,91,N],[3,R[246],E,E,N,N],[12,"e_termination",E,E,92,N],[12,"e_exit",E,E,92,N],[3,R[247],E,E,N,N],[12,"tv_sec",E,E,93,N],[12,"tv_usec",E,E,93,N],[3,R[287],E,E,N,N],[12,"gl_pathc",E,E,94,N],[12,"gl_pathv",E,E,94,N],[12,"gl_offs",E,E,94,N],[12,"gl_flags",E,E,94,N],[3,"msghdr",E,E,N,N],[12,"msg_name",E,E,95,N],[12,"msg_namelen",E,E,95,N],[12,"msg_iov",E,E,95,N],[12,"msg_iovlen",E,E,95,N],[12,"msg_control",E,E,95,N],[12,"msg_controllen",E,E,95,N],[12,"msg_flags",E,E,95,N],[3,"cmsghdr",E,E,N,N],[12,"cmsg_len",E,E,96,N],[12,"cmsg_level",E,E,96,N],[12,"cmsg_type",E,E,96,N],[3,"termios",E,E,N,N],[12,"c_iflag",E,E,97,N],[12,"c_oflag",E,E,97,N],[12,"c_cflag",E,E,97,N],[12,"c_lflag",E,E,97,N],[12,"c_line",E,E,97,N],[12,"c_cc",E,E,97,N],[12,"c_ispeed",E,E,97,N],[12,"c_ospeed",E,E,97,N],[3,R[248],E,E,N,N],[12,"arena",E,E,98,N],[12,"ordblks",E,E,98,N],[12,"smblks",E,E,98,N],[12,"hblks",E,E,98,N],[12,"hblkhd",E,E,98,N],[12,"usmblks",E,E,98,N],[12,"fsmblks",E,E,98,N],[12,"uordblks",E,E,98,N],[12,"fordblks",E,E,98,N],[12,"keepcost",E,E,98,N],[3,R[288],E,E,N,N],[12,"nlmsg_len",E,E,99,N],[12,"nlmsg_type",E,E,99,N],[12,"nlmsg_flags",E,E,99,N],[12,"nlmsg_seq",E,E,99,N],[12,"nlmsg_pid",E,E,99,N],[3,R[289],E,E,N,N],[12,"error",E,E,100,N],[12,"msg",E,E,100,N],[3,R[249],E,E,N,N],[12,"group",E,E,101,N],[3,R[250],E,E,N,N],[12,"nm_block_size",E,E,102,N],[12,"nm_block_nr",E,E,102,N],[12,"nm_frame_size",E,E,102,N],[12,"nm_frame_nr",E,E,102,N],[3,R[251],E,E,N,N],[12,"nm_status",E,E,103,N],[12,"nm_len",E,E,103,N],[12,"nm_group",E,E,103,N],[12,"nm_pid",E,E,103,N],[12,"nm_uid",E,E,103,N],[12,"nm_gid",E,E,103,N],[3,"nlattr",E,E,N,N],[12,"nla_len",E,E,104,N],[12,"nla_type",E,E,104,N],[3,"rtentry",E,E,N,N],[12,"rt_pad1",E,E,105,N],[12,"rt_dst",E,E,105,N],[12,"rt_gateway",E,E,105,N],[12,"rt_genmask",E,E,105,N],[12,"rt_flags",E,E,105,N],[12,"rt_pad2",E,E,105,N],[12,"rt_pad3",E,E,105,N],[12,"rt_tos",E,E,105,N],[12,"rt_class",E,E,105,N],[12,"rt_pad4",E,E,105,N],[12,"rt_metric",E,E,105,N],[12,"rt_dev",E,E,105,N],[12,"rt_mtu",E,E,105,N],[12,"rt_window",E,E,105,N],[12,"rt_irtt",E,E,105,N],[3,"utmpx",E,E,N,N],[12,"ut_type",E,E,106,N],[12,"ut_pid",E,E,106,N],[12,"ut_line",E,E,106,N],[12,"ut_id",E,E,106,N],[12,"ut_user",E,E,106,N],[12,"ut_host",E,E,106,N],[12,"ut_exit",E,E,106,N],[12,"ut_session",E,E,106,N],[12,"ut_tv",E,E,106,N],[12,"ut_addr_v6",E,E,106,N],[3,R[296],E,E,N,N],[3,"sysinfo",E,E,N,N],[12,"uptime",E,E,107,N],[12,"loads",E,E,107,N],[12,"totalram",E,E,107,N],[12,"freeram",E,E,107,N],[12,"sharedram",E,E,107,N],[12,"bufferram",E,E,107,N],[12,"totalswap",E,E,107,N],[12,"freeswap",E,E,107,N],[12,"procs",E,E,107,N],[12,"pad",E,E,107,N],[12,"totalhigh",E,E,107,N],[12,"freehigh",E,E,107,N],[12,"mem_unit",E,E,107,N],[12,"_f",E,E,107,N],[3,R[290],E,E,N,N],[12,"msg_perm",E,E,108,N],[12,"msg_stime",E,E,108,N],[12,"msg_rtime",E,E,108,N],[12,"msg_ctime",E,E,108,N],[12,"msg_qnum",E,E,108,N],[12,"msg_qbytes",E,E,108,N],[12,"msg_lspid",E,E,108,N],[12,"msg_lrpid",E,E,108,N],[3,R[202],E,E,N,N],[12,"sa_sigaction",E,E,109,N],[12,"sa_mask",E,E,109,N],[12,"sa_flags",E,E,109,N],[12,"sa_restorer",E,E,109,N],[3,"statfs",E,E,N,N],[12,"f_type",E,E,110,N],[12,"f_bsize",E,E,110,N],[12,R[197],E,E,110,N],[12,"f_bfree",E,E,110,N],[12,R[198],E,E,110,N],[12,"f_files",E,E,110,N],[12,"f_ffree",E,E,110,N],[12,"f_fsid",E,E,110,N],[12,R[195],E,E,110,N],[12,R[196],E,E,110,N],[3,"flock",E,E,N,N],[12,"l_type",E,E,111,N],[12,"l_whence",E,E,111,N],[12,"l_start",E,E,111,N],[12,"l_len",E,E,111,N],[12,"l_pid",E,E,111,N],[3,"flock64",E,E,N,N],[12,"l_type",E,E,112,N],[12,"l_whence",E,E,112,N],[12,"l_start",E,E,112,N],[12,"l_len",E,E,112,N],[12,"l_pid",E,E,112,N],[3,R[252],E,E,N,N],[12,"si_signo",E,E,113,N],[12,"si_errno",E,E,113,N],[12,"si_code",E,E,113,N],[3,"stack_t",E,E,N,N],[12,"ss_sp",E,E,114,N],[12,"ss_flags",E,E,114,N],[12,"ss_size",E,E,114,N],[3,"stat",E,E,N,N],[12,"st_dev",E,E,115,N],[12,"st_ino",E,E,115,N],[12,"st_nlink",E,E,115,N],[12,"st_mode",E,E,115,N],[12,"st_uid",E,E,115,N],[12,"st_gid",E,E,115,N],[12,"st_rdev",E,E,115,N],[12,"st_size",E,E,115,N],[12,R[190],E,E,115,N],[12,R[191],E,E,115,N],[12,"st_atime",E,E,115,N],[12,R[192],E,E,115,N],[12,"st_mtime",E,E,115,N],[12,R[193],E,E,115,N],[12,"st_ctime",E,E,115,N],[12,R[194],E,E,115,N],[3,"stat64",E,E,N,N],[12,"st_dev",E,E,116,N],[12,"st_ino",E,E,116,N],[12,"st_nlink",E,E,116,N],[12,"st_mode",E,E,116,N],[12,"st_uid",E,E,116,N],[12,"st_gid",E,E,116,N],[12,"st_rdev",E,E,116,N],[12,"st_size",E,E,116,N],[12,R[190],E,E,116,N],[12,R[191],E,E,116,N],[12,"st_atime",E,E,116,N],[12,R[192],E,E,116,N],[12,"st_mtime",E,E,116,N],[12,R[193],E,E,116,N],[12,"st_ctime",E,E,116,N],[12,R[194],E,E,116,N],[3,R[253],E,E,N,N],[12,"f_type",E,E,117,N],[12,"f_bsize",E,E,117,N],[12,R[197],E,E,117,N],[12,"f_bfree",E,E,117,N],[12,R[198],E,E,117,N],[12,"f_files",E,E,117,N],[12,"f_ffree",E,E,117,N],[12,"f_fsid",E,E,117,N],[12,R[195],E,E,117,N],[12,R[196],E,E,117,N],[12,"f_flags",E,E,117,N],[12,"f_spare",E,E,117,N],[3,R[203],E,E,N,N],[12,"f_bsize",E,E,118,N],[12,R[196],E,E,118,N],[12,R[197],E,E,118,N],[12,"f_bfree",E,E,118,N],[12,R[198],E,E,118,N],[12,"f_files",E,E,118,N],[12,"f_ffree",E,E,118,N],[12,"f_favail",E,E,118,N],[12,"f_fsid",E,E,118,N],[12,"f_flag",E,E,118,N],[12,R[200],E,E,118,N],[3,R[254],E,E,N,N],[3,R[255],E,E,N,N],[12,"significand",E,E,119,N],[12,"exponent",E,E,119,N],[3,R[256],E,E,N,N],[12,"element",E,E,120,N],[3,R[257],E,E,N,N],[12,"cwd",E,E,121,N],[12,"swd",E,E,121,N],[12,"ftw",E,E,121,N],[12,"fop",E,E,121,N],[12,"rip",E,E,121,N],[12,"rdp",E,E,121,N],[12,"mxcsr",E,E,121,N],[12,R[199],E,E,121,N],[12,"_st",E,E,121,N],[12,"_xmm",E,E,121,N],[3,R[258],E,E,N,N],[12,"r15",E,E,122,N],[12,"r14",E,E,122,N],[12,"r13",E,E,122,N],[12,"r12",E,E,122,N],[12,"rbp",E,E,122,N],[12,"rbx",E,E,122,N],[12,"r11",E,E,122,N],[12,"r10",E,E,122,N],[12,"r9",E,E,122,N],[12,"r8",E,E,122,N],[12,"rax",E,E,122,N],[12,"rcx",E,E,122,N],[12,"rdx",E,E,122,N],[12,"rsi",E,E,122,N],[12,"rdi",E,E,122,N],[12,"orig_rax",E,E,122,N],[12,"rip",E,E,122,N],[12,"cs",E,E,122,N],[12,"eflags",E,E,122,N],[12,"rsp",E,E,122,N],[12,"ss",E,E,122,N],[12,"fs_base",E,E,122,N],[12,"gs_base",E,E,122,N],[12,"ds",E,E,122,N],[12,"es",E,E,122,N],[12,"fs",E,E,122,N],[12,"gs",E,E,122,N],[3,"user",E,E,N,N],[12,"regs",E,E,123,N],[12,"u_fpvalid",E,E,123,N],[12,"i387",E,E,123,N],[12,"u_tsize",E,E,123,N],[12,"u_dsize",E,E,123,N],[12,"u_ssize",E,E,123,N],[12,"start_code",E,E,123,N],[12,"start_stack",E,E,123,N],[12,"signal",E,E,123,N],[12,"u_ar0",E,E,123,N],[12,"u_fpstate",E,E,123,N],[12,"magic",E,E,123,N],[12,"u_comm",E,E,123,N],[12,"u_debugreg",E,E,123,N],[3,R[259],E,E,N,N],[12,"gregs",E,E,124,N],[12,"fpregs",E,E,124,N],[3,R[291],E,E,N,N],[12,"__key",E,E,125,N],[12,"uid",E,E,125,N],[12,"gid",E,E,125,N],[12,"cuid",E,E,125,N],[12,"cgid",E,E,125,N],[12,"mode",E,E,125,N],[12,"__seq",E,E,125,N],[3,R[292],E,E,N,N],[12,"shm_perm",E,E,126,N],[12,"shm_segsz",E,E,126,N],[12,"shm_atime",E,E,126,N],[12,"shm_dtime",E,E,126,N],[12,"shm_ctime",E,E,126,N],[12,"shm_cpid",E,E,126,N],[12,"shm_lpid",E,E,126,N],[12,"shm_nattch",E,E,126,N],[3,R[293],E,E,N,N],[12,"c_iflag",E,E,127,N],[12,"c_oflag",E,E,127,N],[12,"c_cflag",E,E,127,N],[12,"c_lflag",E,E,127,N],[12,"c_line",E,E,127,N],[12,"c_cc",E,E,127,N],[12,"c_ispeed",E,E,127,N],[12,"c_ospeed",E,E,127,N],[3,R[294],E,E,N,N],[12,R[175],E,E,128,N],[12,"imr_address",E,E,128,N],[12,"imr_ifindex",E,E,128,N],[3,R[260],E,E,N,N],[12,"cwd",E,E,129,N],[12,"swd",E,E,129,N],[12,"ftw",E,E,129,N],[12,"fop",E,E,129,N],[12,"rip",E,E,129,N],[12,"rdp",E,E,129,N],[12,"mxcsr",E,E,129,N],[12,R[199],E,E,129,N],[12,"st_space",E,E,129,N],[12,"xmm_space",E,E,129,N],[3,R[261],E,E,N,N],[12,"uc_flags",E,E,130,N],[12,"uc_link",E,E,130,N],[12,"uc_stack",E,E,130,N],[12,"uc_mcontext",E,E,130,N],[12,"uc_sigmask",E,E,130,N],[3,"statvfs",E,E,N,N],[12,"f_bsize",E,E,131,N],[12,R[196],E,E,131,N],[12,R[197],E,E,131,N],[12,"f_bfree",E,E,131,N],[12,R[198],E,E,131,N],[12,"f_files",E,E,131,N],[12,"f_ffree",E,E,131,N],[12,"f_favail",E,E,131,N],[12,"f_fsid",E,E,131,N],[12,"f_flag",E,E,131,N],[12,R[200],E,E,131,N],[3,R[262],E,E,N,N],[3,"sem_t",E,E,N,N],[3,R[263],E,E,N,N],[3,R[264],E,E,N,N],[3,R[265],E,E,N,N],[3,R[266],E,E,N,N],[3,R[267],E,E,N,N],[3,R[268],E,E,N,N],[3,R[295],E,E,N,N],[12,"s6_addr",E,E,132,N],[4,"DIR",E,E,N,N],[4,"FILE",E,E,N,N],[4,"fpos_t",E,E,N,N],[4,R[297],E,E,N,N],[4,R[298],E,E,N,N],[5,"CMSG_FIRSTHDR",E,E,N,[[]]],[5,"CMSG_DATA",E,E,N,[[]]],[5,"CMSG_SPACE",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN",E,E,N,[[["c_uint"]],["c_uint"]]],[5,"FD_CLR",E,E,N,[[["c_int"]]]],[5,"FD_ISSET",E,E,N,[[["c_int"]],["bool"]]],[5,"FD_SET",E,E,N,[[["c_int"]]]],[5,"FD_ZERO",E,E,N,[[]]],[5,"WIFSTOPPED",E,E,N,[[["c_int"]],["bool"]]],[5,"WSTOPSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED",E,E,N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED",E,E,N,[[["c_int"]],["bool"]]],[5,"WTERMSIG",E,E,N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED",E,E,N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS",E,E,N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP",E,E,N,[[["c_int"]],["bool"]]],[5,"QCMD",E,E,N,[[["c_int"]],["c_int"]]],[5,"IPOPT_COPIED",E,E,N,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS",E,E,N,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER",E,E,N,[[["u8"]],["u8"]]],[5,"IPTOS_ECN",E,E,N,[[["u8"]],["u8"]]],[5,"NLA_ALIGN",E,E,N,[[["c_int"]],["c_int"]]],[5,"CMSG_NXTHDR",E,E,N,[[]]],[5,"CPU_ZERO",E,E,N,[[[R[201]]]]],[5,"CPU_SET",E,E,N,[[[R[201]],["usize"]]]],[5,"CPU_CLR",E,E,N,[[[R[201]],["usize"]]]],[5,"CPU_ISSET",E,E,N,[[[R[201]],["usize"]],["bool"]]],[5,"CPU_EQUAL",E,E,N,[[[R[201]]],["bool"]]],[5,"major",E,E,N,[[["dev_t"]],["c_uint"]]],[5,"minor",E,E,N,[[["dev_t"]],["c_uint"]]],[5,"makedev",E,E,N,[[["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS",E,E,N,[[["u8"]],["u8"]]],[5,"IPTOS_PREC",E,E,N,[[["u8"]],["u8"]]],[5,"RT_TOS",E,E,N,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS",E,E,N,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR",E,E,N,[[["u32"]],["bool"]]],[5,"isalnum",E,E,N,N],[5,"isalpha",E,E,N,N],[5,"iscntrl",E,E,N,N],[5,"isdigit",E,E,N,N],[5,"isgraph",E,E,N,N],[5,"islower",E,E,N,N],[5,"isprint",E,E,N,N],[5,"ispunct",E,E,N,N],[5,"isspace",E,E,N,N],[5,"isupper",E,E,N,N],[5,"isxdigit",E,E,N,N],[5,"isblank",E,E,N,N],[5,"tolower",E,E,N,N],[5,"toupper",E,E,N,N],[5,"fopen",E,E,N,N],[5,"freopen",E,E,N,N],[5,"fflush",E,E,N,N],[5,"fclose",E,E,N,N],[5,"remove",E,E,N,N],[5,"rename",E,E,N,N],[5,"tmpfile",E,E,N,N],[5,"setvbuf",E,E,N,N],[5,"setbuf",E,E,N,N],[5,"getchar",E,E,N,N],[5,"putchar",E,E,N,N],[5,"fgetc",E,E,N,N],[5,"fgets",E,E,N,N],[5,"fputc",E,E,N,N],[5,"fputs",E,E,N,N],[5,"puts",E,E,N,N],[5,"ungetc",E,E,N,N],[5,"fread",E,E,N,N],[5,"fwrite",E,E,N,N],[5,"fseek",E,E,N,N],[5,"ftell",E,E,N,N],[5,"rewind",E,E,N,N],[5,"fgetpos",E,E,N,N],[5,"fsetpos",E,E,N,N],[5,"feof",E,E,N,N],[5,"ferror",E,E,N,N],[5,"perror",E,E,N,N],[5,"atoi",E,E,N,N],[5,"strtod",E,E,N,N],[5,"strtol",E,E,N,N],[5,"strtoul",E,E,N,N],[5,"calloc",E,E,N,N],[5,"malloc",E,E,N,N],[5,"realloc",E,E,N,N],[5,"free",E,E,N,N],[5,"abort",E,E,N,N],[5,"exit",E,E,N,N],[5,"_exit",E,E,N,N],[5,"atexit",E,E,N,N],[5,"system",E,E,N,N],[5,"getenv",E,E,N,N],[5,"strcpy",E,E,N,N],[5,"strncpy",E,E,N,N],[5,"strcat",E,E,N,N],[5,"strncat",E,E,N,N],[5,"strcmp",E,E,N,N],[5,"strncmp",E,E,N,N],[5,"strcoll",E,E,N,N],[5,"strchr",E,E,N,N],[5,"strrchr",E,E,N,N],[5,"strspn",E,E,N,N],[5,"strcspn",E,E,N,N],[5,"strdup",E,E,N,N],[5,"strpbrk",E,E,N,N],[5,"strstr",E,E,N,N],[5,"strcasecmp",E,E,N,N],[5,"strncasecmp",E,E,N,N],[5,"strlen",E,E,N,N],[5,"strnlen",E,E,N,N],[5,"strerror",E,E,N,N],[5,"strtok",E,E,N,N],[5,"strxfrm",E,E,N,N],[5,"wcslen",E,E,N,N],[5,"wcstombs",E,E,N,N],[5,"memchr",E,E,N,N],[5,"memcmp",E,E,N,N],[5,"memcpy",E,E,N,N],[5,"memmove",E,E,N,N],[5,"memset",E,E,N,N],[5,"getpwnam",E,E,N,N],[5,"getpwuid",E,E,N,N],[5,"fprintf",E,E,N,N],[5,"printf",E,E,N,N],[5,"snprintf",E,E,N,N],[5,"sprintf",E,E,N,N],[5,"fscanf",E,E,N,N],[5,"scanf",E,E,N,N],[5,"sscanf",E,E,N,N],[5,"getchar_unlocked",E,E,N,N],[5,"putchar_unlocked",E,E,N,N],[5,"socket",E,E,N,N],[5,"connect",E,E,N,N],[5,"listen",E,E,N,N],[5,"accept",E,E,N,N],[5,"getpeername",E,E,N,N],[5,"getsockname",E,E,N,N],[5,"setsockopt",E,E,N,N],[5,"socketpair",E,E,N,N],[5,"sendto",E,E,N,N],[5,"shutdown",E,E,N,N],[5,"chmod",E,E,N,N],[5,"fchmod",E,E,N,N],[5,"fstat",E,E,N,N],[5,"mkdir",E,E,N,N],[5,"stat",E,E,N,N],[5,"pclose",E,E,N,N],[5,"fdopen",E,E,N,N],[5,"fileno",E,E,N,N],[5,"open",E,E,N,N],[5,"creat",E,E,N,N],[5,"fcntl",E,E,N,N],[5,"opendir",E,E,N,N],[5,"readdir",E,E,N,N],[5,"closedir",E,E,N,N],[5,"rewinddir",E,E,N,N],[5,"fchmodat",E,E,N,N],[5,"fchown",E,E,N,N],[5,"fchownat",E,E,N,N],[5,"fstatat",E,E,N,N],[5,"linkat",E,E,N,N],[5,"renameat",E,E,N,N],[5,"symlinkat",E,E,N,N],[5,"unlinkat",E,E,N,N],[5,"access",E,E,N,N],[5,"alarm",E,E,N,N],[5,"chdir",E,E,N,N],[5,"fchdir",E,E,N,N],[5,"chown",E,E,N,N],[5,"lchown",E,E,N,N],[5,"close",E,E,N,N],[5,"dup",E,E,N,N],[5,"dup2",E,E,N,N],[5,"execl",E,E,N,N],[5,"execle",E,E,N,N],[5,"execlp",E,E,N,N],[5,"execv",E,E,N,N],[5,"execve",E,E,N,N],[5,"execvp",E,E,N,N],[5,"fork",E,E,N,N],[5,"fpathconf",E,E,N,N],[5,"getcwd",E,E,N,N],[5,"getegid",E,E,N,N],[5,"geteuid",E,E,N,N],[5,"getgid",E,E,N,N],[5,"getgroups",E,E,N,N],[5,"getlogin",E,E,N,N],[5,"getopt",E,E,N,N],[5,"getpgid",E,E,N,N],[5,"getpgrp",E,E,N,N],[5,"getpid",E,E,N,N],[5,"getppid",E,E,N,N],[5,"getuid",E,E,N,N],[5,"isatty",E,E,N,N],[5,"link",E,E,N,N],[5,"lseek",E,E,N,N],[5,"pathconf",E,E,N,N],[5,"pipe",E,E,N,N],[5,"posix_memalign",E,E,N,N],[5,"read",E,E,N,N],[5,"rmdir",E,E,N,N],[5,"seteuid",E,E,N,N],[5,"setegid",E,E,N,N],[5,"setgid",E,E,N,N],[5,"setpgid",E,E,N,N],[5,"setsid",E,E,N,N],[5,"setuid",E,E,N,N],[5,"sleep",E,E,N,N],[5,"nanosleep",E,E,N,N],[5,"tcgetpgrp",E,E,N,N],[5,"tcsetpgrp",E,E,N,N],[5,"ttyname",E,E,N,N],[5,"ttyname_r",E,E,N,N],[5,"unlink",E,E,N,N],[5,"wait",E,E,N,N],[5,"waitpid",E,E,N,N],[5,"write",E,E,N,N],[5,"pread",E,E,N,N],[5,"pwrite",E,E,N,N],[5,"umask",E,E,N,N],[5,"utime",E,E,N,N],[5,"kill",E,E,N,N],[5,"killpg",E,E,N,N],[5,"mlock",E,E,N,N],[5,"munlock",E,E,N,N],[5,"mlockall",E,E,N,N],[5,"munlockall",E,E,N,N],[5,"mmap",E,E,N,N],[5,"munmap",E,E,N,N],[5,"if_nametoindex",E,E,N,N],[5,"if_indextoname",E,E,N,N],[5,"lstat",E,E,N,N],[5,"fsync",E,E,N,N],[5,"setenv",E,E,N,N],[5,"unsetenv",E,E,N,N],[5,"symlink",E,E,N,N],[5,"ftruncate",E,E,N,N],[5,"signal",E,E,N,N],[5,"getrusage",E,E,N,N],[5,"realpath",E,E,N,N],[5,"flock",E,E,N,N],[5,"times",E,E,N,N],[5,"pthread_self",E,E,N,N],[5,"pthread_join",E,E,N,N],[5,"pthread_exit",E,E,N,N],[5,"pthread_attr_init",E,E,N,N],[5,"pthread_attr_destroy",E,E,N,N],[5,"pthread_attr_setstacksize",E,E,N,N],[5,"pthread_attr_setdetachstate",E,E,N,N],[5,"pthread_detach",E,E,N,N],[5,"sched_yield",E,E,N,N],[5,"pthread_key_create",E,E,N,N],[5,"pthread_key_delete",E,E,N,N],[5,"pthread_getspecific",E,E,N,N],[5,"pthread_setspecific",E,E,N,N],[5,"pthread_mutex_init",E,E,N,N],[5,"pthread_mutex_destroy",E,E,N,N],[5,"pthread_mutex_lock",E,E,N,N],[5,"pthread_mutex_trylock",E,E,N,N],[5,"pthread_mutex_unlock",E,E,N,N],[5,"pthread_mutexattr_init",E,E,N,N],[5,"pthread_mutexattr_destroy",E,E,N,N],[5,"pthread_mutexattr_settype",E,E,N,N],[5,"pthread_cond_init",E,E,N,N],[5,"pthread_cond_wait",E,E,N,N],[5,"pthread_cond_timedwait",E,E,N,N],[5,"pthread_cond_signal",E,E,N,N],[5,"pthread_cond_broadcast",E,E,N,N],[5,"pthread_cond_destroy",E,E,N,N],[5,"pthread_condattr_init",E,E,N,N],[5,"pthread_condattr_destroy",E,E,N,N],[5,"pthread_rwlock_init",E,E,N,N],[5,"pthread_rwlock_destroy",E,E,N,N],[5,"pthread_rwlock_rdlock",E,E,N,N],[5,"pthread_rwlock_tryrdlock",E,E,N,N],[5,"pthread_rwlock_wrlock",E,E,N,N],[5,"pthread_rwlock_trywrlock",E,E,N,N],[5,"pthread_rwlock_unlock",E,E,N,N],[5,"pthread_rwlockattr_init",E,E,N,N],[5,"pthread_rwlockattr_destroy",E,E,N,N],[5,"getsockopt",E,E,N,N],[5,"raise",E,E,N,N],[5,R[202],E,E,N,N],[5,"utimes",E,E,N,N],[5,"dlopen",E,E,N,N],[5,"dlerror",E,E,N,N],[5,"dlsym",E,E,N,N],[5,"dlclose",E,E,N,N],[5,"dladdr",E,E,N,N],[5,"getaddrinfo",E,E,N,N],[5,"freeaddrinfo",E,E,N,N],[5,"gai_strerror",E,E,N,N],[5,"res_init",E,E,N,N],[5,"gmtime_r",E,E,N,N],[5,"localtime_r",E,E,N,N],[5,"mktime",E,E,N,N],[5,"time",E,E,N,N],[5,"gmtime",E,E,N,N],[5,"localtime",E,E,N,N],[5,"difftime",E,E,N,N],[5,"mknod",E,E,N,N],[5,"gethostname",E,E,N,N],[5,"getservbyname",E,E,N,N],[5,"getprotobyname",E,E,N,N],[5,"getprotobynumber",E,E,N,N],[5,"chroot",E,E,N,N],[5,"usleep",E,E,N,N],[5,"send",E,E,N,N],[5,"recv",E,E,N,N],[5,"putenv",E,E,N,N],[5,"poll",E,E,N,N],[5,"select",E,E,N,N],[5,"setlocale",E,E,N,N],[5,"localeconv",E,E,N,N],[5,"sem_wait",E,E,N,N],[5,"sem_trywait",E,E,N,N],[5,"sem_post",E,E,N,N],[5,"statvfs",E,E,N,N],[5,"fstatvfs",E,E,N,N],[5,"readlink",E,E,N,N],[5,"sigemptyset",E,E,N,N],[5,"sigaddset",E,E,N,N],[5,"sigfillset",E,E,N,N],[5,"sigdelset",E,E,N,N],[5,"sigismember",E,E,N,N],[5,"sigprocmask",E,E,N,N],[5,"sigpending",E,E,N,N],[5,"timegm",E,E,N,N],[5,"sysconf",E,E,N,N],[5,"mkfifo",E,E,N,N],[5,"pselect",E,E,N,N],[5,"fseeko",E,E,N,N],[5,"ftello",E,E,N,N],[5,"tcdrain",E,E,N,N],[5,"cfgetispeed",E,E,N,N],[5,"cfgetospeed",E,E,N,N],[5,"cfsetispeed",E,E,N,N],[5,"cfsetospeed",E,E,N,N],[5,"tcgetattr",E,E,N,N],[5,"tcsetattr",E,E,N,N],[5,"tcflow",E,E,N,N],[5,"tcflush",E,E,N,N],[5,"tcgetsid",E,E,N,N],[5,"tcsendbreak",E,E,N,N],[5,"mkstemp",E,E,N,N],[5,"mkdtemp",E,E,N,N],[5,"tmpnam",E,E,N,N],[5,"openlog",E,E,N,N],[5,"closelog",E,E,N,N],[5,"setlogmask",E,E,N,N],[5,"syslog",E,E,N,N],[5,"nice",E,E,N,N],[5,"grantpt",E,E,N,N],[5,"posix_openpt",E,E,N,N],[5,"ptsname",E,E,N,N],[5,"unlockpt",E,E,N,N],[5,"strcasestr",E,E,N,N],[5,"getline",E,E,N,N],[5,"getsid",E,E,N,N],[5,"truncate",E,E,N,N],[5,"pause",E,E,N,N],[5,"readlinkat",E,E,N,N],[5,"mkdirat",E,E,N,N],[5,"openat",E,E,N,N],[5,"fdopendir",E,E,N,N],[5,"readdir_r",E,"The 64-bit libc on Solaris and illumos only has readdir_r.…",N,N],[5,"cfmakeraw",E,E,N,N],[5,"cfsetspeed",E,E,N,N],[5,"sem_destroy",E,E,N,N],[5,"sem_init",E,E,N,N],[5,"fdatasync",E,E,N,N],[5,"mincore",E,E,N,N],[5,"clock_getres",E,E,N,N],[5,"clock_gettime",E,E,N,N],[5,"clock_settime",E,E,N,N],[5,"dirfd",E,E,N,N],[5,"pthread_getattr_np",E,E,N,N],[5,"pthread_attr_getstack",E,E,N,N],[5,"memalign",E,E,N,N],[5,"setgroups",E,E,N,N],[5,"pipe2",E,E,N,N],[5,"statfs",E,E,N,N],[5,R[253],E,E,N,N],[5,"fstatfs",E,E,N,N],[5,"fstatfs64",E,E,N,N],[5,R[203],E,E,N,N],[5,"fstatvfs64",E,E,N,N],[5,"memrchr",E,E,N,N],[5,"posix_fadvise",E,E,N,N],[5,"futimens",E,E,N,N],[5,"utimensat",E,E,N,N],[5,"duplocale",E,E,N,N],[5,"freelocale",E,E,N,N],[5,"newlocale",E,E,N,N],[5,"uselocale",E,E,N,N],[5,"creat64",E,E,N,N],[5,"fstat64",E,E,N,N],[5,"fstatat64",E,E,N,N],[5,"ftruncate64",E,E,N,N],[5,"lseek64",E,E,N,N],[5,"lstat64",E,E,N,N],[5,"mmap64",E,E,N,N],[5,"open64",E,E,N,N],[5,"openat64",E,E,N,N],[5,"pread64",E,E,N,N],[5,"preadv64",E,E,N,N],[5,"pwrite64",E,E,N,N],[5,"pwritev64",E,E,N,N],[5,"readdir64",E,E,N,N],[5,"readdir64_r",E,E,N,N],[5,"stat64",E,E,N,N],[5,"truncate64",E,E,N,N],[5,"mknodat",E,E,N,N],[5,"pthread_condattr_getclock",E,E,N,N],[5,"pthread_condattr_setclock",E,E,N,N],[5,"pthread_condattr_setpshared",E,E,N,N],[5,"accept4",E,E,N,N],[5,"pthread_mutexattr_setpshared",E,E,N,N],[5,"pthread_rwlockattr_getpshared",E,E,N,N],[5,"pthread_rwlockattr_setpshared",E,E,N,N],[5,"ptsname_r",E,E,N,N],[5,"clearenv",E,E,N,N],[5,"waitid",E,E,N,N],[5,"setreuid",E,E,N,N],[5,"setregid",E,E,N,N],[5,"getresuid",E,E,N,N],[5,"getresgid",E,E,N,N],[5,"acct",E,E,N,N],[5,"brk",E,E,N,N],[5,"sbrk",E,E,N,N],[5,"vfork",E,E,N,N],[5,"setresgid",E,E,N,N],[5,"setresuid",E,E,N,N],[5,"wait4",E,E,N,N],[5,"openpty",E,E,N,N],[5,"forkpty",E,E,N,N],[5,"login_tty",E,E,N,N],[5,"execvpe",E,E,N,N],[5,"fexecve",E,E,N,N],[5,"getifaddrs",E,E,N,N],[5,"freeifaddrs",E,E,N,N],[5,"bind",E,E,N,N],[5,"writev",E,E,N,N],[5,"readv",E,E,N,N],[5,"sendmsg",E,E,N,N],[5,"recvmsg",E,E,N,N],[5,"uname",E,E,N,N],[5,"strerror_r",E,E,N,N],[5,"abs",E,E,N,N],[5,"atof",E,E,N,N],[5,"labs",E,E,N,N],[5,"rand",E,E,N,N],[5,"srand",E,E,N,N],[5,"aio_read",E,E,N,N],[5,"aio_write",E,E,N,N],[5,"aio_fsync",E,E,N,N],[5,"aio_error",E,E,N,N],[5,"aio_return",E,E,N,N],[5,"aio_suspend",E,E,N,N],[5,"aio_cancel",E,E,N,N],[5,"lio_listio",E,E,N,N],[5,"lutimes",E,E,N,N],[5,"setpwent",E,E,N,N],[5,"endpwent",E,E,N,N],[5,"getpwent",E,E,N,N],[5,"setgrent",E,E,N,N],[5,"endgrent",E,E,N,N],[5,"getgrent",E,E,N,N],[5,"setspent",E,E,N,N],[5,"endspent",E,E,N,N],[5,"getspent",E,E,N,N],[5,"getspnam",E,E,N,N],[5,"shm_open",E,E,N,N],[5,"shmget",E,E,N,N],[5,"shmat",E,E,N,N],[5,"shmdt",E,E,N,N],[5,"shmctl",E,E,N,N],[5,"ftok",E,E,N,N],[5,"semget",E,E,N,N],[5,"semop",E,E,N,N],[5,"semctl",E,E,N,N],[5,"msgctl",E,E,N,N],[5,"msgget",E,E,N,N],[5,"msgrcv",E,E,N,N],[5,"msgsnd",E,E,N,N],[5,"mprotect",E,E,N,N],[5,"__errno_location",E,E,N,N],[5,"fopen64",E,E,N,N],[5,"freopen64",E,E,N,N],[5,"tmpfile64",E,E,N,N],[5,"fgetpos64",E,E,N,N],[5,"fsetpos64",E,E,N,N],[5,"fseeko64",E,E,N,N],[5,"ftello64",E,E,N,N],[5,"fallocate",E,E,N,N],[5,"fallocate64",E,E,N,N],[5,"posix_fallocate",E,E,N,N],[5,"posix_fallocate64",E,E,N,N],[5,"readahead",E,E,N,N],[5,"getxattr",E,E,N,N],[5,"lgetxattr",E,E,N,N],[5,"fgetxattr",E,E,N,N],[5,"setxattr",E,E,N,N],[5,"lsetxattr",E,E,N,N],[5,"fsetxattr",E,E,N,N],[5,"listxattr",E,E,N,N],[5,"llistxattr",E,E,N,N],[5,"flistxattr",E,E,N,N],[5,"removexattr",E,E,N,N],[5,"lremovexattr",E,E,N,N],[5,"fremovexattr",E,E,N,N],[5,"signalfd",E,E,N,N],[5,"timerfd_create",E,E,N,N],[5,"timerfd_gettime",E,E,N,N],[5,"timerfd_settime",E,E,N,N],[5,"pwritev",E,E,N,N],[5,"preadv",E,E,N,N],[5,"quotactl",E,E,N,N],[5,"mq_open",E,E,N,N],[5,"mq_close",E,E,N,N],[5,"mq_unlink",E,E,N,N],[5,"mq_receive",E,E,N,N],[5,"mq_timedreceive",E,E,N,N],[5,"mq_send",E,E,N,N],[5,"mq_timedsend",E,E,N,N],[5,"mq_getattr",E,E,N,N],[5,"mq_setattr",E,E,N,N],[5,"epoll_pwait",E,E,N,N],[5,"dup3",E,E,N,N],[5,"mkostemp",E,E,N,N],[5,"mkostemps",E,E,N,N],[5,"sigtimedwait",E,E,N,N],[5,"sigwaitinfo",E,E,N,N],[5,"nl_langinfo_l",E,E,N,N],[5,"getnameinfo",E,E,N,N],[5,"pthread_setschedprio",E,E,N,N],[5,"getloadavg",E,E,N,N],[5,"process_vm_readv",E,E,N,N],[5,"process_vm_writev",E,E,N,N],[5,"reboot",E,E,N,N],[5,"setfsgid",E,E,N,N],[5,"setfsuid",E,E,N,N],[5,"mkfifoat",E,E,N,N],[5,R[204],E,E,N,N],[5,"if_freenameindex",E,E,N,N],[5,"sync_file_range",E,E,N,N],[5,"mremap",E,E,N,N],[5,"glob",E,E,N,N],[5,"globfree",E,E,N,N],[5,"posix_madvise",E,E,N,N],[5,"shm_unlink",E,E,N,N],[5,"seekdir",E,E,N,N],[5,"telldir",E,E,N,N],[5,"madvise",E,E,N,N],[5,"msync",E,E,N,N],[5,"remap_file_pages",E,E,N,N],[5,"recvfrom",E,E,N,N],[5,"mkstemps",E,E,N,N],[5,"futimes",E,E,N,N],[5,"nl_langinfo",E,E,N,N],[5,"getdomainname",E,E,N,N],[5,"setdomainname",E,E,N,N],[5,"vhangup",E,E,N,N],[5,"sync",E,E,N,N],[5,"syscall",E,E,N,N],[5,"sched_getaffinity",E,E,N,N],[5,"sched_setaffinity",E,E,N,N],[5,"epoll_create",E,E,N,N],[5,"epoll_create1",E,E,N,N],[5,"epoll_wait",E,E,N,N],[5,"epoll_ctl",E,E,N,N],[5,"pthread_getschedparam",E,E,N,N],[5,"unshare",E,E,N,N],[5,"umount",E,E,N,N],[5,"sched_get_priority_max",E,E,N,N],[5,"tee",E,E,N,N],[5,"settimeofday",E,E,N,N],[5,"splice",E,E,N,N],[5,"eventfd",E,E,N,N],[5,"sched_rr_get_interval",E,E,N,N],[5,"sem_timedwait",E,E,N,N],[5,"sem_getvalue",E,E,N,N],[5,"sched_setparam",E,E,N,N],[5,"setns",E,E,N,N],[5,"swapoff",E,E,N,N],[5,"vmsplice",E,E,N,N],[5,"mount",E,E,N,N],[5,"personality",E,E,N,N],[5,"prctl",E,E,N,N],[5,"sched_getparam",E,E,N,N],[5,"ppoll",E,E,N,N],[5,"pthread_mutex_timedlock",E,E,N,N],[5,"clone",E,E,N,N],[5,"sched_getscheduler",E,E,N,N],[5,"clock_nanosleep",E,E,N,N],[5,"pthread_attr_getguardsize",E,E,N,N],[5,"sethostname",E,E,N,N],[5,"sched_get_priority_min",E,E,N,N],[5,"pthread_condattr_getpshared",E,E,N,N],[5,"sysinfo",E,E,N,N],[5,"umount2",E,E,N,N],[5,"pthread_setschedparam",E,E,N,N],[5,"swapon",E,E,N,N],[5,"sched_setscheduler",E,E,N,N],[5,"sendfile",E,E,N,N],[5,"sigsuspend",E,E,N,N],[5,"getgrgid_r",E,E,N,N],[5,"sigaltstack",E,E,N,N],[5,"sem_close",E,E,N,N],[5,"getdtablesize",E,E,N,N],[5,"getgrnam_r",E,E,N,N],[5,"initgroups",E,E,N,N],[5,"pthread_sigmask",E,E,N,N],[5,"sem_open",E,E,N,N],[5,"getgrnam",E,E,N,N],[5,"pthread_cancel",E,E,N,N],[5,"pthread_kill",E,E,N,N],[5,"sem_unlink",E,E,N,N],[5,"daemon",E,E,N,N],[5,"getpwnam_r",E,E,N,N],[5,"getpwuid_r",E,E,N,N],[5,"sigwait",E,E,N,N],[5,"pthread_atfork",E,E,N,N],[5,"getgrgid",E,E,N,N],[5,"getgrouplist",E,E,N,N],[5,"pthread_mutexattr_getpshared",E,E,N,N],[5,"popen",E,E,N,N],[5,"faccessat",E,E,N,N],[5,"pthread_create",E,E,N,N],[5,"dl_iterate_phdr",E,E,N,N],[5,"setmntent",E,E,N,N],[5,"getmntent",E,E,N,N],[5,"addmntent",E,E,N,N],[5,"endmntent",E,E,N,N],[5,"hasmntopt",E,E,N,N],[5,"posix_spawn",E,E,N,N],[5,"posix_spawnp",E,E,N,N],[5,"posix_spawnattr_init",E,E,N,N],[5,"posix_spawnattr_destroy",E,E,N,N],[5,"posix_spawnattr_getsigdefault",E,E,N,N],[5,"posix_spawnattr_setsigdefault",E,E,N,N],[5,"posix_spawnattr_getsigmask",E,E,N,N],[5,"posix_spawnattr_setsigmask",E,E,N,N],[5,"posix_spawnattr_getflags",E,E,N,N],[5,"posix_spawnattr_setflags",E,E,N,N],[5,"posix_spawnattr_getpgroup",E,E,N,N],[5,"posix_spawnattr_setpgroup",E,E,N,N],[5,"posix_spawnattr_getschedpolicy",E,E,N,N],[5,"posix_spawnattr_setschedpolicy",E,E,N,N],[5,"posix_spawnattr_getschedparam",E,E,N,N],[5,"posix_spawnattr_setschedparam",E,E,N,N],[5,"posix_spawn_file_actions_init",E,E,N,N],[5,"posix_spawn_file_actions_destroy",E,E,N,N],[5,"posix_spawn_file_actions_addopen",E,E,N,N],[5,"posix_spawn_file_actions_addclose",E,E,N,N],[5,"posix_spawn_file_actions_adddup2",E,E,N,N],[5,"fread_unlocked",E,E,N,N],[5,"inotify_rm_watch",E,E,N,N],[5,"inotify_init",E,E,N,N],[5,"inotify_init1",E,E,N,N],[5,"inotify_add_watch",E,E,N,N],[5,"sendmmsg",E,E,N,N],[5,"recvmmsg",E,E,N,N],[5,"getrlimit64",E,E,N,N],[5,"setrlimit64",E,E,N,N],[5,"getrlimit",E,E,N,N],[5,"setrlimit",E,E,N,N],[5,"prlimit",E,E,N,N],[5,"prlimit64",E,E,N,N],[5,"utmpname",E,E,N,N],[5,"utmpxname",E,E,N,N],[5,"getutxent",E,E,N,N],[5,"getutxid",E,E,N,N],[5,"getutxline",E,E,N,N],[5,"pututxline",E,E,N,N],[5,"setutxent",E,E,N,N],[5,"endutxent",E,E,N,N],[5,"getpt",E,E,N,N],[5,"mallopt",E,E,N,N],[5,"gettimeofday",E,E,N,N],[5,"statx",E,E,N,N],[5,"getrandom",E,E,N,N],[5,"ioctl",E,E,N,N],[5,"backtrace",E,E,N,N],[5,"glob64",E,E,N,N],[5,"globfree64",E,E,N,N],[5,"ptrace",E,E,N,N],[5,"pthread_attr_getaffinity_np",E,E,N,N],[5,"pthread_attr_setaffinity_np",E,E,N,N],[5,"getpriority",E,E,N,N],[5,"setpriority",E,E,N,N],[5,"pthread_getaffinity_np",E,E,N,N],[5,"pthread_setaffinity_np",E,E,N,N],[5,"pthread_rwlockattr_getkind_np",E,E,N,N],[5,"pthread_rwlockattr_setkind_np",E,E,N,N],[5,"sched_getcpu",E,E,N,N],[5,R[248],E,E,N,N],[5,"malloc_usable_size",E,E,N,N],[5,"getauxval",E,E,N,N],[5,"getpwent_r",E,E,N,N],[5,"getgrent_r",E,E,N,N],[5,"pthread_getname_np",E,E,N,N],[5,"pthread_setname_np",E,E,N,N],[5,"getcontext",E,E,N,N],[5,"setcontext",E,E,N,N],[5,"makecontext",E,E,N,N],[5,"swapcontext",E,E,N,N],[5,"iopl",E,E,N,N],[5,"ioperm",E,E,N,N],[5,"sysctl",E,E,N,N],[11,"si_addr",E,E,113,[[["self"]]]],[11,"si_value",E,E,113,[[["self"]],["sigval"]]],[6,"int8_t",E,E,N,N],[6,"int16_t",E,E,N,N],[6,"int32_t",E,E,N,N],[6,"int64_t",E,E,N,N],[6,"uint8_t",E,E,N,N],[6,"uint16_t",E,E,N,N],[6,"uint32_t",E,E,N,N],[6,"uint64_t",E,E,N,N],[6,"c_schar",E,E,N,N],[6,"c_uchar",E,E,N,N],[6,"c_short",E,E,N,N],[6,"c_ushort",E,E,N,N],[6,"c_int",E,E,N,N],[6,"c_uint",E,E,N,N],[6,"c_float",E,E,N,N],[6,"c_double",E,E,N,N],[6,"c_longlong",E,E,N,N],[6,"c_ulonglong",E,E,N,N],[6,"intmax_t",E,E,N,N],[6,"uintmax_t",E,E,N,N],[6,"size_t",E,E,N,N],[6,"ptrdiff_t",E,E,N,N],[6,"intptr_t",E,E,N,N],[6,"uintptr_t",E,E,N,N],[6,"ssize_t",E,E,N,N],[6,"pid_t",E,E,N,N],[6,"uid_t",E,E,N,N],[6,"gid_t",E,E,N,N],[6,"in_addr_t",E,E,N,N],[6,"in_port_t",E,E,N,N],[6,"sighandler_t",E,E,N,N],[6,"cc_t",E,E,N,N],[6,"locale_t",E,E,N,N],[6,"sa_family_t",E,E,N,N],[6,"speed_t",E,E,N,N],[6,"tcflag_t",E,E,N,N],[6,"clockid_t",E,E,N,N],[6,"key_t",E,E,N,N],[6,"id_t",E,E,N,N],[6,"useconds_t",E,E,N,N],[6,"dev_t",E,E,N,N],[6,"socklen_t",E,E,N,N],[6,"mode_t",E,E,N,N],[6,"ino64_t",E,E,N,N],[6,"off64_t",E,E,N,N],[6,"blkcnt64_t",E,E,N,N],[6,"rlim64_t",E,E,N,N],[6,"mqd_t",E,E,N,N],[6,"nfds_t",E,E,N,N],[6,"nl_item",E,E,N,N],[6,"idtype_t",E,E,N,N],[6,"loff_t",E,E,N,N],[6,"pthread_key_t",E,E,N,N],[6,"__u8",E,E,N,N],[6,"__u16",E,E,N,N],[6,"__s16",E,E,N,N],[6,"__u32",E,E,N,N],[6,"__s32",E,E,N,N],[6,"Elf32_Half",E,E,N,N],[6,"Elf32_Word",E,E,N,N],[6,"Elf32_Off",E,E,N,N],[6,"Elf32_Addr",E,E,N,N],[6,"Elf64_Half",E,E,N,N],[6,"Elf64_Word",E,E,N,N],[6,"Elf64_Off",E,E,N,N],[6,"Elf64_Addr",E,E,N,N],[6,"Elf64_Xword",E,E,N,N],[6,"Elf64_Sxword",E,E,N,N],[6,"Elf32_Section",E,E,N,N],[6,"Elf64_Section",E,E,N,N],[6,"pthread_t",E,E,N,N],[6,"__priority_which_t",E,E,N,N],[6,"__rlimit_resource_t",E,E,N,N],[6,"clock_t",E,E,N,N],[6,"time_t",E,E,N,N],[6,"ino_t",E,E,N,N],[6,"off_t",E,E,N,N],[6,"blkcnt_t",E,E,N,N],[6,"shmatt_t",E,E,N,N],[6,"msgqnum_t",E,E,N,N],[6,"msglen_t",E,E,N,N],[6,"fsblkcnt_t",E,E,N,N],[6,"fsfilcnt_t",E,E,N,N],[6,"rlim_t",E,E,N,N],[6,"__fsword_t",E,E,N,N],[6,"c_char",E,E,N,N],[6,"wchar_t",E,E,N,N],[6,"nlink_t",E,E,N,N],[6,"blksize_t",E,E,N,N],[6,"greg_t",E,E,N,N],[6,"suseconds_t",E,E,N,N],[6,"__u64",E,E,N,N],[6,"c_long",E,E,N,N],[6,"c_ulong",E,E,N,N],[17,"INT_MIN",E,E,N,N],[17,"INT_MAX",E,E,N,N],[17,"SIG_DFL",E,E,N,N],[17,"SIG_IGN",E,E,N,N],[17,"SIG_ERR",E,E,N,N],[17,"DT_UNKNOWN",E,E,N,N],[17,"DT_FIFO",E,E,N,N],[17,"DT_CHR",E,E,N,N],[17,"DT_DIR",E,E,N,N],[17,"DT_BLK",E,E,N,N],[17,"DT_REG",E,E,N,N],[17,"DT_LNK",E,E,N,N],[17,"DT_SOCK",E,E,N,N],[17,"FD_CLOEXEC",E,E,N,N],[17,"USRQUOTA",E,E,N,N],[17,"GRPQUOTA",E,E,N,N],[17,"SIGIOT",E,E,N,N],[17,"S_ISUID",E,E,N,N],[17,"S_ISGID",E,E,N,N],[17,"S_ISVTX",E,E,N,N],[17,"IF_NAMESIZE",E,E,N,N],[17,"IFNAMSIZ",E,E,N,N],[17,"LOG_EMERG",E,E,N,N],[17,"LOG_ALERT",E,E,N,N],[17,"LOG_CRIT",E,E,N,N],[17,"LOG_ERR",E,E,N,N],[17,"LOG_WARNING",E,E,N,N],[17,"LOG_NOTICE",E,E,N,N],[17,"LOG_INFO",E,E,N,N],[17,"LOG_DEBUG",E,E,N,N],[17,"LOG_KERN",E,E,N,N],[17,"LOG_USER",E,E,N,N],[17,"LOG_MAIL",E,E,N,N],[17,"LOG_DAEMON",E,E,N,N],[17,"LOG_AUTH",E,E,N,N],[17,"LOG_SYSLOG",E,E,N,N],[17,"LOG_LPR",E,E,N,N],[17,"LOG_NEWS",E,E,N,N],[17,"LOG_UUCP",E,E,N,N],[17,"LOG_LOCAL0",E,E,N,N],[17,"LOG_LOCAL1",E,E,N,N],[17,"LOG_LOCAL2",E,E,N,N],[17,"LOG_LOCAL3",E,E,N,N],[17,"LOG_LOCAL4",E,E,N,N],[17,"LOG_LOCAL5",E,E,N,N],[17,"LOG_LOCAL6",E,E,N,N],[17,"LOG_LOCAL7",E,E,N,N],[17,"LOG_PID",E,E,N,N],[17,"LOG_CONS",E,E,N,N],[17,"LOG_ODELAY",E,E,N,N],[17,"LOG_NDELAY",E,E,N,N],[17,"LOG_NOWAIT",E,E,N,N],[17,"LOG_PRIMASK",E,E,N,N],[17,"LOG_FACMASK",E,E,N,N],[17,"PRIO_PROCESS",E,E,N,N],[17,"PRIO_PGRP",E,E,N,N],[17,"PRIO_USER",E,E,N,N],[17,"PRIO_MIN",E,E,N,N],[17,"PRIO_MAX",E,E,N,N],[17,"IPPROTO_ICMP",E,E,N,N],[17,"IPPROTO_ICMPV6",E,E,N,N],[17,"IPPROTO_TCP",E,E,N,N],[17,"IPPROTO_UDP",E,E,N,N],[17,"IPPROTO_IP",E,E,N,N],[17,"IPPROTO_IPV6",E,E,N,N],[17,"INADDR_LOOPBACK",E,E,N,N],[17,"INADDR_ANY",E,E,N,N],[17,"INADDR_BROADCAST",E,E,N,N],[17,"INADDR_NONE",E,E,N,N],[17,"ARPOP_REQUEST",E,E,N,N],[17,"ARPOP_REPLY",E,E,N,N],[17,"ATF_COM",E,E,N,N],[17,"ATF_PERM",E,E,N,N],[17,"ATF_PUBL",E,E,N,N],[17,"ATF_USETRAILERS",E,E,N,N],[17,"EXIT_FAILURE",E,E,N,N],[17,"EXIT_SUCCESS",E,E,N,N],[17,"RAND_MAX",E,E,N,N],[17,"EOF",E,E,N,N],[17,"SEEK_SET",E,E,N,N],[17,"SEEK_CUR",E,E,N,N],[17,"SEEK_END",E,E,N,N],[17,"_IOFBF",E,E,N,N],[17,"_IONBF",E,E,N,N],[17,"_IOLBF",E,E,N,N],[17,"F_DUPFD",E,E,N,N],[17,"F_GETFD",E,E,N,N],[17,"F_SETFD",E,E,N,N],[17,"F_GETFL",E,E,N,N],[17,"F_SETFL",E,E,N,N],[17,"F_SETLEASE",E,E,N,N],[17,"F_GETLEASE",E,E,N,N],[17,"F_NOTIFY",E,E,N,N],[17,"F_CANCELLK",E,E,N,N],[17,"F_DUPFD_CLOEXEC",E,E,N,N],[17,"F_SETPIPE_SZ",E,E,N,N],[17,"F_GETPIPE_SZ",E,E,N,N],[17,"F_ADD_SEALS",E,E,N,N],[17,"F_GET_SEALS",E,E,N,N],[17,"F_SEAL_SEAL",E,E,N,N],[17,"F_SEAL_SHRINK",E,E,N,N],[17,"F_SEAL_GROW",E,E,N,N],[17,"F_SEAL_WRITE",E,E,N,N],[17,"SIGTRAP",E,E,N,N],[17,"PTHREAD_CREATE_JOINABLE",E,E,N,N],[17,"PTHREAD_CREATE_DETACHED",E,E,N,N],[17,"CLOCK_REALTIME",E,E,N,N],[17,"CLOCK_MONOTONIC",E,E,N,N],[17,"CLOCK_PROCESS_CPUTIME_ID",E,E,N,N],[17,"CLOCK_THREAD_CPUTIME_ID",E,E,N,N],[17,"CLOCK_MONOTONIC_RAW",E,E,N,N],[17,"CLOCK_REALTIME_COARSE",E,E,N,N],[17,"CLOCK_MONOTONIC_COARSE",E,E,N,N],[17,"CLOCK_BOOTTIME",E,E,N,N],[17,"CLOCK_REALTIME_ALARM",E,E,N,N],[17,"CLOCK_BOOTTIME_ALARM",E,E,N,N],[17,"TIMER_ABSTIME",E,E,N,N],[17,"RUSAGE_SELF",E,E,N,N],[17,"O_RDONLY",E,E,N,N],[17,"O_WRONLY",E,E,N,N],[17,"O_RDWR",E,E,N,N],[17,"SOCK_CLOEXEC",E,E,N,N],[17,"S_IFIFO",E,E,N,N],[17,"S_IFCHR",E,E,N,N],[17,"S_IFBLK",E,E,N,N],[17,"S_IFDIR",E,E,N,N],[17,"S_IFREG",E,E,N,N],[17,"S_IFLNK",E,E,N,N],[17,"S_IFSOCK",E,E,N,N],[17,"S_IFMT",E,E,N,N],[17,"S_IRWXU",E,E,N,N],[17,"S_IXUSR",E,E,N,N],[17,"S_IWUSR",E,E,N,N],[17,"S_IRUSR",E,E,N,N],[17,"S_IRWXG",E,E,N,N],[17,"S_IXGRP",E,E,N,N],[17,"S_IWGRP",E,E,N,N],[17,"S_IRGRP",E,E,N,N],[17,"S_IRWXO",E,E,N,N],[17,"S_IXOTH",E,E,N,N],[17,"S_IWOTH",E,E,N,N],[17,"S_IROTH",E,E,N,N],[17,"F_OK",E,E,N,N],[17,"R_OK",E,E,N,N],[17,"W_OK",E,E,N,N],[17,"X_OK",E,E,N,N],[17,"STDIN_FILENO",E,E,N,N],[17,"STDOUT_FILENO",E,E,N,N],[17,"STDERR_FILENO",E,E,N,N],[17,"SIGHUP",E,E,N,N],[17,"SIGINT",E,E,N,N],[17,"SIGQUIT",E,E,N,N],[17,"SIGILL",E,E,N,N],[17,"SIGABRT",E,E,N,N],[17,"SIGFPE",E,E,N,N],[17,"SIGKILL",E,E,N,N],[17,"SIGSEGV",E,E,N,N],[17,"SIGPIPE",E,E,N,N],[17,"SIGALRM",E,E,N,N],[17,"SIGTERM",E,E,N,N],[17,"PROT_NONE",E,E,N,N],[17,"PROT_READ",E,E,N,N],[17,"PROT_WRITE",E,E,N,N],[17,"PROT_EXEC",E,E,N,N],[17,"LC_CTYPE",E,E,N,N],[17,"LC_NUMERIC",E,E,N,N],[17,"LC_TIME",E,E,N,N],[17,"LC_COLLATE",E,E,N,N],[17,"LC_MONETARY",E,E,N,N],[17,"LC_MESSAGES",E,E,N,N],[17,"LC_ALL",E,E,N,N],[17,"LC_CTYPE_MASK",E,E,N,N],[17,"LC_NUMERIC_MASK",E,E,N,N],[17,"LC_TIME_MASK",E,E,N,N],[17,"LC_COLLATE_MASK",E,E,N,N],[17,"LC_MONETARY_MASK",E,E,N,N],[17,"LC_MESSAGES_MASK",E,E,N,N],[17,"MAP_FILE",E,E,N,N],[17,"MAP_SHARED",E,E,N,N],[17,"MAP_PRIVATE",E,E,N,N],[17,"MAP_FIXED",E,E,N,N],[17,"MAP_FAILED",E,E,N,N],[17,"MS_ASYNC",E,E,N,N],[17,"MS_INVALIDATE",E,E,N,N],[17,"MS_SYNC",E,E,N,N],[17,"MS_RDONLY",E,E,N,N],[17,"MS_NOSUID",E,E,N,N],[17,"MS_NODEV",E,E,N,N],[17,"MS_NOEXEC",E,E,N,N],[17,"MS_SYNCHRONOUS",E,E,N,N],[17,"MS_REMOUNT",E,E,N,N],[17,"MS_MANDLOCK",E,E,N,N],[17,"MS_DIRSYNC",E,E,N,N],[17,"MS_NOATIME",E,E,N,N],[17,"MS_NODIRATIME",E,E,N,N],[17,"MS_BIND",E,E,N,N],[17,"MS_MOVE",E,E,N,N],[17,"MS_REC",E,E,N,N],[17,"MS_SILENT",E,E,N,N],[17,"MS_POSIXACL",E,E,N,N],[17,"MS_UNBINDABLE",E,E,N,N],[17,"MS_PRIVATE",E,E,N,N],[17,"MS_SLAVE",E,E,N,N],[17,"MS_SHARED",E,E,N,N],[17,"MS_RELATIME",E,E,N,N],[17,"MS_KERNMOUNT",E,E,N,N],[17,"MS_I_VERSION",E,E,N,N],[17,"MS_STRICTATIME",E,E,N,N],[17,"MS_ACTIVE",E,E,N,N],[17,"MS_MGC_VAL",E,E,N,N],[17,"MS_MGC_MSK",E,E,N,N],[17,"EPERM",E,E,N,N],[17,"ENOENT",E,E,N,N],[17,"ESRCH",E,E,N,N],[17,"EINTR",E,E,N,N],[17,"EIO",E,E,N,N],[17,"ENXIO",E,E,N,N],[17,"E2BIG",E,E,N,N],[17,"ENOEXEC",E,E,N,N],[17,"EBADF",E,E,N,N],[17,"ECHILD",E,E,N,N],[17,"EAGAIN",E,E,N,N],[17,"ENOMEM",E,E,N,N],[17,"EACCES",E,E,N,N],[17,"EFAULT",E,E,N,N],[17,"ENOTBLK",E,E,N,N],[17,"EBUSY",E,E,N,N],[17,"EEXIST",E,E,N,N],[17,"EXDEV",E,E,N,N],[17,"ENODEV",E,E,N,N],[17,"ENOTDIR",E,E,N,N],[17,"EISDIR",E,E,N,N],[17,"EINVAL",E,E,N,N],[17,"ENFILE",E,E,N,N],[17,"EMFILE",E,E,N,N],[17,"ENOTTY",E,E,N,N],[17,"ETXTBSY",E,E,N,N],[17,"EFBIG",E,E,N,N],[17,"ENOSPC",E,E,N,N],[17,"ESPIPE",E,E,N,N],[17,"EROFS",E,E,N,N],[17,"EMLINK",E,E,N,N],[17,"EPIPE",E,E,N,N],[17,"EDOM",E,E,N,N],[17,"ERANGE",E,E,N,N],[17,"EWOULDBLOCK",E,E,N,N],[17,"SCM_RIGHTS",E,E,N,N],[17,"SCM_CREDENTIALS",E,E,N,N],[17,"PROT_GROWSDOWN",E,E,N,N],[17,"PROT_GROWSUP",E,E,N,N],[17,"MAP_TYPE",E,E,N,N],[17,"MADV_NORMAL",E,E,N,N],[17,"MADV_RANDOM",E,E,N,N],[17,"MADV_SEQUENTIAL",E,E,N,N],[17,"MADV_WILLNEED",E,E,N,N],[17,"MADV_DONTNEED",E,E,N,N],[17,"MADV_FREE",E,E,N,N],[17,"MADV_REMOVE",E,E,N,N],[17,"MADV_DONTFORK",E,E,N,N],[17,"MADV_DOFORK",E,E,N,N],[17,"MADV_MERGEABLE",E,E,N,N],[17,"MADV_UNMERGEABLE",E,E,N,N],[17,"MADV_HUGEPAGE",E,E,N,N],[17,"MADV_NOHUGEPAGE",E,E,N,N],[17,"MADV_DONTDUMP",E,E,N,N],[17,"MADV_DODUMP",E,E,N,N],[17,"MADV_HWPOISON",E,E,N,N],[17,"IFF_UP",E,E,N,N],[17,"IFF_BROADCAST",E,E,N,N],[17,"IFF_DEBUG",E,E,N,N],[17,"IFF_LOOPBACK",E,E,N,N],[17,"IFF_POINTOPOINT",E,E,N,N],[17,"IFF_NOTRAILERS",E,E,N,N],[17,"IFF_RUNNING",E,E,N,N],[17,"IFF_NOARP",E,E,N,N],[17,"IFF_PROMISC",E,E,N,N],[17,"IFF_ALLMULTI",E,E,N,N],[17,"IFF_MASTER",E,E,N,N],[17,"IFF_SLAVE",E,E,N,N],[17,"IFF_MULTICAST",E,E,N,N],[17,"IFF_PORTSEL",E,E,N,N],[17,"IFF_AUTOMEDIA",E,E,N,N],[17,"IFF_DYNAMIC",E,E,N,N],[17,"SOL_IP",E,E,N,N],[17,"SOL_TCP",E,E,N,N],[17,"SOL_UDP",E,E,N,N],[17,"SOL_IPV6",E,E,N,N],[17,"SOL_ICMPV6",E,E,N,N],[17,"SOL_RAW",E,E,N,N],[17,"SOL_DECNET",E,E,N,N],[17,"SOL_X25",E,E,N,N],[17,"SOL_PACKET",E,E,N,N],[17,"SOL_ATM",E,E,N,N],[17,"SOL_AAL",E,E,N,N],[17,"SOL_IRDA",E,E,N,N],[17,"SOL_NETBEUI",E,E,N,N],[17,"SOL_LLC",E,E,N,N],[17,"SOL_DCCP",E,E,N,N],[17,"SOL_NETLINK",E,E,N,N],[17,"SOL_TIPC",E,E,N,N],[17,"SOL_BLUETOOTH",E,E,N,N],[17,"SOL_ALG",E,E,N,N],[17,"AF_UNSPEC",E,E,N,N],[17,"AF_UNIX",E,E,N,N],[17,"AF_LOCAL",E,E,N,N],[17,"AF_INET",E,E,N,N],[17,"AF_AX25",E,E,N,N],[17,"AF_IPX",E,E,N,N],[17,"AF_APPLETALK",E,E,N,N],[17,"AF_NETROM",E,E,N,N],[17,"AF_BRIDGE",E,E,N,N],[17,"AF_ATMPVC",E,E,N,N],[17,"AF_X25",E,E,N,N],[17,"AF_INET6",E,E,N,N],[17,"AF_ROSE",E,E,N,N],[17,"AF_DECnet",E,E,N,N],[17,"AF_NETBEUI",E,E,N,N],[17,"AF_SECURITY",E,E,N,N],[17,"AF_KEY",E,E,N,N],[17,"AF_NETLINK",E,E,N,N],[17,"AF_ROUTE",E,E,N,N],[17,"AF_PACKET",E,E,N,N],[17,"AF_ASH",E,E,N,N],[17,"AF_ECONET",E,E,N,N],[17,"AF_ATMSVC",E,E,N,N],[17,"AF_RDS",E,E,N,N],[17,"AF_SNA",E,E,N,N],[17,"AF_IRDA",E,E,N,N],[17,"AF_PPPOX",E,E,N,N],[17,"AF_WANPIPE",E,E,N,N],[17,"AF_LLC",E,E,N,N],[17,"AF_CAN",E,E,N,N],[17,"AF_TIPC",E,E,N,N],[17,"AF_BLUETOOTH",E,E,N,N],[17,"AF_IUCV",E,E,N,N],[17,"AF_RXRPC",E,E,N,N],[17,"AF_ISDN",E,E,N,N],[17,"AF_PHONET",E,E,N,N],[17,"AF_IEEE802154",E,E,N,N],[17,"AF_CAIF",E,E,N,N],[17,"AF_ALG",E,E,N,N],[17,"PF_UNSPEC",E,E,N,N],[17,"PF_UNIX",E,E,N,N],[17,"PF_LOCAL",E,E,N,N],[17,"PF_INET",E,E,N,N],[17,"PF_AX25",E,E,N,N],[17,"PF_IPX",E,E,N,N],[17,"PF_APPLETALK",E,E,N,N],[17,"PF_NETROM",E,E,N,N],[17,"PF_BRIDGE",E,E,N,N],[17,"PF_ATMPVC",E,E,N,N],[17,"PF_X25",E,E,N,N],[17,"PF_INET6",E,E,N,N],[17,"PF_ROSE",E,E,N,N],[17,"PF_DECnet",E,E,N,N],[17,"PF_NETBEUI",E,E,N,N],[17,"PF_SECURITY",E,E,N,N],[17,"PF_KEY",E,E,N,N],[17,"PF_NETLINK",E,E,N,N],[17,"PF_ROUTE",E,E,N,N],[17,"PF_PACKET",E,E,N,N],[17,"PF_ASH",E,E,N,N],[17,"PF_ECONET",E,E,N,N],[17,"PF_ATMSVC",E,E,N,N],[17,"PF_RDS",E,E,N,N],[17,"PF_SNA",E,E,N,N],[17,"PF_IRDA",E,E,N,N],[17,"PF_PPPOX",E,E,N,N],[17,"PF_WANPIPE",E,E,N,N],[17,"PF_LLC",E,E,N,N],[17,"PF_CAN",E,E,N,N],[17,"PF_TIPC",E,E,N,N],[17,"PF_BLUETOOTH",E,E,N,N],[17,"PF_IUCV",E,E,N,N],[17,"PF_RXRPC",E,E,N,N],[17,"PF_ISDN",E,E,N,N],[17,"PF_PHONET",E,E,N,N],[17,"PF_IEEE802154",E,E,N,N],[17,"PF_CAIF",E,E,N,N],[17,"PF_ALG",E,E,N,N],[17,"SOMAXCONN",E,E,N,N],[17,"MSG_OOB",E,E,N,N],[17,"MSG_PEEK",E,E,N,N],[17,"MSG_DONTROUTE",E,E,N,N],[17,"MSG_CTRUNC",E,E,N,N],[17,"MSG_TRUNC",E,E,N,N],[17,"MSG_DONTWAIT",E,E,N,N],[17,"MSG_EOR",E,E,N,N],[17,"MSG_WAITALL",E,E,N,N],[17,"MSG_FIN",E,E,N,N],[17,"MSG_SYN",E,E,N,N],[17,"MSG_CONFIRM",E,E,N,N],[17,"MSG_RST",E,E,N,N],[17,"MSG_ERRQUEUE",E,E,N,N],[17,"MSG_NOSIGNAL",E,E,N,N],[17,"MSG_MORE",E,E,N,N],[17,"MSG_WAITFORONE",E,E,N,N],[17,"MSG_FASTOPEN",E,E,N,N],[17,"MSG_CMSG_CLOEXEC",E,E,N,N],[17,"SCM_TIMESTAMP",E,E,N,N],[17,"SOCK_RAW",E,E,N,N],[17,"SOCK_RDM",E,E,N,N],[17,"IP_MULTICAST_IF",E,E,N,N],[17,"IP_MULTICAST_TTL",E,E,N,N],[17,"IP_MULTICAST_LOOP",E,E,N,N],[17,"IP_TOS",E,E,N,N],[17,"IP_TTL",E,E,N,N],[17,"IP_HDRINCL",E,E,N,N],[17,"IP_PKTINFO",E,E,N,N],[17,"IP_RECVTOS",E,E,N,N],[17,"IP_RECVERR",E,E,N,N],[17,"IP_ADD_MEMBERSHIP",E,E,N,N],[17,"IP_DROP_MEMBERSHIP",E,E,N,N],[17,"IP_ADD_SOURCE_MEMBERSHIP",E,E,N,N],[17,"IP_DROP_SOURCE_MEMBERSHIP",E,E,N,N],[17,"IP_TRANSPARENT",E,E,N,N],[17,"IPV6_ADDRFORM",E,E,N,N],[17,"IPV6_2292PKTINFO",E,E,N,N],[17,"IPV6_2292HOPOPTS",E,E,N,N],[17,"IPV6_2292DSTOPTS",E,E,N,N],[17,"IPV6_2292RTHDR",E,E,N,N],[17,"IPV6_2292PKTOPTIONS",E,E,N,N],[17,"IPV6_CHECKSUM",E,E,N,N],[17,"IPV6_2292HOPLIMIT",E,E,N,N],[17,"IPV6_NEXTHOP",E,E,N,N],[17,"IPV6_FLOWINFO",E,E,N,N],[17,"IPV6_UNICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_IF",E,E,N,N],[17,"IPV6_MULTICAST_HOPS",E,E,N,N],[17,"IPV6_MULTICAST_LOOP",E,E,N,N],[17,"IPV6_ADD_MEMBERSHIP",E,E,N,N],[17,"IPV6_DROP_MEMBERSHIP",E,E,N,N],[17,"IPV6_ROUTER_ALERT",E,E,N,N],[17,"IPV6_MTU_DISCOVER",E,E,N,N],[17,"IPV6_MTU",E,E,N,N],[17,"IPV6_RECVERR",E,E,N,N],[17,"IPV6_V6ONLY",E,E,N,N],[17,"IPV6_JOIN_ANYCAST",E,E,N,N],[17,"IPV6_LEAVE_ANYCAST",E,E,N,N],[17,"IPV6_RECVPKTINFO",E,E,N,N],[17,"IPV6_PKTINFO",E,E,N,N],[17,"IPV6_RECVTCLASS",E,E,N,N],[17,"IPV6_TCLASS",E,E,N,N],[17,"TCP_NODELAY",E,E,N,N],[17,"TCP_MAXSEG",E,E,N,N],[17,"TCP_CORK",E,E,N,N],[17,"TCP_KEEPIDLE",E,E,N,N],[17,"TCP_KEEPINTVL",E,E,N,N],[17,"TCP_KEEPCNT",E,E,N,N],[17,"TCP_SYNCNT",E,E,N,N],[17,"TCP_LINGER2",E,E,N,N],[17,"TCP_DEFER_ACCEPT",E,E,N,N],[17,"TCP_WINDOW_CLAMP",E,E,N,N],[17,"TCP_INFO",E,E,N,N],[17,"TCP_QUICKACK",E,E,N,N],[17,"TCP_CONGESTION",E,E,N,N],[17,"SO_DEBUG",E,E,N,N],[17,"SHUT_RD",E,E,N,N],[17,"SHUT_WR",E,E,N,N],[17,"SHUT_RDWR",E,E,N,N],[17,"LOCK_SH",E,E,N,N],[17,"LOCK_EX",E,E,N,N],[17,"LOCK_NB",E,E,N,N],[17,"LOCK_UN",E,E,N,N],[17,"SS_ONSTACK",E,E,N,N],[17,"SS_DISABLE",E,E,N,N],[17,"PATH_MAX",E,E,N,N],[17,"FD_SETSIZE",E,E,N,N],[17,"EPOLLIN",E,E,N,N],[17,"EPOLLPRI",E,E,N,N],[17,"EPOLLOUT",E,E,N,N],[17,"EPOLLRDNORM",E,E,N,N],[17,"EPOLLRDBAND",E,E,N,N],[17,"EPOLLWRNORM",E,E,N,N],[17,"EPOLLWRBAND",E,E,N,N],[17,"EPOLLMSG",E,E,N,N],[17,"EPOLLERR",E,E,N,N],[17,"EPOLLHUP",E,E,N,N],[17,"EPOLLET",E,E,N,N],[17,"EPOLL_CTL_ADD",E,E,N,N],[17,"EPOLL_CTL_MOD",E,E,N,N],[17,"EPOLL_CTL_DEL",E,E,N,N],[17,"MNT_DETACH",E,E,N,N],[17,"MNT_EXPIRE",E,E,N,N],[17,"Q_GETFMT",E,E,N,N],[17,"Q_GETINFO",E,E,N,N],[17,"Q_SETINFO",E,E,N,N],[17,"QIF_BLIMITS",E,E,N,N],[17,"QIF_SPACE",E,E,N,N],[17,"QIF_ILIMITS",E,E,N,N],[17,"QIF_INODES",E,E,N,N],[17,"QIF_BTIME",E,E,N,N],[17,"QIF_ITIME",E,E,N,N],[17,"QIF_LIMITS",E,E,N,N],[17,"QIF_USAGE",E,E,N,N],[17,"QIF_TIMES",E,E,N,N],[17,"QIF_ALL",E,E,N,N],[17,"MNT_FORCE",E,E,N,N],[17,"Q_SYNC",E,E,N,N],[17,"Q_QUOTAON",E,E,N,N],[17,"Q_QUOTAOFF",E,E,N,N],[17,"Q_GETQUOTA",E,E,N,N],[17,"Q_SETQUOTA",E,E,N,N],[17,"TCIOFF",E,E,N,N],[17,"TCION",E,E,N,N],[17,"TCOOFF",E,E,N,N],[17,"TCOON",E,E,N,N],[17,"TCIFLUSH",E,E,N,N],[17,"TCOFLUSH",E,E,N,N],[17,"TCIOFLUSH",E,E,N,N],[17,"NL0",E,E,N,N],[17,"NL1",E,E,N,N],[17,"TAB0",E,E,N,N],[17,"CR0",E,E,N,N],[17,"FF0",E,E,N,N],[17,"BS0",E,E,N,N],[17,"VT0",E,E,N,N],[17,"VERASE",E,E,N,N],[17,"VKILL",E,E,N,N],[17,"VINTR",E,E,N,N],[17,"VQUIT",E,E,N,N],[17,"VLNEXT",E,E,N,N],[17,"IGNBRK",E,E,N,N],[17,"BRKINT",E,E,N,N],[17,"IGNPAR",E,E,N,N],[17,"PARMRK",E,E,N,N],[17,"INPCK",E,E,N,N],[17,"ISTRIP",E,E,N,N],[17,"INLCR",E,E,N,N],[17,"IGNCR",E,E,N,N],[17,"ICRNL",E,E,N,N],[17,"IXANY",E,E,N,N],[17,"IMAXBEL",E,E,N,N],[17,"OPOST",E,E,N,N],[17,"CS5",E,E,N,N],[17,"CRTSCTS",E,E,N,N],[17,"ECHO",E,E,N,N],[17,"OCRNL",E,E,N,N],[17,"ONOCR",E,E,N,N],[17,"ONLRET",E,E,N,N],[17,"OFILL",E,E,N,N],[17,"OFDEL",E,E,N,N],[17,"CLONE_VM",E,E,N,N],[17,"CLONE_FS",E,E,N,N],[17,"CLONE_FILES",E,E,N,N],[17,"CLONE_SIGHAND",E,E,N,N],[17,"CLONE_PTRACE",E,E,N,N],[17,"CLONE_VFORK",E,E,N,N],[17,"CLONE_PARENT",E,E,N,N],[17,"CLONE_THREAD",E,E,N,N],[17,"CLONE_NEWNS",E,E,N,N],[17,"CLONE_SYSVSEM",E,E,N,N],[17,"CLONE_SETTLS",E,E,N,N],[17,"CLONE_PARENT_SETTID",E,E,N,N],[17,"CLONE_CHILD_CLEARTID",E,E,N,N],[17,"CLONE_DETACHED",E,E,N,N],[17,"CLONE_UNTRACED",E,E,N,N],[17,"CLONE_CHILD_SETTID",E,E,N,N],[17,"CLONE_NEWUTS",E,E,N,N],[17,"CLONE_NEWIPC",E,E,N,N],[17,"CLONE_NEWUSER",E,E,N,N],[17,"CLONE_NEWPID",E,E,N,N],[17,"CLONE_NEWNET",E,E,N,N],[17,"CLONE_IO",E,E,N,N],[17,"CLONE_NEWCGROUP",E,E,N,N],[17,"WNOHANG",E,E,N,N],[17,"WUNTRACED",E,E,N,N],[17,"WSTOPPED",E,E,N,N],[17,"WEXITED",E,E,N,N],[17,"WCONTINUED",E,E,N,N],[17,"WNOWAIT",E,E,N,N],[17,"PTRACE_O_TRACESYSGOOD",E,E,N,N],[17,"PTRACE_O_TRACEFORK",E,E,N,N],[17,"PTRACE_O_TRACEVFORK",E,E,N,N],[17,"PTRACE_O_TRACECLONE",E,E,N,N],[17,"PTRACE_O_TRACEEXEC",E,E,N,N],[17,"PTRACE_O_TRACEVFORKDONE",E,E,N,N],[17,"PTRACE_O_TRACEEXIT",E,E,N,N],[17,"PTRACE_O_TRACESECCOMP",E,E,N,N],[17,"PTRACE_O_EXITKILL",E,E,N,N],[17,"PTRACE_O_SUSPEND_SECCOMP",E,E,N,N],[17,"PTRACE_O_MASK",E,E,N,N],[17,"PTRACE_EVENT_FORK",E,E,N,N],[17,"PTRACE_EVENT_VFORK",E,E,N,N],[17,"PTRACE_EVENT_CLONE",E,E,N,N],[17,"PTRACE_EVENT_EXEC",E,E,N,N],[17,"PTRACE_EVENT_VFORK_DONE",E,E,N,N],[17,"PTRACE_EVENT_EXIT",E,E,N,N],[17,"PTRACE_EVENT_SECCOMP",E,E,N,N],[17,"__WNOTHREAD",E,E,N,N],[17,"__WALL",E,E,N,N],[17,"__WCLONE",E,E,N,N],[17,"SPLICE_F_MOVE",E,E,N,N],[17,"SPLICE_F_NONBLOCK",E,E,N,N],[17,"SPLICE_F_MORE",E,E,N,N],[17,"SPLICE_F_GIFT",E,E,N,N],[17,"RTLD_LOCAL",E,E,N,N],[17,"RTLD_LAZY",E,E,N,N],[17,"POSIX_FADV_NORMAL",E,E,N,N],[17,"POSIX_FADV_RANDOM",E,E,N,N],[17,"POSIX_FADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_FADV_WILLNEED",E,E,N,N],[17,"AT_FDCWD",E,E,N,N],[17,"AT_SYMLINK_NOFOLLOW",E,E,N,N],[17,"AT_REMOVEDIR",E,E,N,N],[17,"AT_SYMLINK_FOLLOW",E,E,N,N],[17,"AT_NO_AUTOMOUNT",E,E,N,N],[17,"AT_EMPTY_PATH",E,E,N,N],[17,"LOG_CRON",E,E,N,N],[17,"LOG_AUTHPRIV",E,E,N,N],[17,"LOG_FTP",E,E,N,N],[17,"LOG_PERROR",E,E,N,N],[17,"PIPE_BUF",E,E,N,N],[17,"SI_LOAD_SHIFT",E,E,N,N],[17,"SIGEV_SIGNAL",E,E,N,N],[17,"SIGEV_NONE",E,E,N,N],[17,"SIGEV_THREAD",E,E,N,N],[17,"P_ALL",E,E,N,N],[17,"P_PID",E,E,N,N],[17,"P_PGID",E,E,N,N],[17,"UTIME_OMIT",E,E,N,N],[17,"UTIME_NOW",E,E,N,N],[17,"POLLIN",E,E,N,N],[17,"POLLPRI",E,E,N,N],[17,"POLLOUT",E,E,N,N],[17,"POLLERR",E,E,N,N],[17,"POLLHUP",E,E,N,N],[17,"POLLNVAL",E,E,N,N],[17,"POLLRDNORM",E,E,N,N],[17,"POLLRDBAND",E,E,N,N],[17,"IPTOS_LOWDELAY",E,E,N,N],[17,"IPTOS_THROUGHPUT",E,E,N,N],[17,"IPTOS_RELIABILITY",E,E,N,N],[17,"IPTOS_MINCOST",E,E,N,N],[17,"IPTOS_PREC_NETCONTROL",E,E,N,N],[17,"IPTOS_PREC_INTERNETCONTROL",E,E,N,N],[17,"IPTOS_PREC_CRITIC_ECP",E,E,N,N],[17,"IPTOS_PREC_FLASHOVERRIDE",E,E,N,N],[17,"IPTOS_PREC_FLASH",E,E,N,N],[17,"IPTOS_PREC_IMMEDIATE",E,E,N,N],[17,"IPTOS_PREC_PRIORITY",E,E,N,N],[17,"IPTOS_PREC_ROUTINE",E,E,N,N],[17,"IPTOS_ECN_MASK",E,E,N,N],[17,"IPTOS_ECN_ECT1",E,E,N,N],[17,"IPTOS_ECN_ECT0",E,E,N,N],[17,"IPTOS_ECN_CE",E,E,N,N],[17,"IPOPT_COPY",E,E,N,N],[17,"IPOPT_CLASS_MASK",E,E,N,N],[17,"IPOPT_NUMBER_MASK",E,E,N,N],[17,"IPOPT_CONTROL",E,E,N,N],[17,"IPOPT_RESERVED1",E,E,N,N],[17,"IPOPT_MEASUREMENT",E,E,N,N],[17,"IPOPT_RESERVED2",E,E,N,N],[17,"IPOPT_END",E,E,N,N],[17,"IPOPT_NOOP",E,E,N,N],[17,"IPOPT_SEC",E,E,N,N],[17,"IPOPT_LSRR",E,E,N,N],[17,"IPOPT_TIMESTAMP",E,E,N,N],[17,"IPOPT_RR",E,E,N,N],[17,"IPOPT_SID",E,E,N,N],[17,"IPOPT_SSRR",E,E,N,N],[17,"IPOPT_RA",E,E,N,N],[17,"IPVERSION",E,E,N,N],[17,"MAXTTL",E,E,N,N],[17,"IPDEFTTL",E,E,N,N],[17,"IPOPT_OPTVAL",E,E,N,N],[17,"IPOPT_OLEN",E,E,N,N],[17,"IPOPT_OFFSET",E,E,N,N],[17,"IPOPT_MINOFF",E,E,N,N],[17,"MAX_IPOPTLEN",E,E,N,N],[17,"IPOPT_NOP",E,E,N,N],[17,"IPOPT_EOL",E,E,N,N],[17,"IPOPT_TS",E,E,N,N],[17,"IPOPT_TS_TSONLY",E,E,N,N],[17,"IPOPT_TS_TSANDADDR",E,E,N,N],[17,"IPOPT_TS_PRESPEC",E,E,N,N],[17,"ARPOP_RREQUEST",E,E,N,N],[17,"ARPOP_RREPLY",E,E,N,N],[17,"ARPOP_InREQUEST",E,E,N,N],[17,"ARPOP_InREPLY",E,E,N,N],[17,"ARPOP_NAK",E,E,N,N],[17,"ATF_NETMASK",E,E,N,N],[17,"ATF_DONTPUB",E,E,N,N],[17,"ARPHRD_NETROM",E,E,N,N],[17,"ARPHRD_ETHER",E,E,N,N],[17,"ARPHRD_EETHER",E,E,N,N],[17,"ARPHRD_AX25",E,E,N,N],[17,"ARPHRD_PRONET",E,E,N,N],[17,"ARPHRD_CHAOS",E,E,N,N],[17,"ARPHRD_IEEE802",E,E,N,N],[17,"ARPHRD_ARCNET",E,E,N,N],[17,"ARPHRD_APPLETLK",E,E,N,N],[17,"ARPHRD_DLCI",E,E,N,N],[17,"ARPHRD_ATM",E,E,N,N],[17,"ARPHRD_METRICOM",E,E,N,N],[17,"ARPHRD_IEEE1394",E,E,N,N],[17,"ARPHRD_EUI64",E,E,N,N],[17,"ARPHRD_INFINIBAND",E,E,N,N],[17,"ARPHRD_SLIP",E,E,N,N],[17,"ARPHRD_CSLIP",E,E,N,N],[17,"ARPHRD_SLIP6",E,E,N,N],[17,"ARPHRD_CSLIP6",E,E,N,N],[17,"ARPHRD_RSRVD",E,E,N,N],[17,"ARPHRD_ADAPT",E,E,N,N],[17,"ARPHRD_ROSE",E,E,N,N],[17,"ARPHRD_X25",E,E,N,N],[17,"ARPHRD_HWX25",E,E,N,N],[17,"ARPHRD_PPP",E,E,N,N],[17,"ARPHRD_CISCO",E,E,N,N],[17,"ARPHRD_HDLC",E,E,N,N],[17,"ARPHRD_LAPB",E,E,N,N],[17,"ARPHRD_DDCMP",E,E,N,N],[17,"ARPHRD_RAWHDLC",E,E,N,N],[17,"ARPHRD_TUNNEL",E,E,N,N],[17,"ARPHRD_TUNNEL6",E,E,N,N],[17,"ARPHRD_FRAD",E,E,N,N],[17,"ARPHRD_SKIP",E,E,N,N],[17,"ARPHRD_LOOPBACK",E,E,N,N],[17,"ARPHRD_LOCALTLK",E,E,N,N],[17,"ARPHRD_FDDI",E,E,N,N],[17,"ARPHRD_BIF",E,E,N,N],[17,"ARPHRD_SIT",E,E,N,N],[17,"ARPHRD_IPDDP",E,E,N,N],[17,"ARPHRD_IPGRE",E,E,N,N],[17,"ARPHRD_PIMREG",E,E,N,N],[17,"ARPHRD_HIPPI",E,E,N,N],[17,"ARPHRD_ASH",E,E,N,N],[17,"ARPHRD_ECONET",E,E,N,N],[17,"ARPHRD_IRDA",E,E,N,N],[17,"ARPHRD_FCPP",E,E,N,N],[17,"ARPHRD_FCAL",E,E,N,N],[17,"ARPHRD_FCPL",E,E,N,N],[17,"ARPHRD_FCFABRIC",E,E,N,N],[17,"ARPHRD_IEEE802_TR",E,E,N,N],[17,"ARPHRD_IEEE80211",E,E,N,N],[17,"ARPHRD_IEEE80211_PRISM",E,E,N,N],[17,"ARPHRD_IEEE80211_RADIOTAP",E,E,N,N],[17,"ARPHRD_IEEE802154",E,E,N,N],[17,"ARPHRD_VOID",E,E,N,N],[17,"ARPHRD_NONE",E,E,N,N],[17,"ABDAY_1",E,E,N,N],[17,"ABDAY_2",E,E,N,N],[17,"ABDAY_3",E,E,N,N],[17,"ABDAY_4",E,E,N,N],[17,"ABDAY_5",E,E,N,N],[17,"ABDAY_6",E,E,N,N],[17,"ABDAY_7",E,E,N,N],[17,"DAY_1",E,E,N,N],[17,"DAY_2",E,E,N,N],[17,"DAY_3",E,E,N,N],[17,"DAY_4",E,E,N,N],[17,"DAY_5",E,E,N,N],[17,"DAY_6",E,E,N,N],[17,"DAY_7",E,E,N,N],[17,"ABMON_1",E,E,N,N],[17,"ABMON_2",E,E,N,N],[17,"ABMON_3",E,E,N,N],[17,"ABMON_4",E,E,N,N],[17,"ABMON_5",E,E,N,N],[17,"ABMON_6",E,E,N,N],[17,"ABMON_7",E,E,N,N],[17,"ABMON_8",E,E,N,N],[17,"ABMON_9",E,E,N,N],[17,"ABMON_10",E,E,N,N],[17,"ABMON_11",E,E,N,N],[17,"ABMON_12",E,E,N,N],[17,"MON_1",E,E,N,N],[17,"MON_2",E,E,N,N],[17,"MON_3",E,E,N,N],[17,"MON_4",E,E,N,N],[17,"MON_5",E,E,N,N],[17,"MON_6",E,E,N,N],[17,"MON_7",E,E,N,N],[17,"MON_8",E,E,N,N],[17,"MON_9",E,E,N,N],[17,"MON_10",E,E,N,N],[17,"MON_11",E,E,N,N],[17,"MON_12",E,E,N,N],[17,"AM_STR",E,E,N,N],[17,"PM_STR",E,E,N,N],[17,"D_T_FMT",E,E,N,N],[17,"D_FMT",E,E,N,N],[17,"T_FMT",E,E,N,N],[17,"T_FMT_AMPM",E,E,N,N],[17,"ERA",E,E,N,N],[17,"ERA_D_FMT",E,E,N,N],[17,"ALT_DIGITS",E,E,N,N],[17,"ERA_D_T_FMT",E,E,N,N],[17,"ERA_T_FMT",E,E,N,N],[17,"CODESET",E,E,N,N],[17,"CRNCYSTR",E,E,N,N],[17,"RUSAGE_THREAD",E,E,N,N],[17,"RUSAGE_CHILDREN",E,E,N,N],[17,"RADIXCHAR",E,E,N,N],[17,"THOUSEP",E,E,N,N],[17,"YESEXPR",E,E,N,N],[17,"NOEXPR",E,E,N,N],[17,"YESSTR",E,E,N,N],[17,"NOSTR",E,E,N,N],[17,"FILENAME_MAX",E,E,N,N],[17,"L_tmpnam",E,E,N,N],[17,"_PC_LINK_MAX",E,E,N,N],[17,"_PC_MAX_CANON",E,E,N,N],[17,"_PC_MAX_INPUT",E,E,N,N],[17,"_PC_NAME_MAX",E,E,N,N],[17,"_PC_PATH_MAX",E,E,N,N],[17,"_PC_PIPE_BUF",E,E,N,N],[17,"_PC_CHOWN_RESTRICTED",E,E,N,N],[17,"_PC_NO_TRUNC",E,E,N,N],[17,"_PC_VDISABLE",E,E,N,N],[17,"_PC_SYNC_IO",E,E,N,N],[17,"_PC_ASYNC_IO",E,E,N,N],[17,"_PC_PRIO_IO",E,E,N,N],[17,"_PC_SOCK_MAXBUF",E,E,N,N],[17,"_PC_FILESIZEBITS",E,E,N,N],[17,"_PC_REC_INCR_XFER_SIZE",E,E,N,N],[17,"_PC_REC_MAX_XFER_SIZE",E,E,N,N],[17,"_PC_REC_MIN_XFER_SIZE",E,E,N,N],[17,"_PC_REC_XFER_ALIGN",E,E,N,N],[17,"_PC_ALLOC_SIZE_MIN",E,E,N,N],[17,"_PC_SYMLINK_MAX",E,E,N,N],[17,"_PC_2_SYMLINKS",E,E,N,N],[17,"MS_NOUSER",E,E,N,N],[17,"_SC_ARG_MAX",E,E,N,N],[17,"_SC_CHILD_MAX",E,E,N,N],[17,"_SC_CLK_TCK",E,E,N,N],[17,"_SC_NGROUPS_MAX",E,E,N,N],[17,"_SC_OPEN_MAX",E,E,N,N],[17,"_SC_STREAM_MAX",E,E,N,N],[17,"_SC_TZNAME_MAX",E,E,N,N],[17,"_SC_JOB_CONTROL",E,E,N,N],[17,"_SC_SAVED_IDS",E,E,N,N],[17,"_SC_REALTIME_SIGNALS",E,E,N,N],[17,"_SC_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_TIMERS",E,E,N,N],[17,"_SC_ASYNCHRONOUS_IO",E,E,N,N],[17,"_SC_PRIORITIZED_IO",E,E,N,N],[17,"_SC_SYNCHRONIZED_IO",E,E,N,N],[17,"_SC_FSYNC",E,E,N,N],[17,"_SC_MAPPED_FILES",E,E,N,N],[17,"_SC_MEMLOCK",E,E,N,N],[17,"_SC_MEMLOCK_RANGE",E,E,N,N],[17,"_SC_MEMORY_PROTECTION",E,E,N,N],[17,"_SC_MESSAGE_PASSING",E,E,N,N],[17,"_SC_SEMAPHORES",E,E,N,N],[17,"_SC_SHARED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_AIO_LISTIO_MAX",E,E,N,N],[17,"_SC_AIO_MAX",E,E,N,N],[17,"_SC_AIO_PRIO_DELTA_MAX",E,E,N,N],[17,"_SC_DELAYTIMER_MAX",E,E,N,N],[17,"_SC_MQ_OPEN_MAX",E,E,N,N],[17,"_SC_MQ_PRIO_MAX",E,E,N,N],[17,"_SC_VERSION",E,E,N,N],[17,"_SC_PAGESIZE",E,E,N,N],[17,"_SC_PAGE_SIZE",E,E,N,N],[17,"_SC_RTSIG_MAX",E,E,N,N],[17,"_SC_SEM_NSEMS_MAX",E,E,N,N],[17,"_SC_SEM_VALUE_MAX",E,E,N,N],[17,"_SC_SIGQUEUE_MAX",E,E,N,N],[17,"_SC_TIMER_MAX",E,E,N,N],[17,"_SC_BC_BASE_MAX",E,E,N,N],[17,"_SC_BC_DIM_MAX",E,E,N,N],[17,"_SC_BC_SCALE_MAX",E,E,N,N],[17,"_SC_BC_STRING_MAX",E,E,N,N],[17,"_SC_COLL_WEIGHTS_MAX",E,E,N,N],[17,"_SC_EXPR_NEST_MAX",E,E,N,N],[17,"_SC_LINE_MAX",E,E,N,N],[17,"_SC_RE_DUP_MAX",E,E,N,N],[17,"_SC_2_VERSION",E,E,N,N],[17,"_SC_2_C_BIND",E,E,N,N],[17,"_SC_2_C_DEV",E,E,N,N],[17,"_SC_2_FORT_DEV",E,E,N,N],[17,"_SC_2_FORT_RUN",E,E,N,N],[17,"_SC_2_SW_DEV",E,E,N,N],[17,"_SC_2_LOCALEDEF",E,E,N,N],[17,"_SC_UIO_MAXIOV",E,E,N,N],[17,"_SC_IOV_MAX",E,E,N,N],[17,"_SC_THREADS",E,E,N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS",E,E,N,N],[17,"_SC_GETGR_R_SIZE_MAX",E,E,N,N],[17,"_SC_GETPW_R_SIZE_MAX",E,E,N,N],[17,"_SC_LOGIN_NAME_MAX",E,E,N,N],[17,"_SC_TTY_NAME_MAX",E,E,N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS",E,E,N,N],[17,"_SC_THREAD_KEYS_MAX",E,E,N,N],[17,"_SC_THREAD_STACK_MIN",E,E,N,N],[17,"_SC_THREAD_THREADS_MAX",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKADDR",E,E,N,N],[17,"_SC_THREAD_ATTR_STACKSIZE",E,E,N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING",E,E,N,N],[17,"_SC_THREAD_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_PRIO_PROTECT",E,E,N,N],[17,"_SC_THREAD_PROCESS_SHARED",E,E,N,N],[17,"_SC_NPROCESSORS_CONF",E,E,N,N],[17,"_SC_NPROCESSORS_ONLN",E,E,N,N],[17,"_SC_PHYS_PAGES",E,E,N,N],[17,"_SC_AVPHYS_PAGES",E,E,N,N],[17,"_SC_ATEXIT_MAX",E,E,N,N],[17,"_SC_PASS_MAX",E,E,N,N],[17,"_SC_XOPEN_VERSION",E,E,N,N],[17,"_SC_XOPEN_XCU_VERSION",E,E,N,N],[17,"_SC_XOPEN_UNIX",E,E,N,N],[17,"_SC_XOPEN_CRYPT",E,E,N,N],[17,"_SC_XOPEN_ENH_I18N",E,E,N,N],[17,"_SC_XOPEN_SHM",E,E,N,N],[17,"_SC_2_CHAR_TERM",E,E,N,N],[17,"_SC_2_UPE",E,E,N,N],[17,"_SC_XOPEN_XPG2",E,E,N,N],[17,"_SC_XOPEN_XPG3",E,E,N,N],[17,"_SC_XOPEN_XPG4",E,E,N,N],[17,"_SC_NZERO",E,E,N,N],[17,"_SC_XBS5_ILP32_OFF32",E,E,N,N],[17,"_SC_XBS5_ILP32_OFFBIG",E,E,N,N],[17,"_SC_XBS5_LP64_OFF64",E,E,N,N],[17,"_SC_XBS5_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_XOPEN_LEGACY",E,E,N,N],[17,"_SC_XOPEN_REALTIME",E,E,N,N],[17,"_SC_XOPEN_REALTIME_THREADS",E,E,N,N],[17,"_SC_ADVISORY_INFO",E,E,N,N],[17,"_SC_BARRIERS",E,E,N,N],[17,"_SC_CLOCK_SELECTION",E,E,N,N],[17,"_SC_CPUTIME",E,E,N,N],[17,"_SC_THREAD_CPUTIME",E,E,N,N],[17,"_SC_MONOTONIC_CLOCK",E,E,N,N],[17,"_SC_READER_WRITER_LOCKS",E,E,N,N],[17,"_SC_SPIN_LOCKS",E,E,N,N],[17,"_SC_REGEXP",E,E,N,N],[17,"_SC_SHELL",E,E,N,N],[17,"_SC_SPAWN",E,E,N,N],[17,"_SC_SPORADIC_SERVER",E,E,N,N],[17,"_SC_THREAD_SPORADIC_SERVER",E,E,N,N],[17,"_SC_TIMEOUTS",E,E,N,N],[17,"_SC_TYPED_MEMORY_OBJECTS",E,E,N,N],[17,"_SC_2_PBS",E,E,N,N],[17,"_SC_2_PBS_ACCOUNTING",E,E,N,N],[17,"_SC_2_PBS_LOCATE",E,E,N,N],[17,"_SC_2_PBS_MESSAGE",E,E,N,N],[17,"_SC_2_PBS_TRACK",E,E,N,N],[17,"_SC_SYMLOOP_MAX",E,E,N,N],[17,"_SC_STREAMS",E,E,N,N],[17,"_SC_2_PBS_CHECKPOINT",E,E,N,N],[17,"_SC_V6_ILP32_OFF32",E,E,N,N],[17,"_SC_V6_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V6_LP64_OFF64",E,E,N,N],[17,"_SC_V6_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_HOST_NAME_MAX",E,E,N,N],[17,"_SC_TRACE",E,E,N,N],[17,"_SC_TRACE_EVENT_FILTER",E,E,N,N],[17,"_SC_TRACE_INHERIT",E,E,N,N],[17,"_SC_TRACE_LOG",E,E,N,N],[17,"_SC_IPV6",E,E,N,N],[17,"_SC_RAW_SOCKETS",E,E,N,N],[17,"_SC_V7_ILP32_OFF32",E,E,N,N],[17,"_SC_V7_ILP32_OFFBIG",E,E,N,N],[17,"_SC_V7_LP64_OFF64",E,E,N,N],[17,"_SC_V7_LPBIG_OFFBIG",E,E,N,N],[17,"_SC_SS_REPL_MAX",E,E,N,N],[17,"_SC_TRACE_EVENT_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_NAME_MAX",E,E,N,N],[17,"_SC_TRACE_SYS_MAX",E,E,N,N],[17,"_SC_TRACE_USER_EVENT_MAX",E,E,N,N],[17,"_SC_XOPEN_STREAMS",E,E,N,N],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT",E,E,N,N],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT",E,E,N,N],[17,"RLIM_SAVED_MAX",E,E,N,N],[17,"RLIM_SAVED_CUR",E,E,N,N],[17,"GLOB_ERR",E,E,N,N],[17,"GLOB_MARK",E,E,N,N],[17,"GLOB_NOSORT",E,E,N,N],[17,"GLOB_DOOFFS",E,E,N,N],[17,"GLOB_NOCHECK",E,E,N,N],[17,"GLOB_APPEND",E,E,N,N],[17,"GLOB_NOESCAPE",E,E,N,N],[17,"GLOB_NOSPACE",E,E,N,N],[17,"GLOB_ABORTED",E,E,N,N],[17,"GLOB_NOMATCH",E,E,N,N],[17,"POSIX_MADV_NORMAL",E,E,N,N],[17,"POSIX_MADV_RANDOM",E,E,N,N],[17,"POSIX_MADV_SEQUENTIAL",E,E,N,N],[17,"POSIX_MADV_WILLNEED",E,E,N,N],[17,"S_IEXEC",E,E,N,N],[17,"S_IWRITE",E,E,N,N],[17,"S_IREAD",E,E,N,N],[17,"F_LOCK",E,E,N,N],[17,"F_TEST",E,E,N,N],[17,"F_TLOCK",E,E,N,N],[17,"F_ULOCK",E,E,N,N],[17,"F_SEAL_FUTURE_WRITE",E,E,N,N],[17,"IFF_LOWER_UP",E,E,N,N],[17,"IFF_DORMANT",E,E,N,N],[17,"IFF_ECHO",E,E,N,N],[17,"IFA_UNSPEC",E,E,N,N],[17,"IFA_ADDRESS",E,E,N,N],[17,"IFA_LOCAL",E,E,N,N],[17,"IFA_LABEL",E,E,N,N],[17,"IFA_BROADCAST",E,E,N,N],[17,"IFA_ANYCAST",E,E,N,N],[17,"IFA_CACHEINFO",E,E,N,N],[17,"IFA_MULTICAST",E,E,N,N],[17,"IFA_F_SECONDARY",E,E,N,N],[17,"IFA_F_TEMPORARY",E,E,N,N],[17,"IFA_F_NODAD",E,E,N,N],[17,"IFA_F_OPTIMISTIC",E,E,N,N],[17,"IFA_F_DADFAILED",E,E,N,N],[17,"IFA_F_HOMEADDRESS",E,E,N,N],[17,"IFA_F_DEPRECATED",E,E,N,N],[17,"IFA_F_TENTATIVE",E,E,N,N],[17,"IFA_F_PERMANENT",E,E,N,N],[17,"IFLA_UNSPEC",E,E,N,N],[17,"IFLA_ADDRESS",E,E,N,N],[17,"IFLA_BROADCAST",E,E,N,N],[17,"IFLA_IFNAME",E,E,N,N],[17,"IFLA_MTU",E,E,N,N],[17,"IFLA_LINK",E,E,N,N],[17,"IFLA_QDISC",E,E,N,N],[17,"IFLA_STATS",E,E,N,N],[17,"IFLA_COST",E,E,N,N],[17,"IFLA_PRIORITY",E,E,N,N],[17,"IFLA_MASTER",E,E,N,N],[17,"IFLA_WIRELESS",E,E,N,N],[17,"IFLA_PROTINFO",E,E,N,N],[17,"IFLA_TXQLEN",E,E,N,N],[17,"IFLA_MAP",E,E,N,N],[17,"IFLA_WEIGHT",E,E,N,N],[17,"IFLA_OPERSTATE",E,E,N,N],[17,"IFLA_LINKMODE",E,E,N,N],[17,"IFLA_LINKINFO",E,E,N,N],[17,"IFLA_NET_NS_PID",E,E,N,N],[17,"IFLA_IFALIAS",E,E,N,N],[17,"IFLA_NUM_VF",E,E,N,N],[17,"IFLA_VFINFO_LIST",E,E,N,N],[17,"IFLA_STATS64",E,E,N,N],[17,"IFLA_VF_PORTS",E,E,N,N],[17,"IFLA_PORT_SELF",E,E,N,N],[17,"IFLA_AF_SPEC",E,E,N,N],[17,"IFLA_GROUP",E,E,N,N],[17,"IFLA_NET_NS_FD",E,E,N,N],[17,"IFLA_EXT_MASK",E,E,N,N],[17,"IFLA_PROMISCUITY",E,E,N,N],[17,"IFLA_NUM_TX_QUEUES",E,E,N,N],[17,"IFLA_NUM_RX_QUEUES",E,E,N,N],[17,"IFLA_CARRIER",E,E,N,N],[17,"IFLA_PHYS_PORT_ID",E,E,N,N],[17,"IFLA_CARRIER_CHANGES",E,E,N,N],[17,"IFLA_PHYS_SWITCH_ID",E,E,N,N],[17,"IFLA_LINK_NETNSID",E,E,N,N],[17,"IFLA_PHYS_PORT_NAME",E,E,N,N],[17,"IFLA_PROTO_DOWN",E,E,N,N],[17,"IFLA_INFO_UNSPEC",E,E,N,N],[17,"IFLA_INFO_KIND",E,E,N,N],[17,"IFLA_INFO_DATA",E,E,N,N],[17,"IFLA_INFO_XSTATS",E,E,N,N],[17,"IFLA_INFO_SLAVE_KIND",E,E,N,N],[17,"IFLA_INFO_SLAVE_DATA",E,E,N,N],[17,"IFF_TUN",E,E,N,N],[17,"IFF_TAP",E,E,N,N],[17,"IFF_NO_PI",E,E,N,N],[17,"TUN_READQ_SIZE",E,E,N,N],[17,"TUN_TUN_DEV",E,E,N,N],[17,"TUN_TAP_DEV",E,E,N,N],[17,"TUN_TYPE_MASK",E,E,N,N],[17,"IFF_ONE_QUEUE",E,E,N,N],[17,"IFF_VNET_HDR",E,E,N,N],[17,"IFF_TUN_EXCL",E,E,N,N],[17,"IFF_MULTI_QUEUE",E,E,N,N],[17,"IFF_ATTACH_QUEUE",E,E,N,N],[17,"IFF_DETACH_QUEUE",E,E,N,N],[17,"IFF_PERSIST",E,E,N,N],[17,"IFF_NOFILTER",E,E,N,N],[17,"ST_RDONLY",E,E,N,N],[17,"ST_NOSUID",E,E,N,N],[17,"ST_NODEV",E,E,N,N],[17,"ST_NOEXEC",E,E,N,N],[17,"ST_SYNCHRONOUS",E,E,N,N],[17,"ST_MANDLOCK",E,E,N,N],[17,"ST_WRITE",E,E,N,N],[17,"ST_APPEND",E,E,N,N],[17,"ST_IMMUTABLE",E,E,N,N],[17,"ST_NOATIME",E,E,N,N],[17,"ST_NODIRATIME",E,E,N,N],[17,"RTLD_NEXT",E,E,N,N],[17,"RTLD_DEFAULT",E,E,N,N],[17,"RTLD_NODELETE",E,E,N,N],[17,"RTLD_NOW",E,E,N,N],[17,"TCP_MD5SIG",E,E,N,N],[17,"PTHREAD_MUTEX_INITIALIZER",E,E,N,N],[17,"PTHREAD_COND_INITIALIZER",E,E,N,N],[17,"PTHREAD_RWLOCK_INITIALIZER",E,E,N,N],[17,"PTHREAD_MUTEX_NORMAL",E,E,N,N],[17,"PTHREAD_MUTEX_RECURSIVE",E,E,N,N],[17,"PTHREAD_MUTEX_ERRORCHECK",E,E,N,N],[17,"PTHREAD_MUTEX_DEFAULT",E,E,N,N],[17,"PTHREAD_PROCESS_PRIVATE",E,E,N,N],[17,"PTHREAD_PROCESS_SHARED",E,E,N,N],[17,"__SIZEOF_PTHREAD_COND_T",E,E,N,N],[17,"RENAME_NOREPLACE",E,E,N,N],[17,"RENAME_EXCHANGE",E,E,N,N],[17,"RENAME_WHITEOUT",E,E,N,N],[17,"SCHED_OTHER",E,E,N,N],[17,"SCHED_FIFO",E,E,N,N],[17,"SCHED_RR",E,E,N,N],[17,"SCHED_BATCH",E,E,N,N],[17,"SCHED_IDLE",E,E,N,N],[17,"SCHED_RESET_ON_FORK",E,E,N,N],[17,"IPPROTO_HOPOPTS",E,"Hop-by-hop option header",N,N],[17,"IPPROTO_IGMP",E,"group mgmt protocol",N,N],[17,"IPPROTO_IPIP",E,"for compatibility",N,N],[17,"IPPROTO_EGP",E,"exterior gateway protocol",N,N],[17,"IPPROTO_PUP",E,"pup",N,N],[17,"IPPROTO_IDP",E,"xns idp",N,N],[17,"IPPROTO_TP",E,"tp-4 w/ class negotiation",N,N],[17,"IPPROTO_DCCP",E,"DCCP",N,N],[17,"IPPROTO_ROUTING",E,"IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT",E,"IP6 fragmentation header",N,N],[17,"IPPROTO_RSVP",E,"resource reservation",N,N],[17,"IPPROTO_GRE",E,"General Routing Encap.",N,N],[17,"IPPROTO_ESP",E,"IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH",E,"IP6 Auth Header",N,N],[17,"IPPROTO_NONE",E,"IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS",E,"IP6 destination option",N,N],[17,"IPPROTO_MTP",E,E,N,N],[17,"IPPROTO_BEETPH",E,E,N,N],[17,"IPPROTO_ENCAP",E,"encapsulation header",N,N],[17,"IPPROTO_PIM",E,"Protocol indep. multicast",N,N],[17,"IPPROTO_COMP",E,"IP Payload Comp. Protocol",N,N],[17,"IPPROTO_SCTP",E,"SCTP",N,N],[17,"IPPROTO_MH",E,E,N,N],[17,"IPPROTO_UDPLITE",E,E,N,N],[17,"IPPROTO_MPLS",E,E,N,N],[17,"IPPROTO_RAW",E,"raw IP packet",N,N],[17,"IPPROTO_MAX",E,E,N,N],[17,"AF_IB",E,E,N,N],[17,"AF_MPLS",E,E,N,N],[17,"AF_NFC",E,E,N,N],[17,"AF_VSOCK",E,E,N,N],[17,"AF_XDP",E,E,N,N],[17,"PF_IB",E,E,N,N],[17,"PF_MPLS",E,E,N,N],[17,"PF_NFC",E,E,N,N],[17,"PF_VSOCK",E,E,N,N],[17,"PF_XDP",E,E,N,N],[17,"IPC_PRIVATE",E,E,N,N],[17,"IPC_CREAT",E,E,N,N],[17,"IPC_EXCL",E,E,N,N],[17,"IPC_NOWAIT",E,E,N,N],[17,"IPC_RMID",E,E,N,N],[17,"IPC_SET",E,E,N,N],[17,"IPC_STAT",E,E,N,N],[17,"IPC_INFO",E,E,N,N],[17,"MSG_STAT",E,E,N,N],[17,"MSG_INFO",E,E,N,N],[17,"MSG_NOERROR",E,E,N,N],[17,"MSG_EXCEPT",E,E,N,N],[17,"MSG_COPY",E,E,N,N],[17,"SHM_R",E,E,N,N],[17,"SHM_W",E,E,N,N],[17,"SHM_RDONLY",E,E,N,N],[17,"SHM_RND",E,E,N,N],[17,"SHM_REMAP",E,E,N,N],[17,"SHM_EXEC",E,E,N,N],[17,"SHM_LOCK",E,E,N,N],[17,"SHM_UNLOCK",E,E,N,N],[17,"SHM_HUGETLB",E,E,N,N],[17,"SHM_NORESERVE",E,E,N,N],[17,"EPOLLRDHUP",E,E,N,N],[17,"EPOLLEXCLUSIVE",E,E,N,N],[17,"EPOLLONESHOT",E,E,N,N],[17,"QFMT_VFS_OLD",E,E,N,N],[17,"QFMT_VFS_V0",E,E,N,N],[17,"QFMT_VFS_V1",E,E,N,N],[17,"EFD_SEMAPHORE",E,E,N,N],[17,"LOG_NFACILITIES",E,E,N,N],[17,"SEM_FAILED",E,E,N,N],[17,"RB_AUTOBOOT",E,E,N,N],[17,"RB_HALT_SYSTEM",E,E,N,N],[17,"RB_ENABLE_CAD",E,E,N,N],[17,"RB_DISABLE_CAD",E,E,N,N],[17,"RB_POWER_OFF",E,E,N,N],[17,"RB_SW_SUSPEND",E,E,N,N],[17,"RB_KEXEC",E,E,N,N],[17,"AI_PASSIVE",E,E,N,N],[17,"AI_CANONNAME",E,E,N,N],[17,"AI_NUMERICHOST",E,E,N,N],[17,"AI_V4MAPPED",E,E,N,N],[17,"AI_ALL",E,E,N,N],[17,"AI_ADDRCONFIG",E,E,N,N],[17,"AI_NUMERICSERV",E,E,N,N],[17,"EAI_BADFLAGS",E,E,N,N],[17,"EAI_NONAME",E,E,N,N],[17,"EAI_AGAIN",E,E,N,N],[17,"EAI_FAIL",E,E,N,N],[17,"EAI_NODATA",E,E,N,N],[17,"EAI_FAMILY",E,E,N,N],[17,"EAI_SOCKTYPE",E,E,N,N],[17,"EAI_SERVICE",E,E,N,N],[17,"EAI_MEMORY",E,E,N,N],[17,"EAI_SYSTEM",E,E,N,N],[17,"EAI_OVERFLOW",E,E,N,N],[17,"NI_NUMERICHOST",E,E,N,N],[17,"NI_NUMERICSERV",E,E,N,N],[17,"NI_NOFQDN",E,E,N,N],[17,"NI_NAMEREQD",E,E,N,N],[17,"NI_DGRAM",E,E,N,N],[17,"SYNC_FILE_RANGE_WAIT_BEFORE",E,E,N,N],[17,"SYNC_FILE_RANGE_WRITE",E,E,N,N],[17,"SYNC_FILE_RANGE_WAIT_AFTER",E,E,N,N],[17,"AIO_CANCELED",E,E,N,N],[17,"AIO_NOTCANCELED",E,E,N,N],[17,"AIO_ALLDONE",E,E,N,N],[17,"LIO_READ",E,E,N,N],[17,"LIO_WRITE",E,E,N,N],[17,"LIO_NOP",E,E,N,N],[17,"LIO_WAIT",E,E,N,N],[17,"LIO_NOWAIT",E,E,N,N],[17,"MREMAP_MAYMOVE",E,E,N,N],[17,"MREMAP_FIXED",E,E,N,N],[17,"PR_SET_PDEATHSIG",E,E,N,N],[17,"PR_GET_PDEATHSIG",E,E,N,N],[17,"PR_GET_DUMPABLE",E,E,N,N],[17,"PR_SET_DUMPABLE",E,E,N,N],[17,"PR_GET_UNALIGN",E,E,N,N],[17,"PR_SET_UNALIGN",E,E,N,N],[17,"PR_UNALIGN_NOPRINT",E,E,N,N],[17,"PR_UNALIGN_SIGBUS",E,E,N,N],[17,"PR_GET_KEEPCAPS",E,E,N,N],[17,"PR_SET_KEEPCAPS",E,E,N,N],[17,"PR_GET_FPEMU",E,E,N,N],[17,"PR_SET_FPEMU",E,E,N,N],[17,"PR_FPEMU_NOPRINT",E,E,N,N],[17,"PR_FPEMU_SIGFPE",E,E,N,N],[17,"PR_GET_FPEXC",E,E,N,N],[17,"PR_SET_FPEXC",E,E,N,N],[17,"PR_FP_EXC_SW_ENABLE",E,E,N,N],[17,"PR_FP_EXC_DIV",E,E,N,N],[17,"PR_FP_EXC_OVF",E,E,N,N],[17,"PR_FP_EXC_UND",E,E,N,N],[17,"PR_FP_EXC_RES",E,E,N,N],[17,"PR_FP_EXC_INV",E,E,N,N],[17,"PR_FP_EXC_DISABLED",E,E,N,N],[17,"PR_FP_EXC_NONRECOV",E,E,N,N],[17,"PR_FP_EXC_ASYNC",E,E,N,N],[17,"PR_FP_EXC_PRECISE",E,E,N,N],[17,"PR_GET_TIMING",E,E,N,N],[17,"PR_SET_TIMING",E,E,N,N],[17,"PR_TIMING_STATISTICAL",E,E,N,N],[17,"PR_TIMING_TIMESTAMP",E,E,N,N],[17,"PR_SET_NAME",E,E,N,N],[17,"PR_GET_NAME",E,E,N,N],[17,"PR_GET_ENDIAN",E,E,N,N],[17,"PR_SET_ENDIAN",E,E,N,N],[17,"PR_ENDIAN_BIG",E,E,N,N],[17,"PR_ENDIAN_LITTLE",E,E,N,N],[17,"PR_ENDIAN_PPC_LITTLE",E,E,N,N],[17,"PR_GET_SECCOMP",E,E,N,N],[17,"PR_SET_SECCOMP",E,E,N,N],[17,"PR_CAPBSET_READ",E,E,N,N],[17,"PR_CAPBSET_DROP",E,E,N,N],[17,"PR_GET_TSC",E,E,N,N],[17,"PR_SET_TSC",E,E,N,N],[17,"PR_TSC_ENABLE",E,E,N,N],[17,"PR_TSC_SIGSEGV",E,E,N,N],[17,"PR_GET_SECUREBITS",E,E,N,N],[17,"PR_SET_SECUREBITS",E,E,N,N],[17,"PR_SET_TIMERSLACK",E,E,N,N],[17,"PR_GET_TIMERSLACK",E,E,N,N],[17,"PR_TASK_PERF_EVENTS_DISABLE",E,E,N,N],[17,"PR_TASK_PERF_EVENTS_ENABLE",E,E,N,N],[17,"PR_MCE_KILL",E,E,N,N],[17,"PR_MCE_KILL_CLEAR",E,E,N,N],[17,"PR_MCE_KILL_SET",E,E,N,N],[17,"PR_MCE_KILL_LATE",E,E,N,N],[17,"PR_MCE_KILL_EARLY",E,E,N,N],[17,"PR_MCE_KILL_DEFAULT",E,E,N,N],[17,"PR_MCE_KILL_GET",E,E,N,N],[17,"PR_SET_MM",E,E,N,N],[17,"PR_SET_MM_START_CODE",E,E,N,N],[17,"PR_SET_MM_END_CODE",E,E,N,N],[17,"PR_SET_MM_START_DATA",E,E,N,N],[17,"PR_SET_MM_END_DATA",E,E,N,N],[17,"PR_SET_MM_START_STACK",E,E,N,N],[17,"PR_SET_MM_START_BRK",E,E,N,N],[17,"PR_SET_MM_BRK",E,E,N,N],[17,"PR_SET_MM_ARG_START",E,E,N,N],[17,"PR_SET_MM_ARG_END",E,E,N,N],[17,"PR_SET_MM_ENV_START",E,E,N,N],[17,"PR_SET_MM_ENV_END",E,E,N,N],[17,"PR_SET_MM_AUXV",E,E,N,N],[17,"PR_SET_MM_EXE_FILE",E,E,N,N],[17,"PR_SET_MM_MAP",E,E,N,N],[17,"PR_SET_MM_MAP_SIZE",E,E,N,N],[17,"PR_SET_PTRACER",E,E,N,N],[17,"PR_SET_CHILD_SUBREAPER",E,E,N,N],[17,"PR_GET_CHILD_SUBREAPER",E,E,N,N],[17,"PR_SET_NO_NEW_PRIVS",E,E,N,N],[17,"PR_GET_NO_NEW_PRIVS",E,E,N,N],[17,"PR_GET_TID_ADDRESS",E,E,N,N],[17,"PR_SET_THP_DISABLE",E,E,N,N],[17,"PR_GET_THP_DISABLE",E,E,N,N],[17,"PR_MPX_ENABLE_MANAGEMENT",E,E,N,N],[17,"PR_MPX_DISABLE_MANAGEMENT",E,E,N,N],[17,"PR_SET_FP_MODE",E,E,N,N],[17,"PR_GET_FP_MODE",E,E,N,N],[17,"PR_FP_MODE_FR",E,E,N,N],[17,"PR_FP_MODE_FRE",E,E,N,N],[17,"PR_CAP_AMBIENT",E,E,N,N],[17,"PR_CAP_AMBIENT_IS_SET",E,E,N,N],[17,"PR_CAP_AMBIENT_RAISE",E,E,N,N],[17,"PR_CAP_AMBIENT_LOWER",E,E,N,N],[17,"PR_CAP_AMBIENT_CLEAR_ALL",E,E,N,N],[17,"GRND_NONBLOCK",E,E,N,N],[17,"GRND_RANDOM",E,E,N,N],[17,"SECCOMP_MODE_DISABLED",E,E,N,N],[17,"SECCOMP_MODE_STRICT",E,E,N,N],[17,"SECCOMP_MODE_FILTER",E,E,N,N],[17,"ITIMER_REAL",E,E,N,N],[17,"ITIMER_VIRTUAL",E,E,N,N],[17,"ITIMER_PROF",E,E,N,N],[17,"TFD_CLOEXEC",E,E,N,N],[17,"TFD_NONBLOCK",E,E,N,N],[17,"TFD_TIMER_ABSTIME",E,E,N,N],[17,"XATTR_CREATE",E,E,N,N],[17,"XATTR_REPLACE",E,E,N,N],[17,"_POSIX_VDISABLE",E,E,N,N],[17,"FALLOC_FL_KEEP_SIZE",E,E,N,N],[17,"FALLOC_FL_PUNCH_HOLE",E,E,N,N],[17,"FALLOC_FL_COLLAPSE_RANGE",E,E,N,N],[17,"FALLOC_FL_ZERO_RANGE",E,E,N,N],[17,"FALLOC_FL_INSERT_RANGE",E,E,N,N],[17,"FALLOC_FL_UNSHARE_RANGE",E,E,N,N],[17,"ENOATTR",E,E,N,N],[17,"SO_ORIGINAL_DST",E,E,N,N],[17,"IP_ORIGDSTADDR",E,E,N,N],[17,"IP_RECVORIGDSTADDR",E,E,N,N],[17,"IPV6_ORIGDSTADDR",E,E,N,N],[17,"IPV6_RECVORIGDSTADDR",E,E,N,N],[17,"IPV6_FLOWLABEL_MGR",E,E,N,N],[17,"IPV6_FLOWINFO_SEND",E,E,N,N],[17,"IPV6_FLOWINFO_FLOWLABEL",E,E,N,N],[17,"IPV6_FLOWINFO_PRIORITY",E,E,N,N],[17,"IUTF8",E,E,N,N],[17,"CMSPAR",E,E,N,N],[17,"MFD_CLOEXEC",E,E,N,N],[17,"MFD_ALLOW_SEALING",E,E,N,N],[17,"MFD_HUGETLB",E,E,N,N],[17,"PT_NULL",E,E,N,N],[17,"PT_LOAD",E,E,N,N],[17,"PT_DYNAMIC",E,E,N,N],[17,"PT_INTERP",E,E,N,N],[17,"PT_NOTE",E,E,N,N],[17,"PT_SHLIB",E,E,N,N],[17,"PT_PHDR",E,E,N,N],[17,"PT_TLS",E,E,N,N],[17,"PT_NUM",E,E,N,N],[17,"PT_LOOS",E,E,N,N],[17,"PT_GNU_EH_FRAME",E,E,N,N],[17,"PT_GNU_STACK",E,E,N,N],[17,"PT_GNU_RELRO",E,E,N,N],[17,"ETH_ALEN",E,E,N,N],[17,"ETH_HLEN",E,E,N,N],[17,"ETH_ZLEN",E,E,N,N],[17,"ETH_DATA_LEN",E,E,N,N],[17,"ETH_FRAME_LEN",E,E,N,N],[17,"ETH_FCS_LEN",E,E,N,N],[17,"ETH_P_LOOP",E,E,N,N],[17,"ETH_P_PUP",E,E,N,N],[17,"ETH_P_PUPAT",E,E,N,N],[17,"ETH_P_IP",E,E,N,N],[17,"ETH_P_X25",E,E,N,N],[17,"ETH_P_ARP",E,E,N,N],[17,"ETH_P_BPQ",E,E,N,N],[17,"ETH_P_IEEEPUP",E,E,N,N],[17,"ETH_P_IEEEPUPAT",E,E,N,N],[17,"ETH_P_BATMAN",E,E,N,N],[17,"ETH_P_DEC",E,E,N,N],[17,"ETH_P_DNA_DL",E,E,N,N],[17,"ETH_P_DNA_RC",E,E,N,N],[17,"ETH_P_DNA_RT",E,E,N,N],[17,"ETH_P_LAT",E,E,N,N],[17,"ETH_P_DIAG",E,E,N,N],[17,"ETH_P_CUST",E,E,N,N],[17,"ETH_P_SCA",E,E,N,N],[17,"ETH_P_TEB",E,E,N,N],[17,"ETH_P_RARP",E,E,N,N],[17,"ETH_P_ATALK",E,E,N,N],[17,"ETH_P_AARP",E,E,N,N],[17,"ETH_P_8021Q",E,E,N,N],[17,"ETH_P_IPX",E,E,N,N],[17,"ETH_P_IPV6",E,E,N,N],[17,"ETH_P_PAUSE",E,E,N,N],[17,"ETH_P_SLOW",E,E,N,N],[17,"ETH_P_WCCP",E,E,N,N],[17,"ETH_P_MPLS_UC",E,E,N,N],[17,"ETH_P_MPLS_MC",E,E,N,N],[17,"ETH_P_ATMMPOA",E,E,N,N],[17,"ETH_P_PPP_DISC",E,E,N,N],[17,"ETH_P_PPP_SES",E,E,N,N],[17,"ETH_P_LINK_CTL",E,E,N,N],[17,"ETH_P_ATMFATE",E,E,N,N],[17,"ETH_P_PAE",E,E,N,N],[17,"ETH_P_AOE",E,E,N,N],[17,"ETH_P_8021AD",E,E,N,N],[17,"ETH_P_802_EX1",E,E,N,N],[17,"ETH_P_TIPC",E,E,N,N],[17,"ETH_P_MACSEC",E,E,N,N],[17,"ETH_P_8021AH",E,E,N,N],[17,"ETH_P_MVRP",E,E,N,N],[17,"ETH_P_1588",E,E,N,N],[17,"ETH_P_PRP",E,E,N,N],[17,"ETH_P_FCOE",E,E,N,N],[17,"ETH_P_TDLS",E,E,N,N],[17,"ETH_P_FIP",E,E,N,N],[17,"ETH_P_80221",E,E,N,N],[17,"ETH_P_LOOPBACK",E,E,N,N],[17,"ETH_P_QINQ1",E,E,N,N],[17,"ETH_P_QINQ2",E,E,N,N],[17,"ETH_P_QINQ3",E,E,N,N],[17,"ETH_P_EDSA",E,E,N,N],[17,"ETH_P_AF_IUCV",E,E,N,N],[17,"ETH_P_802_3_MIN",E,E,N,N],[17,"ETH_P_802_3",E,E,N,N],[17,"ETH_P_AX25",E,E,N,N],[17,"ETH_P_ALL",E,E,N,N],[17,"ETH_P_802_2",E,E,N,N],[17,"ETH_P_SNAP",E,E,N,N],[17,"ETH_P_DDCMP",E,E,N,N],[17,"ETH_P_WAN_PPP",E,E,N,N],[17,"ETH_P_PPP_MP",E,E,N,N],[17,"ETH_P_LOCALTALK",E,E,N,N],[17,"ETH_P_CANFD",E,E,N,N],[17,"ETH_P_PPPTALK",E,E,N,N],[17,"ETH_P_TR_802_2",E,E,N,N],[17,"ETH_P_MOBITEX",E,E,N,N],[17,"ETH_P_CONTROL",E,E,N,N],[17,"ETH_P_IRDA",E,E,N,N],[17,"ETH_P_ECONET",E,E,N,N],[17,"ETH_P_HDLC",E,E,N,N],[17,"ETH_P_ARCNET",E,E,N,N],[17,"ETH_P_DSA",E,E,N,N],[17,"ETH_P_TRAILER",E,E,N,N],[17,"ETH_P_PHONET",E,E,N,N],[17,"ETH_P_IEEE802154",E,E,N,N],[17,"ETH_P_CAIF",E,E,N,N],[17,"POSIX_SPAWN_RESETIDS",E,E,N,N],[17,"POSIX_SPAWN_SETPGROUP",E,E,N,N],[17,"POSIX_SPAWN_SETSIGDEF",E,E,N,N],[17,"POSIX_SPAWN_SETSIGMASK",E,E,N,N],[17,"POSIX_SPAWN_SETSCHEDPARAM",E,E,N,N],[17,"POSIX_SPAWN_SETSCHEDULER",E,E,N,N],[17,"NLMSG_NOOP",E,E,N,N],[17,"NLMSG_ERROR",E,E,N,N],[17,"NLMSG_DONE",E,E,N,N],[17,"NLMSG_OVERRUN",E,E,N,N],[17,"NLMSG_MIN_TYPE",E,E,N,N],[17,"NFNLGRP_NONE",E,E,N,N],[17,"NFNLGRP_CONNTRACK_NEW",E,E,N,N],[17,"NFNLGRP_CONNTRACK_UPDATE",E,E,N,N],[17,"NFNLGRP_CONNTRACK_DESTROY",E,E,N,N],[17,"NFNLGRP_CONNTRACK_EXP_NEW",E,E,N,N],[17,"NFNLGRP_CONNTRACK_EXP_UPDATE",E,E,N,N],[17,"NFNLGRP_CONNTRACK_EXP_DESTROY",E,E,N,N],[17,"NFNLGRP_NFTABLES",E,E,N,N],[17,"NFNLGRP_ACCT_QUOTA",E,E,N,N],[17,"NFNETLINK_V0",E,E,N,N],[17,"NFNL_SUBSYS_NONE",E,E,N,N],[17,"NFNL_SUBSYS_CTNETLINK",E,E,N,N],[17,"NFNL_SUBSYS_CTNETLINK_EXP",E,E,N,N],[17,"NFNL_SUBSYS_QUEUE",E,E,N,N],[17,"NFNL_SUBSYS_ULOG",E,E,N,N],[17,"NFNL_SUBSYS_OSF",E,E,N,N],[17,"NFNL_SUBSYS_IPSET",E,E,N,N],[17,"NFNL_SUBSYS_ACCT",E,E,N,N],[17,"NFNL_SUBSYS_CTNETLINK_TIMEOUT",E,E,N,N],[17,"NFNL_SUBSYS_CTHELPER",E,E,N,N],[17,"NFNL_SUBSYS_NFTABLES",E,E,N,N],[17,"NFNL_SUBSYS_NFT_COMPAT",E,E,N,N],[17,"NFNL_SUBSYS_COUNT",E,E,N,N],[17,"NFNL_MSG_BATCH_BEGIN",E,E,N,N],[17,"NFNL_MSG_BATCH_END",E,E,N,N],[17,"NFULNL_MSG_PACKET",E,E,N,N],[17,"NFULNL_MSG_CONFIG",E,E,N,N],[17,"NFULA_UNSPEC",E,E,N,N],[17,"NFULA_PACKET_HDR",E,E,N,N],[17,"NFULA_MARK",E,E,N,N],[17,"NFULA_TIMESTAMP",E,E,N,N],[17,"NFULA_IFINDEX_INDEV",E,E,N,N],[17,"NFULA_IFINDEX_OUTDEV",E,E,N,N],[17,"NFULA_IFINDEX_PHYSINDEV",E,E,N,N],[17,"NFULA_IFINDEX_PHYSOUTDEV",E,E,N,N],[17,"NFULA_HWADDR",E,E,N,N],[17,"NFULA_PAYLOAD",E,E,N,N],[17,"NFULA_PREFIX",E,E,N,N],[17,"NFULA_UID",E,E,N,N],[17,"NFULA_SEQ",E,E,N,N],[17,"NFULA_SEQ_GLOBAL",E,E,N,N],[17,"NFULA_GID",E,E,N,N],[17,"NFULA_HWTYPE",E,E,N,N],[17,"NFULA_HWHEADER",E,E,N,N],[17,"NFULA_HWLEN",E,E,N,N],[17,"NFULA_CT",E,E,N,N],[17,"NFULA_CT_INFO",E,E,N,N],[17,"NFULNL_CFG_CMD_NONE",E,E,N,N],[17,"NFULNL_CFG_CMD_BIND",E,E,N,N],[17,"NFULNL_CFG_CMD_UNBIND",E,E,N,N],[17,"NFULNL_CFG_CMD_PF_BIND",E,E,N,N],[17,"NFULNL_CFG_CMD_PF_UNBIND",E,E,N,N],[17,"NFULA_CFG_UNSPEC",E,E,N,N],[17,"NFULA_CFG_CMD",E,E,N,N],[17,"NFULA_CFG_MODE",E,E,N,N],[17,"NFULA_CFG_NLBUFSIZ",E,E,N,N],[17,"NFULA_CFG_TIMEOUT",E,E,N,N],[17,"NFULA_CFG_QTHRESH",E,E,N,N],[17,"NFULA_CFG_FLAGS",E,E,N,N],[17,"NFULNL_COPY_NONE",E,E,N,N],[17,"NFULNL_COPY_META",E,E,N,N],[17,"NFULNL_COPY_PACKET",E,E,N,N],[17,"NFULNL_CFG_F_SEQ",E,E,N,N],[17,"NFULNL_CFG_F_SEQ_GLOBAL",E,E,N,N],[17,"NFULNL_CFG_F_CONNTRACK",E,E,N,N],[17,"GENL_NAMSIZ",E,E,N,N],[17,"GENL_MIN_ID",E,E,N,N],[17,"GENL_MAX_ID",E,E,N,N],[17,"GENL_ADMIN_PERM",E,E,N,N],[17,"GENL_CMD_CAP_DO",E,E,N,N],[17,"GENL_CMD_CAP_DUMP",E,E,N,N],[17,"GENL_CMD_CAP_HASPOL",E,E,N,N],[17,"GENL_ID_CTRL",E,E,N,N],[17,"CTRL_CMD_UNSPEC",E,E,N,N],[17,"CTRL_CMD_NEWFAMILY",E,E,N,N],[17,"CTRL_CMD_DELFAMILY",E,E,N,N],[17,"CTRL_CMD_GETFAMILY",E,E,N,N],[17,"CTRL_CMD_NEWOPS",E,E,N,N],[17,"CTRL_CMD_DELOPS",E,E,N,N],[17,"CTRL_CMD_GETOPS",E,E,N,N],[17,"CTRL_CMD_NEWMCAST_GRP",E,E,N,N],[17,"CTRL_CMD_DELMCAST_GRP",E,E,N,N],[17,"CTRL_CMD_GETMCAST_GRP",E,E,N,N],[17,"CTRL_ATTR_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_FAMILY_ID",E,E,N,N],[17,"CTRL_ATTR_FAMILY_NAME",E,E,N,N],[17,"CTRL_ATTR_VERSION",E,E,N,N],[17,"CTRL_ATTR_HDRSIZE",E,E,N,N],[17,"CTRL_ATTR_MAXATTR",E,E,N,N],[17,"CTRL_ATTR_OPS",E,E,N,N],[17,"CTRL_ATTR_MCAST_GROUPS",E,E,N,N],[17,"CTRL_ATTR_OP_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_OP_ID",E,E,N,N],[17,"CTRL_ATTR_OP_FLAGS",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_NAME",E,E,N,N],[17,"CTRL_ATTR_MCAST_GRP_ID",E,E,N,N],[17,"PACKET_ADD_MEMBERSHIP",E,E,N,N],[17,"PACKET_DROP_MEMBERSHIP",E,E,N,N],[17,"PACKET_MR_MULTICAST",E,E,N,N],[17,"PACKET_MR_PROMISC",E,E,N,N],[17,"PACKET_MR_ALLMULTI",E,E,N,N],[17,"PACKET_MR_UNICAST",E,E,N,N],[17,"NF_DROP",E,E,N,N],[17,"NF_ACCEPT",E,E,N,N],[17,"NF_STOLEN",E,E,N,N],[17,"NF_QUEUE",E,E,N,N],[17,"NF_REPEAT",E,E,N,N],[17,"NF_STOP",E,E,N,N],[17,"NF_MAX_VERDICT",E,E,N,N],[17,"NF_VERDICT_MASK",E,E,N,N],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS",E,E,N,N],[17,"NF_VERDICT_QMASK",E,E,N,N],[17,"NF_VERDICT_QBITS",E,E,N,N],[17,"NF_VERDICT_BITS",E,E,N,N],[17,"NF_INET_PRE_ROUTING",E,E,N,N],[17,"NF_INET_LOCAL_IN",E,E,N,N],[17,"NF_INET_FORWARD",E,E,N,N],[17,"NF_INET_LOCAL_OUT",E,E,N,N],[17,"NF_INET_POST_ROUTING",E,E,N,N],[17,"NF_INET_NUMHOOKS",E,E,N,N],[17,"NFPROTO_UNSPEC",E,E,N,N],[17,"NFPROTO_IPV4",E,E,N,N],[17,"NFPROTO_ARP",E,E,N,N],[17,"NFPROTO_BRIDGE",E,E,N,N],[17,"NFPROTO_IPV6",E,E,N,N],[17,"NFPROTO_DECNET",E,E,N,N],[17,"NFPROTO_NUMPROTO",E,E,N,N],[17,"NF_IP_PRE_ROUTING",E,E,N,N],[17,"NF_IP_LOCAL_IN",E,E,N,N],[17,"NF_IP_FORWARD",E,E,N,N],[17,"NF_IP_LOCAL_OUT",E,E,N,N],[17,"NF_IP_POST_ROUTING",E,E,N,N],[17,"NF_IP_NUMHOOKS",E,E,N,N],[17,"NF_IP_PRI_FIRST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_DEFRAG",E,E,N,N],[17,"NF_IP_PRI_RAW",E,E,N,N],[17,"NF_IP_PRI_SELINUX_FIRST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK",E,E,N,N],[17,"NF_IP_PRI_MANGLE",E,E,N,N],[17,"NF_IP_PRI_NAT_DST",E,E,N,N],[17,"NF_IP_PRI_FILTER",E,E,N,N],[17,"NF_IP_PRI_SECURITY",E,E,N,N],[17,"NF_IP_PRI_NAT_SRC",E,E,N,N],[17,"NF_IP_PRI_SELINUX_LAST",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_HELPER",E,E,N,N],[17,"NF_IP_PRI_CONNTRACK_CONFIRM",E,E,N,N],[17,"NF_IP_PRI_LAST",E,E,N,N],[17,"NF_IP6_PRE_ROUTING",E,E,N,N],[17,"NF_IP6_LOCAL_IN",E,E,N,N],[17,"NF_IP6_FORWARD",E,E,N,N],[17,"NF_IP6_LOCAL_OUT",E,E,N,N],[17,"NF_IP6_POST_ROUTING",E,E,N,N],[17,"NF_IP6_NUMHOOKS",E,E,N,N],[17,"NF_IP6_PRI_FIRST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG",E,E,N,N],[17,"NF_IP6_PRI_RAW",E,E,N,N],[17,"NF_IP6_PRI_SELINUX_FIRST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK",E,E,N,N],[17,"NF_IP6_PRI_MANGLE",E,E,N,N],[17,"NF_IP6_PRI_NAT_DST",E,E,N,N],[17,"NF_IP6_PRI_FILTER",E,E,N,N],[17,"NF_IP6_PRI_SECURITY",E,E,N,N],[17,"NF_IP6_PRI_NAT_SRC",E,E,N,N],[17,"NF_IP6_PRI_SELINUX_LAST",E,E,N,N],[17,"NF_IP6_PRI_CONNTRACK_HELPER",E,E,N,N],[17,"NF_IP6_PRI_LAST",E,E,N,N],[17,"SIOCADDRT",E,E,N,N],[17,"SIOCDELRT",E,E,N,N],[17,"SIOCGIFNAME",E,E,N,N],[17,"SIOCSIFLINK",E,E,N,N],[17,"SIOCGIFCONF",E,E,N,N],[17,"SIOCGIFFLAGS",E,E,N,N],[17,"SIOCSIFFLAGS",E,E,N,N],[17,"SIOCGIFADDR",E,E,N,N],[17,"SIOCSIFADDR",E,E,N,N],[17,"SIOCGIFDSTADDR",E,E,N,N],[17,"SIOCSIFDSTADDR",E,E,N,N],[17,"SIOCGIFBRDADDR",E,E,N,N],[17,"SIOCSIFBRDADDR",E,E,N,N],[17,"SIOCGIFNETMASK",E,E,N,N],[17,"SIOCSIFNETMASK",E,E,N,N],[17,"SIOCGIFMETRIC",E,E,N,N],[17,"SIOCSIFMETRIC",E,E,N,N],[17,"SIOCGIFMEM",E,E,N,N],[17,"SIOCSIFMEM",E,E,N,N],[17,"SIOCGIFMTU",E,E,N,N],[17,"SIOCSIFMTU",E,E,N,N],[17,"SIOCSIFHWADDR",E,E,N,N],[17,"SIOCGIFENCAP",E,E,N,N],[17,"SIOCSIFENCAP",E,E,N,N],[17,"SIOCGIFHWADDR",E,E,N,N],[17,"SIOCGIFSLAVE",E,E,N,N],[17,"SIOCSIFSLAVE",E,E,N,N],[17,"SIOCADDMULTI",E,E,N,N],[17,"SIOCDELMULTI",E,E,N,N],[17,"SIOCDARP",E,E,N,N],[17,"SIOCGARP",E,E,N,N],[17,"SIOCSARP",E,E,N,N],[17,"SIOCDRARP",E,E,N,N],[17,"SIOCGRARP",E,E,N,N],[17,"SIOCSRARP",E,E,N,N],[17,"SIOCGIFMAP",E,E,N,N],[17,"SIOCSIFMAP",E,E,N,N],[17,"IPTOS_TOS_MASK",E,E,N,N],[17,"IPTOS_PREC_MASK",E,E,N,N],[17,"IPTOS_ECN_NOT_ECT",E,E,N,N],[17,"RTF_UP",E,E,N,N],[17,"RTF_GATEWAY",E,E,N,N],[17,"RTF_HOST",E,E,N,N],[17,"RTF_REINSTATE",E,E,N,N],[17,"RTF_DYNAMIC",E,E,N,N],[17,"RTF_MODIFIED",E,E,N,N],[17,"RTF_MTU",E,E,N,N],[17,"RTF_MSS",E,E,N,N],[17,"RTF_WINDOW",E,E,N,N],[17,"RTF_IRTT",E,E,N,N],[17,"RTF_REJECT",E,E,N,N],[17,"RTF_STATIC",E,E,N,N],[17,"RTF_XRESOLVE",E,E,N,N],[17,"RTF_NOFORWARD",E,E,N,N],[17,"RTF_THROW",E,E,N,N],[17,"RTF_NOPMTUDISC",E,E,N,N],[17,"RTF_DEFAULT",E,E,N,N],[17,"RTF_ALLONLINK",E,E,N,N],[17,"RTF_ADDRCONF",E,E,N,N],[17,"RTF_LINKRT",E,E,N,N],[17,"RTF_NONEXTHOP",E,E,N,N],[17,"RTF_CACHE",E,E,N,N],[17,"RTF_FLOW",E,E,N,N],[17,"RTF_POLICY",E,E,N,N],[17,"RTCF_VALVE",E,E,N,N],[17,"RTCF_MASQ",E,E,N,N],[17,"RTCF_NAT",E,E,N,N],[17,"RTCF_DOREDIRECT",E,E,N,N],[17,"RTCF_LOG",E,E,N,N],[17,"RTCF_DIRECTSRC",E,E,N,N],[17,"RTF_LOCAL",E,E,N,N],[17,"RTF_INTERFACE",E,E,N,N],[17,"RTF_MULTICAST",E,E,N,N],[17,"RTF_BROADCAST",E,E,N,N],[17,"RTF_NAT",E,E,N,N],[17,"RTF_ADDRCLASSMASK",E,E,N,N],[17,"RT_CLASS_UNSPEC",E,E,N,N],[17,"RT_CLASS_DEFAULT",E,E,N,N],[17,"RT_CLASS_MAIN",E,E,N,N],[17,"RT_CLASS_LOCAL",E,E,N,N],[17,"RT_CLASS_MAX",E,E,N,N],[17,"NUD_NONE",E,E,N,N],[17,"NUD_INCOMPLETE",E,E,N,N],[17,"NUD_REACHABLE",E,E,N,N],[17,"NUD_STALE",E,E,N,N],[17,"NUD_DELAY",E,E,N,N],[17,"NUD_PROBE",E,E,N,N],[17,"NUD_FAILED",E,E,N,N],[17,"NUD_NOARP",E,E,N,N],[17,"NUD_PERMANENT",E,E,N,N],[17,"NTF_USE",E,E,N,N],[17,"NTF_SELF",E,E,N,N],[17,"NTF_MASTER",E,E,N,N],[17,"NTF_PROXY",E,E,N,N],[17,"NTF_ROUTER",E,E,N,N],[17,"NDA_UNSPEC",E,E,N,N],[17,"NDA_DST",E,E,N,N],[17,"NDA_LLADDR",E,E,N,N],[17,"NDA_CACHEINFO",E,E,N,N],[17,"NDA_PROBES",E,E,N,N],[17,"NDA_VLAN",E,E,N,N],[17,"NDA_PORT",E,E,N,N],[17,"NDA_VNI",E,E,N,N],[17,"NDA_IFINDEX",E,E,N,N],[17,"NLA_ALIGNTO",E,E,N,N],[17,"NETLINK_ROUTE",E,E,N,N],[17,"NETLINK_UNUSED",E,E,N,N],[17,"NETLINK_USERSOCK",E,E,N,N],[17,"NETLINK_FIREWALL",E,E,N,N],[17,"NETLINK_SOCK_DIAG",E,E,N,N],[17,"NETLINK_NFLOG",E,E,N,N],[17,"NETLINK_XFRM",E,E,N,N],[17,"NETLINK_SELINUX",E,E,N,N],[17,"NETLINK_ISCSI",E,E,N,N],[17,"NETLINK_AUDIT",E,E,N,N],[17,"NETLINK_FIB_LOOKUP",E,E,N,N],[17,"NETLINK_CONNECTOR",E,E,N,N],[17,"NETLINK_NETFILTER",E,E,N,N],[17,"NETLINK_IP6_FW",E,E,N,N],[17,"NETLINK_DNRTMSG",E,E,N,N],[17,"NETLINK_KOBJECT_UEVENT",E,E,N,N],[17,"NETLINK_GENERIC",E,E,N,N],[17,"NETLINK_SCSITRANSPORT",E,E,N,N],[17,"NETLINK_ECRYPTFS",E,E,N,N],[17,"NETLINK_RDMA",E,E,N,N],[17,"NETLINK_CRYPTO",E,E,N,N],[17,"NETLINK_INET_DIAG",E,E,N,N],[17,"NLM_F_REQUEST",E,E,N,N],[17,"NLM_F_MULTI",E,E,N,N],[17,"NLM_F_ACK",E,E,N,N],[17,"NLM_F_ECHO",E,E,N,N],[17,"NLM_F_DUMP_INTR",E,E,N,N],[17,"NLM_F_DUMP_FILTERED",E,E,N,N],[17,"NLM_F_ROOT",E,E,N,N],[17,"NLM_F_MATCH",E,E,N,N],[17,"NLM_F_ATOMIC",E,E,N,N],[17,"NLM_F_DUMP",E,E,N,N],[17,"NLM_F_REPLACE",E,E,N,N],[17,"NLM_F_EXCL",E,E,N,N],[17,"NLM_F_CREATE",E,E,N,N],[17,"NLM_F_APPEND",E,E,N,N],[17,"NETLINK_ADD_MEMBERSHIP",E,E,N,N],[17,"NETLINK_DROP_MEMBERSHIP",E,E,N,N],[17,"NETLINK_PKTINFO",E,E,N,N],[17,"NETLINK_BROADCAST_ERROR",E,E,N,N],[17,"NETLINK_NO_ENOBUFS",E,E,N,N],[17,"NETLINK_RX_RING",E,E,N,N],[17,"NETLINK_TX_RING",E,E,N,N],[17,"NETLINK_LISTEN_ALL_NSID",E,E,N,N],[17,"NETLINK_LIST_MEMBERSHIPS",E,E,N,N],[17,"NETLINK_CAP_ACK",E,E,N,N],[17,"NLA_F_NESTED",E,E,N,N],[17,"NLA_F_NET_BYTEORDER",E,E,N,N],[17,"NLA_TYPE_MASK",E,E,N,N],[17,"TCA_UNSPEC",E,E,N,N],[17,"TCA_KIND",E,E,N,N],[17,"TCA_OPTIONS",E,E,N,N],[17,"TCA_STATS",E,E,N,N],[17,"TCA_XSTATS",E,E,N,N],[17,"TCA_RATE",E,E,N,N],[17,"TCA_FCNT",E,E,N,N],[17,"TCA_STATS2",E,E,N,N],[17,"TCA_STAB",E,E,N,N],[17,"RTM_NEWLINK",E,E,N,N],[17,"RTM_DELLINK",E,E,N,N],[17,"RTM_GETLINK",E,E,N,N],[17,"RTM_SETLINK",E,E,N,N],[17,"RTM_NEWADDR",E,E,N,N],[17,"RTM_DELADDR",E,E,N,N],[17,"RTM_GETADDR",E,E,N,N],[17,"RTM_NEWROUTE",E,E,N,N],[17,"RTM_DELROUTE",E,E,N,N],[17,"RTM_GETROUTE",E,E,N,N],[17,"RTM_NEWNEIGH",E,E,N,N],[17,"RTM_DELNEIGH",E,E,N,N],[17,"RTM_GETNEIGH",E,E,N,N],[17,"RTM_NEWRULE",E,E,N,N],[17,"RTM_DELRULE",E,E,N,N],[17,"RTM_GETRULE",E,E,N,N],[17,"RTM_NEWQDISC",E,E,N,N],[17,"RTM_DELQDISC",E,E,N,N],[17,"RTM_GETQDISC",E,E,N,N],[17,"RTM_NEWTCLASS",E,E,N,N],[17,"RTM_DELTCLASS",E,E,N,N],[17,"RTM_GETTCLASS",E,E,N,N],[17,"RTM_NEWTFILTER",E,E,N,N],[17,"RTM_DELTFILTER",E,E,N,N],[17,"RTM_GETTFILTER",E,E,N,N],[17,"RTM_NEWACTION",E,E,N,N],[17,"RTM_DELACTION",E,E,N,N],[17,"RTM_GETACTION",E,E,N,N],[17,"RTM_NEWPREFIX",E,E,N,N],[17,"RTM_GETMULTICAST",E,E,N,N],[17,"RTM_GETANYCAST",E,E,N,N],[17,"RTM_NEWNEIGHTBL",E,E,N,N],[17,"RTM_GETNEIGHTBL",E,E,N,N],[17,"RTM_SETNEIGHTBL",E,E,N,N],[17,"RTM_NEWNDUSEROPT",E,E,N,N],[17,"RTM_NEWADDRLABEL",E,E,N,N],[17,"RTM_DELADDRLABEL",E,E,N,N],[17,"RTM_GETADDRLABEL",E,E,N,N],[17,"RTM_GETDCB",E,E,N,N],[17,"RTM_SETDCB",E,E,N,N],[17,"RTM_NEWNETCONF",E,E,N,N],[17,"RTM_GETNETCONF",E,E,N,N],[17,"RTM_NEWMDB",E,E,N,N],[17,"RTM_DELMDB",E,E,N,N],[17,"RTM_GETMDB",E,E,N,N],[17,"RTM_NEWNSID",E,E,N,N],[17,"RTM_DELNSID",E,E,N,N],[17,"RTM_GETNSID",E,E,N,N],[17,"RTM_F_NOTIFY",E,E,N,N],[17,"RTM_F_CLONED",E,E,N,N],[17,"RTM_F_EQUALIZE",E,E,N,N],[17,"RTM_F_PREFIX",E,E,N,N],[17,"RTA_UNSPEC",E,E,N,N],[17,"RTA_DST",E,E,N,N],[17,"RTA_SRC",E,E,N,N],[17,"RTA_IIF",E,E,N,N],[17,"RTA_OIF",E,E,N,N],[17,"RTA_GATEWAY",E,E,N,N],[17,"RTA_PRIORITY",E,E,N,N],[17,"RTA_PREFSRC",E,E,N,N],[17,"RTA_METRICS",E,E,N,N],[17,"RTA_MULTIPATH",E,E,N,N],[17,"RTA_PROTOINFO",E,E,N,N],[17,"RTA_FLOW",E,E,N,N],[17,"RTA_CACHEINFO",E,E,N,N],[17,"RTA_SESSION",E,E,N,N],[17,"RTA_MP_ALGO",E,E,N,N],[17,"RTA_TABLE",E,E,N,N],[17,"RTA_MARK",E,E,N,N],[17,"RTA_MFC_STATS",E,E,N,N],[17,"RTN_UNSPEC",E,E,N,N],[17,"RTN_UNICAST",E,E,N,N],[17,"RTN_LOCAL",E,E,N,N],[17,"RTN_BROADCAST",E,E,N,N],[17,"RTN_ANYCAST",E,E,N,N],[17,"RTN_MULTICAST",E,E,N,N],[17,"RTN_BLACKHOLE",E,E,N,N],[17,"RTN_UNREACHABLE",E,E,N,N],[17,"RTN_PROHIBIT",E,E,N,N],[17,"RTN_THROW",E,E,N,N],[17,"RTN_NAT",E,E,N,N],[17,"RTN_XRESOLVE",E,E,N,N],[17,"RTPROT_UNSPEC",E,E,N,N],[17,"RTPROT_REDIRECT",E,E,N,N],[17,"RTPROT_KERNEL",E,E,N,N],[17,"RTPROT_BOOT",E,E,N,N],[17,"RTPROT_STATIC",E,E,N,N],[17,"RT_SCOPE_UNIVERSE",E,E,N,N],[17,"RT_SCOPE_SITE",E,E,N,N],[17,"RT_SCOPE_LINK",E,E,N,N],[17,"RT_SCOPE_HOST",E,E,N,N],[17,"RT_SCOPE_NOWHERE",E,E,N,N],[17,"RT_TABLE_UNSPEC",E,E,N,N],[17,"RT_TABLE_COMPAT",E,E,N,N],[17,"RT_TABLE_DEFAULT",E,E,N,N],[17,"RT_TABLE_MAIN",E,E,N,N],[17,"RT_TABLE_LOCAL",E,E,N,N],[17,"RTMSG_OVERRUN",E,E,N,N],[17,"RTMSG_NEWDEVICE",E,E,N,N],[17,"RTMSG_DELDEVICE",E,E,N,N],[17,"RTMSG_NEWROUTE",E,E,N,N],[17,"RTMSG_DELROUTE",E,E,N,N],[17,"RTMSG_NEWRULE",E,E,N,N],[17,"RTMSG_DELRULE",E,E,N,N],[17,"RTMSG_CONTROL",E,E,N,N],[17,"RTMSG_AR_FAILED",E,E,N,N],[17,"MAX_ADDR_LEN",E,E,N,N],[17,"ARPD_UPDATE",E,E,N,N],[17,"ARPD_LOOKUP",E,E,N,N],[17,"ARPD_FLUSH",E,E,N,N],[17,"ATF_MAGIC",E,E,N,N],[17,"SO_TIMESTAMPING",E,E,N,N],[17,"SCM_TIMESTAMPING",E,E,N,N],[17,"MODULE_INIT_IGNORE_MODVERSIONS",E,E,N,N],[17,"MODULE_INIT_IGNORE_VERMAGIC",E,E,N,N],[17,"SOF_TIMESTAMPING_TX_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_TX_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RX_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RX_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_SOFTWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_SYS_HARDWARE",E,E,N,N],[17,"SOF_TIMESTAMPING_RAW_HARDWARE",E,E,N,N],[17,"ALG_SET_KEY",E,E,N,N],[17,"ALG_SET_IV",E,E,N,N],[17,"ALG_SET_OP",E,E,N,N],[17,"ALG_SET_AEAD_ASSOCLEN",E,E,N,N],[17,"ALG_SET_AEAD_AUTHSIZE",E,E,N,N],[17,"ALG_OP_DECRYPT",E,E,N,N],[17,"ALG_OP_ENCRYPT",E,E,N,N],[17,"VMADDR_CID_ANY",E,E,N,N],[17,"VMADDR_CID_HYPERVISOR",E,E,N,N],[17,"VMADDR_CID_RESERVED",E,E,N,N],[17,"VMADDR_CID_HOST",E,E,N,N],[17,"VMADDR_PORT_ANY",E,E,N,N],[17,"IN_ACCESS",E,E,N,N],[17,"IN_MODIFY",E,E,N,N],[17,"IN_ATTRIB",E,E,N,N],[17,"IN_CLOSE_WRITE",E,E,N,N],[17,"IN_CLOSE_NOWRITE",E,E,N,N],[17,"IN_CLOSE",E,E,N,N],[17,"IN_OPEN",E,E,N,N],[17,"IN_MOVED_FROM",E,E,N,N],[17,"IN_MOVED_TO",E,E,N,N],[17,"IN_MOVE",E,E,N,N],[17,"IN_CREATE",E,E,N,N],[17,"IN_DELETE",E,E,N,N],[17,"IN_DELETE_SELF",E,E,N,N],[17,"IN_MOVE_SELF",E,E,N,N],[17,"IN_UNMOUNT",E,E,N,N],[17,"IN_Q_OVERFLOW",E,E,N,N],[17,"IN_IGNORED",E,E,N,N],[17,"IN_ONLYDIR",E,E,N,N],[17,"IN_DONT_FOLLOW",E,E,N,N],[17,"IN_ISDIR",E,E,N,N],[17,"IN_ONESHOT",E,E,N,N],[17,"IN_ALL_EVENTS",E,E,N,N],[17,"IN_CLOEXEC",E,E,N,N],[17,"IN_NONBLOCK",E,E,N,N],[17,"FUTEX_WAIT",E,E,N,N],[17,"FUTEX_WAKE",E,E,N,N],[17,"FUTEX_FD",E,E,N,N],[17,"FUTEX_REQUEUE",E,E,N,N],[17,"FUTEX_CMP_REQUEUE",E,E,N,N],[17,"FUTEX_WAKE_OP",E,E,N,N],[17,"FUTEX_LOCK_PI",E,E,N,N],[17,"FUTEX_UNLOCK_PI",E,E,N,N],[17,"FUTEX_TRYLOCK_PI",E,E,N,N],[17,"FUTEX_WAIT_BITSET",E,E,N,N],[17,"FUTEX_WAKE_BITSET",E,E,N,N],[17,"FUTEX_WAIT_REQUEUE_PI",E,E,N,N],[17,"FUTEX_CMP_REQUEUE_PI",E,E,N,N],[17,"FUTEX_PRIVATE_FLAG",E,E,N,N],[17,"FUTEX_CLOCK_REALTIME",E,E,N,N],[17,"FUTEX_CMD_MASK",E,E,N,N],[17,"RLIMIT_CPU",E,E,N,N],[17,"RLIMIT_FSIZE",E,E,N,N],[17,"RLIMIT_DATA",E,E,N,N],[17,"RLIMIT_STACK",E,E,N,N],[17,"RLIMIT_CORE",E,E,N,N],[17,"RLIMIT_LOCKS",E,E,N,N],[17,"RLIMIT_SIGPENDING",E,E,N,N],[17,"RLIMIT_MSGQUEUE",E,E,N,N],[17,"RLIMIT_NICE",E,E,N,N],[17,"RLIMIT_RTPRIO",E,E,N,N],[17,"RLIMIT_RTTIME",E,E,N,N],[17,"RLIMIT_NLIMITS",E,E,N,N],[17,"MS_RMT_MASK",E,E,N,N],[17,"__UT_LINESIZE",E,E,N,N],[17,"__UT_NAMESIZE",E,E,N,N],[17,"__UT_HOSTSIZE",E,E,N,N],[17,"EMPTY",E,E,N,N],[17,"RUN_LVL",E,E,N,N],[17,"BOOT_TIME",E,E,N,N],[17,"NEW_TIME",E,E,N,N],[17,"OLD_TIME",E,E,N,N],[17,"INIT_PROCESS",E,E,N,N],[17,"LOGIN_PROCESS",E,E,N,N],[17,"USER_PROCESS",E,E,N,N],[17,"DEAD_PROCESS",E,E,N,N],[17,"ACCOUNTING",E,E,N,N],[17,"SOCK_NONBLOCK",E,E,N,N],[17,"SOL_RXRPC",E,E,N,N],[17,"SOL_PPPOL2TP",E,E,N,N],[17,"SOL_PNPIPE",E,E,N,N],[17,"SOL_RDS",E,E,N,N],[17,"SOL_IUCV",E,E,N,N],[17,"SOL_CAIF",E,E,N,N],[17,"SOL_NFC",E,E,N,N],[17,"SOL_XDP",E,E,N,N],[17,"MSG_TRYHARD",E,E,N,N],[17,"LC_PAPER",E,E,N,N],[17,"LC_NAME",E,E,N,N],[17,"LC_ADDRESS",E,E,N,N],[17,"LC_TELEPHONE",E,E,N,N],[17,"LC_MEASUREMENT",E,E,N,N],[17,"LC_IDENTIFICATION",E,E,N,N],[17,"LC_PAPER_MASK",E,E,N,N],[17,"LC_NAME_MASK",E,E,N,N],[17,"LC_ADDRESS_MASK",E,E,N,N],[17,"LC_TELEPHONE_MASK",E,E,N,N],[17,"LC_MEASUREMENT_MASK",E,E,N,N],[17,"LC_IDENTIFICATION_MASK",E,E,N,N],[17,"LC_ALL_MASK",E,E,N,N],[17,"MAP_SHARED_VALIDATE",E,E,N,N],[17,"MAP_FIXED_NOREPLACE",E,E,N,N],[17,"ENOTSUP",E,E,N,N],[17,"SOCK_SEQPACKET",E,E,N,N],[17,"SOCK_DCCP",E,E,N,N],[17,"SOCK_PACKET",E,E,N,N],[17,"TCP_COOKIE_TRANSACTIONS",E,E,N,N],[17,"TCP_THIN_LINEAR_TIMEOUTS",E,E,N,N],[17,"TCP_THIN_DUPACK",E,E,N,N],[17,"TCP_USER_TIMEOUT",E,E,N,N],[17,"TCP_REPAIR",E,E,N,N],[17,"TCP_REPAIR_QUEUE",E,E,N,N],[17,"TCP_QUEUE_SEQ",E,E,N,N],[17,"TCP_REPAIR_OPTIONS",E,E,N,N],[17,"TCP_FASTOPEN",E,E,N,N],[17,"TCP_TIMESTAMP",E,E,N,N],[17,"DCCP_SOCKOPT_PACKET_SIZE",E,E,N,N],[17,"DCCP_SOCKOPT_SERVICE",E,E,N,N],[17,"DCCP_SOCKOPT_CHANGE_L",E,E,N,N],[17,"DCCP_SOCKOPT_CHANGE_R",E,E,N,N],[17,"DCCP_SOCKOPT_GET_CUR_MPS",E,E,N,N],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT",E,E,N,N],[17,"DCCP_SOCKOPT_SEND_CSCOV",E,E,N,N],[17,"DCCP_SOCKOPT_RECV_CSCOV",E,E,N,N],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS",E,E,N,N],[17,"DCCP_SOCKOPT_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_TX_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_RX_CCID",E,E,N,N],[17,"DCCP_SOCKOPT_QPOLICY_ID",E,E,N,N],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN",E,E,N,N],[17,"DCCP_SOCKOPT_CCID_RX_INFO",E,E,N,N],[17,"DCCP_SOCKOPT_CCID_TX_INFO",E,E,N,N],[17,"DCCP_SERVICE_LIST_MAX_LEN",E,"maximum number of services provided on the same listening…",N,N],[17,"SIGEV_THREAD_ID",E,E,N,N],[17,"BUFSIZ",E,E,N,N],[17,"TMP_MAX",E,E,N,N],[17,"FOPEN_MAX",E,E,N,N],[17,"POSIX_MADV_DONTNEED",E,E,N,N],[17,"_SC_EQUIV_CLASS_MAX",E,E,N,N],[17,"_SC_CHARCLASS_NAME_MAX",E,E,N,N],[17,"_SC_PII",E,E,N,N],[17,"_SC_PII_XTI",E,E,N,N],[17,"_SC_PII_SOCKET",E,E,N,N],[17,"_SC_PII_INTERNET",E,E,N,N],[17,"_SC_PII_OSI",E,E,N,N],[17,"_SC_POLL",E,E,N,N],[17,"_SC_SELECT",E,E,N,N],[17,"_SC_PII_INTERNET_STREAM",E,E,N,N],[17,"_SC_PII_INTERNET_DGRAM",E,E,N,N],[17,"_SC_PII_OSI_COTS",E,E,N,N],[17,"_SC_PII_OSI_CLTS",E,E,N,N],[17,"_SC_PII_OSI_M",E,E,N,N],[17,"_SC_T_IOV_MAX",E,E,N,N],[17,"_SC_2_C_VERSION",E,E,N,N],[17,"_SC_CHAR_BIT",E,E,N,N],[17,"_SC_CHAR_MAX",E,E,N,N],[17,"_SC_CHAR_MIN",E,E,N,N],[17,"_SC_INT_MAX",E,E,N,N],[17,"_SC_INT_MIN",E,E,N,N],[17,"_SC_LONG_BIT",E,E,N,N],[17,"_SC_WORD_BIT",E,E,N,N],[17,"_SC_MB_LEN_MAX",E,E,N,N],[17,"_SC_SSIZE_MAX",E,E,N,N],[17,"_SC_SCHAR_MAX",E,E,N,N],[17,"_SC_SCHAR_MIN",E,E,N,N],[17,"_SC_SHRT_MAX",E,E,N,N],[17,"_SC_SHRT_MIN",E,E,N,N],[17,"_SC_UCHAR_MAX",E,E,N,N],[17,"_SC_UINT_MAX",E,E,N,N],[17,"_SC_ULONG_MAX",E,E,N,N],[17,"_SC_USHRT_MAX",E,E,N,N],[17,"_SC_NL_ARGMAX",E,E,N,N],[17,"_SC_NL_LANGMAX",E,E,N,N],[17,"_SC_NL_MSGMAX",E,E,N,N],[17,"_SC_NL_NMAX",E,E,N,N],[17,"_SC_NL_SETMAX",E,E,N,N],[17,"_SC_NL_TEXTMAX",E,E,N,N],[17,"_SC_BASE",E,E,N,N],[17,"_SC_C_LANG_SUPPORT",E,E,N,N],[17,"_SC_C_LANG_SUPPORT_R",E,E,N,N],[17,"_SC_DEVICE_IO",E,E,N,N],[17,"_SC_DEVICE_SPECIFIC",E,E,N,N],[17,"_SC_DEVICE_SPECIFIC_R",E,E,N,N],[17,"_SC_FD_MGMT",E,E,N,N],[17,"_SC_FIFO",E,E,N,N],[17,"_SC_PIPE",E,E,N,N],[17,"_SC_FILE_ATTRIBUTES",E,E,N,N],[17,"_SC_FILE_LOCKING",E,E,N,N],[17,"_SC_FILE_SYSTEM",E,E,N,N],[17,"_SC_MULTI_PROCESS",E,E,N,N],[17,"_SC_SINGLE_PROCESS",E,E,N,N],[17,"_SC_NETWORKING",E,E,N,N],[17,"_SC_REGEX_VERSION",E,E,N,N],[17,"_SC_SIGNALS",E,E,N,N],[17,"_SC_SYSTEM_DATABASE",E,E,N,N],[17,"_SC_SYSTEM_DATABASE_R",E,E,N,N],[17,"_SC_USER_GROUPS",E,E,N,N],[17,"_SC_USER_GROUPS_R",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL1_ICACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL1_DCACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL2_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL2_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL2_CACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL3_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL3_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL3_CACHE_LINESIZE",E,E,N,N],[17,"_SC_LEVEL4_CACHE_SIZE",E,E,N,N],[17,"_SC_LEVEL4_CACHE_ASSOC",E,E,N,N],[17,"_SC_LEVEL4_CACHE_LINESIZE",E,E,N,N],[17,"O_ACCMODE",E,E,N,N],[17,"ST_RELATIME",E,E,N,N],[17,"NI_MAXHOST",E,E,N,N],[17,"ADFS_SUPER_MAGIC",E,E,N,N],[17,"AFFS_SUPER_MAGIC",E,E,N,N],[17,"CODA_SUPER_MAGIC",E,E,N,N],[17,"CRAMFS_MAGIC",E,E,N,N],[17,"EFS_SUPER_MAGIC",E,E,N,N],[17,"EXT2_SUPER_MAGIC",E,E,N,N],[17,"EXT3_SUPER_MAGIC",E,E,N,N],[17,"EXT4_SUPER_MAGIC",E,E,N,N],[17,"HPFS_SUPER_MAGIC",E,E,N,N],[17,"HUGETLBFS_MAGIC",E,E,N,N],[17,"ISOFS_SUPER_MAGIC",E,E,N,N],[17,"JFFS2_SUPER_MAGIC",E,E,N,N],[17,"MINIX_SUPER_MAGIC",E,E,N,N],[17,"MINIX_SUPER_MAGIC2",E,E,N,N],[17,"MINIX2_SUPER_MAGIC",E,E,N,N],[17,"MINIX2_SUPER_MAGIC2",E,E,N,N],[17,"MSDOS_SUPER_MAGIC",E,E,N,N],[17,"NCP_SUPER_MAGIC",E,E,N,N],[17,"NFS_SUPER_MAGIC",E,E,N,N],[17,"OPENPROM_SUPER_MAGIC",E,E,N,N],[17,"PROC_SUPER_MAGIC",E,E,N,N],[17,"QNX4_SUPER_MAGIC",E,E,N,N],[17,"REISERFS_SUPER_MAGIC",E,E,N,N],[17,"SMB_SUPER_MAGIC",E,E,N,N],[17,"TMPFS_MAGIC",E,E,N,N],[17,"USBDEVICE_SUPER_MAGIC",E,E,N,N],[17,"CPU_SETSIZE",E,E,N,N],[17,"PTRACE_TRACEME",E,E,N,N],[17,"PTRACE_PEEKTEXT",E,E,N,N],[17,"PTRACE_PEEKDATA",E,E,N,N],[17,"PTRACE_PEEKUSER",E,E,N,N],[17,"PTRACE_POKETEXT",E,E,N,N],[17,"PTRACE_POKEDATA",E,E,N,N],[17,"PTRACE_POKEUSER",E,E,N,N],[17,"PTRACE_CONT",E,E,N,N],[17,"PTRACE_KILL",E,E,N,N],[17,"PTRACE_SINGLESTEP",E,E,N,N],[17,"PTRACE_ATTACH",E,E,N,N],[17,"PTRACE_SYSCALL",E,E,N,N],[17,"PTRACE_SETOPTIONS",E,E,N,N],[17,"PTRACE_GETEVENTMSG",E,E,N,N],[17,"PTRACE_GETSIGINFO",E,E,N,N],[17,"PTRACE_SETSIGINFO",E,E,N,N],[17,"PTRACE_GETREGSET",E,E,N,N],[17,"PTRACE_SETREGSET",E,E,N,N],[17,"PTRACE_SEIZE",E,E,N,N],[17,"PTRACE_INTERRUPT",E,E,N,N],[17,"PTRACE_LISTEN",E,E,N,N],[17,"PTRACE_PEEKSIGINFO",E,E,N,N],[17,"EPOLLWAKEUP",E,E,N,N],[17,"SEEK_DATA",E,E,N,N],[17,"SEEK_HOLE",E,E,N,N],[17,"LINUX_REBOOT_MAGIC1",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2A",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2B",E,E,N,N],[17,"LINUX_REBOOT_MAGIC2C",E,E,N,N],[17,"LINUX_REBOOT_CMD_RESTART",E,E,N,N],[17,"LINUX_REBOOT_CMD_HALT",E,E,N,N],[17,"LINUX_REBOOT_CMD_CAD_ON",E,E,N,N],[17,"LINUX_REBOOT_CMD_CAD_OFF",E,E,N,N],[17,"LINUX_REBOOT_CMD_POWER_OFF",E,E,N,N],[17,"LINUX_REBOOT_CMD_RESTART2",E,E,N,N],[17,"LINUX_REBOOT_CMD_SW_SUSPEND",E,E,N,N],[17,"LINUX_REBOOT_CMD_KEXEC",E,E,N,N],[17,"TCA_PAD",E,E,N,N],[17,"TCA_DUMP_INVISIBLE",E,E,N,N],[17,"TCA_CHAIN",E,E,N,N],[17,"TCA_HW_OFFLOAD",E,E,N,N],[17,"RTM_DELNETCONF",E,E,N,N],[17,"RTM_NEWSTATS",E,E,N,N],[17,"RTM_GETSTATS",E,E,N,N],[17,"RTM_NEWCACHEREPORT",E,E,N,N],[17,"RTM_F_LOOKUP_TABLE",E,E,N,N],[17,"RTM_F_FIB_MATCH",E,E,N,N],[17,"RTA_VIA",E,E,N,N],[17,"RTA_NEWDST",E,E,N,N],[17,"RTA_PREF",E,E,N,N],[17,"RTA_ENCAP_TYPE",E,E,N,N],[17,"RTA_ENCAP",E,E,N,N],[17,"RTA_EXPIRES",E,E,N,N],[17,"RTA_PAD",E,E,N,N],[17,"RTA_UID",E,E,N,N],[17,"RTA_TTL_PROPAGATE",E,E,N,N],[17,"NTF_EXT_LEARNED",E,E,N,N],[17,"NTF_OFFLOADED",E,E,N,N],[17,"NDA_MASTER",E,E,N,N],[17,"NDA_LINK_NETNSID",E,E,N,N],[17,"NDA_SRC_VNI",E,E,N,N],[17,"IFA_FLAGS",E,E,N,N],[17,"IFA_F_MANAGETEMPADDR",E,E,N,N],[17,"IFA_F_NOPREFIXROUTE",E,E,N,N],[17,"IFA_F_MCAUTOJOIN",E,E,N,N],[17,"IFA_F_STABLE_PRIVACY",E,E,N,N],[17,"MAX_LINKS",E,E,N,N],[17,"GENL_UNS_ADMIN_PERM",E,E,N,N],[17,"GENL_ID_VFS_DQUOT",E,E,N,N],[17,"GENL_ID_PMCRAID",E,E,N,N],[17,"TIOCM_LE",E,E,N,N],[17,"TIOCM_DTR",E,E,N,N],[17,"TIOCM_RTS",E,E,N,N],[17,"TIOCM_CD",E,E,N,N],[17,"TIOCM_RI",E,E,N,N],[17,"NF_NETDEV_INGRESS",E,E,N,N],[17,"NF_NETDEV_NUMHOOKS",E,E,N,N],[17,"NFPROTO_INET",E,E,N,N],[17,"NFPROTO_NETDEV",E,E,N,N],[17,"NFT_TABLE_MAXNAMELEN",E,E,N,N],[17,"NFT_CHAIN_MAXNAMELEN",E,E,N,N],[17,"NFT_SET_MAXNAMELEN",E,E,N,N],[17,"NFT_OBJ_MAXNAMELEN",E,E,N,N],[17,"NFT_USERDATA_MAXLEN",E,E,N,N],[17,"NFT_REG_VERDICT",E,E,N,N],[17,"NFT_REG_1",E,E,N,N],[17,"NFT_REG_2",E,E,N,N],[17,"NFT_REG_3",E,E,N,N],[17,"NFT_REG_4",E,E,N,N],[17,"__NFT_REG_MAX",E,E,N,N],[17,"NFT_REG32_00",E,E,N,N],[17,"NFT_REG32_01",E,E,N,N],[17,"NFT_REG32_02",E,E,N,N],[17,"NFT_REG32_03",E,E,N,N],[17,"NFT_REG32_04",E,E,N,N],[17,"NFT_REG32_05",E,E,N,N],[17,"NFT_REG32_06",E,E,N,N],[17,"NFT_REG32_07",E,E,N,N],[17,"NFT_REG32_08",E,E,N,N],[17,"NFT_REG32_09",E,E,N,N],[17,"NFT_REG32_10",E,E,N,N],[17,"NFT_REG32_11",E,E,N,N],[17,"NFT_REG32_12",E,E,N,N],[17,"NFT_REG32_13",E,E,N,N],[17,"NFT_REG32_14",E,E,N,N],[17,"NFT_REG32_15",E,E,N,N],[17,"NFT_REG_SIZE",E,E,N,N],[17,"NFT_REG32_SIZE",E,E,N,N],[17,"NFT_CONTINUE",E,E,N,N],[17,"NFT_BREAK",E,E,N,N],[17,"NFT_JUMP",E,E,N,N],[17,"NFT_GOTO",E,E,N,N],[17,"NFT_RETURN",E,E,N,N],[17,"NFT_MSG_NEWTABLE",E,E,N,N],[17,"NFT_MSG_GETTABLE",E,E,N,N],[17,"NFT_MSG_DELTABLE",E,E,N,N],[17,"NFT_MSG_NEWCHAIN",E,E,N,N],[17,"NFT_MSG_GETCHAIN",E,E,N,N],[17,"NFT_MSG_DELCHAIN",E,E,N,N],[17,"NFT_MSG_NEWRULE",E,E,N,N],[17,"NFT_MSG_GETRULE",E,E,N,N],[17,"NFT_MSG_DELRULE",E,E,N,N],[17,"NFT_MSG_NEWSET",E,E,N,N],[17,"NFT_MSG_GETSET",E,E,N,N],[17,"NFT_MSG_DELSET",E,E,N,N],[17,"NFT_MSG_NEWSETELEM",E,E,N,N],[17,"NFT_MSG_GETSETELEM",E,E,N,N],[17,"NFT_MSG_DELSETELEM",E,E,N,N],[17,"NFT_MSG_NEWGEN",E,E,N,N],[17,"NFT_MSG_GETGEN",E,E,N,N],[17,"NFT_MSG_TRACE",E,E,N,N],[17,"NFT_MSG_NEWOBJ",E,E,N,N],[17,"NFT_MSG_GETOBJ",E,E,N,N],[17,"NFT_MSG_DELOBJ",E,E,N,N],[17,"NFT_MSG_GETOBJ_RESET",E,E,N,N],[17,"NFT_MSG_MAX",E,E,N,N],[17,"NFT_SET_ANONYMOUS",E,E,N,N],[17,"NFT_SET_CONSTANT",E,E,N,N],[17,"NFT_SET_INTERVAL",E,E,N,N],[17,"NFT_SET_MAP",E,E,N,N],[17,"NFT_SET_TIMEOUT",E,E,N,N],[17,"NFT_SET_EVAL",E,E,N,N],[17,"NFT_SET_POL_PERFORMANCE",E,E,N,N],[17,"NFT_SET_POL_MEMORY",E,E,N,N],[17,"NFT_SET_ELEM_INTERVAL_END",E,E,N,N],[17,"NFT_DATA_VALUE",E,E,N,N],[17,"NFT_DATA_VERDICT",E,E,N,N],[17,"NFT_DATA_RESERVED_MASK",E,E,N,N],[17,"NFT_DATA_VALUE_MAXLEN",E,E,N,N],[17,"NFT_BYTEORDER_NTOH",E,E,N,N],[17,"NFT_BYTEORDER_HTON",E,E,N,N],[17,"NFT_CMP_EQ",E,E,N,N],[17,"NFT_CMP_NEQ",E,E,N,N],[17,"NFT_CMP_LT",E,E,N,N],[17,"NFT_CMP_LTE",E,E,N,N],[17,"NFT_CMP_GT",E,E,N,N],[17,"NFT_CMP_GTE",E,E,N,N],[17,"NFT_RANGE_EQ",E,E,N,N],[17,"NFT_RANGE_NEQ",E,E,N,N],[17,"NFT_LOOKUP_F_INV",E,E,N,N],[17,"NFT_DYNSET_OP_ADD",E,E,N,N],[17,"NFT_DYNSET_OP_UPDATE",E,E,N,N],[17,"NFT_DYNSET_F_INV",E,E,N,N],[17,"NFT_PAYLOAD_LL_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_NETWORK_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_TRANSPORT_HEADER",E,E,N,N],[17,"NFT_PAYLOAD_CSUM_NONE",E,E,N,N],[17,"NFT_PAYLOAD_CSUM_INET",E,E,N,N],[17,"NFT_META_LEN",E,E,N,N],[17,"NFT_META_PROTOCOL",E,E,N,N],[17,"NFT_META_PRIORITY",E,E,N,N],[17,"NFT_META_MARK",E,E,N,N],[17,"NFT_META_IIF",E,E,N,N],[17,"NFT_META_OIF",E,E,N,N],[17,"NFT_META_IIFNAME",E,E,N,N],[17,"NFT_META_OIFNAME",E,E,N,N],[17,"NFT_META_IIFTYPE",E,E,N,N],[17,"NFT_META_OIFTYPE",E,E,N,N],[17,"NFT_META_SKUID",E,E,N,N],[17,"NFT_META_SKGID",E,E,N,N],[17,"NFT_META_NFTRACE",E,E,N,N],[17,"NFT_META_RTCLASSID",E,E,N,N],[17,"NFT_META_SECMARK",E,E,N,N],[17,"NFT_META_NFPROTO",E,E,N,N],[17,"NFT_META_L4PROTO",E,E,N,N],[17,"NFT_META_BRI_IIFNAME",E,E,N,N],[17,"NFT_META_BRI_OIFNAME",E,E,N,N],[17,"NFT_META_PKTTYPE",E,E,N,N],[17,"NFT_META_CPU",E,E,N,N],[17,"NFT_META_IIFGROUP",E,E,N,N],[17,"NFT_META_OIFGROUP",E,E,N,N],[17,"NFT_META_CGROUP",E,E,N,N],[17,"NFT_META_PRANDOM",E,E,N,N],[17,"NFT_CT_STATE",E,E,N,N],[17,"NFT_CT_DIRECTION",E,E,N,N],[17,"NFT_CT_STATUS",E,E,N,N],[17,"NFT_CT_MARK",E,E,N,N],[17,"NFT_CT_SECMARK",E,E,N,N],[17,"NFT_CT_EXPIRATION",E,E,N,N],[17,"NFT_CT_HELPER",E,E,N,N],[17,"NFT_CT_L3PROTOCOL",E,E,N,N],[17,"NFT_CT_SRC",E,E,N,N],[17,"NFT_CT_DST",E,E,N,N],[17,"NFT_CT_PROTOCOL",E,E,N,N],[17,"NFT_CT_PROTO_SRC",E,E,N,N],[17,"NFT_CT_PROTO_DST",E,E,N,N],[17,"NFT_CT_LABELS",E,E,N,N],[17,"NFT_CT_PKTS",E,E,N,N],[17,"NFT_CT_BYTES",E,E,N,N],[17,"NFT_LIMIT_PKTS",E,E,N,N],[17,"NFT_LIMIT_PKT_BYTES",E,E,N,N],[17,"NFT_LIMIT_F_INV",E,E,N,N],[17,"NFT_QUEUE_FLAG_BYPASS",E,E,N,N],[17,"NFT_QUEUE_FLAG_CPU_FANOUT",E,E,N,N],[17,"NFT_QUEUE_FLAG_MASK",E,E,N,N],[17,"NFT_QUOTA_F_INV",E,E,N,N],[17,"NFT_REJECT_ICMP_UNREACH",E,E,N,N],[17,"NFT_REJECT_TCP_RST",E,E,N,N],[17,"NFT_REJECT_ICMPX_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_NO_ROUTE",E,E,N,N],[17,"NFT_REJECT_ICMPX_PORT_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_HOST_UNREACH",E,E,N,N],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED",E,E,N,N],[17,"NFT_NAT_SNAT",E,E,N,N],[17,"NFT_NAT_DNAT",E,E,N,N],[17,"NFT_TRACETYPE_UNSPEC",E,E,N,N],[17,"NFT_TRACETYPE_POLICY",E,E,N,N],[17,"NFT_TRACETYPE_RETURN",E,E,N,N],[17,"NFT_TRACETYPE_RULE",E,E,N,N],[17,"NFT_NG_INCREMENTAL",E,E,N,N],[17,"NFT_NG_RANDOM",E,E,N,N],[17,"M_MXFAST",E,E,N,N],[17,"M_NLBLKS",E,E,N,N],[17,"M_GRAIN",E,E,N,N],[17,"M_KEEP",E,E,N,N],[17,"M_TRIM_THRESHOLD",E,E,N,N],[17,"M_TOP_PAD",E,E,N,N],[17,"M_MMAP_THRESHOLD",E,E,N,N],[17,"M_MMAP_MAX",E,E,N,N],[17,"M_CHECK_ACTION",E,E,N,N],[17,"M_PERTURB",E,E,N,N],[17,"M_ARENA_TEST",E,E,N,N],[17,"M_ARENA_MAX",E,E,N,N],[17,"AT_STATX_SYNC_TYPE",E,E,N,N],[17,"AT_STATX_SYNC_AS_STAT",E,E,N,N],[17,"AT_STATX_FORCE_SYNC",E,E,N,N],[17,"AT_STATX_DONT_SYNC",E,E,N,N],[17,"STATX_TYPE",E,E,N,N],[17,"STATX_MODE",E,E,N,N],[17,"STATX_NLINK",E,E,N,N],[17,"STATX_UID",E,E,N,N],[17,"STATX_GID",E,E,N,N],[17,"STATX_ATIME",E,E,N,N],[17,"STATX_MTIME",E,E,N,N],[17,"STATX_CTIME",E,E,N,N],[17,"STATX_INO",E,E,N,N],[17,"STATX_SIZE",E,E,N,N],[17,"STATX_BLOCKS",E,E,N,N],[17,"STATX_BASIC_STATS",E,E,N,N],[17,"STATX_BTIME",E,E,N,N],[17,"STATX_ALL",E,E,N,N],[17,"STATX__RESERVED",E,E,N,N],[17,"STATX_ATTR_COMPRESSED",E,E,N,N],[17,"STATX_ATTR_IMMUTABLE",E,E,N,N],[17,"STATX_ATTR_APPEND",E,E,N,N],[17,"STATX_ATTR_NODUMP",E,E,N,N],[17,"STATX_ATTR_ENCRYPTED",E,E,N,N],[17,"STATX_ATTR_AUTOMOUNT",E,E,N,N],[17,"PTHREAD_STACK_MIN",E,E,N,N],[17,"PTHREAD_MUTEX_ADAPTIVE_NP",E,E,N,N],[17,"RLIM_INFINITY",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T",E,E,N,N],[17,"O_LARGEFILE",E,E,N,N],[17,"POSIX_FADV_DONTNEED",E,E,N,N],[17,"POSIX_FADV_NOREUSE",E,E,N,N],[17,"VEOF",E,E,N,N],[17,"RTLD_DEEPBIND",E,E,N,N],[17,"RTLD_GLOBAL",E,E,N,N],[17,"RTLD_NOLOAD",E,E,N,N],[17,"TIOCGSOFTCAR",E,E,N,N],[17,"TIOCSSOFTCAR",E,E,N,N],[17,"TIOCGRS485",E,E,N,N],[17,"TIOCSRS485",E,E,N,N],[17,"RLIMIT_RSS",E,E,N,N],[17,"RLIMIT_AS",E,E,N,N],[17,"RLIMIT_MEMLOCK",E,E,N,N],[17,"RLIMIT_NOFILE",E,E,N,N],[17,"RLIMIT_NPROC",E,E,N,N],[17,"O_APPEND",E,E,N,N],[17,"O_CREAT",E,E,N,N],[17,"O_EXCL",E,E,N,N],[17,"O_NOCTTY",E,E,N,N],[17,"O_NONBLOCK",E,E,N,N],[17,"O_SYNC",E,E,N,N],[17,"O_RSYNC",E,E,N,N],[17,"O_DSYNC",E,E,N,N],[17,"O_FSYNC",E,E,N,N],[17,"O_NOATIME",E,E,N,N],[17,"O_PATH",E,E,N,N],[17,"O_TMPFILE",E,E,N,N],[17,"MADV_SOFT_OFFLINE",E,E,N,N],[17,"MAP_GROWSDOWN",E,E,N,N],[17,"EDEADLK",E,E,N,N],[17,"ENAMETOOLONG",E,E,N,N],[17,"ENOLCK",E,E,N,N],[17,"ENOSYS",E,E,N,N],[17,"ENOTEMPTY",E,E,N,N],[17,"ELOOP",E,E,N,N],[17,"ENOMSG",E,E,N,N],[17,"EIDRM",E,E,N,N],[17,"ECHRNG",E,E,N,N],[17,"EL2NSYNC",E,E,N,N],[17,"EL3HLT",E,E,N,N],[17,"EL3RST",E,E,N,N],[17,"ELNRNG",E,E,N,N],[17,"EUNATCH",E,E,N,N],[17,"ENOCSI",E,E,N,N],[17,"EL2HLT",E,E,N,N],[17,"EBADE",E,E,N,N],[17,"EBADR",E,E,N,N],[17,"EXFULL",E,E,N,N],[17,"ENOANO",E,E,N,N],[17,"EBADRQC",E,E,N,N],[17,"EBADSLT",E,E,N,N],[17,"EMULTIHOP",E,E,N,N],[17,"EOVERFLOW",E,E,N,N],[17,"ENOTUNIQ",E,E,N,N],[17,"EBADFD",E,E,N,N],[17,"EBADMSG",E,E,N,N],[17,"EREMCHG",E,E,N,N],[17,"ELIBACC",E,E,N,N],[17,"ELIBBAD",E,E,N,N],[17,"ELIBSCN",E,E,N,N],[17,"ELIBMAX",E,E,N,N],[17,"ELIBEXEC",E,E,N,N],[17,"EILSEQ",E,E,N,N],[17,"ERESTART",E,E,N,N],[17,"ESTRPIPE",E,E,N,N],[17,"EUSERS",E,E,N,N],[17,"ENOTSOCK",E,E,N,N],[17,"EDESTADDRREQ",E,E,N,N],[17,"EMSGSIZE",E,E,N,N],[17,"EPROTOTYPE",E,E,N,N],[17,"ENOPROTOOPT",E,E,N,N],[17,"EPROTONOSUPPORT",E,E,N,N],[17,"ESOCKTNOSUPPORT",E,E,N,N],[17,"EOPNOTSUPP",E,E,N,N],[17,"EPFNOSUPPORT",E,E,N,N],[17,"EAFNOSUPPORT",E,E,N,N],[17,"EADDRINUSE",E,E,N,N],[17,"EADDRNOTAVAIL",E,E,N,N],[17,"ENETDOWN",E,E,N,N],[17,"ENETUNREACH",E,E,N,N],[17,"ENETRESET",E,E,N,N],[17,"ECONNABORTED",E,E,N,N],[17,"ECONNRESET",E,E,N,N],[17,"ENOBUFS",E,E,N,N],[17,"EISCONN",E,E,N,N],[17,"ENOTCONN",E,E,N,N],[17,"ESHUTDOWN",E,E,N,N],[17,"ETOOMANYREFS",E,E,N,N],[17,"ETIMEDOUT",E,E,N,N],[17,"ECONNREFUSED",E,E,N,N],[17,"EHOSTDOWN",E,E,N,N],[17,"EHOSTUNREACH",E,E,N,N],[17,"EALREADY",E,E,N,N],[17,"EINPROGRESS",E,E,N,N],[17,"ESTALE",E,E,N,N],[17,"EDQUOT",E,E,N,N],[17,"ENOMEDIUM",E,E,N,N],[17,"EMEDIUMTYPE",E,E,N,N],[17,"ECANCELED",E,E,N,N],[17,"ENOKEY",E,E,N,N],[17,"EKEYEXPIRED",E,E,N,N],[17,"EKEYREVOKED",E,E,N,N],[17,"EKEYREJECTED",E,E,N,N],[17,"EOWNERDEAD",E,E,N,N],[17,"ENOTRECOVERABLE",E,E,N,N],[17,"EHWPOISON",E,E,N,N],[17,"ERFKILL",E,E,N,N],[17,"SOL_SOCKET",E,E,N,N],[17,"SO_REUSEADDR",E,E,N,N],[17,"SO_TYPE",E,E,N,N],[17,"SO_ERROR",E,E,N,N],[17,"SO_DONTROUTE",E,E,N,N],[17,"SO_BROADCAST",E,E,N,N],[17,"SO_SNDBUF",E,E,N,N],[17,"SO_RCVBUF",E,E,N,N],[17,"SO_SNDBUFFORCE",E,E,N,N],[17,"SO_RCVBUFFORCE",E,E,N,N],[17,"SO_KEEPALIVE",E,E,N,N],[17,"SO_OOBINLINE",E,E,N,N],[17,"SO_NO_CHECK",E,E,N,N],[17,"SO_PRIORITY",E,E,N,N],[17,"SO_LINGER",E,E,N,N],[17,"SO_BSDCOMPAT",E,E,N,N],[17,"SO_REUSEPORT",E,E,N,N],[17,"SO_PASSCRED",E,E,N,N],[17,"SO_PEERCRED",E,E,N,N],[17,"SO_RCVLOWAT",E,E,N,N],[17,"SO_SNDLOWAT",E,E,N,N],[17,"SO_RCVTIMEO",E,E,N,N],[17,"SO_SNDTIMEO",E,E,N,N],[17,"SO_SECURITY_AUTHENTICATION",E,E,N,N],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT",E,E,N,N],[17,"SO_SECURITY_ENCRYPTION_NETWORK",E,E,N,N],[17,"SO_BINDTODEVICE",E,E,N,N],[17,"SO_ATTACH_FILTER",E,E,N,N],[17,"SO_DETACH_FILTER",E,E,N,N],[17,"SO_GET_FILTER",E,E,N,N],[17,"SO_PEERNAME",E,E,N,N],[17,"SO_TIMESTAMP",E,E,N,N],[17,"SO_ACCEPTCONN",E,E,N,N],[17,"SO_PEERSEC",E,E,N,N],[17,"SO_PASSSEC",E,E,N,N],[17,"SO_TIMESTAMPNS",E,E,N,N],[17,"SCM_TIMESTAMPNS",E,E,N,N],[17,"SO_MARK",E,E,N,N],[17,"SO_PROTOCOL",E,E,N,N],[17,"SO_DOMAIN",E,E,N,N],[17,"SO_RXQ_OVFL",E,E,N,N],[17,"SO_WIFI_STATUS",E,E,N,N],[17,"SCM_WIFI_STATUS",E,E,N,N],[17,"SO_PEEK_OFF",E,E,N,N],[17,"SO_NOFCS",E,E,N,N],[17,"SO_LOCK_FILTER",E,E,N,N],[17,"SO_SELECT_ERR_QUEUE",E,E,N,N],[17,"SO_BUSY_POLL",E,E,N,N],[17,"SO_MAX_PACING_RATE",E,E,N,N],[17,"SO_BPF_EXTENSIONS",E,E,N,N],[17,"SO_INCOMING_CPU",E,E,N,N],[17,"SO_ATTACH_BPF",E,E,N,N],[17,"SO_DETACH_BPF",E,E,N,N],[17,"SOCK_STREAM",E,E,N,N],[17,"SOCK_DGRAM",E,E,N,N],[17,"SA_ONSTACK",E,E,N,N],[17,"SA_SIGINFO",E,E,N,N],[17,"SA_NOCLDWAIT",E,E,N,N],[17,"SIGTTIN",E,E,N,N],[17,"SIGTTOU",E,E,N,N],[17,"SIGXCPU",E,E,N,N],[17,"SIGXFSZ",E,E,N,N],[17,"SIGVTALRM",E,E,N,N],[17,"SIGPROF",E,E,N,N],[17,"SIGWINCH",E,E,N,N],[17,"SIGCHLD",E,E,N,N],[17,"SIGBUS",E,E,N,N],[17,"SIGUSR1",E,E,N,N],[17,"SIGUSR2",E,E,N,N],[17,"SIGCONT",E,E,N,N],[17,"SIGSTOP",E,E,N,N],[17,"SIGTSTP",E,E,N,N],[17,"SIGURG",E,E,N,N],[17,"SIGIO",E,E,N,N],[17,"SIGSYS",E,E,N,N],[17,"SIGSTKFLT",E,E,N,N],[17,"SIGUNUSED",E,E,N,N],[17,"SIGPOLL",E,E,N,N],[17,"SIGPWR",E,E,N,N],[17,"SIG_SETMASK",E,E,N,N],[17,"SIG_BLOCK",E,E,N,N],[17,"SIG_UNBLOCK",E,E,N,N],[17,"POLLWRNORM",E,E,N,N],[17,"POLLWRBAND",E,E,N,N],[17,"O_ASYNC",E,E,N,N],[17,"O_NDELAY",E,E,N,N],[17,"PTRACE_DETACH",E,E,N,N],[17,"EFD_NONBLOCK",E,E,N,N],[17,"F_GETLK",E,E,N,N],[17,"F_GETOWN",E,E,N,N],[17,"F_SETOWN",E,E,N,N],[17,"F_SETLK",E,E,N,N],[17,"F_SETLKW",E,E,N,N],[17,"F_RDLCK",E,E,N,N],[17,"F_WRLCK",E,E,N,N],[17,"F_UNLCK",E,E,N,N],[17,"SFD_NONBLOCK",E,E,N,N],[17,"TCSANOW",E,E,N,N],[17,"TCSADRAIN",E,E,N,N],[17,"TCSAFLUSH",E,E,N,N],[17,"TIOCLINUX",E,E,N,N],[17,"TIOCGSERIAL",E,E,N,N],[17,"TIOCEXCL",E,E,N,N],[17,"TIOCNXCL",E,E,N,N],[17,"TIOCSCTTY",E,E,N,N],[17,"TIOCSTI",E,E,N,N],[17,"TIOCMGET",E,E,N,N],[17,"TIOCMBIS",E,E,N,N],[17,"TIOCMBIC",E,E,N,N],[17,"TIOCMSET",E,E,N,N],[17,"TIOCCONS",E,E,N,N],[17,"TIOCM_ST",E,E,N,N],[17,"TIOCM_SR",E,E,N,N],[17,"TIOCM_CTS",E,E,N,N],[17,"TIOCM_CAR",E,E,N,N],[17,"TIOCM_RNG",E,E,N,N],[17,"TIOCM_DSR",E,E,N,N],[17,"SFD_CLOEXEC",E,E,N,N],[17,"NCCS",E,E,N,N],[17,"O_TRUNC",E,E,N,N],[17,"O_CLOEXEC",E,E,N,N],[17,"EBFONT",E,E,N,N],[17,"ENOSTR",E,E,N,N],[17,"ENODATA",E,E,N,N],[17,"ETIME",E,E,N,N],[17,"ENOSR",E,E,N,N],[17,"ENONET",E,E,N,N],[17,"ENOPKG",E,E,N,N],[17,"EREMOTE",E,E,N,N],[17,"ENOLINK",E,E,N,N],[17,"EADV",E,E,N,N],[17,"ESRMNT",E,E,N,N],[17,"ECOMM",E,E,N,N],[17,"EPROTO",E,E,N,N],[17,"EDOTDOT",E,E,N,N],[17,"SA_NODEFER",E,E,N,N],[17,"SA_RESETHAND",E,E,N,N],[17,"SA_RESTART",E,E,N,N],[17,"SA_NOCLDSTOP",E,E,N,N],[17,"EPOLL_CLOEXEC",E,E,N,N],[17,"EFD_CLOEXEC",E,E,N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T",E,E,N,N],[17,"O_DIRECT",E,E,N,N],[17,"O_DIRECTORY",E,E,N,N],[17,"O_NOFOLLOW",E,E,N,N],[17,"MAP_HUGETLB",E,E,N,N],[17,"MAP_LOCKED",E,E,N,N],[17,"MAP_NORESERVE",E,E,N,N],[17,"MAP_32BIT",E,E,N,N],[17,"MAP_ANON",E,E,N,N],[17,"MAP_ANONYMOUS",E,E,N,N],[17,"MAP_DENYWRITE",E,E,N,N],[17,"MAP_EXECUTABLE",E,E,N,N],[17,"MAP_POPULATE",E,E,N,N],[17,"MAP_NONBLOCK",E,E,N,N],[17,"MAP_STACK",E,E,N,N],[17,"EDEADLOCK",E,E,N,N],[17,"EUCLEAN",E,E,N,N],[17,"ENOTNAM",E,E,N,N],[17,"ENAVAIL",E,E,N,N],[17,"EISNAM",E,E,N,N],[17,"EREMOTEIO",E,E,N,N],[17,"FIOCLEX",E,E,N,N],[17,"FIONCLEX",E,E,N,N],[17,"FIONBIO",E,E,N,N],[17,"PTRACE_GETFPREGS",E,E,N,N],[17,"PTRACE_SETFPREGS",E,E,N,N],[17,"PTRACE_GETFPXREGS",E,E,N,N],[17,"PTRACE_SETFPXREGS",E,E,N,N],[17,"PTRACE_GETREGS",E,E,N,N],[17,"PTRACE_SETREGS",E,E,N,N],[17,"PTRACE_PEEKSIGINFO_SHARED",E,E,N,N],[17,"MCL_CURRENT",E,E,N,N],[17,"MCL_FUTURE",E,E,N,N],[17,"SIGSTKSZ",E,E,N,N],[17,"MINSIGSTKSZ",E,E,N,N],[17,"CBAUD",E,E,N,N],[17,"TAB1",E,E,N,N],[17,"TAB2",E,E,N,N],[17,"TAB3",E,E,N,N],[17,"CR1",E,E,N,N],[17,"CR2",E,E,N,N],[17,"CR3",E,E,N,N],[17,"FF1",E,E,N,N],[17,"BS1",E,E,N,N],[17,"VT1",E,E,N,N],[17,"VWERASE",E,E,N,N],[17,"VREPRINT",E,E,N,N],[17,"VSUSP",E,E,N,N],[17,"VSTART",E,E,N,N],[17,"VSTOP",E,E,N,N],[17,"VDISCARD",E,E,N,N],[17,"VTIME",E,E,N,N],[17,"IXON",E,E,N,N],[17,"IXOFF",E,E,N,N],[17,"ONLCR",E,E,N,N],[17,"CSIZE",E,E,N,N],[17,"CS6",E,E,N,N],[17,"CS7",E,E,N,N],[17,"CS8",E,E,N,N],[17,"CSTOPB",E,E,N,N],[17,"CREAD",E,E,N,N],[17,"PARENB",E,E,N,N],[17,"PARODD",E,E,N,N],[17,"HUPCL",E,E,N,N],[17,"CLOCAL",E,E,N,N],[17,"ECHOKE",E,E,N,N],[17,"ECHOE",E,E,N,N],[17,"ECHOK",E,E,N,N],[17,"ECHONL",E,E,N,N],[17,"ECHOPRT",E,E,N,N],[17,"ECHOCTL",E,E,N,N],[17,"ISIG",E,E,N,N],[17,"ICANON",E,E,N,N],[17,"PENDIN",E,E,N,N],[17,"NOFLSH",E,E,N,N],[17,"CIBAUD",E,E,N,N],[17,"CBAUDEX",E,E,N,N],[17,"VSWTC",E,E,N,N],[17,"OLCUC",E,E,N,N],[17,"NLDLY",E,E,N,N],[17,"CRDLY",E,E,N,N],[17,"TABDLY",E,E,N,N],[17,"BSDLY",E,E,N,N],[17,"FFDLY",E,E,N,N],[17,"VTDLY",E,E,N,N],[17,"XTABS",E,E,N,N],[17,"B0",E,E,N,N],[17,"B50",E,E,N,N],[17,"B75",E,E,N,N],[17,"B110",E,E,N,N],[17,"B134",E,E,N,N],[17,"B150",E,E,N,N],[17,"B200",E,E,N,N],[17,"B300",E,E,N,N],[17,"B600",E,E,N,N],[17,"B1200",E,E,N,N],[17,"B1800",E,E,N,N],[17,"B2400",E,E,N,N],[17,"B4800",E,E,N,N],[17,"B9600",E,E,N,N],[17,"B19200",E,E,N,N],[17,"B38400",E,E,N,N],[17,"EXTA",E,E,N,N],[17,"EXTB",E,E,N,N],[17,"BOTHER",E,E,N,N],[17,"B57600",E,E,N,N],[17,"B115200",E,E,N,N],[17,"B230400",E,E,N,N],[17,"B460800",E,E,N,N],[17,"B500000",E,E,N,N],[17,"B576000",E,E,N,N],[17,"B921600",E,E,N,N],[17,"B1000000",E,E,N,N],[17,"B1152000",E,E,N,N],[17,"B1500000",E,E,N,N],[17,"B2000000",E,E,N,N],[17,"B2500000",E,E,N,N],[17,"B3000000",E,E,N,N],[17,"B3500000",E,E,N,N],[17,"B4000000",E,E,N,N],[17,"VEOL",E,E,N,N],[17,"VEOL2",E,E,N,N],[17,"VMIN",E,E,N,N],[17,"IEXTEN",E,E,N,N],[17,"TOSTOP",E,E,N,N],[17,"FLUSHO",E,E,N,N],[17,"EXTPROC",E,E,N,N],[17,"TCGETS",E,E,N,N],[17,"TCSETS",E,E,N,N],[17,"TCSETSW",E,E,N,N],[17,"TCSETSF",E,E,N,N],[17,"TCGETA",E,E,N,N],[17,"TCSETA",E,E,N,N],[17,"TCSETAW",E,E,N,N],[17,"TCSETAF",E,E,N,N],[17,"TCSBRK",E,E,N,N],[17,"TCXONC",E,E,N,N],[17,"TCFLSH",E,E,N,N],[17,"TIOCINQ",E,E,N,N],[17,"TIOCGPGRP",E,E,N,N],[17,"TIOCSPGRP",E,E,N,N],[17,"TIOCOUTQ",E,E,N,N],[17,"TIOCGWINSZ",E,E,N,N],[17,"TIOCSWINSZ",E,E,N,N],[17,"FIONREAD",E,E,N,N],[17,"R15",E,E,N,N],[17,"R14",E,E,N,N],[17,"R13",E,E,N,N],[17,"R12",E,E,N,N],[17,"RBP",E,E,N,N],[17,"RBX",E,E,N,N],[17,"R11",E,E,N,N],[17,"R10",E,E,N,N],[17,"R9",E,E,N,N],[17,"R8",E,E,N,N],[17,"RAX",E,E,N,N],[17,"RCX",E,E,N,N],[17,"RDX",E,E,N,N],[17,"RSI",E,E,N,N],[17,"RDI",E,E,N,N],[17,"ORIG_RAX",E,E,N,N],[17,"RIP",E,E,N,N],[17,"CS",E,E,N,N],[17,"EFLAGS",E,E,N,N],[17,"RSP",E,E,N,N],[17,"SS",E,E,N,N],[17,"FS_BASE",E,E,N,N],[17,"GS_BASE",E,E,N,N],[17,"DS",E,E,N,N],[17,"ES",E,E,N,N],[17,"FS",E,E,N,N],[17,"GS",E,E,N,N],[17,"REG_R8",E,E,N,N],[17,"REG_R9",E,E,N,N],[17,"REG_R10",E,E,N,N],[17,"REG_R11",E,E,N,N],[17,"REG_R12",E,E,N,N],[17,"REG_R13",E,E,N,N],[17,"REG_R14",E,E,N,N],[17,"REG_R15",E,E,N,N],[17,"REG_RDI",E,E,N,N],[17,"REG_RSI",E,E,N,N],[17,"REG_RBP",E,E,N,N],[17,"REG_RBX",E,E,N,N],[17,"REG_RDX",E,E,N,N],[17,"REG_RAX",E,E,N,N],[17,"REG_RCX",E,E,N,N],[17,"REG_RSP",E,E,N,N],[17,"REG_RIP",E,E,N,N],[17,"REG_EFL",E,E,N,N],[17,"REG_CSGSFS",E,E,N,N],[17,"REG_ERR",E,E,N,N],[17,"REG_TRAPNO",E,E,N,N],[17,"REG_OLDMASK",E,E,N,N],[17,"REG_CR2",E,E,N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T",E,E,N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T",E,E,N,N],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP",E,E,N,N],[17,"SYS_read",E,E,N,N],[17,"SYS_write",E,E,N,N],[17,"SYS_open",E,E,N,N],[17,"SYS_close",E,E,N,N],[17,"SYS_stat",E,E,N,N],[17,"SYS_fstat",E,E,N,N],[17,"SYS_lstat",E,E,N,N],[17,"SYS_poll",E,E,N,N],[17,"SYS_lseek",E,E,N,N],[17,"SYS_mmap",E,E,N,N],[17,"SYS_mprotect",E,E,N,N],[17,"SYS_munmap",E,E,N,N],[17,"SYS_brk",E,E,N,N],[17,"SYS_rt_sigaction",E,E,N,N],[17,"SYS_rt_sigprocmask",E,E,N,N],[17,"SYS_rt_sigreturn",E,E,N,N],[17,"SYS_ioctl",E,E,N,N],[17,"SYS_pread64",E,E,N,N],[17,"SYS_pwrite64",E,E,N,N],[17,"SYS_readv",E,E,N,N],[17,"SYS_writev",E,E,N,N],[17,"SYS_access",E,E,N,N],[17,"SYS_pipe",E,E,N,N],[17,"SYS_select",E,E,N,N],[17,"SYS_sched_yield",E,E,N,N],[17,"SYS_mremap",E,E,N,N],[17,"SYS_msync",E,E,N,N],[17,"SYS_mincore",E,E,N,N],[17,"SYS_madvise",E,E,N,N],[17,"SYS_shmget",E,E,N,N],[17,"SYS_shmat",E,E,N,N],[17,"SYS_shmctl",E,E,N,N],[17,"SYS_dup",E,E,N,N],[17,"SYS_dup2",E,E,N,N],[17,"SYS_pause",E,E,N,N],[17,"SYS_nanosleep",E,E,N,N],[17,"SYS_getitimer",E,E,N,N],[17,"SYS_alarm",E,E,N,N],[17,"SYS_setitimer",E,E,N,N],[17,"SYS_getpid",E,E,N,N],[17,"SYS_sendfile",E,E,N,N],[17,"SYS_socket",E,E,N,N],[17,"SYS_connect",E,E,N,N],[17,"SYS_accept",E,E,N,N],[17,"SYS_sendto",E,E,N,N],[17,"SYS_recvfrom",E,E,N,N],[17,"SYS_sendmsg",E,E,N,N],[17,"SYS_recvmsg",E,E,N,N],[17,"SYS_shutdown",E,E,N,N],[17,"SYS_bind",E,E,N,N],[17,"SYS_listen",E,E,N,N],[17,"SYS_getsockname",E,E,N,N],[17,"SYS_getpeername",E,E,N,N],[17,"SYS_socketpair",E,E,N,N],[17,"SYS_setsockopt",E,E,N,N],[17,"SYS_getsockopt",E,E,N,N],[17,"SYS_clone",E,E,N,N],[17,"SYS_fork",E,E,N,N],[17,"SYS_vfork",E,E,N,N],[17,"SYS_execve",E,E,N,N],[17,"SYS_exit",E,E,N,N],[17,"SYS_wait4",E,E,N,N],[17,"SYS_kill",E,E,N,N],[17,"SYS_uname",E,E,N,N],[17,"SYS_semget",E,E,N,N],[17,"SYS_semop",E,E,N,N],[17,"SYS_semctl",E,E,N,N],[17,"SYS_shmdt",E,E,N,N],[17,"SYS_msgget",E,E,N,N],[17,"SYS_msgsnd",E,E,N,N],[17,"SYS_msgrcv",E,E,N,N],[17,"SYS_msgctl",E,E,N,N],[17,"SYS_fcntl",E,E,N,N],[17,"SYS_flock",E,E,N,N],[17,"SYS_fsync",E,E,N,N],[17,"SYS_fdatasync",E,E,N,N],[17,"SYS_truncate",E,E,N,N],[17,"SYS_ftruncate",E,E,N,N],[17,"SYS_getdents",E,E,N,N],[17,"SYS_getcwd",E,E,N,N],[17,"SYS_chdir",E,E,N,N],[17,"SYS_fchdir",E,E,N,N],[17,"SYS_rename",E,E,N,N],[17,"SYS_mkdir",E,E,N,N],[17,"SYS_rmdir",E,E,N,N],[17,"SYS_creat",E,E,N,N],[17,"SYS_link",E,E,N,N],[17,"SYS_unlink",E,E,N,N],[17,"SYS_symlink",E,E,N,N],[17,"SYS_readlink",E,E,N,N],[17,"SYS_chmod",E,E,N,N],[17,"SYS_fchmod",E,E,N,N],[17,"SYS_chown",E,E,N,N],[17,"SYS_fchown",E,E,N,N],[17,"SYS_lchown",E,E,N,N],[17,"SYS_umask",E,E,N,N],[17,"SYS_gettimeofday",E,E,N,N],[17,"SYS_getrlimit",E,E,N,N],[17,"SYS_getrusage",E,E,N,N],[17,"SYS_sysinfo",E,E,N,N],[17,"SYS_times",E,E,N,N],[17,"SYS_ptrace",E,E,N,N],[17,"SYS_getuid",E,E,N,N],[17,"SYS_syslog",E,E,N,N],[17,"SYS_getgid",E,E,N,N],[17,"SYS_setuid",E,E,N,N],[17,"SYS_setgid",E,E,N,N],[17,"SYS_geteuid",E,E,N,N],[17,"SYS_getegid",E,E,N,N],[17,"SYS_setpgid",E,E,N,N],[17,"SYS_getppid",E,E,N,N],[17,"SYS_getpgrp",E,E,N,N],[17,"SYS_setsid",E,E,N,N],[17,"SYS_setreuid",E,E,N,N],[17,"SYS_setregid",E,E,N,N],[17,"SYS_getgroups",E,E,N,N],[17,"SYS_setgroups",E,E,N,N],[17,"SYS_setresuid",E,E,N,N],[17,"SYS_getresuid",E,E,N,N],[17,"SYS_setresgid",E,E,N,N],[17,"SYS_getresgid",E,E,N,N],[17,"SYS_getpgid",E,E,N,N],[17,"SYS_setfsuid",E,E,N,N],[17,"SYS_setfsgid",E,E,N,N],[17,"SYS_getsid",E,E,N,N],[17,"SYS_capget",E,E,N,N],[17,"SYS_capset",E,E,N,N],[17,"SYS_rt_sigpending",E,E,N,N],[17,"SYS_rt_sigtimedwait",E,E,N,N],[17,"SYS_rt_sigqueueinfo",E,E,N,N],[17,"SYS_rt_sigsuspend",E,E,N,N],[17,"SYS_sigaltstack",E,E,N,N],[17,"SYS_utime",E,E,N,N],[17,"SYS_mknod",E,E,N,N],[17,"SYS_uselib",E,E,N,N],[17,"SYS_personality",E,E,N,N],[17,"SYS_ustat",E,E,N,N],[17,"SYS_statfs",E,E,N,N],[17,"SYS_fstatfs",E,E,N,N],[17,"SYS_sysfs",E,E,N,N],[17,"SYS_getpriority",E,E,N,N],[17,"SYS_setpriority",E,E,N,N],[17,"SYS_sched_setparam",E,E,N,N],[17,"SYS_sched_getparam",E,E,N,N],[17,"SYS_sched_setscheduler",E,E,N,N],[17,"SYS_sched_getscheduler",E,E,N,N],[17,"SYS_sched_get_priority_max",E,E,N,N],[17,"SYS_sched_get_priority_min",E,E,N,N],[17,"SYS_sched_rr_get_interval",E,E,N,N],[17,"SYS_mlock",E,E,N,N],[17,"SYS_munlock",E,E,N,N],[17,"SYS_mlockall",E,E,N,N],[17,"SYS_munlockall",E,E,N,N],[17,"SYS_vhangup",E,E,N,N],[17,"SYS_modify_ldt",E,E,N,N],[17,"SYS_pivot_root",E,E,N,N],[17,"SYS__sysctl",E,E,N,N],[17,"SYS_prctl",E,E,N,N],[17,"SYS_arch_prctl",E,E,N,N],[17,"SYS_adjtimex",E,E,N,N],[17,"SYS_setrlimit",E,E,N,N],[17,"SYS_chroot",E,E,N,N],[17,"SYS_sync",E,E,N,N],[17,"SYS_acct",E,E,N,N],[17,"SYS_settimeofday",E,E,N,N],[17,"SYS_mount",E,E,N,N],[17,"SYS_umount2",E,E,N,N],[17,"SYS_swapon",E,E,N,N],[17,"SYS_swapoff",E,E,N,N],[17,"SYS_reboot",E,E,N,N],[17,"SYS_sethostname",E,E,N,N],[17,"SYS_setdomainname",E,E,N,N],[17,"SYS_iopl",E,E,N,N],[17,"SYS_ioperm",E,E,N,N],[17,"SYS_create_module",E,E,N,N],[17,"SYS_init_module",E,E,N,N],[17,"SYS_delete_module",E,E,N,N],[17,"SYS_get_kernel_syms",E,E,N,N],[17,"SYS_query_module",E,E,N,N],[17,"SYS_quotactl",E,E,N,N],[17,"SYS_nfsservctl",E,E,N,N],[17,"SYS_getpmsg",E,E,N,N],[17,"SYS_putpmsg",E,E,N,N],[17,"SYS_afs_syscall",E,E,N,N],[17,"SYS_tuxcall",E,E,N,N],[17,"SYS_security",E,E,N,N],[17,"SYS_gettid",E,E,N,N],[17,"SYS_readahead",E,E,N,N],[17,"SYS_setxattr",E,E,N,N],[17,"SYS_lsetxattr",E,E,N,N],[17,"SYS_fsetxattr",E,E,N,N],[17,"SYS_getxattr",E,E,N,N],[17,"SYS_lgetxattr",E,E,N,N],[17,"SYS_fgetxattr",E,E,N,N],[17,"SYS_listxattr",E,E,N,N],[17,"SYS_llistxattr",E,E,N,N],[17,"SYS_flistxattr",E,E,N,N],[17,"SYS_removexattr",E,E,N,N],[17,"SYS_lremovexattr",E,E,N,N],[17,"SYS_fremovexattr",E,E,N,N],[17,"SYS_tkill",E,E,N,N],[17,"SYS_time",E,E,N,N],[17,"SYS_futex",E,E,N,N],[17,"SYS_sched_setaffinity",E,E,N,N],[17,"SYS_sched_getaffinity",E,E,N,N],[17,"SYS_set_thread_area",E,E,N,N],[17,"SYS_io_setup",E,E,N,N],[17,"SYS_io_destroy",E,E,N,N],[17,"SYS_io_getevents",E,E,N,N],[17,"SYS_io_submit",E,E,N,N],[17,"SYS_io_cancel",E,E,N,N],[17,"SYS_get_thread_area",E,E,N,N],[17,"SYS_lookup_dcookie",E,E,N,N],[17,"SYS_epoll_create",E,E,N,N],[17,"SYS_epoll_ctl_old",E,E,N,N],[17,"SYS_epoll_wait_old",E,E,N,N],[17,"SYS_remap_file_pages",E,E,N,N],[17,"SYS_getdents64",E,E,N,N],[17,"SYS_set_tid_address",E,E,N,N],[17,"SYS_restart_syscall",E,E,N,N],[17,"SYS_semtimedop",E,E,N,N],[17,"SYS_fadvise64",E,E,N,N],[17,"SYS_timer_create",E,E,N,N],[17,"SYS_timer_settime",E,E,N,N],[17,"SYS_timer_gettime",E,E,N,N],[17,"SYS_timer_getoverrun",E,E,N,N],[17,"SYS_timer_delete",E,E,N,N],[17,"SYS_clock_settime",E,E,N,N],[17,"SYS_clock_gettime",E,E,N,N],[17,"SYS_clock_getres",E,E,N,N],[17,"SYS_clock_nanosleep",E,E,N,N],[17,"SYS_exit_group",E,E,N,N],[17,"SYS_epoll_wait",E,E,N,N],[17,"SYS_epoll_ctl",E,E,N,N],[17,"SYS_tgkill",E,E,N,N],[17,"SYS_utimes",E,E,N,N],[17,"SYS_vserver",E,E,N,N],[17,"SYS_mbind",E,E,N,N],[17,"SYS_set_mempolicy",E,E,N,N],[17,"SYS_get_mempolicy",E,E,N,N],[17,"SYS_mq_open",E,E,N,N],[17,"SYS_mq_unlink",E,E,N,N],[17,"SYS_mq_timedsend",E,E,N,N],[17,"SYS_mq_timedreceive",E,E,N,N],[17,"SYS_mq_notify",E,E,N,N],[17,"SYS_mq_getsetattr",E,E,N,N],[17,"SYS_kexec_load",E,E,N,N],[17,"SYS_waitid",E,E,N,N],[17,"SYS_add_key",E,E,N,N],[17,"SYS_request_key",E,E,N,N],[17,"SYS_keyctl",E,E,N,N],[17,"SYS_ioprio_set",E,E,N,N],[17,"SYS_ioprio_get",E,E,N,N],[17,"SYS_inotify_init",E,E,N,N],[17,"SYS_inotify_add_watch",E,E,N,N],[17,"SYS_inotify_rm_watch",E,E,N,N],[17,"SYS_migrate_pages",E,E,N,N],[17,"SYS_openat",E,E,N,N],[17,"SYS_mkdirat",E,E,N,N],[17,"SYS_mknodat",E,E,N,N],[17,"SYS_fchownat",E,E,N,N],[17,"SYS_futimesat",E,E,N,N],[17,"SYS_newfstatat",E,E,N,N],[17,"SYS_unlinkat",E,E,N,N],[17,"SYS_renameat",E,E,N,N],[17,"SYS_linkat",E,E,N,N],[17,"SYS_symlinkat",E,E,N,N],[17,"SYS_readlinkat",E,E,N,N],[17,"SYS_fchmodat",E,E,N,N],[17,"SYS_faccessat",E,E,N,N],[17,"SYS_pselect6",E,E,N,N],[17,"SYS_ppoll",E,E,N,N],[17,"SYS_unshare",E,E,N,N],[17,"SYS_set_robust_list",E,E,N,N],[17,"SYS_get_robust_list",E,E,N,N],[17,"SYS_splice",E,E,N,N],[17,"SYS_tee",E,E,N,N],[17,"SYS_sync_file_range",E,E,N,N],[17,"SYS_vmsplice",E,E,N,N],[17,"SYS_move_pages",E,E,N,N],[17,"SYS_utimensat",E,E,N,N],[17,"SYS_epoll_pwait",E,E,N,N],[17,"SYS_signalfd",E,E,N,N],[17,"SYS_timerfd_create",E,E,N,N],[17,"SYS_eventfd",E,E,N,N],[17,"SYS_fallocate",E,E,N,N],[17,"SYS_timerfd_settime",E,E,N,N],[17,"SYS_timerfd_gettime",E,E,N,N],[17,"SYS_accept4",E,E,N,N],[17,"SYS_signalfd4",E,E,N,N],[17,"SYS_eventfd2",E,E,N,N],[17,"SYS_epoll_create1",E,E,N,N],[17,"SYS_dup3",E,E,N,N],[17,"SYS_pipe2",E,E,N,N],[17,"SYS_inotify_init1",E,E,N,N],[17,"SYS_preadv",E,E,N,N],[17,"SYS_pwritev",E,E,N,N],[17,"SYS_rt_tgsigqueueinfo",E,E,N,N],[17,"SYS_perf_event_open",E,E,N,N],[17,"SYS_recvmmsg",E,E,N,N],[17,"SYS_fanotify_init",E,E,N,N],[17,"SYS_fanotify_mark",E,E,N,N],[17,"SYS_prlimit64",E,E,N,N],[17,"SYS_name_to_handle_at",E,E,N,N],[17,"SYS_open_by_handle_at",E,E,N,N],[17,"SYS_clock_adjtime",E,E,N,N],[17,"SYS_syncfs",E,E,N,N],[17,"SYS_sendmmsg",E,E,N,N],[17,"SYS_setns",E,E,N,N],[17,"SYS_getcpu",E,E,N,N],[17,"SYS_process_vm_readv",E,E,N,N],[17,"SYS_process_vm_writev",E,E,N,N],[17,"SYS_kcmp",E,E,N,N],[17,"SYS_finit_module",E,E,N,N],[17,"SYS_sched_setattr",E,E,N,N],[17,"SYS_sched_getattr",E,E,N,N],[17,"SYS_renameat2",E,E,N,N],[17,"SYS_seccomp",E,E,N,N],[17,"SYS_getrandom",E,E,N,N],[17,"SYS_memfd_create",E,E,N,N],[17,"SYS_kexec_file_load",E,E,N,N],[17,"SYS_bpf",E,E,N,N],[17,"SYS_execveat",E,E,N,N],[17,"SYS_userfaultfd",E,E,N,N],[17,"SYS_membarrier",E,E,N,N],[17,"SYS_mlock2",E,E,N,N],[17,"SYS_copy_file_range",E,E,N,N],[17,"SYS_preadv2",E,E,N,N],[17,"SYS_pwritev2",E,E,N,N],[17,"SYS_pkey_mprotect",E,E,N,N],[17,"SYS_pkey_alloc",E,E,N,N],[17,"SYS_pkey_free",E,E,N,N],[17,"SYS_statx",E,E,N,N],[11,"from",E,E,133,[[[T]],[T]]],[11,R[5],E,E,133,[[[U]],[R[4]]]],[11,"into",E,E,133,[[],[U]]],[11,R[6],E,E,133,[[],[R[4]]]],[11,R[7],E,E,133,[[["self"]],[T]]],[11,R[8],E,E,133,[[["self"]],[T]]],[11,R[9],E,E,133,[[["self"]],[R[81]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,"into",E,E,0,[[],[U]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[81]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[5],E,E,1,[[[U]],[R[4]]]],[11,"into",E,E,1,[[],[U]]],[11,R[6],E,E,1,[[],[R[4]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[R[81]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[5],E,E,2,[[[U]],[R[4]]]],[11,"into",E,E,2,[[],[U]]],[11,R[6],E,E,2,[[],[R[4]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[R[81]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[5],E,E,3,[[[U]],[R[4]]]],[11,"into",E,E,3,[[],[U]]],[11,R[6],E,E,3,[[],[R[4]]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[R[81]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[5],E,E,4,[[[U]],[R[4]]]],[11,"into",E,E,4,[[],[U]]],[11,R[6],E,E,4,[[],[R[4]]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[R[81]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[5],E,E,5,[[[U]],[R[4]]]],[11,"into",E,E,5,[[],[U]]],[11,R[6],E,E,5,[[],[R[4]]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[R[81]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[5],E,E,6,[[[U]],[R[4]]]],[11,"into",E,E,6,[[],[U]]],[11,R[6],E,E,6,[[],[R[4]]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[R[81]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[5],E,E,7,[[[U]],[R[4]]]],[11,"into",E,E,7,[[],[U]]],[11,R[6],E,E,7,[[],[R[4]]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[R[81]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[5],E,E,8,[[[U]],[R[4]]]],[11,"into",E,E,8,[[],[U]]],[11,R[6],E,E,8,[[],[R[4]]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[R[81]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[5],E,E,9,[[[U]],[R[4]]]],[11,"into",E,E,9,[[],[U]]],[11,R[6],E,E,9,[[],[R[4]]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[R[81]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[5],E,E,10,[[[U]],[R[4]]]],[11,"into",E,E,10,[[],[U]]],[11,R[6],E,E,10,[[],[R[4]]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[R[81]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[5],E,E,11,[[[U]],[R[4]]]],[11,"into",E,E,11,[[],[U]]],[11,R[6],E,E,11,[[],[R[4]]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[R[81]]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[5],E,E,12,[[[U]],[R[4]]]],[11,"into",E,E,12,[[],[U]]],[11,R[6],E,E,12,[[],[R[4]]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[R[81]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[5],E,E,13,[[[U]],[R[4]]]],[11,"into",E,E,13,[[],[U]]],[11,R[6],E,E,13,[[],[R[4]]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[["self"]],[R[81]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[5],E,E,14,[[[U]],[R[4]]]],[11,"into",E,E,14,[[],[U]]],[11,R[6],E,E,14,[[],[R[4]]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[R[81]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[5],E,E,15,[[[U]],[R[4]]]],[11,"into",E,E,15,[[],[U]]],[11,R[6],E,E,15,[[],[R[4]]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[["self"]],[R[81]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[5],E,E,16,[[[U]],[R[4]]]],[11,"into",E,E,16,[[],[U]]],[11,R[6],E,E,16,[[],[R[4]]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[T]]],[11,R[9],E,E,16,[[["self"]],[R[81]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[5],E,E,17,[[[U]],[R[4]]]],[11,"into",E,E,17,[[],[U]]],[11,R[6],E,E,17,[[],[R[4]]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[T]]],[11,R[9],E,E,17,[[["self"]],[R[81]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[5],E,E,18,[[[U]],[R[4]]]],[11,"into",E,E,18,[[],[U]]],[11,R[6],E,E,18,[[],[R[4]]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[T]]],[11,R[9],E,E,18,[[["self"]],[R[81]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[5],E,E,19,[[[U]],[R[4]]]],[11,"into",E,E,19,[[],[U]]],[11,R[6],E,E,19,[[],[R[4]]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[T]]],[11,R[9],E,E,19,[[["self"]],[R[81]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[5],E,E,20,[[[U]],[R[4]]]],[11,"into",E,E,20,[[],[U]]],[11,R[6],E,E,20,[[],[R[4]]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[["self"]],[R[81]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[5],E,E,21,[[[U]],[R[4]]]],[11,"into",E,E,21,[[],[U]]],[11,R[6],E,E,21,[[],[R[4]]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[["self"]],[R[81]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[5],E,E,22,[[[U]],[R[4]]]],[11,"into",E,E,22,[[],[U]]],[11,R[6],E,E,22,[[],[R[4]]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[["self"]],[R[81]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[5],E,E,23,[[[U]],[R[4]]]],[11,"into",E,E,23,[[],[U]]],[11,R[6],E,E,23,[[],[R[4]]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[["self"]],[R[81]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[5],E,E,24,[[[U]],[R[4]]]],[11,"into",E,E,24,[[],[U]]],[11,R[6],E,E,24,[[],[R[4]]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[["self"]],[R[81]]]],[11,"from",E,E,134,[[[T]],[T]]],[11,R[5],E,E,134,[[[U]],[R[4]]]],[11,"into",E,E,134,[[],[U]]],[11,R[6],E,E,134,[[],[R[4]]]],[11,R[7],E,E,134,[[["self"]],[T]]],[11,R[8],E,E,134,[[["self"]],[T]]],[11,R[9],E,E,134,[[["self"]],[R[81]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[5],E,E,25,[[[U]],[R[4]]]],[11,"into",E,E,25,[[],[U]]],[11,R[6],E,E,25,[[],[R[4]]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[["self"]],[R[81]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[5],E,E,26,[[[U]],[R[4]]]],[11,"into",E,E,26,[[],[U]]],[11,R[6],E,E,26,[[],[R[4]]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[T]]],[11,R[9],E,E,26,[[["self"]],[R[81]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[5],E,E,27,[[[U]],[R[4]]]],[11,"into",E,E,27,[[],[U]]],[11,R[6],E,E,27,[[],[R[4]]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[["self"]],[R[81]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[5],E,E,28,[[[U]],[R[4]]]],[11,"into",E,E,28,[[],[U]]],[11,R[6],E,E,28,[[],[R[4]]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[["self"]],[R[81]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[5],E,E,29,[[[U]],[R[4]]]],[11,"into",E,E,29,[[],[U]]],[11,R[6],E,E,29,[[],[R[4]]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[["self"]],[R[81]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[5],E,E,30,[[[U]],[R[4]]]],[11,"into",E,E,30,[[],[U]]],[11,R[6],E,E,30,[[],[R[4]]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[["self"]],[R[81]]]],[11,"from",E,E,135,[[[T]],[T]]],[11,R[5],E,E,135,[[[U]],[R[4]]]],[11,"into",E,E,135,[[],[U]]],[11,R[6],E,E,135,[[],[R[4]]]],[11,R[7],E,E,135,[[["self"]],[T]]],[11,R[8],E,E,135,[[["self"]],[T]]],[11,R[9],E,E,135,[[["self"]],[R[81]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[5],E,E,31,[[[U]],[R[4]]]],[11,"into",E,E,31,[[],[U]]],[11,R[6],E,E,31,[[],[R[4]]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[["self"]],[R[81]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[5],E,E,32,[[[U]],[R[4]]]],[11,"into",E,E,32,[[],[U]]],[11,R[6],E,E,32,[[],[R[4]]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[["self"]],[R[81]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[5],E,E,33,[[[U]],[R[4]]]],[11,"into",E,E,33,[[],[U]]],[11,R[6],E,E,33,[[],[R[4]]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[8],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[["self"]],[R[81]]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[5],E,E,34,[[[U]],[R[4]]]],[11,"into",E,E,34,[[],[U]]],[11,R[6],E,E,34,[[],[R[4]]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[8],E,E,34,[[["self"]],[T]]],[11,R[9],E,E,34,[[["self"]],[R[81]]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[5],E,E,35,[[[U]],[R[4]]]],[11,"into",E,E,35,[[],[U]]],[11,R[6],E,E,35,[[],[R[4]]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[8],E,E,35,[[["self"]],[T]]],[11,R[9],E,E,35,[[["self"]],[R[81]]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[5],E,E,36,[[[U]],[R[4]]]],[11,"into",E,E,36,[[],[U]]],[11,R[6],E,E,36,[[],[R[4]]]],[11,R[7],E,E,36,[[["self"]],[T]]],[11,R[8],E,E,36,[[["self"]],[T]]],[11,R[9],E,E,36,[[["self"]],[R[81]]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[5],E,E,37,[[[U]],[R[4]]]],[11,"into",E,E,37,[[],[U]]],[11,R[6],E,E,37,[[],[R[4]]]],[11,R[7],E,E,37,[[["self"]],[T]]],[11,R[8],E,E,37,[[["self"]],[T]]],[11,R[9],E,E,37,[[["self"]],[R[81]]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[5],E,E,38,[[[U]],[R[4]]]],[11,"into",E,E,38,[[],[U]]],[11,R[6],E,E,38,[[],[R[4]]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[8],E,E,38,[[["self"]],[T]]],[11,R[9],E,E,38,[[["self"]],[R[81]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[5],E,E,39,[[[U]],[R[4]]]],[11,"into",E,E,39,[[],[U]]],[11,R[6],E,E,39,[[],[R[4]]]],[11,R[7],E,E,39,[[["self"]],[T]]],[11,R[8],E,E,39,[[["self"]],[T]]],[11,R[9],E,E,39,[[["self"]],[R[81]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[5],E,E,40,[[[U]],[R[4]]]],[11,"into",E,E,40,[[],[U]]],[11,R[6],E,E,40,[[],[R[4]]]],[11,R[7],E,E,40,[[["self"]],[T]]],[11,R[8],E,E,40,[[["self"]],[T]]],[11,R[9],E,E,40,[[["self"]],[R[81]]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[5],E,E,41,[[[U]],[R[4]]]],[11,"into",E,E,41,[[],[U]]],[11,R[6],E,E,41,[[],[R[4]]]],[11,R[7],E,E,41,[[["self"]],[T]]],[11,R[8],E,E,41,[[["self"]],[T]]],[11,R[9],E,E,41,[[["self"]],[R[81]]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[5],E,E,42,[[[U]],[R[4]]]],[11,"into",E,E,42,[[],[U]]],[11,R[6],E,E,42,[[],[R[4]]]],[11,R[7],E,E,42,[[["self"]],[T]]],[11,R[8],E,E,42,[[["self"]],[T]]],[11,R[9],E,E,42,[[["self"]],[R[81]]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[5],E,E,43,[[[U]],[R[4]]]],[11,"into",E,E,43,[[],[U]]],[11,R[6],E,E,43,[[],[R[4]]]],[11,R[7],E,E,43,[[["self"]],[T]]],[11,R[8],E,E,43,[[["self"]],[T]]],[11,R[9],E,E,43,[[["self"]],[R[81]]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[5],E,E,44,[[[U]],[R[4]]]],[11,"into",E,E,44,[[],[U]]],[11,R[6],E,E,44,[[],[R[4]]]],[11,R[7],E,E,44,[[["self"]],[T]]],[11,R[8],E,E,44,[[["self"]],[T]]],[11,R[9],E,E,44,[[["self"]],[R[81]]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[5],E,E,45,[[[U]],[R[4]]]],[11,"into",E,E,45,[[],[U]]],[11,R[6],E,E,45,[[],[R[4]]]],[11,R[7],E,E,45,[[["self"]],[T]]],[11,R[8],E,E,45,[[["self"]],[T]]],[11,R[9],E,E,45,[[["self"]],[R[81]]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[5],E,E,46,[[[U]],[R[4]]]],[11,"into",E,E,46,[[],[U]]],[11,R[6],E,E,46,[[],[R[4]]]],[11,R[7],E,E,46,[[["self"]],[T]]],[11,R[8],E,E,46,[[["self"]],[T]]],[11,R[9],E,E,46,[[["self"]],[R[81]]]],[11,"from",E,E,136,[[[T]],[T]]],[11,R[5],E,E,136,[[[U]],[R[4]]]],[11,"into",E,E,136,[[],[U]]],[11,R[6],E,E,136,[[],[R[4]]]],[11,R[7],E,E,136,[[["self"]],[T]]],[11,R[8],E,E,136,[[["self"]],[T]]],[11,R[9],E,E,136,[[["self"]],[R[81]]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[5],E,E,47,[[[U]],[R[4]]]],[11,"into",E,E,47,[[],[U]]],[11,R[6],E,E,47,[[],[R[4]]]],[11,R[7],E,E,47,[[["self"]],[T]]],[11,R[8],E,E,47,[[["self"]],[T]]],[11,R[9],E,E,47,[[["self"]],[R[81]]]],[11,"from",E,E,137,[[[T]],[T]]],[11,R[5],E,E,137,[[[U]],[R[4]]]],[11,"into",E,E,137,[[],[U]]],[11,R[6],E,E,137,[[],[R[4]]]],[11,R[7],E,E,137,[[["self"]],[T]]],[11,R[8],E,E,137,[[["self"]],[T]]],[11,R[9],E,E,137,[[["self"]],[R[81]]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[5],E,E,48,[[[U]],[R[4]]]],[11,"into",E,E,48,[[],[U]]],[11,R[6],E,E,48,[[],[R[4]]]],[11,R[7],E,E,48,[[["self"]],[T]]],[11,R[8],E,E,48,[[["self"]],[T]]],[11,R[9],E,E,48,[[["self"]],[R[81]]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[5],E,E,49,[[[U]],[R[4]]]],[11,"into",E,E,49,[[],[U]]],[11,R[6],E,E,49,[[],[R[4]]]],[11,R[7],E,E,49,[[["self"]],[T]]],[11,R[8],E,E,49,[[["self"]],[T]]],[11,R[9],E,E,49,[[["self"]],[R[81]]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[5],E,E,50,[[[U]],[R[4]]]],[11,"into",E,E,50,[[],[U]]],[11,R[6],E,E,50,[[],[R[4]]]],[11,R[7],E,E,50,[[["self"]],[T]]],[11,R[8],E,E,50,[[["self"]],[T]]],[11,R[9],E,E,50,[[["self"]],[R[81]]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[5],E,E,51,[[[U]],[R[4]]]],[11,"into",E,E,51,[[],[U]]],[11,R[6],E,E,51,[[],[R[4]]]],[11,R[7],E,E,51,[[["self"]],[T]]],[11,R[8],E,E,51,[[["self"]],[T]]],[11,R[9],E,E,51,[[["self"]],[R[81]]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[5],E,E,52,[[[U]],[R[4]]]],[11,"into",E,E,52,[[],[U]]],[11,R[6],E,E,52,[[],[R[4]]]],[11,R[7],E,E,52,[[["self"]],[T]]],[11,R[8],E,E,52,[[["self"]],[T]]],[11,R[9],E,E,52,[[["self"]],[R[81]]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[5],E,E,53,[[[U]],[R[4]]]],[11,"into",E,E,53,[[],[U]]],[11,R[6],E,E,53,[[],[R[4]]]],[11,R[7],E,E,53,[[["self"]],[T]]],[11,R[8],E,E,53,[[["self"]],[T]]],[11,R[9],E,E,53,[[["self"]],[R[81]]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[5],E,E,54,[[[U]],[R[4]]]],[11,"into",E,E,54,[[],[U]]],[11,R[6],E,E,54,[[],[R[4]]]],[11,R[7],E,E,54,[[["self"]],[T]]],[11,R[8],E,E,54,[[["self"]],[T]]],[11,R[9],E,E,54,[[["self"]],[R[81]]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[5],E,E,55,[[[U]],[R[4]]]],[11,"into",E,E,55,[[],[U]]],[11,R[6],E,E,55,[[],[R[4]]]],[11,R[7],E,E,55,[[["self"]],[T]]],[11,R[8],E,E,55,[[["self"]],[T]]],[11,R[9],E,E,55,[[["self"]],[R[81]]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[5],E,E,56,[[[U]],[R[4]]]],[11,"into",E,E,56,[[],[U]]],[11,R[6],E,E,56,[[],[R[4]]]],[11,R[7],E,E,56,[[["self"]],[T]]],[11,R[8],E,E,56,[[["self"]],[T]]],[11,R[9],E,E,56,[[["self"]],[R[81]]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[5],E,E,57,[[[U]],[R[4]]]],[11,"into",E,E,57,[[],[U]]],[11,R[6],E,E,57,[[],[R[4]]]],[11,R[7],E,E,57,[[["self"]],[T]]],[11,R[8],E,E,57,[[["self"]],[T]]],[11,R[9],E,E,57,[[["self"]],[R[81]]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[5],E,E,58,[[[U]],[R[4]]]],[11,"into",E,E,58,[[],[U]]],[11,R[6],E,E,58,[[],[R[4]]]],[11,R[7],E,E,58,[[["self"]],[T]]],[11,R[8],E,E,58,[[["self"]],[T]]],[11,R[9],E,E,58,[[["self"]],[R[81]]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[5],E,E,59,[[[U]],[R[4]]]],[11,"into",E,E,59,[[],[U]]],[11,R[6],E,E,59,[[],[R[4]]]],[11,R[7],E,E,59,[[["self"]],[T]]],[11,R[8],E,E,59,[[["self"]],[T]]],[11,R[9],E,E,59,[[["self"]],[R[81]]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[5],E,E,60,[[[U]],[R[4]]]],[11,"into",E,E,60,[[],[U]]],[11,R[6],E,E,60,[[],[R[4]]]],[11,R[7],E,E,60,[[["self"]],[T]]],[11,R[8],E,E,60,[[["self"]],[T]]],[11,R[9],E,E,60,[[["self"]],[R[81]]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[5],E,E,61,[[[U]],[R[4]]]],[11,"into",E,E,61,[[],[U]]],[11,R[6],E,E,61,[[],[R[4]]]],[11,R[7],E,E,61,[[["self"]],[T]]],[11,R[8],E,E,61,[[["self"]],[T]]],[11,R[9],E,E,61,[[["self"]],[R[81]]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[5],E,E,62,[[[U]],[R[4]]]],[11,"into",E,E,62,[[],[U]]],[11,R[6],E,E,62,[[],[R[4]]]],[11,R[7],E,E,62,[[["self"]],[T]]],[11,R[8],E,E,62,[[["self"]],[T]]],[11,R[9],E,E,62,[[["self"]],[R[81]]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[5],E,E,63,[[[U]],[R[4]]]],[11,"into",E,E,63,[[],[U]]],[11,R[6],E,E,63,[[],[R[4]]]],[11,R[7],E,E,63,[[["self"]],[T]]],[11,R[8],E,E,63,[[["self"]],[T]]],[11,R[9],E,E,63,[[["self"]],[R[81]]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[5],E,E,64,[[[U]],[R[4]]]],[11,"into",E,E,64,[[],[U]]],[11,R[6],E,E,64,[[],[R[4]]]],[11,R[7],E,E,64,[[["self"]],[T]]],[11,R[8],E,E,64,[[["self"]],[T]]],[11,R[9],E,E,64,[[["self"]],[R[81]]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[5],E,E,65,[[[U]],[R[4]]]],[11,"into",E,E,65,[[],[U]]],[11,R[6],E,E,65,[[],[R[4]]]],[11,R[7],E,E,65,[[["self"]],[T]]],[11,R[8],E,E,65,[[["self"]],[T]]],[11,R[9],E,E,65,[[["self"]],[R[81]]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[5],E,E,66,[[[U]],[R[4]]]],[11,"into",E,E,66,[[],[U]]],[11,R[6],E,E,66,[[],[R[4]]]],[11,R[7],E,E,66,[[["self"]],[T]]],[11,R[8],E,E,66,[[["self"]],[T]]],[11,R[9],E,E,66,[[["self"]],[R[81]]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[5],E,E,67,[[[U]],[R[4]]]],[11,"into",E,E,67,[[],[U]]],[11,R[6],E,E,67,[[],[R[4]]]],[11,R[7],E,E,67,[[["self"]],[T]]],[11,R[8],E,E,67,[[["self"]],[T]]],[11,R[9],E,E,67,[[["self"]],[R[81]]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[5],E,E,68,[[[U]],[R[4]]]],[11,"into",E,E,68,[[],[U]]],[11,R[6],E,E,68,[[],[R[4]]]],[11,R[7],E,E,68,[[["self"]],[T]]],[11,R[8],E,E,68,[[["self"]],[T]]],[11,R[9],E,E,68,[[["self"]],[R[81]]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[5],E,E,69,[[[U]],[R[4]]]],[11,"into",E,E,69,[[],[U]]],[11,R[6],E,E,69,[[],[R[4]]]],[11,R[7],E,E,69,[[["self"]],[T]]],[11,R[8],E,E,69,[[["self"]],[T]]],[11,R[9],E,E,69,[[["self"]],[R[81]]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[5],E,E,70,[[[U]],[R[4]]]],[11,"into",E,E,70,[[],[U]]],[11,R[6],E,E,70,[[],[R[4]]]],[11,R[7],E,E,70,[[["self"]],[T]]],[11,R[8],E,E,70,[[["self"]],[T]]],[11,R[9],E,E,70,[[["self"]],[R[81]]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[5],E,E,71,[[[U]],[R[4]]]],[11,"into",E,E,71,[[],[U]]],[11,R[6],E,E,71,[[],[R[4]]]],[11,R[7],E,E,71,[[["self"]],[T]]],[11,R[8],E,E,71,[[["self"]],[T]]],[11,R[9],E,E,71,[[["self"]],[R[81]]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[5],E,E,72,[[[U]],[R[4]]]],[11,"into",E,E,72,[[],[U]]],[11,R[6],E,E,72,[[],[R[4]]]],[11,R[7],E,E,72,[[["self"]],[T]]],[11,R[8],E,E,72,[[["self"]],[T]]],[11,R[9],E,E,72,[[["self"]],[R[81]]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[5],E,E,73,[[[U]],[R[4]]]],[11,"into",E,E,73,[[],[U]]],[11,R[6],E,E,73,[[],[R[4]]]],[11,R[7],E,E,73,[[["self"]],[T]]],[11,R[8],E,E,73,[[["self"]],[T]]],[11,R[9],E,E,73,[[["self"]],[R[81]]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[5],E,E,74,[[[U]],[R[4]]]],[11,"into",E,E,74,[[],[U]]],[11,R[6],E,E,74,[[],[R[4]]]],[11,R[7],E,E,74,[[["self"]],[T]]],[11,R[8],E,E,74,[[["self"]],[T]]],[11,R[9],E,E,74,[[["self"]],[R[81]]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[5],E,E,75,[[[U]],[R[4]]]],[11,"into",E,E,75,[[],[U]]],[11,R[6],E,E,75,[[],[R[4]]]],[11,R[7],E,E,75,[[["self"]],[T]]],[11,R[8],E,E,75,[[["self"]],[T]]],[11,R[9],E,E,75,[[["self"]],[R[81]]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[5],E,E,76,[[[U]],[R[4]]]],[11,"into",E,E,76,[[],[U]]],[11,R[6],E,E,76,[[],[R[4]]]],[11,R[7],E,E,76,[[["self"]],[T]]],[11,R[8],E,E,76,[[["self"]],[T]]],[11,R[9],E,E,76,[[["self"]],[R[81]]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[5],E,E,77,[[[U]],[R[4]]]],[11,"into",E,E,77,[[],[U]]],[11,R[6],E,E,77,[[],[R[4]]]],[11,R[7],E,E,77,[[["self"]],[T]]],[11,R[8],E,E,77,[[["self"]],[T]]],[11,R[9],E,E,77,[[["self"]],[R[81]]]],[11,"from",E,E,138,[[[T]],[T]]],[11,R[5],E,E,138,[[[U]],[R[4]]]],[11,"into",E,E,138,[[],[U]]],[11,R[6],E,E,138,[[],[R[4]]]],[11,R[7],E,E,138,[[["self"]],[T]]],[11,R[8],E,E,138,[[["self"]],[T]]],[11,R[9],E,E,138,[[["self"]],[R[81]]]],[11,"from",E,E,139,[[[T]],[T]]],[11,R[5],E,E,139,[[[U]],[R[4]]]],[11,"into",E,E,139,[[],[U]]],[11,R[6],E,E,139,[[],[R[4]]]],[11,R[7],E,E,139,[[["self"]],[T]]],[11,R[8],E,E,139,[[["self"]],[T]]],[11,R[9],E,E,139,[[["self"]],[R[81]]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[5],E,E,78,[[[U]],[R[4]]]],[11,"into",E,E,78,[[],[U]]],[11,R[6],E,E,78,[[],[R[4]]]],[11,R[7],E,E,78,[[["self"]],[T]]],[11,R[8],E,E,78,[[["self"]],[T]]],[11,R[9],E,E,78,[[["self"]],[R[81]]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[5],E,E,79,[[[U]],[R[4]]]],[11,"into",E,E,79,[[],[U]]],[11,R[6],E,E,79,[[],[R[4]]]],[11,R[7],E,E,79,[[["self"]],[T]]],[11,R[8],E,E,79,[[["self"]],[T]]],[11,R[9],E,E,79,[[["self"]],[R[81]]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[5],E,E,80,[[[U]],[R[4]]]],[11,"into",E,E,80,[[],[U]]],[11,R[6],E,E,80,[[],[R[4]]]],[11,R[7],E,E,80,[[["self"]],[T]]],[11,R[8],E,E,80,[[["self"]],[T]]],[11,R[9],E,E,80,[[["self"]],[R[81]]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[5],E,E,81,[[[U]],[R[4]]]],[11,"into",E,E,81,[[],[U]]],[11,R[6],E,E,81,[[],[R[4]]]],[11,R[7],E,E,81,[[["self"]],[T]]],[11,R[8],E,E,81,[[["self"]],[T]]],[11,R[9],E,E,81,[[["self"]],[R[81]]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[5],E,E,82,[[[U]],[R[4]]]],[11,"into",E,E,82,[[],[U]]],[11,R[6],E,E,82,[[],[R[4]]]],[11,R[7],E,E,82,[[["self"]],[T]]],[11,R[8],E,E,82,[[["self"]],[T]]],[11,R[9],E,E,82,[[["self"]],[R[81]]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[5],E,E,83,[[[U]],[R[4]]]],[11,"into",E,E,83,[[],[U]]],[11,R[6],E,E,83,[[],[R[4]]]],[11,R[7],E,E,83,[[["self"]],[T]]],[11,R[8],E,E,83,[[["self"]],[T]]],[11,R[9],E,E,83,[[["self"]],[R[81]]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[5],E,E,84,[[[U]],[R[4]]]],[11,"into",E,E,84,[[],[U]]],[11,R[6],E,E,84,[[],[R[4]]]],[11,R[7],E,E,84,[[["self"]],[T]]],[11,R[8],E,E,84,[[["self"]],[T]]],[11,R[9],E,E,84,[[["self"]],[R[81]]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[5],E,E,85,[[[U]],[R[4]]]],[11,"into",E,E,85,[[],[U]]],[11,R[6],E,E,85,[[],[R[4]]]],[11,R[7],E,E,85,[[["self"]],[T]]],[11,R[8],E,E,85,[[["self"]],[T]]],[11,R[9],E,E,85,[[["self"]],[R[81]]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[5],E,E,86,[[[U]],[R[4]]]],[11,"into",E,E,86,[[],[U]]],[11,R[6],E,E,86,[[],[R[4]]]],[11,R[7],E,E,86,[[["self"]],[T]]],[11,R[8],E,E,86,[[["self"]],[T]]],[11,R[9],E,E,86,[[["self"]],[R[81]]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[5],E,E,87,[[[U]],[R[4]]]],[11,"into",E,E,87,[[],[U]]],[11,R[6],E,E,87,[[],[R[4]]]],[11,R[7],E,E,87,[[["self"]],[T]]],[11,R[8],E,E,87,[[["self"]],[T]]],[11,R[9],E,E,87,[[["self"]],[R[81]]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[5],E,E,88,[[[U]],[R[4]]]],[11,"into",E,E,88,[[],[U]]],[11,R[6],E,E,88,[[],[R[4]]]],[11,R[7],E,E,88,[[["self"]],[T]]],[11,R[8],E,E,88,[[["self"]],[T]]],[11,R[9],E,E,88,[[["self"]],[R[81]]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[5],E,E,89,[[[U]],[R[4]]]],[11,"into",E,E,89,[[],[U]]],[11,R[6],E,E,89,[[],[R[4]]]],[11,R[7],E,E,89,[[["self"]],[T]]],[11,R[8],E,E,89,[[["self"]],[T]]],[11,R[9],E,E,89,[[["self"]],[R[81]]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[5],E,E,90,[[[U]],[R[4]]]],[11,"into",E,E,90,[[],[U]]],[11,R[6],E,E,90,[[],[R[4]]]],[11,R[7],E,E,90,[[["self"]],[T]]],[11,R[8],E,E,90,[[["self"]],[T]]],[11,R[9],E,E,90,[[["self"]],[R[81]]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[5],E,E,91,[[[U]],[R[4]]]],[11,"into",E,E,91,[[],[U]]],[11,R[6],E,E,91,[[],[R[4]]]],[11,R[7],E,E,91,[[["self"]],[T]]],[11,R[8],E,E,91,[[["self"]],[T]]],[11,R[9],E,E,91,[[["self"]],[R[81]]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[5],E,E,92,[[[U]],[R[4]]]],[11,"into",E,E,92,[[],[U]]],[11,R[6],E,E,92,[[],[R[4]]]],[11,R[7],E,E,92,[[["self"]],[T]]],[11,R[8],E,E,92,[[["self"]],[T]]],[11,R[9],E,E,92,[[["self"]],[R[81]]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[5],E,E,93,[[[U]],[R[4]]]],[11,"into",E,E,93,[[],[U]]],[11,R[6],E,E,93,[[],[R[4]]]],[11,R[7],E,E,93,[[["self"]],[T]]],[11,R[8],E,E,93,[[["self"]],[T]]],[11,R[9],E,E,93,[[["self"]],[R[81]]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[5],E,E,94,[[[U]],[R[4]]]],[11,"into",E,E,94,[[],[U]]],[11,R[6],E,E,94,[[],[R[4]]]],[11,R[7],E,E,94,[[["self"]],[T]]],[11,R[8],E,E,94,[[["self"]],[T]]],[11,R[9],E,E,94,[[["self"]],[R[81]]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[5],E,E,95,[[[U]],[R[4]]]],[11,"into",E,E,95,[[],[U]]],[11,R[6],E,E,95,[[],[R[4]]]],[11,R[7],E,E,95,[[["self"]],[T]]],[11,R[8],E,E,95,[[["self"]],[T]]],[11,R[9],E,E,95,[[["self"]],[R[81]]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[5],E,E,96,[[[U]],[R[4]]]],[11,"into",E,E,96,[[],[U]]],[11,R[6],E,E,96,[[],[R[4]]]],[11,R[7],E,E,96,[[["self"]],[T]]],[11,R[8],E,E,96,[[["self"]],[T]]],[11,R[9],E,E,96,[[["self"]],[R[81]]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[5],E,E,97,[[[U]],[R[4]]]],[11,"into",E,E,97,[[],[U]]],[11,R[6],E,E,97,[[],[R[4]]]],[11,R[7],E,E,97,[[["self"]],[T]]],[11,R[8],E,E,97,[[["self"]],[T]]],[11,R[9],E,E,97,[[["self"]],[R[81]]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[5],E,E,98,[[[U]],[R[4]]]],[11,"into",E,E,98,[[],[U]]],[11,R[6],E,E,98,[[],[R[4]]]],[11,R[7],E,E,98,[[["self"]],[T]]],[11,R[8],E,E,98,[[["self"]],[T]]],[11,R[9],E,E,98,[[["self"]],[R[81]]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[5],E,E,99,[[[U]],[R[4]]]],[11,"into",E,E,99,[[],[U]]],[11,R[6],E,E,99,[[],[R[4]]]],[11,R[7],E,E,99,[[["self"]],[T]]],[11,R[8],E,E,99,[[["self"]],[T]]],[11,R[9],E,E,99,[[["self"]],[R[81]]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[5],E,E,100,[[[U]],[R[4]]]],[11,"into",E,E,100,[[],[U]]],[11,R[6],E,E,100,[[],[R[4]]]],[11,R[7],E,E,100,[[["self"]],[T]]],[11,R[8],E,E,100,[[["self"]],[T]]],[11,R[9],E,E,100,[[["self"]],[R[81]]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[5],E,E,101,[[[U]],[R[4]]]],[11,"into",E,E,101,[[],[U]]],[11,R[6],E,E,101,[[],[R[4]]]],[11,R[7],E,E,101,[[["self"]],[T]]],[11,R[8],E,E,101,[[["self"]],[T]]],[11,R[9],E,E,101,[[["self"]],[R[81]]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[5],E,E,102,[[[U]],[R[4]]]],[11,"into",E,E,102,[[],[U]]],[11,R[6],E,E,102,[[],[R[4]]]],[11,R[7],E,E,102,[[["self"]],[T]]],[11,R[8],E,E,102,[[["self"]],[T]]],[11,R[9],E,E,102,[[["self"]],[R[81]]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[5],E,E,103,[[[U]],[R[4]]]],[11,"into",E,E,103,[[],[U]]],[11,R[6],E,E,103,[[],[R[4]]]],[11,R[7],E,E,103,[[["self"]],[T]]],[11,R[8],E,E,103,[[["self"]],[T]]],[11,R[9],E,E,103,[[["self"]],[R[81]]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[5],E,E,104,[[[U]],[R[4]]]],[11,"into",E,E,104,[[],[U]]],[11,R[6],E,E,104,[[],[R[4]]]],[11,R[7],E,E,104,[[["self"]],[T]]],[11,R[8],E,E,104,[[["self"]],[T]]],[11,R[9],E,E,104,[[["self"]],[R[81]]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[5],E,E,105,[[[U]],[R[4]]]],[11,"into",E,E,105,[[],[U]]],[11,R[6],E,E,105,[[],[R[4]]]],[11,R[7],E,E,105,[[["self"]],[T]]],[11,R[8],E,E,105,[[["self"]],[T]]],[11,R[9],E,E,105,[[["self"]],[R[81]]]],[11,"from",E,E,106,[[[T]],[T]]],[11,R[5],E,E,106,[[[U]],[R[4]]]],[11,"into",E,E,106,[[],[U]]],[11,R[6],E,E,106,[[],[R[4]]]],[11,R[7],E,E,106,[[["self"]],[T]]],[11,R[8],E,E,106,[[["self"]],[T]]],[11,R[9],E,E,106,[[["self"]],[R[81]]]],[11,"from",E,E,140,[[[T]],[T]]],[11,R[5],E,E,140,[[[U]],[R[4]]]],[11,"into",E,E,140,[[],[U]]],[11,R[6],E,E,140,[[],[R[4]]]],[11,R[7],E,E,140,[[["self"]],[T]]],[11,R[8],E,E,140,[[["self"]],[T]]],[11,R[9],E,E,140,[[["self"]],[R[81]]]],[11,"from",E,E,107,[[[T]],[T]]],[11,R[5],E,E,107,[[[U]],[R[4]]]],[11,"into",E,E,107,[[],[U]]],[11,R[6],E,E,107,[[],[R[4]]]],[11,R[7],E,E,107,[[["self"]],[T]]],[11,R[8],E,E,107,[[["self"]],[T]]],[11,R[9],E,E,107,[[["self"]],[R[81]]]],[11,"from",E,E,108,[[[T]],[T]]],[11,R[5],E,E,108,[[[U]],[R[4]]]],[11,"into",E,E,108,[[],[U]]],[11,R[6],E,E,108,[[],[R[4]]]],[11,R[7],E,E,108,[[["self"]],[T]]],[11,R[8],E,E,108,[[["self"]],[T]]],[11,R[9],E,E,108,[[["self"]],[R[81]]]],[11,"from",E,E,109,[[[T]],[T]]],[11,R[5],E,E,109,[[[U]],[R[4]]]],[11,"into",E,E,109,[[],[U]]],[11,R[6],E,E,109,[[],[R[4]]]],[11,R[7],E,E,109,[[["self"]],[T]]],[11,R[8],E,E,109,[[["self"]],[T]]],[11,R[9],E,E,109,[[["self"]],[R[81]]]],[11,"from",E,E,110,[[[T]],[T]]],[11,R[5],E,E,110,[[[U]],[R[4]]]],[11,"into",E,E,110,[[],[U]]],[11,R[6],E,E,110,[[],[R[4]]]],[11,R[7],E,E,110,[[["self"]],[T]]],[11,R[8],E,E,110,[[["self"]],[T]]],[11,R[9],E,E,110,[[["self"]],[R[81]]]],[11,"from",E,E,111,[[[T]],[T]]],[11,R[5],E,E,111,[[[U]],[R[4]]]],[11,"into",E,E,111,[[],[U]]],[11,R[6],E,E,111,[[],[R[4]]]],[11,R[7],E,E,111,[[["self"]],[T]]],[11,R[8],E,E,111,[[["self"]],[T]]],[11,R[9],E,E,111,[[["self"]],[R[81]]]],[11,"from",E,E,112,[[[T]],[T]]],[11,R[5],E,E,112,[[[U]],[R[4]]]],[11,"into",E,E,112,[[],[U]]],[11,R[6],E,E,112,[[],[R[4]]]],[11,R[7],E,E,112,[[["self"]],[T]]],[11,R[8],E,E,112,[[["self"]],[T]]],[11,R[9],E,E,112,[[["self"]],[R[81]]]],[11,"from",E,E,113,[[[T]],[T]]],[11,R[5],E,E,113,[[[U]],[R[4]]]],[11,"into",E,E,113,[[],[U]]],[11,R[6],E,E,113,[[],[R[4]]]],[11,R[7],E,E,113,[[["self"]],[T]]],[11,R[8],E,E,113,[[["self"]],[T]]],[11,R[9],E,E,113,[[["self"]],[R[81]]]],[11,"from",E,E,114,[[[T]],[T]]],[11,R[5],E,E,114,[[[U]],[R[4]]]],[11,"into",E,E,114,[[],[U]]],[11,R[6],E,E,114,[[],[R[4]]]],[11,R[7],E,E,114,[[["self"]],[T]]],[11,R[8],E,E,114,[[["self"]],[T]]],[11,R[9],E,E,114,[[["self"]],[R[81]]]],[11,"from",E,E,115,[[[T]],[T]]],[11,R[5],E,E,115,[[[U]],[R[4]]]],[11,"into",E,E,115,[[],[U]]],[11,R[6],E,E,115,[[],[R[4]]]],[11,R[7],E,E,115,[[["self"]],[T]]],[11,R[8],E,E,115,[[["self"]],[T]]],[11,R[9],E,E,115,[[["self"]],[R[81]]]],[11,"from",E,E,116,[[[T]],[T]]],[11,R[5],E,E,116,[[[U]],[R[4]]]],[11,"into",E,E,116,[[],[U]]],[11,R[6],E,E,116,[[],[R[4]]]],[11,R[7],E,E,116,[[["self"]],[T]]],[11,R[8],E,E,116,[[["self"]],[T]]],[11,R[9],E,E,116,[[["self"]],[R[81]]]],[11,"from",E,E,117,[[[T]],[T]]],[11,R[5],E,E,117,[[[U]],[R[4]]]],[11,"into",E,E,117,[[],[U]]],[11,R[6],E,E,117,[[],[R[4]]]],[11,R[7],E,E,117,[[["self"]],[T]]],[11,R[8],E,E,117,[[["self"]],[T]]],[11,R[9],E,E,117,[[["self"]],[R[81]]]],[11,"from",E,E,118,[[[T]],[T]]],[11,R[5],E,E,118,[[[U]],[R[4]]]],[11,"into",E,E,118,[[],[U]]],[11,R[6],E,E,118,[[],[R[4]]]],[11,R[7],E,E,118,[[["self"]],[T]]],[11,R[8],E,E,118,[[["self"]],[T]]],[11,R[9],E,E,118,[[["self"]],[R[81]]]],[11,"from",E,E,141,[[[T]],[T]]],[11,R[5],E,E,141,[[[U]],[R[4]]]],[11,"into",E,E,141,[[],[U]]],[11,R[6],E,E,141,[[],[R[4]]]],[11,R[7],E,E,141,[[["self"]],[T]]],[11,R[8],E,E,141,[[["self"]],[T]]],[11,R[9],E,E,141,[[["self"]],[R[81]]]],[11,"from",E,E,119,[[[T]],[T]]],[11,R[5],E,E,119,[[[U]],[R[4]]]],[11,"into",E,E,119,[[],[U]]],[11,R[6],E,E,119,[[],[R[4]]]],[11,R[7],E,E,119,[[["self"]],[T]]],[11,R[8],E,E,119,[[["self"]],[T]]],[11,R[9],E,E,119,[[["self"]],[R[81]]]],[11,"from",E,E,120,[[[T]],[T]]],[11,R[5],E,E,120,[[[U]],[R[4]]]],[11,"into",E,E,120,[[],[U]]],[11,R[6],E,E,120,[[],[R[4]]]],[11,R[7],E,E,120,[[["self"]],[T]]],[11,R[8],E,E,120,[[["self"]],[T]]],[11,R[9],E,E,120,[[["self"]],[R[81]]]],[11,"from",E,E,121,[[[T]],[T]]],[11,R[5],E,E,121,[[[U]],[R[4]]]],[11,"into",E,E,121,[[],[U]]],[11,R[6],E,E,121,[[],[R[4]]]],[11,R[7],E,E,121,[[["self"]],[T]]],[11,R[8],E,E,121,[[["self"]],[T]]],[11,R[9],E,E,121,[[["self"]],[R[81]]]],[11,"from",E,E,122,[[[T]],[T]]],[11,R[5],E,E,122,[[[U]],[R[4]]]],[11,"into",E,E,122,[[],[U]]],[11,R[6],E,E,122,[[],[R[4]]]],[11,R[7],E,E,122,[[["self"]],[T]]],[11,R[8],E,E,122,[[["self"]],[T]]],[11,R[9],E,E,122,[[["self"]],[R[81]]]],[11,"from",E,E,123,[[[T]],[T]]],[11,R[5],E,E,123,[[[U]],[R[4]]]],[11,"into",E,E,123,[[],[U]]],[11,R[6],E,E,123,[[],[R[4]]]],[11,R[7],E,E,123,[[["self"]],[T]]],[11,R[8],E,E,123,[[["self"]],[T]]],[11,R[9],E,E,123,[[["self"]],[R[81]]]],[11,"from",E,E,124,[[[T]],[T]]],[11,R[5],E,E,124,[[[U]],[R[4]]]],[11,"into",E,E,124,[[],[U]]],[11,R[6],E,E,124,[[],[R[4]]]],[11,R[7],E,E,124,[[["self"]],[T]]],[11,R[8],E,E,124,[[["self"]],[T]]],[11,R[9],E,E,124,[[["self"]],[R[81]]]],[11,"from",E,E,125,[[[T]],[T]]],[11,R[5],E,E,125,[[[U]],[R[4]]]],[11,"into",E,E,125,[[],[U]]],[11,R[6],E,E,125,[[],[R[4]]]],[11,R[7],E,E,125,[[["self"]],[T]]],[11,R[8],E,E,125,[[["self"]],[T]]],[11,R[9],E,E,125,[[["self"]],[R[81]]]],[11,"from",E,E,126,[[[T]],[T]]],[11,R[5],E,E,126,[[[U]],[R[4]]]],[11,"into",E,E,126,[[],[U]]],[11,R[6],E,E,126,[[],[R[4]]]],[11,R[7],E,E,126,[[["self"]],[T]]],[11,R[8],E,E,126,[[["self"]],[T]]],[11,R[9],E,E,126,[[["self"]],[R[81]]]],[11,"from",E,E,127,[[[T]],[T]]],[11,R[5],E,E,127,[[[U]],[R[4]]]],[11,"into",E,E,127,[[],[U]]],[11,R[6],E,E,127,[[],[R[4]]]],[11,R[7],E,E,127,[[["self"]],[T]]],[11,R[8],E,E,127,[[["self"]],[T]]],[11,R[9],E,E,127,[[["self"]],[R[81]]]],[11,"from",E,E,128,[[[T]],[T]]],[11,R[5],E,E,128,[[[U]],[R[4]]]],[11,"into",E,E,128,[[],[U]]],[11,R[6],E,E,128,[[],[R[4]]]],[11,R[7],E,E,128,[[["self"]],[T]]],[11,R[8],E,E,128,[[["self"]],[T]]],[11,R[9],E,E,128,[[["self"]],[R[81]]]],[11,"from",E,E,129,[[[T]],[T]]],[11,R[5],E,E,129,[[[U]],[R[4]]]],[11,"into",E,E,129,[[],[U]]],[11,R[6],E,E,129,[[],[R[4]]]],[11,R[7],E,E,129,[[["self"]],[T]]],[11,R[8],E,E,129,[[["self"]],[T]]],[11,R[9],E,E,129,[[["self"]],[R[81]]]],[11,"from",E,E,130,[[[T]],[T]]],[11,R[5],E,E,130,[[[U]],[R[4]]]],[11,"into",E,E,130,[[],[U]]],[11,R[6],E,E,130,[[],[R[4]]]],[11,R[7],E,E,130,[[["self"]],[T]]],[11,R[8],E,E,130,[[["self"]],[T]]],[11,R[9],E,E,130,[[["self"]],[R[81]]]],[11,"from",E,E,131,[[[T]],[T]]],[11,R[5],E,E,131,[[[U]],[R[4]]]],[11,"into",E,E,131,[[],[U]]],[11,R[6],E,E,131,[[],[R[4]]]],[11,R[7],E,E,131,[[["self"]],[T]]],[11,R[8],E,E,131,[[["self"]],[T]]],[11,R[9],E,E,131,[[["self"]],[R[81]]]],[11,"from",E,E,142,[[[T]],[T]]],[11,R[5],E,E,142,[[[U]],[R[4]]]],[11,"into",E,E,142,[[],[U]]],[11,R[6],E,E,142,[[],[R[4]]]],[11,R[7],E,E,142,[[["self"]],[T]]],[11,R[8],E,E,142,[[["self"]],[T]]],[11,R[9],E,E,142,[[["self"]],[R[81]]]],[11,"from",E,E,143,[[[T]],[T]]],[11,R[5],E,E,143,[[[U]],[R[4]]]],[11,"into",E,E,143,[[],[U]]],[11,R[6],E,E,143,[[],[R[4]]]],[11,R[7],E,E,143,[[["self"]],[T]]],[11,R[8],E,E,143,[[["self"]],[T]]],[11,R[9],E,E,143,[[["self"]],[R[81]]]],[11,"from",E,E,144,[[[T]],[T]]],[11,R[5],E,E,144,[[[U]],[R[4]]]],[11,"into",E,E,144,[[],[U]]],[11,R[6],E,E,144,[[],[R[4]]]],[11,R[7],E,E,144,[[["self"]],[T]]],[11,R[8],E,E,144,[[["self"]],[T]]],[11,R[9],E,E,144,[[["self"]],[R[81]]]],[11,"from",E,E,145,[[[T]],[T]]],[11,R[5],E,E,145,[[[U]],[R[4]]]],[11,"into",E,E,145,[[],[U]]],[11,R[6],E,E,145,[[],[R[4]]]],[11,R[7],E,E,145,[[["self"]],[T]]],[11,R[8],E,E,145,[[["self"]],[T]]],[11,R[9],E,E,145,[[["self"]],[R[81]]]],[11,"from",E,E,146,[[[T]],[T]]],[11,R[5],E,E,146,[[[U]],[R[4]]]],[11,"into",E,E,146,[[],[U]]],[11,R[6],E,E,146,[[],[R[4]]]],[11,R[7],E,E,146,[[["self"]],[T]]],[11,R[8],E,E,146,[[["self"]],[T]]],[11,R[9],E,E,146,[[["self"]],[R[81]]]],[11,"from",E,E,147,[[[T]],[T]]],[11,R[5],E,E,147,[[[U]],[R[4]]]],[11,"into",E,E,147,[[],[U]]],[11,R[6],E,E,147,[[],[R[4]]]],[11,R[7],E,E,147,[[["self"]],[T]]],[11,R[8],E,E,147,[[["self"]],[T]]],[11,R[9],E,E,147,[[["self"]],[R[81]]]],[11,"from",E,E,148,[[[T]],[T]]],[11,R[5],E,E,148,[[[U]],[R[4]]]],[11,"into",E,E,148,[[],[U]]],[11,R[6],E,E,148,[[],[R[4]]]],[11,R[7],E,E,148,[[["self"]],[T]]],[11,R[8],E,E,148,[[["self"]],[T]]],[11,R[9],E,E,148,[[["self"]],[R[81]]]],[11,"from",E,E,149,[[[T]],[T]]],[11,R[5],E,E,149,[[[U]],[R[4]]]],[11,"into",E,E,149,[[],[U]]],[11,R[6],E,E,149,[[],[R[4]]]],[11,R[7],E,E,149,[[["self"]],[T]]],[11,R[8],E,E,149,[[["self"]],[T]]],[11,R[9],E,E,149,[[["self"]],[R[81]]]],[11,"from",E,E,132,[[[T]],[T]]],[11,R[5],E,E,132,[[[U]],[R[4]]]],[11,"into",E,E,132,[[],[U]]],[11,R[6],E,E,132,[[],[R[4]]]],[11,R[7],E,E,132,[[["self"]],[T]]],[11,R[8],E,E,132,[[["self"]],[T]]],[11,R[9],E,E,132,[[["self"]],[R[81]]]],[11,"from",E,E,150,[[[T]],[T]]],[11,R[5],E,E,150,[[[U]],[R[4]]]],[11,"into",E,E,150,[[],[U]]],[11,R[6],E,E,150,[[],[R[4]]]],[11,R[7],E,E,150,[[["self"]],[T]]],[11,R[8],E,E,150,[[["self"]],[T]]],[11,R[9],E,E,150,[[["self"]],[R[81]]]],[11,"from",E,E,151,[[[T]],[T]]],[11,R[5],E,E,151,[[[U]],[R[4]]]],[11,"into",E,E,151,[[],[U]]],[11,R[6],E,E,151,[[],[R[4]]]],[11,R[7],E,E,151,[[["self"]],[T]]],[11,R[8],E,E,151,[[["self"]],[T]]],[11,R[9],E,E,151,[[["self"]],[R[81]]]],[11,"from",E,E,152,[[[T]],[T]]],[11,R[5],E,E,152,[[[U]],[R[4]]]],[11,"into",E,E,152,[[],[U]]],[11,R[6],E,E,152,[[],[R[4]]]],[11,R[7],E,E,152,[[["self"]],[T]]],[11,R[8],E,E,152,[[["self"]],[T]]],[11,R[9],E,E,152,[[["self"]],[R[81]]]],[11,"from",E,E,153,[[[T]],[T]]],[11,R[5],E,E,153,[[[U]],[R[4]]]],[11,"into",E,E,153,[[],[U]]],[11,R[6],E,E,153,[[],[R[4]]]],[11,R[7],E,E,153,[[["self"]],[T]]],[11,R[8],E,E,153,[[["self"]],[T]]],[11,R[9],E,E,153,[[["self"]],[R[81]]]],[11,"from",E,E,154,[[[T]],[T]]],[11,R[5],E,E,154,[[[U]],[R[4]]]],[11,"into",E,E,154,[[],[U]]],[11,R[6],E,E,154,[[],[R[4]]]],[11,R[7],E,E,154,[[["self"]],[T]]],[11,R[8],E,E,154,[[["self"]],[T]]],[11,R[9],E,E,154,[[["self"]],[R[81]]]],[11,"fmt",E,E,133,[[["self"],[R[11]]],[[R[4],["error"]],["error"]]]],[11,"clone",E,E,150,[[["self"]],["dir"]]],[11,"clone",E,E,0,[[["self"]],["group"]]],[11,"clone",E,E,1,[[["self"]],["utimbuf"]]],[11,"clone",E,E,2,[[["self"]],["timeval"]]],[11,"clone",E,E,3,[[["self"]],[R[269]]]],[11,"clone",E,E,4,[[["self"]],["rlimit"]]],[11,"clone",E,E,5,[[["self"]],["rusage"]]],[11,"clone",E,E,6,[[["self"]],[R[205]]]],[11,"clone",E,E,7,[[["self"]],["hostent"]]],[11,"clone",E,E,8,[[["self"]],["iovec"]]],[11,"clone",E,E,9,[[["self"]],["pollfd"]]],[11,"clone",E,E,10,[[["self"]],["winsize"]]],[11,"clone",E,E,11,[[["self"]],["linger"]]],[11,"clone",E,E,12,[[["self"]],["sigval"]]],[11,"clone",E,E,13,[[["self"]],[R[206]]]],[11,"clone",E,E,14,[[["self"]],["tms"]]],[11,"clone",E,E,15,[[["self"]],["servent"]]],[11,"clone",E,E,16,[[["self"]],[R[270]]]],[11,"clone",E,E,151,[[["self"]],["file"]]],[11,"clone",E,E,152,[[["self"]],["fpos_t"]]],[11,"clone",E,E,153,[[["self"]],[R[297]]]],[11,"clone",E,E,17,[[["self"]],["in_addr"]]],[11,"clone",E,E,18,[[["self"]],["ip_mreq"]]],[11,"clone",E,E,19,[[["self"]],[R[207]]]],[11,"clone",E,E,20,[[["self"]],[R[271]]]],[11,"clone",E,E,21,[[["self"]],[R[208]]]],[11,"clone",E,E,22,[[["self"]],[R[209]]]],[11,"clone",E,E,23,[[["self"]],[R[272]]]],[11,"clone",E,E,24,[[["self"]],[R[210]]]],[11,"clone",E,E,134,[[["self"]],["fd_set"]]],[11,"clone",E,E,25,[[["self"]],["tm"]]],[11,"clone",E,E,26,[[["self"]],[R[211]]]],[11,"clone",E,E,27,[[["self"]],["dl_info"]]],[11,"clone",E,E,28,[[["self"]],["lconv"]]],[11,"clone",E,E,29,[[["self"]],[R[212]]]],[11,"clone",E,E,30,[[["self"]],["ifaddrs"]]],[11,"clone",E,E,135,[[["self"]],[R[213]]]],[11,"clone",E,E,31,[[["self"]],["arpreq"]]],[11,"clone",E,E,32,[[["self"]],[R[214]]]],[11,"clone",E,E,33,[[["self"]],["arphdr"]]],[11,"clone",E,E,34,[[["self"]],["mmsghdr"]]],[11,"clone",E,E,35,[[["self"]],[R[215]]]],[11,"clone",E,E,36,[[["self"]],[R[216]]]],[11,"clone",E,E,37,[[["self"]],[R[217]]]],[11,"clone",E,E,38,[[["self"]],["utsname"]]],[11,"clone",E,E,39,[[["self"]],[R[273]]]],[11,"clone",E,E,154,[[["self"]],[R[298]]]],[11,"clone",E,E,40,[[["self"]],[R[274]]]],[11,"clone",E,E,41,[[["self"]],["glob_t"]]],[11,"clone",E,E,42,[[["self"]],["passwd"]]],[11,"clone",E,E,43,[[["self"]],["spwd"]]],[11,"clone",E,E,44,[[["self"]],["dqblk"]]],[11,"clone",E,E,45,[[["self"]],[R[218]]]],[11,"clone",E,E,46,[[["self"]],[R[219]]]],[11,"clone",E,E,136,[[["self"]],["fsid_t"]]],[11,"clone",E,E,47,[[["self"]],[R[220]]]],[11,"clone",E,E,137,[[["self"]],[R[201]]]],[11,"clone",E,E,48,[[["self"]],[R[204]]]],[11,"clone",E,E,49,[[["self"]],["msginfo"]]],[11,"clone",E,E,50,[[["self"]],["sembuf"]]],[11,"clone",E,E,51,[[["self"]],[R[221]]]],[11,"clone",E,E,52,[[["self"]],[R[275]]]],[11,"clone",E,E,53,[[["self"]],[R[222]]]],[11,"clone",E,E,54,[[["self"]],[R[223]]]],[11,"clone",E,E,55,[[["self"]],[R[224]]]],[11,"clone",E,E,56,[[["self"]],[R[225]]]],[11,"clone",E,E,57,[[["self"]],[R[226]]]],[11,"clone",E,E,58,[[["self"]],[R[227]]]],[11,"clone",E,E,59,[[["self"]],[R[228]]]],[11,"clone",E,E,60,[[["self"]],[R[229]]]],[11,"clone",E,E,61,[[["self"]],[R[230]]]],[11,"clone",E,E,62,[[["self"]],[R[231]]]],[11,"clone",E,E,63,[[["self"]],[R[232]]]],[11,"clone",E,E,64,[[["self"]],[R[233]]]],[11,"clone",E,E,65,[[["self"]],[R[234]]]],[11,"clone",E,E,66,[[["self"]],["elf32_ehdr"]]],[11,"clone",E,E,67,[[["self"]],["elf64_ehdr"]]],[11,"clone",E,E,68,[[["self"]],["elf32_sym"]]],[11,"clone",E,E,69,[[["self"]],["elf64_sym"]]],[11,"clone",E,E,70,[[["self"]],["elf32_phdr"]]],[11,"clone",E,E,71,[[["self"]],["elf64_phdr"]]],[11,"clone",E,E,72,[[["self"]],["elf32_shdr"]]],[11,"clone",E,E,73,[[["self"]],["elf64_shdr"]]],[11,"clone",E,E,74,[[["self"]],["elf32_chdr"]]],[11,"clone",E,E,75,[[["self"]],["elf64_chdr"]]],[11,"clone",E,E,76,[[["self"]],["ucred"]]],[11,"clone",E,E,77,[[["self"]],["mntent"]]],[11,"clone",E,E,138,[[["self"]],[R[235]]]],[11,"clone",E,E,139,[[["self"]],[R[236]]]],[11,"clone",E,E,78,[[["self"]],[R[237]]]],[11,"clone",E,E,79,[[["self"]],[R[238]]]],[11,"clone",E,E,80,[[["self"]],[R[239]]]],[11,"clone",E,E,81,[[["self"]],[R[240]]]],[11,"clone",E,E,82,[[["self"]],[R[241]]]],[11,"clone",E,E,83,[[["self"]],[R[242]]]],[11,"clone",E,E,84,[[["self"]],["dirent"]]],[11,"clone",E,E,85,[[["self"]],[R[286]]]],[11,"clone",E,E,86,[[["self"]],[R[243]]]],[11,"clone",E,E,87,[[["self"]],[R[244]]]],[11,"clone",E,E,88,[[["self"]],["mq_attr"]]],[11,"clone",E,E,89,[[["self"]],["statx"]]],[11,"clone",E,E,90,[[["self"]],[R[245]]]],[11,"clone",E,E,91,[[["self"]],["aiocb"]]],[11,"clone",E,E,92,[[["self"]],[R[246]]]],[11,"clone",E,E,93,[[["self"]],[R[247]]]],[11,"clone",E,E,94,[[["self"]],[R[287]]]],[11,"clone",E,E,95,[[["self"]],["msghdr"]]],[11,"clone",E,E,96,[[["self"]],["cmsghdr"]]],[11,"clone",E,E,97,[[["self"]],["termios"]]],[11,"clone",E,E,98,[[["self"]],[R[248]]]],[11,"clone",E,E,99,[[["self"]],[R[288]]]],[11,"clone",E,E,100,[[["self"]],[R[289]]]],[11,"clone",E,E,101,[[["self"]],[R[249]]]],[11,"clone",E,E,102,[[["self"]],[R[250]]]],[11,"clone",E,E,103,[[["self"]],[R[251]]]],[11,"clone",E,E,104,[[["self"]],["nlattr"]]],[11,"clone",E,E,105,[[["self"]],["rtentry"]]],[11,"clone",E,E,106,[[["self"]],["utmpx"]]],[11,"clone",E,E,140,[[["self"]],[R[296]]]],[11,"clone",E,E,107,[[["self"]],["sysinfo"]]],[11,"clone",E,E,108,[[["self"]],[R[290]]]],[11,"clone",E,E,109,[[["self"]],[R[202]]]],[11,"clone",E,E,110,[[["self"]],["statfs"]]],[11,"clone",E,E,111,[[["self"]],["flock"]]],[11,"clone",E,E,112,[[["self"]],["flock64"]]],[11,"clone",E,E,113,[[["self"]],[R[252]]]],[11,"clone",E,E,114,[[["self"]],["stack_t"]]],[11,"clone",E,E,115,[[["self"]],["stat"]]],[11,"clone",E,E,116,[[["self"]],["stat64"]]],[11,"clone",E,E,117,[[["self"]],[R[253]]]],[11,"clone",E,E,118,[[["self"]],[R[203]]]],[11,"clone",E,E,141,[[["self"]],[R[254]]]],[11,"clone",E,E,119,[[["self"]],[R[255]]]],[11,"clone",E,E,120,[[["self"]],[R[256]]]],[11,"clone",E,E,121,[[["self"]],[R[257]]]],[11,"clone",E,E,122,[[["self"]],[R[258]]]],[11,"clone",E,E,123,[[["self"]],["user"]]],[11,"clone",E,E,124,[[["self"]],[R[259]]]],[11,"clone",E,E,125,[[["self"]],[R[291]]]],[11,"clone",E,E,126,[[["self"]],[R[292]]]],[11,"clone",E,E,127,[[["self"]],[R[293]]]],[11,"clone",E,E,128,[[["self"]],[R[294]]]],[11,"clone",E,E,129,[[["self"]],[R[260]]]],[11,"clone",E,E,130,[[["self"]],[R[261]]]],[11,"clone",E,E,131,[[["self"]],["statvfs"]]],[11,"clone",E,E,142,[[["self"]],[R[262]]]],[11,"clone",E,E,143,[[["self"]],["sem_t"]]],[11,"clone",E,E,144,[[["self"]],[R[263]]]],[11,"clone",E,E,145,[[["self"]],[R[264]]]],[11,"clone",E,E,146,[[["self"]],[R[265]]]],[11,"clone",E,E,147,[[["self"]],[R[266]]]],[11,"clone",E,E,148,[[["self"]],[R[267]]]],[11,"clone",E,E,149,[[["self"]],[R[268]]]],[11,"clone",E,E,132,[[["self"]],[R[295]]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,R[269]],[3,"rlimit"],[3,"rusage"],[3,R[205]],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,R[206]],[3,"tms"],[3,"servent"],[3,R[270]],[3,"in_addr"],[3,"ip_mreq"],[3,R[207]],[3,R[271]],[3,R[208]],[3,R[209]],[3,R[272]],[3,R[210]],[3,"tm"],[3,R[211]],[3,"Dl_info"],[3,"lconv"],[3,R[212]],[3,"ifaddrs"],[3,"arpreq"],[3,R[214]],[3,"arphdr"],[3,"mmsghdr"],[3,R[215]],[3,R[216]],[3,R[217]],[3,"utsname"],[3,R[273]],[3,R[274]],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,R[218]],[3,R[219]],[3,R[220]],[3,R[204]],[3,"msginfo"],[3,"sembuf"],[3,R[221]],[3,R[275]],[3,R[222]],[3,R[223]],[3,R[224]],[3,R[225]],[3,R[226]],[3,R[227]],[3,R[228]],[3,R[229]],[3,R[230]],[3,R[231]],[3,R[232]],[3,R[233]],[3,R[234]],[3,R[276]],[3,R[277]],[3,R[278]],[3,R[279]],[3,R[280]],[3,R[281]],[3,R[282]],[3,R[283]],[3,R[284]],[3,R[285]],[3,"ucred"],[3,"mntent"],[3,R[237]],[3,R[238]],[3,R[239]],[3,R[240]],[3,R[241]],[3,R[242]],[3,"dirent"],[3,R[286]],[3,R[243]],[3,R[244]],[3,"mq_attr"],[3,"statx"],[3,R[245]],[3,"aiocb"],[3,R[246]],[3,R[247]],[3,R[287]],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,R[248]],[3,R[288]],[3,R[289]],[3,R[249]],[3,R[250]],[3,R[251]],[3,"nlattr"],[3,"rtentry"],[3,"utmpx"],[3,"sysinfo"],[3,R[290]],[3,R[202]],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,R[252]],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,R[253]],[3,R[203]],[3,R[255]],[3,R[256]],[3,R[257]],[3,R[258]],[3,"user"],[3,R[259]],[3,R[291]],[3,R[292]],[3,R[293]],[3,R[294]],[3,R[260]],[3,R[261]],[3,"statvfs"],[3,R[295]],[4,"c_void"],[3,"fd_set"],[3,R[213]],[3,"fsid_t"],[3,R[201]],[3,R[235]],[3,R[236]],[3,R[296]],[3,R[254]],[3,R[262]],[3,"sem_t"],[3,R[263]],[3,R[264]],[3,R[265]],[3,R[266]],[3,R[267]],[3,R[268]],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,R[297]],[4,R[298]]]};
searchIndex["log"]={"doc":"A lightweight logging facade.","i":[[3,"Record","log","The \"payload\" of a log message.",N,N],[3,R[171],E,"Builder for `Record`.",N,N],[3,"Metadata",E,"Metadata about a log message.",N,N],[3,R[172],E,"Builder for `Metadata`.",N,N],[3,R[173],E,"The type returned by [`set_logger`] if [`set_logger`] has…",N,N],[3,R[174],E,"The type returned by [`from_str`] when the string doesn't…",N,N],[4,"Level",E,"An enum representing the available verbosity levels of the…",N,N],[13,"Error",E,"The \"error\" level.",0,N],[13,"Warn",E,"The \"warn\" level.",0,N],[13,"Info",E,"The \"info\" level.",0,N],[13,"Debug",E,"The \"debug\" level.",0,N],[13,"Trace",E,"The \"trace\" level.",0,N],[4,R[170],E,"An enum representing the available verbosity level filters…",N,N],[13,"Off",E,"A level lower than all log levels.",1,N],[13,"Error",E,"Corresponds to the `Error` log level.",1,N],[13,"Warn",E,"Corresponds to the `Warn` log level.",1,N],[13,"Info",E,"Corresponds to the `Info` log level.",1,N],[13,"Debug",E,"Corresponds to the `Debug` log level.",1,N],[13,"Trace",E,"Corresponds to the `Trace` log level.",1,N],[5,"set_max_level",E,"Sets the global maximum log level.",N,[[[R[155]]]]],[5,"max_level",E,"Returns the current maximum log level.",N,[[],[R[155]]]],[5,"set_boxed_logger",E,"Sets the global logger to a `Box<Log>`.",N,[[["box",["log"]],["log"]],[[R[156]],[R[4],[R[156]]]]]],[5,"set_logger",E,"Sets the global logger to a `&'static Log`.",N,[[["log"]],[[R[156]],[R[4],[R[156]]]]]],[5,"set_logger_racy",E,"A thread-unsafe version of [`set_logger`].",N,[[["log"]],[[R[156]],[R[4],[R[156]]]]]],[5,"logger",E,"Returns a reference to the logger.",N,[[],["log"]]],[17,"STATIC_MAX_LEVEL",E,"The statically resolved maximum log level.",N,N],[8,"Log",E,"A trait encapsulating the operations required of a logger.",N,N],[10,"enabled",E,"Determines if a log message with the specified metadata…",2,[[["self"],[R[157]]],["bool"]]],[10,"log",E,"Logs the `Record`.",2,[[["self"],["record"]]]],[10,"flush",E,"Flushes any buffered records.",2,[[["self"]]]],[11,"max",E,"Returns the most verbose logging level.",0,[[],["level"]]],[11,"to_level_filter",E,"Converts the `Level` to the equivalent `LevelFilter`.",0,[[["self"]],[R[155]]]],[11,"max",E,"Returns the most verbose logging level filter.",1,[[],[R[155]]]],[11,"to_level",E,"Converts `self` to the equivalent `Level`.",1,[[["self"]],[[R[20],["level"]],["level"]]]],[11,"builder",E,R[164],3,[[],[R[159]]]],[11,"args",E,"The message body.",3,[[["self"]],[R[160]]]],[11,R[157],E,"Metadata about the log directive.",3,[[["self"]],[R[157]]]],[11,"level",E,R[165],3,[[["self"]],["level"]]],[11,"target",E,R[166],3,[[["self"]],["str"]]],[11,R[161],E,"The module path of the message.",3,[[["self"]],[["str"],[R[20],["str"]]]]],[11,R[162],E,R[158],3,[[["self"]],[[R[20],["str"]],["str"]]]],[11,"file",E,"The source file containing the message.",3,[[["self"]],[["str"],[R[20],["str"]]]]],[11,R[163],E,R[158],3,[[["self"]],[[R[20],["str"]],["str"]]]],[11,"line",E,"The line containing the message.",3,[[["self"]],[[R[20],["u32"]],["u32"]]]],[11,"new",E,"Construct new `RecordBuilder`.",4,[[],[R[159]]]],[11,"args",E,"Set `args`.",4,[[["self"],[R[160]]],[R[159]]]],[11,R[157],E,"Set `metadata`. Construct a `Metadata` object with…",4,[[["self"],[R[157]]],[R[159]]]],[11,"level",E,"Set `Metadata::level`.",4,[[["self"],["level"]],[R[159]]]],[11,"target",E,"Set `Metadata::target`",4,[[["self"],["str"]],[R[159]]]],[11,R[161],E,"Set `module_path`",4,[[["self"],[R[20],["str"]],["str"]],[R[159]]]],[11,R[162],E,"Set `module_path` to a `'static` string",4,[[["self"],[R[20],["str"]],["str"]],[R[159]]]],[11,"file",E,"Set `file`",4,[[["self"],[R[20],["str"]],["str"]],[R[159]]]],[11,R[163],E,"Set `file` to a `'static` string.",4,[[["self"],[R[20],["str"]],["str"]],[R[159]]]],[11,"line",E,"Set `line`",4,[[["self"],[R[20],["u32"]],["u32"]],[R[159]]]],[11,"build",E,"Invoke the builder and return a `Record`",4,[[["self"]],["record"]]],[11,"builder",E,R[164],5,[[],[R[167]]]],[11,"level",E,R[165],5,[[["self"]],["level"]]],[11,"target",E,R[166],5,[[["self"]],["str"]]],[11,"new",E,"Construct a new `MetadataBuilder`.",6,[[],[R[167]]]],[11,"level",E,"Setter for `level`.",6,[[["self"],["level"]],[R[167]]]],[11,"target",E,"Setter for `target`.",6,[[["self"],["str"]],[R[167]]]],[11,"build",E,"Returns a `Metadata` object.",6,[[["self"]],[R[157]]]],[14,"log",E,"The standard logging macro.",N,N],[14,"error",E,"Logs a message at the error level.",N,N],[14,"warn",E,"Logs a message at the warn level.",N,N],[14,"info",E,"Logs a message at the info level.",N,N],[14,"debug",E,"Logs a message at the debug level.",N,N],[14,"trace",E,"Logs a message at the trace level.",N,N],[14,"log_enabled",E,"Determines if a message logged at the specified level in…",N,N],[11,R[79],E,E,3,[[["self"]],[T]]],[11,R[80],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[5],E,E,3,[[[U]],[R[4]]]],[11,R[6],E,E,3,[[],[R[4]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[R[81]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[5],E,E,4,[[[U]],[R[4]]]],[11,R[6],E,E,4,[[],[R[4]]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[R[81]]]],[11,R[79],E,E,5,[[["self"]],[T]]],[11,R[80],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[5],E,E,5,[[[U]],[R[4]]]],[11,R[6],E,E,5,[[],[R[4]]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[R[81]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[5],E,E,6,[[[U]],[R[4]]]],[11,R[6],E,E,6,[[],[R[4]]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[R[81]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[82],E,E,7,[[["self"]],[R[83]]]],[11,R[5],E,E,7,[[[U]],[R[4]]]],[11,R[6],E,E,7,[[],[R[4]]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[R[81]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[82],E,E,8,[[["self"]],[R[83]]]],[11,R[5],E,E,8,[[[U]],[R[4]]]],[11,R[6],E,E,8,[[],[R[4]]]],[11,R[8],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[R[81]]]],[11,R[79],E,E,0,[[["self"]],[T]]],[11,R[80],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[82],E,E,0,[[["self"]],[R[83]]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[81]]]],[11,R[79],E,E,1,[[["self"]],[T]]],[11,R[80],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[82],E,E,1,[[["self"]],[R[83]]]],[11,R[5],E,E,1,[[[U]],[R[4]]]],[11,R[6],E,E,1,[[],[R[4]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[R[81]]]],[11,"clone",E,E,0,[[["self"]],["level"]]],[11,"clone",E,E,1,[[["self"]],[R[155]]]],[11,"clone",E,E,3,[[["self"]],["record"]]],[11,"clone",E,E,5,[[["self"]],[R[157]]]],[11,R[86],E,E,0,[[["self"],["level"]],[[R[19]],[R[20],[R[19]]]]]],[11,"lt",E,E,0,[[["self"],["level"]],["bool"]]],[11,"le",E,E,0,[[["self"],["level"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["level"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["level"]],["bool"]]],[11,R[86],E,E,0,[[["self"],[R[155]]],[[R[19]],[R[20],[R[19]]]]]],[11,"lt",E,E,0,[[["self"],[R[155]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[155]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[155]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[155]]],["bool"]]],[11,R[86],E,E,1,[[["self"],[R[155]]],[[R[19]],[R[20],[R[19]]]]]],[11,"lt",E,E,1,[[["self"],[R[155]]],["bool"]]],[11,"le",E,E,1,[[["self"],[R[155]]],["bool"]]],[11,"gt",E,E,1,[[["self"],[R[155]]],["bool"]]],[11,"ge",E,E,1,[[["self"],[R[155]]],["bool"]]],[11,R[86],E,E,1,[[["self"],["level"]],[[R[19]],[R[20],[R[19]]]]]],[11,"lt",E,E,1,[[["self"],["level"]],["bool"]]],[11,"le",E,E,1,[[["self"],["level"]],["bool"]]],[11,"gt",E,E,1,[[["self"],["level"]],["bool"]]],[11,"ge",E,E,1,[[["self"],["level"]],["bool"]]],[11,R[86],E,E,5,[[["self"],[R[157]]],[[R[20],[R[19]]],[R[19]]]]],[11,"lt",E,E,5,[[["self"],[R[157]]],["bool"]]],[11,"le",E,E,5,[[["self"],[R[157]]],["bool"]]],[11,"gt",E,E,5,[[["self"],[R[157]]],["bool"]]],[11,"ge",E,E,5,[[["self"],[R[157]]],["bool"]]],[11,R[86],E,E,6,[[["self"],[R[167]]],[[R[20],[R[19]]],[R[19]]]]],[11,"lt",E,E,6,[[["self"],[R[167]]],["bool"]]],[11,"le",E,E,6,[[["self"],[R[167]]],["bool"]]],[11,"gt",E,E,6,[[["self"],[R[167]]],["bool"]]],[11,"ge",E,E,6,[[["self"],[R[167]]],["bool"]]],[11,"eq",E,E,0,[[["self"],["level"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[155]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[155]]],["bool"]]],[11,"eq",E,E,1,[[["self"],["level"]],["bool"]]],[11,"eq",E,E,5,[[["self"],[R[157]]],["bool"]]],[11,"ne",E,E,5,[[["self"],[R[157]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[167]]],["bool"]]],[11,"ne",E,E,6,[[["self"],[R[167]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[168]]],["bool"]]],[11,"ne",E,E,8,[[["self"],[R[168]]],["bool"]]],[11,"cmp",E,E,0,[[["self"],["level"]],[R[19]]]],[11,"cmp",E,E,1,[[["self"],[R[155]]],[R[19]]]],[11,"cmp",E,E,5,[[["self"],[R[157]]],[R[19]]]],[11,"cmp",E,E,6,[[["self"],[R[167]]],[R[19]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"hash",E,E,6,[[["self"],["__h"]]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,1,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,3,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,4,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,5,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,6,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,7,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,8,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,1,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,7,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,8,[[["self"],[R[11]]],[R[4]]]],[11,R[455],E,E,0,[[["str"]],[[R[4],["level"]],["level"]]]],[11,R[455],E,E,1,[[["str"]],[[R[4],[R[155]]],[R[155]]]]],[11,R[169],E,E,7,[[["self"]],["str"]]],[11,R[169],E,E,8,[[["self"]],["str"]]]],"p":[[4,"Level"],[4,R[170]],[8,"Log"],[3,"Record"],[3,R[171]],[3,"Metadata"],[3,R[172]],[3,R[173]],[3,R[174]]]};
searchIndex["matrixmultiply"]={"doc":"General matrix multiplication for f32, f64 matrices.…","i":[[5,"sgemm","matrixmultiply","General matrix multiplication (f32)",N,[[["f32"],["usize"],["isize"]]]],[5,"dgemm",E,"General matrix multiplication (f64)",N,[[["usize"],["isize"],["f64"]]]]],"p":[]};
searchIndex["memoffset"]={"doc":"A crate used for calculating offsets of struct members and…","i":[[14,"offset_of","memoffset","Calculates the offset of the specified field from the…",N,N],[14,"span_of",E,"Produces a range instance representing the sub-slice…",N,N]],"p":[]};
searchIndex["ndarray"]={"doc":"The `ndarray` crate provides an n-dimensional container…","i":[[3,"Dim",R[697],"Dimension description.",N,N],[3,"Axis",E,"An axis index.",N,N],[12,"0",E,E,0,N],[3,R[772],E,"Description of the axis, its length and its stride.",N,N],[12,"0",E,E,1,N],[12,"1",E,E,1,N],[12,"2",E,E,1,N],[3,R[789],E,"Dynamic dimension or index type.",N,N],[3,R[775],E,"An error related to array shape or layout.",N,N],[3,"Slice",E,"A slice (range with step size).",N,N],[12,"start",E,E,2,N],[12,"end",E,E,2,N],[12,"step",E,E,2,N],[3,R[779],E,"Represents all of the necessary information to perform a…",N,N],[3,"Zip",E,"Lock step function application across several arrays or…",N,N],[3,R[780],E,"An n-dimensional array.",N,N],[3,R[790],E,"Array's representation.",N,N],[3,R[791],E,"ArcArray's representation.",N,N],[3,R[792],E,"Array pointer’s representation.",N,N],[3,"ViewRepr",E,"Array view’s representation.",N,N],[3,"Shape",E,"A contiguous array shape of n dimensions.",N,N],[3,R[793],E,"An array shape of n dimensions in c-order, f-order or…",N,N],[4,R[773],E,"Error code for an error related to array shape or layout.",N,N],[13,"IncompatibleShape",E,"incompatible shape",3,N],[13,"IncompatibleLayout",E,"incompatible memory layout",3,N],[13,"RangeLimited",E,"the shape does not fit inside type limits",3,N],[13,"OutOfBounds",E,"out of bounds indexing",3,N],[13,"Unsupported",E,"aliasing array elements",3,N],[13,"Overflow",E,"overflow when computing offset, length, etc.",3,N],[4,R[774],E,"A slice (range with step) or an index.",N,N],[13,"Slice",E,"A range with step size. `end` is an exclusive index.…",4,N],[12,"start","ndarray::SliceOrIndex",E,4,N],[12,"end",E,E,4,N],[12,"step",E,E,4,N],[13,"Index",R[697],"A single index.",4,N],[4,R[127],E,"Value controlling the execution of `.fold_while` on `Zip`.",N,N],[13,"Continue",E,R[646],5,N],[13,"Done",E,R[647],5,N],[4,"CowRepr",E,"CowArray's representation.",N,N],[13,"View",E,"Borrowed data.",6,N],[13,"Owned",E,"Owned data.",6,N],[5,"Dim",E,"Create a new dimension value.",N,[[[T]]]],[5,"indices",E,"Create an iterable of the array shape `shape`.",N,[[["e"]],["indices"]]],[5,"indices_of",E,"Return an iterable of the indices of the passed-in array.",N,[[[R[672]]],["indices"]]],[5,"stack",E,R[708],N,[[["axis"]],[["array"],[R[4],["array",R[648]]],[R[648]]]]],[5,"Ix0",E,"Create a zero-dimensional index",N,[[],["ix0"]]],[5,"Ix1",E,"Create a one-dimensional index",N,[[["ix"]],["ix1"]]],[5,"Ix2",E,"Create a two-dimensional index",N,[[["ix"]],["ix2"]]],[5,"Ix3",E,"Create a three-dimensional index",N,[[["ix"]],["ix3"]]],[5,"Ix4",E,"Create a four-dimensional index",N,[[["ix"]],["ix4"]]],[5,"Ix5",E,"Create a five-dimensional index",N,[[["ix"]],["ix5"]]],[5,"Ix6",E,"Create a six-dimensional index",N,[[["ix"]],["ix6"]]],[5,"IxDyn",E,"Create a dynamic-dimensional index",N,[[],["ixdyn"]]],[5,"arr0",E,"Create a zero-dimensional array with the element `x`.",N,[[["a"]],["array0"]]],[5,"arr1",E,R[649],N,[[],[["array1"],["clone"]]]],[5,"rcarr1",E,R[649],N,[[],[["clone"],["ix1"],[R[652],["ix1"]]]]],[5,"aview0",E,"Create a zero-dimensional array view borrowing `x`.",N,[[["a"]],["arrayview0"]]],[5,"aview1",E,"Create a one-dimensional array view with elements…",N,[[],[R[686]]]],[5,"aview2",E,"Create a two-dimensional array view with elements…",N,[[],["arrayview2"]]],[5,"aview_mut1",E,"Create a one-dimensional read-write array view with…",N,[[],[R[687]]]],[5,"aview_mut2",E,"Create a two-dimensional read-write array view with…",N,[[],["arrayviewmut2"]]],[5,"arr2",E,R[650],N,[[],[["array2"],["clone"]]]],[5,"rcarr2",E,R[650],N,[[],[["clone"],["ix2"],[R[652],["ix2"]]]]],[5,"arr3",E,R[651],N,[[],[["array3"],["clone"]]]],[5,"rcarr3",E,R[651],N,[[],[[R[652],["ix3"]],["clone"],["ix3"]]]],[0,"iter",E,"Producers, iterables and iterators.",N,N],[3,"Axes",R[658],"An iterator over the length and stride of each axis of an…",N,N],[3,"Indices",E,"Indices producer and iterable.",N,N],[3,R[794],E,"An iterator over the indexes of an array shape.",N,N],[3,R[777],E,R[653],N,N],[3,R[778],E,R[653],N,N],[3,"AxisIter",E,R[654],N,N],[3,R[776],E,R[654],N,N],[3,R[795],E,R[656],N,N],[3,R[796],E,R[655],N,N],[3,R[797],E,R[655],N,N],[3,R[798],E,R[656],N,N],[3,R[799],E,"An iterator over the indexes and elements of an array.",N,N],[3,R[800],E,"An iterator over the indexes and elements of an array…",N,N],[3,"Iter",E,"An iterator over the elements of an array.",N,N],[3,R[549],E,"An iterator over the elements of an array (mutable).",N,N],[3,"Lanes",E,"See `.lanes()` for more information.",N,N],[3,R[801],E,"An iterator that traverses over all axes but one, and…",N,N],[3,R[802],E,"An iterator that traverses over all dimensions but the…",N,N],[3,"LanesMut",E,"See `.lanes_mut()` for more information.",N,N],[3,"Windows",E,"Window producer and iterable",N,N],[11,"kind",R[697],"Return the `ErrorKind` of this error.",7,[[["self"]],[R[657]]]],[11,"from_kind",E,"Create a new `ShapeError`",7,[[[R[657]]],["self"]]],[11,R[660],R[658],R[659],8,[[["usize"]]]],[11,R[660],E,R[659],9,[[["usize"]]]],[11,R[660],E,R[661],10,[[["usize"]]]],[11,R[660],E,R[661],11,[[["usize"]]]],[11,"size",R[697],"Return the size of the shape in number of elements",12,[[["self"]],["usize"]]],[11,"new",E,"Create a new `Slice` with the given extents.",2,[[["isize"],[R[20],["isize"]]],["slice"]]],[11,"step_by",E,"Create a new `Slice` with the given step size (multiplied…",2,[[["isize"]],["self"]]],[11,"is_slice",E,"Returns `true` if `self` is a `Slice` value.",4,[[["self"]],["bool"]]],[11,"is_index",E,"Returns `true` if `self` is an `Index` value.",4,[[["self"]],["bool"]]],[11,"step_by",E,"Returns a new `SliceOrIndex` with the given step size…",4,[[["isize"]],["self"]]],[11,"new",E,"Returns a new `SliceInfo` instance.",13,[[[T]],[[R[648]],[R[4],[R[662],R[648]]],[R[662]]]]],[11,"out_ndim",E,"Returns the number of dimensions after calling `.slice()`…",13,[[["self"]],["usize"]]],[11,"from",E,"Create a new `Zip` from the input array or other producer…",14,[[["ip"]],["self"]]],[11,"indexed",E,"Create a new `Zip` with an index producer and the producer…",14,[[["ip"]],["self"]]],[11,"size",E,"Return a the number of element tuples in the Zip",14,[[["self"]],["usize"]]],[11,"apply",E,R[664],14,[[["f"]]]],[11,"fold",E,R[665],14,[[["acc"],["f"]],["acc"]]],[11,R[663],E,R[666],14,[[["acc"],["f"]],[R[97]]]],[11,"all",E,R[667],14,[[["f"]],["bool"]]],[11,"and",E,R[668],14,[[["p"]],["zip"]]],[11,R[669],E,R[670],14,[[["p"]],["zip"]]],[11,"split",E,R[671],14,[[]]],[11,"apply",E,R[664],14,[[["f"]]]],[11,"fold",E,R[665],14,[[["acc"],["f"]],["acc"]]],[11,R[663],E,R[666],14,[[["acc"],["f"]],[R[97]]]],[11,"all",E,R[667],14,[[["f"]],["bool"]]],[11,"and",E,R[668],14,[[["p"]],["zip"]]],[11,R[669],E,R[670],14,[[["p"]],["zip"]]],[11,"split",E,R[671],14,[[]]],[11,"apply",E,R[664],14,[[["f"]]]],[11,"fold",E,R[665],14,[[["acc"],["f"]],["acc"]]],[11,R[663],E,R[666],14,[[["acc"],["f"]],[R[97]]]],[11,"all",E,R[667],14,[[["f"]],["bool"]]],[11,"and",E,R[668],14,[[["p"]],["zip"]]],[11,R[669],E,R[670],14,[[["p"]],["zip"]]],[11,"split",E,R[671],14,[[]]],[11,"apply",E,R[664],14,[[["f"]]]],[11,"fold",E,R[665],14,[[["acc"],["f"]],["acc"]]],[11,R[663],E,R[666],14,[[["acc"],["f"]],[R[97]]]],[11,"all",E,R[667],14,[[["f"]],["bool"]]],[11,"and",E,R[668],14,[[["p"]],["zip"]]],[11,R[669],E,R[670],14,[[["p"]],["zip"]]],[11,"split",E,R[671],14,[[]]],[11,"apply",E,R[664],14,[[["f"]]]],[11,"fold",E,R[665],14,[[["acc"],["f"]],["acc"]]],[11,R[663],E,R[666],14,[[["acc"],["f"]],[R[97]]]],[11,"all",E,R[667],14,[[["f"]],["bool"]]],[11,"and",E,R[668],14,[[["p"]],["zip"]]],[11,R[669],E,R[670],14,[[["p"]],["zip"]]],[11,"split",E,R[671],14,[[]]],[11,"apply",E,R[664],14,[[["f"]]]],[11,"fold",E,R[665],14,[[["acc"],["f"]],["acc"]]],[11,R[663],E,R[666],14,[[["acc"],["f"]],[R[97]]]],[11,"all",E,R[667],14,[[["f"]],["bool"]]],[11,"split",E,R[671],14,[[]]],[11,R[21],E,"Return the inner value",5,[[],[T]]],[11,"is_done",E,"Return true if it is `Done`, false if `Continue`",5,[[["self"]],["bool"]]],[11,"axis",E,"Return axis",1,[[],["axis"]]],[11,"len",E,"Return length",1,[[],["ix"]]],[11,"stride",E,"Return stride",1,[[],["ixs"]]],[11,"index",E,"Return the index of the axis.",0,[[],["usize"]]],[0,"prelude",E,"ndarray prelude.",N,N],[11,"from_vec",E,R[741],15,[[["vec"]],["self"]]],[11,"linspace",E,"Create a one-dimensional array with `n` evenly spaced…",15,[[["a"],["usize"]],["self"]]],[11,"range",E,"Create a one-dimensional array with elements from `start`…",15,[[["a"]],["self"]]],[11,"logspace",E,"Create a one-dimensional array with `n` logarithmically…",15,[[["a"],["usize"]],["self"]]],[11,"geomspace",E,"Create a one-dimensional array with `n` geometrically…",15,[[["a"],["usize"]],[R[20]]]],[11,"eye",E,"Create an identity matrix of size `n` (square 2D array).",15,[[["ix"]],["self"]]],[11,"from_diag",E,"Create a 2D matrix from its diagonal",15,[[[R[672]]],["self"]]],[11,"from_elem",E,"Create an array with copies of `elem`, shape `shape`.",15,[[["a"],["sh"]],["self"]]],[11,"zeros",E,"Create an array with zeros, shape `shape`.",15,[[["sh"]],["self"]]],[11,"ones",E,"Create an array with ones, shape `shape`.",15,[[["sh"]],["self"]]],[11,R[456],E,"Create an array with default values, shape `shape`",15,[[["sh"]],["self"]]],[11,"from_shape_fn",E,"Create an array with values created by the function `f`.",15,[[["f"],["sh"]],["self"]]],[11,"from_shape_vec",E,"Create an array with the given shape from a vector. (No…",15,[[["vec"],["sh"]],[[R[4],[R[648]]],[R[648]]]]],[11,"from_shape_vec_unchecked",E,"Creates an array from a vector and interpret it according…",15,[[["vec"],["sh"]],["self"]]],[11,"uninitialized",E,"Create an array with uninitalized elements, shape `shape`.",15,[[["sh"]],["self"]]],[11,"len",E,"Return the total number of elements in the array.",15,[[["self"]],["usize"]]],[11,"len_of",E,"Return the length of `axis`.",15,[[["self"],["axis"]],["usize"]]],[11,R[488],E,"Return whether the array has any elements",15,[[["self"]],["bool"]]],[11,"ndim",E,"Return the number of dimensions (axes) in the array",15,[[["self"]],["usize"]]],[11,"dim",E,"Return the shape of the array in its “pattern” form, an…",15,[[["self"]]]],[11,"raw_dim",E,"Return the shape of the array as it stored in the array.",15,[[["self"]],["d"]]],[11,"shape",E,"Return the shape of the array as a slice.",15,[[["self"]]]],[11,"strides",E,"Return the strides of the array as a slice.",15,[[["self"]]]],[11,"stride_of",E,"Return the stride of `axis`.",15,[[["self"],["axis"]],["isize"]]],[11,"view",E,"Return a read-only view of the array",15,[[["self"]],[R[674]]]],[11,"view_mut",E,"Return a read-write view of the array",15,[[["self"]],[R[675]]]],[11,R[79],E,"Return an uniquely owned copy of the array.",15,[[["self"]],["array"]]],[11,"to_shared",E,"Return a shared ownership (copy on write) array.",15,[[["self"]],[R[652]]]],[11,R[470],E,"Turn the array into a uniquely owned array, cloning the…",15,[[],["array"]]],[11,R[673],E,"Turn the array into a shared ownership (copy on write)…",15,[[],[R[652]]]],[11,"first",E,"Returns a reference to the first element of the array, or…",15,[[["self"]],[["a"],[R[20]]]]],[11,"first_mut",E,"Returns a mutable reference to the first element of the…",15,[[["self"]],[["a"],[R[20]]]]],[11,"iter",E,"Return an iterator of references to the elements of the…",15,[[["self"]],["iter"]]],[11,"iter_mut",E,"Return an iterator of mutable references to the elements…",15,[[["self"]],["itermut"]]],[11,"indexed_iter",E,"Return an iterator of indexes and references to the…",15,[[["self"]],[R[738]]]],[11,"indexed_iter_mut",E,"Return an iterator of indexes and mutable references to…",15,[[["self"]],["indexeditermut"]]],[11,"slice",E,"Return a sliced view of the array.",15,[[["self"],[R[662]]],[R[674]]]],[11,R[720],E,"Return a sliced read-write view of the array.",15,[[["self"],[R[662]]],[R[675]]]],[11,"slice_move",E,"Slice the array, possibly changing the number of dimensions.",15,[[[R[662]]],[R[672]]]],[11,"slice_collapse",E,R[676],15,[[["self"]]]],[11,"slice_inplace",E,R[676],15,[[["self"]]]],[11,"slice_axis",E,"Return a view of the array, sliced along the specified axis.",15,[[["self"],["axis"],["slice"]],[R[674]]]],[11,"slice_axis_mut",E,"Return a mutable view of the array, sliced along the…",15,[[["self"],["axis"],["slice"]],[R[675]]]],[11,"slice_axis_inplace",E,"Slice the array in place along the specified axis.",15,[[["self"],["axis"],["slice"]]]],[11,"get",E,"Return a reference to the element at `index`, or return…",15,[[["self"],["i"]],[["a"],[R[20]]]]],[11,"get_mut",E,"Return a mutable reference to the element at `index`, or…",15,[[["self"],["i"]],[["a"],[R[20]]]]],[11,"uget",E,R[677],15,[[["self"],["i"]],["a"]]],[11,"uget_mut",E,R[677],15,[[["self"],["i"]],["a"]]],[11,"swap",E,"Swap elements at indices `index1` and `index2`.",15,[[["self"],["i"]]]],[11,"uswap",E,"Swap elements unchecked at indices `index1` and `index2`.",15,[[["self"],["i"]]]],[11,"index_axis",E,"Returns a view restricted to `index` along the axis, with…",15,[[["self"],["axis"],["usize"]],[R[674]]]],[11,"index_axis_mut",E,"Returns a mutable view restricted to `index` along the…",15,[[["self"],["axis"],["usize"]],[R[675]]]],[11,"index_axis_move",E,R[695],15,[[["axis"],["usize"]],[R[672]]]],[11,"collapse_axis",E,"Selects `index` along the axis, collapsing the axis into…",15,[[["self"],["axis"],["usize"]]]],[11,"subview",E,"Along `axis`, select the subview `index` and return a view…",15,[[["self"],["ix"],["axis"]],[R[674]]]],[11,"subview_mut",E,"Along `axis`, select the subview `index` and return a…",15,[[["self"],["ix"],["axis"]],[R[675]]]],[11,"subview_inplace",E,"Collapse dimension `axis` into length one, and select the…",15,[[["self"],["ix"],["axis"]]]],[11,"into_subview",E,"Along `axis`, select the subview `index` and return `self`…",15,[[["ix"],["axis"]],[R[672]]]],[11,"select",E,"Along `axis`, select arbitrary subviews corresponding to…",15,[[["self"],["axis"]],["array"]]],[11,"genrows",E,R[678],15,[[["self"]],["lanes"]]],[11,"genrows_mut",E,R[678],15,[[["self"]],[R[680]]]],[11,"gencolumns",E,R[678],15,[[["self"]],["lanes"]]],[11,"gencolumns_mut",E,R[678],15,[[["self"]],[R[680]]]],[11,"lanes",E,R[679],15,[[["self"],["axis"]],["lanes"]]],[11,"lanes_mut",E,R[679],15,[[["self"],["axis"]],[R[680]]]],[11,"outer_iter",E,R[681],15,[[["self"]],["axisiter"]]],[11,"outer_iter_mut",E,R[681],15,[[["self"]],[R[683]]]],[11,"axis_iter",E,R[682],15,[[["self"],["axis"]],["axisiter"]]],[11,"axis_iter_mut",E,R[682],15,[[["self"],["axis"]],[R[683]]]],[11,"axis_chunks_iter",E,R[684],15,[[["self"],["axis"],["usize"]],["axischunksiter"]]],[11,"axis_chunks_iter_mut",E,R[684],15,[[["self"],["axis"],["usize"]],["axischunksitermut"]]],[11,"exact_chunks",E,R[685],15,[[["self"],["e"]],["exactchunks"]]],[11,"exact_chunks_mut",E,R[685],15,[[["self"],["e"]],["exactchunksmut"]]],[11,"windows",E,"Return a window producer and iterable.",15,[[["self"],["e"]],["windows"]]],[11,"diag",E,"Return an view of the diagonal elements of the array.",15,[[["self"]],[R[686]]]],[11,"diag_mut",E,"Return a read-write view over the diagonal elements of the…",15,[[["self"]],[R[687]]]],[11,"into_diag",E,"Return the diagonal as a one-dimensional array.",15,[[],[["ix1"],[R[672],["ix1"]]]]],[11,"is_standard_layout",E,"Return `true` if the array data is laid out in contiguous…",15,[[["self"]],["bool"]]],[11,"as_standard_layout",E,"Return a standard-layout array containing the data,…",15,[[["self"]],[R[747]]]],[11,"as_ptr",E,"Return a pointer to the first element in the array.",15,[[["self"]]]],[11,"as_mut_ptr",E,"Return a mutable pointer to the first element in the array.",15,[[["self"]]]],[11,"raw_view",E,"Return a raw view of the array.",15,[[["self"]],["rawarrayview"]]],[11,"raw_view_mut",E,"Return a raw mutable view of the array.",15,[[["self"]],["rawarrayviewmut"]]],[11,"as_slice",E,R[688],15,[[["self"]],[R[20]]]],[11,"as_slice_mut",E,R[688],15,[[["self"]],[R[20]]]],[11,"as_slice_memory_order",E,R[689],15,[[["self"]],[R[20]]]],[11,"as_slice_memory_order_mut",E,R[689],15,[[["self"]],[R[20]]]],[11,R[702],E,"Transform the array into `shape`; any shape with the same…",15,[[["e"]],[[R[672]],[R[648]],[R[4],[R[672],R[648]]]]]],[11,"reshape",E,"Note: Reshape is for `ArcArray` only. Use `.into_shape()`…",15,[[["self"],["e"]],[R[672]]]],[11,R[763],E,"Convert any array or array view to a dynamic dimensional…",15,[[],[["ixdyn"],[R[672],["ixdyn"]]]]],[11,"into_dimensionality",E,"Convert an array or array view to another with the same…",15,[[],[[R[672]],[R[648]],[R[4],[R[672],R[648]]]]]],[11,"broadcast",E,"Act like a larger size and/or shape array by broadcasting…",15,[[["self"],["e"]],[[R[674]],[R[20],[R[674]]]]]],[11,"swap_axes",E,"Swap axes `ax` and `bx`.",15,[[["self"],["usize"]]]],[11,"permuted_axes",E,"Permute the axes.",15,[[[T]],[R[672]]]],[11,"reversed_axes",E,"Transpose the array by reversing axes.",15,[[],[R[672]]]],[11,T,E,"Return a transposed view of the array.",15,[[["self"]],[R[674]]]],[11,"axes",E,"Return an iterator over the length and stride of each axis.",15,[[["self"]],["axes"]]],[11,R[725],E,"Return the axis with the greatest stride (by absolute…",15,[[["self"]],["axis"]]],[11,"invert_axis",E,"Reverse the stride of `axis`.",15,[[["self"],["axis"]]]],[11,"merge_axes",E,"If possible, merge in the axis `take` to `into`.",15,[[["self"],["axis"]],["bool"]]],[11,R[722],E,"Insert new array axis at `axis` and return the result.",15,[[["axis"]],[R[672]]]],[11,R[700],E,"Remove array axis `axis` and return the result.",15,[[["axis"]],[R[672]]]],[11,"assign",E,"Perform an elementwise assigment to `self` from `rhs`.",15,[[["self"],[R[672]]]]],[11,"fill",E,"Perform an elementwise assigment to `self` from element `x`.",15,[[["self"],["a"]]]],[11,"zip_mut_with",E,"Traverse two arrays in unspecified order, in lock step,…",15,[[["self"],[R[672]],["f"]]]],[11,"fold",E,"Traverse the array elements and apply a fold, returning…",15,[[["self"],["b"],["f"]],["b"]]],[11,"map",E,"Call `f` by reference on each element and create a new…",15,[[["self"],["f"]],["array"]]],[11,"map_mut",E,"Call `f` on a mutable reference of each element and create…",15,[[["self"],["f"]],["array"]]],[11,"mapv",E,"Call `f` by value on each element and create a new array…",15,[[["self"],["f"]],["array"]]],[11,"mapv_into",E,"Call `f` by value on each element, update the array with…",15,[[["f"]],["self"]]],[11,"map_inplace",E,"Modify the array in place by calling `f` by mutable…",15,[[["self"],["f"]]]],[11,"mapv_inplace",E,"Modify the array in place by calling `f` by value on each…",15,[[["self"],["f"]]]],[11,"visit",E,"Visit each element in the array by calling `f` by…",15,[[["self"],["f"]]]],[11,"fold_axis",E,"Fold along an axis.",15,[[["self"],["f"],["axis"],["b"]],["array"]]],[11,"map_axis",E,R[690],15,[[["self"],["axis"],["f"]],["array"]]],[11,"map_axis_mut",E,R[690],15,[[["f"],["self"],["axis"]],["array"]]],[11,"accumulate_axis_inplace",E,"Iterates over pairs of consecutive elements along the axis.",15,[[["self"],["axis"],["f"]]]],[0,"parallel",E,"Parallelization features for ndarray.",N,N],[3,"Parallel",R[709],"Parallel iterator wrapper.",N,N],[0,"prelude",E,"Into- traits for creating parallelized iterators and/or…",N,N],[11,"par_map_inplace",R[697],"Parallel version of `map_inplace`.",15,[[["self"],["f"]]]],[11,"par_mapv_inplace",E,"Parallel version of `mapv_inplace`.",15,[[["self"],["f"]]]],[11,R[691],E,R[692],14,[[["f"]]]],[11,R[691],E,R[692],14,[[["f"]]]],[11,R[691],E,R[692],14,[[["f"]]]],[11,R[691],E,R[692],14,[[["f"]]]],[11,R[691],E,R[692],14,[[["f"]]]],[11,R[691],E,R[692],14,[[["f"]]]],[11,"to_vec",E,"Return an vector with the elements of the one-dimensional…",15,[[["self"]],["vec"]]],[11,"row",E,"Return an array view of row `index`.",15,[[["self"],["ix"]],[R[686]]]],[11,"row_mut",E,"Return a mutable array view of row `index`.",15,[[["self"],["ix"]],[R[687]]]],[11,"nrows",E,R[693],15,[[["self"]],["usize"]]],[11,"rows",E,R[693],15,[[["self"]],["usize"]]],[11,"column",E,"Return an array view of column `index`.",15,[[["self"],["ix"]],[R[686]]]],[11,"column_mut",E,"Return a mutable array view of column `index`.",15,[[["self"],["ix"]],[R[687]]]],[11,"ncols",E,R[694],15,[[["self"]],["usize"]]],[11,"cols",E,R[694],15,[[["self"]],["usize"]]],[11,"is_square",E,"Return true if the array is square, false otherwise.",15,[[["self"]],["bool"]]],[11,"insert_axis_inplace",E,"Insert new array axis of length 1 at `axis`, modifying the…",15,[[["self"],["axis"]]]],[11,"index_axis_inplace",E,R[695],15,[[["self"],["axis"],["usize"]]]],[11,"sum",E,R[696],15,[[["self"]],["a"]]],[11,"mean",E,"Returns the [arithmetic mean] x̅ of all elements in the…",15,[[["self"]],[R[20]]]],[11,"scalar_sum",E,R[696],15,[[["self"]],["a"]]],[11,R[531],E,"Return the product of all elements in the array.",15,[[["self"]],["a"]]],[11,"sum_axis",E,"Return sum along `axis`.",15,[[["self"],["axis"]],["array"]]],[11,"mean_axis",E,"Return mean along `axis`.",15,[[["self"],["axis"]],[["array"],[R[20],["array"]]]]],[11,"var_axis",E,"Return variance along `axis`.",15,[[["self"],["a"],["axis"]],["array"]]],[11,"std_axis",E,"Return standard deviation along `axis`.",15,[[["self"],["a"],["axis"]],["array"]]],[11,"all_close",E,"Return `true` if the arrays' elementwise differences are…",15,[[["self"],[R[672]],["a"]],["bool"]]],[0,"linalg",E,"Linear algebra.",N,N],[5,"general_mat_mul",R[698],"General matrix-matrix multiplication.",N,[[["a"],[R[672]],[R[672]],[R[672]]]]],[5,"general_mat_vec_mul",E,"General matrix-vector multiplication.",N,[[["a"],[R[672]],[R[672]],[R[672]]]]],[11,"dot",R[697],"Perform dot product or matrix multiplication of arrays…",15,[[["self"],["rhs"]]]],[11,"dot",E,"Perform matrix multiplication of rectangular arrays `self`…",15,[[["self"],["rhs"]]]],[11,"scaled_add",E,"Perform the operation `self += alpha * rhs` efficiently,…",15,[[["self"],["a"],[R[672]]]]],[8,"Dot",R[698],"Matrix Multiplication",N,N],[16,"Output",E,"The result of the operation.",16,N],[10,"dot",E,E,16,[[["self"],["rhs"]]]],[6,"Ix0",R[697],"zero-dimensionial",N,N],[6,"Ix1",E,"one-dimensional",N,N],[6,"Ix2",E,"two-dimensional",N,N],[6,"Ix3",E,"three-dimensional",N,N],[6,"Ix4",E,"four-dimensional",N,N],[6,"Ix5",E,"five-dimensional",N,N],[6,"Ix6",E,"six-dimensional",N,N],[6,"IxDyn",E,"dynamic-dimensional",N,N],[6,"Array0",E,"zero-dimensional array",N,N],[6,"Array1",E,"one-dimensional array",N,N],[6,"Array2",E,"two-dimensional array",N,N],[6,"Array3",E,"three-dimensional array",N,N],[6,"Array4",E,"four-dimensional array",N,N],[6,"Array5",E,"five-dimensional array",N,N],[6,"Array6",E,"six-dimensional array",N,N],[6,"ArrayD",E,"dynamic-dimensional array",N,N],[6,"ArrayView0",E,"zero-dimensional array view",N,N],[6,"ArrayView1",E,"one-dimensional array view",N,N],[6,"ArrayView2",E,"two-dimensional array view",N,N],[6,"ArrayView3",E,"three-dimensional array view",N,N],[6,"ArrayView4",E,"four-dimensional array view",N,N],[6,"ArrayView5",E,"five-dimensional array view",N,N],[6,"ArrayView6",E,"six-dimensional array view",N,N],[6,"ArrayViewD",E,"dynamic-dimensional array view",N,N],[6,"ArrayViewMut0",E,"zero-dimensional read-write array view",N,N],[6,"ArrayViewMut1",E,"one-dimensional read-write array view",N,N],[6,"ArrayViewMut2",E,"two-dimensional read-write array view",N,N],[6,"ArrayViewMut3",E,"three-dimensional read-write array view",N,N],[6,"ArrayViewMut4",E,"four-dimensional read-write array view",N,N],[6,"ArrayViewMut5",E,"five-dimensional read-write array view",N,N],[6,"ArrayViewMut6",E,"six-dimensional read-write array view",N,N],[6,"ArrayViewMutD",E,"dynamic-dimensional read-write array view",N,N],[6,"RcArray1",E,"one-dimensional shared ownership array",N,N],[6,"RcArray2",E,"two-dimensional shared ownership array",N,N],[6,"Ix",E,"Array index type",N,N],[6,"Ixs",E,"Array index type (signed)",N,N],[6,"RcArray",E,R[699],N,N],[6,"ArcArray",E,R[699],N,N],[6,"Array",E,"An array that owns its data uniquely.",N,N],[6,"CowArray",E,"An array with copy-on-write behavior.",N,N],[6,R[803],E,"A read-only array view.",N,N],[6,R[804],E,"A read-write array view.",N,N],[6,R[805],E,"A read-only array view without a lifetime.",N,N],[6,R[806],E,"A mutable array view without a lifetime.",N,N],[8,R[781],E,"Array shape and index trait.",N,N],[18,"NDIM",E,R[756],17,N],[16,"SliceArg",E,"`SliceArg` is the type which is used to specify slicing…",17,N],[16,"Pattern",E,"Pattern matching friendly form of the dimension value.",17,N],[16,"Smaller",E,"Next smaller dimension (if applicable)",17,N],[16,"Larger",E,"Next larger dimension",17,N],[10,"ndim",E,"Returns the number of dimensions (number of axes).",17,[[["self"]],["usize"]]],[10,R[721],E,"Convert the dimension into a pattern matching friendly…",17,[[]]],[11,"size",E,R[757],17,[[["self"]],["usize"]]],[11,R[723],E,R[758],17,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[759],E,R[760],17,[[["self"]],[["ix"],[R[686],["ix"]]]]],[11,R[761],E,R[762],17,[[["self"]],[["ix"],[R[687],["ix"]]]]],[10,"zeros",E,"Creates a dimension of all zeros with the specified ndim.",17,[[["usize"]],["self"]]],[11,R[763],E,R[764],17,[[],["ixdyn"]]],[10,R[704],E,R[705],17,[[["self"]],[R[706]]]],[8,R[782],E,"Argument conversion a dimension.",N,N],[16,"Dim",E,E,18,N],[10,R[719],E,E,18,[[]]],[8,R[783],E,"Array shape with a next smaller dimension.",N,N],[10,R[700],E,E,19,[[["self"],["axis"]]]],[8,"NdIndex",E,"Tuple or fixed size arrays that can be used to index an…",N,N],[8,"AsArray",E,"Argument conversion into an array view",N,N],[8,"LinalgScalar",E,"Elements that support linear algebra operations.",N,N],[8,"NdFloat",E,"Floating-point element types `f32` and `f64`.",N,N],[8,R[784],E,"Extra indexing methods for array views",N,N],[16,"Output",E,"The type of the reference to the element that is produced,…",20,N],[10,"index",E,R[701],20,[[["i"]]]],[10,"get",E,R[701],20,[[["i"]],[R[20]]]],[10,"uget",E,"Get a reference of a element through the view without…",20,[[["i"]]]],[8,R[785],E,"A trait for `Shape` and `D where D: Dimension` that allows…",N,N],[16,"Dim",E,E,21,N],[16,"Strides",E,E,21,N],[10,R[702],E,E,21,[[],["shape"]]],[10,"f",E,E,21,[[],["shape"]]],[10,"set_f",E,E,21,[[["bool"]],["shape"]]],[10,"strides",E,E,21,[[],[R[717]]]],[8,"Data",E,R[703],N,N],[8,"DataClone",E,R[703],N,N],[8,"DataMut",E,R[703],N,N],[8,"DataOwned",E,R[703],N,N],[8,"DataShared",E,R[703],N,N],[8,"RawData",E,R[703],N,N],[16,"Elem",E,"The array element type.",22,N],[10,R[704],E,R[705],22,[[["self"]],[R[706]]]],[8,"RawDataClone",E,R[703],N,N],[8,"RawDataMut",E,R[703],N,N],[8,R[786],E,"Fixed-size array used for array initialization",N,N],[16,"Elem",E,E,23,N],[10,"as_init_slice",E,E,23,[[["self"]]]],[10,"len",E,E,23,[[],["usize"]]],[8,R[787],E,"Argument conversion into a producer.",N,N],[16,"Item",E,R[707],24,N],[16,"Dim",E,"Dimension type of the producer",24,N],[16,"Output",E,E,24,N],[10,"into_producer",E,"Convert the value into an `NdProducer`.",24,[[]]],[8,R[788],E,"A producer of an n-dimensional set of elements; for…",N,N],[16,"Item",E,R[707],25,N],[16,"Dim",E,"Dimension type",25,N],[10,R[704],E,R[705],25,[[["self"]],[R[706]]]],[8,"ScalarOperand",E,"Elements that can be used as direct operands in arithmetic…",N,N],[11,"is_view",E,"Returns `true` iff the data is the `View` variant.",6,[[["self"]],["bool"]]],[11,"is_owned",E,"Returns `true` iff the data is the `Owned` variant.",6,[[["self"]],["bool"]]],[14,"array",E,"Create an `Array` with one, two or three dimensions.",N,N],[14,"s",E,"Slice argument constructor.",N,N],[14,"stack",E,R[708],N,N],[14,"azip",E,"Array zip macro: lock step function application across…",N,N],[14,"par_azip",E,"Parallelized array zip macro: lock step function…",N,N],[11,R[79],E,E,26,[[["self"]],[T]]],[11,R[80],E,E,26,[[["self"],[T]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[5],E,E,26,[[[U]],[R[4]]]],[11,R[6],E,E,26,[[],[R[4]]]],[11,R[8],E,E,26,[[["self"]],[T]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[9],E,E,26,[[["self"]],[R[81]]]],[11,R[79],E,E,0,[[["self"]],[T]]],[11,R[80],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[81]]]],[11,R[79],E,E,1,[[["self"]],[T]]],[11,R[80],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[5],E,E,1,[[[U]],[R[4]]]],[11,R[6],E,E,1,[[],[R[4]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[R[81]]]],[11,R[79],E,E,27,[[["self"]],[T]]],[11,R[80],E,E,27,[[["self"],[T]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[5],E,E,27,[[[U]],[R[4]]]],[11,R[6],E,E,27,[[],[R[4]]]],[11,R[8],E,E,27,[[["self"]],[T]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[["self"]],[R[81]]]],[11,R[79],E,E,7,[[["self"]],[T]]],[11,R[80],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[82],E,E,7,[[["self"]],[R[83]]]],[11,R[5],E,E,7,[[[U]],[R[4]]]],[11,R[6],E,E,7,[[],[R[4]]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[R[81]]]],[11,R[79],E,E,2,[[["self"]],[T]]],[11,R[80],E,E,2,[[["self"],[T]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[5],E,E,2,[[[U]],[R[4]]]],[11,R[6],E,E,2,[[],[R[4]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[R[81]]]],[11,R[79],E,E,13,[[["self"]],[T]]],[11,R[80],E,E,13,[[["self"],[T]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[5],E,E,13,[[[U]],[R[4]]]],[11,R[6],E,E,13,[[],[R[4]]]],[11,R[8],E,E,13,[[["self"]],[T]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[9],E,E,13,[[["self"]],[R[81]]]],[11,R[79],E,E,14,[[["self"]],[T]]],[11,R[80],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[5],E,E,14,[[[U]],[R[4]]]],[11,R[6],E,E,14,[[],[R[4]]]],[11,R[8],E,E,14,[[["self"]],[T]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[9],E,E,14,[[["self"]],[R[81]]]],[11,R[554],E,E,14,[[],[T]]],[11,R[79],E,E,15,[[["self"]],[T]]],[11,R[80],E,E,15,[[["self"],[T]]]],[11,"into",E,E,15,[[],[U]]],[11,R[18],E,E,15,[[],["i"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[82],E,E,15,[[["self"]],[R[83]]]],[11,R[5],E,E,15,[[[U]],[R[4]]]],[11,R[6],E,E,15,[[],[R[4]]]],[11,R[8],E,E,15,[[["self"]],[T]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[9],E,E,15,[[["self"]],[R[81]]]],[11,R[554],E,E,15,[[],[T]]],[11,R[807],E,E,15,[[["self"]]]],[11,"par_iter",E,E,15,[[["self"]]]],[11,R[79],E,E,28,[[["self"]],[T]]],[11,R[80],E,E,28,[[["self"],[T]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[5],E,E,28,[[[U]],[R[4]]]],[11,R[6],E,E,28,[[],[R[4]]]],[11,R[8],E,E,28,[[["self"]],[T]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[["self"]],[R[81]]]],[11,R[79],E,E,29,[[["self"]],[T]]],[11,R[80],E,E,29,[[["self"],[T]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[5],E,E,29,[[[U]],[R[4]]]],[11,R[6],E,E,29,[[],[R[4]]]],[11,R[8],E,E,29,[[["self"]],[T]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[["self"]],[R[81]]]],[11,R[79],E,E,30,[[["self"]],[T]]],[11,R[80],E,E,30,[[["self"],[T]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[5],E,E,30,[[[U]],[R[4]]]],[11,R[6],E,E,30,[[],[R[4]]]],[11,R[8],E,E,30,[[["self"]],[T]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[["self"]],[R[81]]]],[11,R[79],E,E,31,[[["self"]],[T]]],[11,R[80],E,E,31,[[["self"],[T]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[5],E,E,31,[[[U]],[R[4]]]],[11,R[6],E,E,31,[[],[R[4]]]],[11,R[8],E,E,31,[[["self"]],[T]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[["self"]],[R[81]]]],[11,R[79],E,E,12,[[["self"]],[T]]],[11,R[80],E,E,12,[[["self"],[T]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[5],E,E,12,[[[U]],[R[4]]]],[11,R[6],E,E,12,[[],[R[4]]]],[11,R[8],E,E,12,[[["self"]],[T]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[9],E,E,12,[[["self"]],[R[81]]]],[11,R[79],E,E,32,[[["self"]],[T]]],[11,R[80],E,E,32,[[["self"],[T]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[5],E,E,32,[[[U]],[R[4]]]],[11,R[6],E,E,32,[[],[R[4]]]],[11,R[8],E,E,32,[[["self"]],[T]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[["self"]],[R[81]]]],[11,R[79],E,E,3,[[["self"]],[T]]],[11,R[80],E,E,3,[[["self"],[T]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[5],E,E,3,[[[U]],[R[4]]]],[11,R[6],E,E,3,[[],[R[4]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[R[81]]]],[11,R[79],E,E,4,[[["self"]],[T]]],[11,R[80],E,E,4,[[["self"],[T]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[82],E,E,4,[[["self"]],[R[83]]]],[11,R[5],E,E,4,[[[U]],[R[4]]]],[11,R[6],E,E,4,[[],[R[4]]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[R[81]]]],[11,R[79],E,E,5,[[["self"]],[T]]],[11,R[80],E,E,5,[[["self"],[T]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[5],E,E,5,[[[U]],[R[4]]]],[11,R[6],E,E,5,[[],[R[4]]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[R[81]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[5],E,E,6,[[[U]],[R[4]]]],[11,R[6],E,E,6,[[],[R[4]]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[R[81]]]],[11,R[79],R[658],E,33,[[["self"]],[T]]],[11,R[80],E,E,33,[[["self"],[T]]]],[11,"into",E,E,33,[[],[U]]],[11,R[18],E,E,33,[[],["i"]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[5],E,E,33,[[[U]],[R[4]]]],[11,R[6],E,E,33,[[],[R[4]]]],[11,R[8],E,E,33,[[["self"]],[T]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[["self"]],[R[81]]]],[11,R[546],E,E,33,[[],[R[548]]]],[11,R[79],E,E,34,[[["self"]],[T]]],[11,R[80],E,E,34,[[["self"],[T]]]],[11,"into",E,E,34,[[],[U]]],[11,R[18],E,E,34,[[],["i"]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[5],E,E,34,[[[U]],[R[4]]]],[11,R[6],E,E,34,[[],[R[4]]]],[11,R[8],E,E,34,[[["self"]],[T]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[9],E,E,34,[[["self"]],[R[81]]]],[11,R[79],E,E,35,[[["self"]],[T]]],[11,R[80],E,E,35,[[["self"],[T]]]],[11,"into",E,E,35,[[],[U]]],[11,R[18],E,E,35,[[],["i"]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[5],E,E,35,[[[U]],[R[4]]]],[11,R[6],E,E,35,[[],[R[4]]]],[11,R[8],E,E,35,[[["self"]],[T]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[9],E,E,35,[[["self"]],[R[81]]]],[11,R[546],E,E,35,[[],[R[548]]]],[11,R[79],E,E,10,[[["self"]],[T]]],[11,R[80],E,E,10,[[["self"],[T]]]],[11,"into",E,E,10,[[],[U]]],[11,R[18],E,E,10,[[],["i"]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[5],E,E,10,[[[U]],[R[4]]]],[11,R[6],E,E,10,[[],[R[4]]]],[11,R[8],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[9],E,E,10,[[["self"]],[R[81]]]],[11,R[546],E,E,10,[[],[R[548]]]],[11,R[554],E,E,10,[[],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[18],E,E,11,[[],["i"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[5],E,E,11,[[[U]],[R[4]]]],[11,R[6],E,E,11,[[],[R[4]]]],[11,R[8],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[9],E,E,11,[[["self"]],[R[81]]]],[11,R[546],E,E,11,[[],[R[548]]]],[11,R[554],E,E,11,[[],[T]]],[11,R[79],E,E,8,[[["self"]],[T]]],[11,R[80],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,R[18],E,E,8,[[],["i"]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[5],E,E,8,[[[U]],[R[4]]]],[11,R[6],E,E,8,[[],[R[4]]]],[11,R[8],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[R[81]]]],[11,R[546],E,E,8,[[],[R[548]]]],[11,R[554],E,E,8,[[],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[18],E,E,9,[[],["i"]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[5],E,E,9,[[[U]],[R[4]]]],[11,R[6],E,E,9,[[],[R[4]]]],[11,R[8],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[9],E,E,9,[[["self"]],[R[81]]]],[11,R[546],E,E,9,[[],[R[548]]]],[11,R[554],E,E,9,[[],[T]]],[11,R[79],E,E,36,[[["self"]],[T]]],[11,R[80],E,E,36,[[["self"],[T]]]],[11,"into",E,E,36,[[],[U]]],[11,R[18],E,E,36,[[],["i"]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[5],E,E,36,[[[U]],[R[4]]]],[11,R[6],E,E,36,[[],[R[4]]]],[11,R[8],E,E,36,[[["self"]],[T]]],[11,R[7],E,E,36,[[["self"]],[T]]],[11,R[9],E,E,36,[[["self"]],[R[81]]]],[11,R[79],E,E,37,[[["self"]],[T]]],[11,R[80],E,E,37,[[["self"],[T]]]],[11,"into",E,E,37,[[],[U]]],[11,R[18],E,E,37,[[],["i"]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[5],E,E,37,[[[U]],[R[4]]]],[11,R[6],E,E,37,[[],[R[4]]]],[11,R[8],E,E,37,[[["self"]],[T]]],[11,R[7],E,E,37,[[["self"]],[T]]],[11,R[9],E,E,37,[[["self"]],[R[81]]]],[11,R[546],E,E,37,[[],[R[548]]]],[11,"into",E,E,38,[[],[U]]],[11,R[18],E,E,38,[[],["i"]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[5],E,E,38,[[[U]],[R[4]]]],[11,R[6],E,E,38,[[],[R[4]]]],[11,R[8],E,E,38,[[["self"]],[T]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[9],E,E,38,[[["self"]],[R[81]]]],[11,R[546],E,E,38,[[],[R[548]]]],[11,"into",E,E,39,[[],[U]]],[11,R[18],E,E,39,[[],["i"]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[5],E,E,39,[[[U]],[R[4]]]],[11,R[6],E,E,39,[[],[R[4]]]],[11,R[8],E,E,39,[[["self"]],[T]]],[11,R[7],E,E,39,[[["self"]],[T]]],[11,R[9],E,E,39,[[["self"]],[R[81]]]],[11,R[79],E,E,40,[[["self"]],[T]]],[11,R[80],E,E,40,[[["self"],[T]]]],[11,"into",E,E,40,[[],[U]]],[11,R[18],E,E,40,[[],["i"]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[5],E,E,40,[[[U]],[R[4]]]],[11,R[6],E,E,40,[[],[R[4]]]],[11,R[8],E,E,40,[[["self"]],[T]]],[11,R[7],E,E,40,[[["self"]],[T]]],[11,R[9],E,E,40,[[["self"]],[R[81]]]],[11,R[546],E,E,40,[[],[R[548]]]],[11,"into",E,E,41,[[],[U]]],[11,R[18],E,E,41,[[],["i"]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[5],E,E,41,[[[U]],[R[4]]]],[11,R[6],E,E,41,[[],[R[4]]]],[11,R[8],E,E,41,[[["self"]],[T]]],[11,R[7],E,E,41,[[["self"]],[T]]],[11,R[9],E,E,41,[[["self"]],[R[81]]]],[11,R[546],E,E,41,[[],[R[548]]]],[11,R[79],E,E,42,[[["self"]],[T]]],[11,R[80],E,E,42,[[["self"],[T]]]],[11,"into",E,E,42,[[],[U]]],[11,R[18],E,E,42,[[],["i"]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[5],E,E,42,[[[U]],[R[4]]]],[11,R[6],E,E,42,[[],[R[4]]]],[11,R[8],E,E,42,[[["self"]],[T]]],[11,R[7],E,E,42,[[["self"]],[T]]],[11,R[9],E,E,42,[[["self"]],[R[81]]]],[11,R[546],E,E,42,[[],[R[548]]]],[11,"into",E,E,43,[[],[U]]],[11,R[18],E,E,43,[[],["i"]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[5],E,E,43,[[[U]],[R[4]]]],[11,R[6],E,E,43,[[],[R[4]]]],[11,R[8],E,E,43,[[["self"]],[T]]],[11,R[7],E,E,43,[[["self"]],[T]]],[11,R[9],E,E,43,[[["self"]],[R[81]]]],[11,R[546],E,E,43,[[],[R[548]]]],[11,R[79],E,E,44,[[["self"]],[T]]],[11,R[80],E,E,44,[[["self"],[T]]]],[11,"into",E,E,44,[[],[U]]],[11,R[18],E,E,44,[[],["i"]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[5],E,E,44,[[[U]],[R[4]]]],[11,R[6],E,E,44,[[],[R[4]]]],[11,R[8],E,E,44,[[["self"]],[T]]],[11,R[7],E,E,44,[[["self"]],[T]]],[11,R[9],E,E,44,[[["self"]],[R[81]]]],[11,R[79],E,E,45,[[["self"]],[T]]],[11,R[80],E,E,45,[[["self"],[T]]]],[11,"into",E,E,45,[[],[U]]],[11,R[18],E,E,45,[[],["i"]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[5],E,E,45,[[[U]],[R[4]]]],[11,R[6],E,E,45,[[],[R[4]]]],[11,R[8],E,E,45,[[["self"]],[T]]],[11,R[7],E,E,45,[[["self"]],[T]]],[11,R[9],E,E,45,[[["self"]],[R[81]]]],[11,R[546],E,E,45,[[],[R[548]]]],[11,"into",E,E,46,[[],[U]]],[11,R[18],E,E,46,[[],["i"]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[5],E,E,46,[[[U]],[R[4]]]],[11,R[6],E,E,46,[[],[R[4]]]],[11,R[8],E,E,46,[[["self"]],[T]]],[11,R[7],E,E,46,[[["self"]],[T]]],[11,R[9],E,E,46,[[["self"]],[R[81]]]],[11,R[546],E,E,46,[[],[R[548]]]],[11,"into",E,E,47,[[],[U]]],[11,R[18],E,E,47,[[],["i"]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[5],E,E,47,[[[U]],[R[4]]]],[11,R[6],E,E,47,[[],[R[4]]]],[11,R[8],E,E,47,[[["self"]],[T]]],[11,R[7],E,E,47,[[["self"]],[T]]],[11,R[9],E,E,47,[[["self"]],[R[81]]]],[11,R[79],E,E,48,[[["self"]],[T]]],[11,R[80],E,E,48,[[["self"],[T]]]],[11,"into",E,E,48,[[],[U]]],[11,R[18],E,E,48,[[],["i"]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[5],E,E,48,[[[U]],[R[4]]]],[11,R[6],E,E,48,[[],[R[4]]]],[11,R[8],E,E,48,[[["self"]],[T]]],[11,R[7],E,E,48,[[["self"]],[T]]],[11,R[9],E,E,48,[[["self"]],[R[81]]]],[11,R[79],R[709],E,49,[[["self"]],[T]]],[11,R[80],E,E,49,[[["self"],[T]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[5],E,E,49,[[[U]],[R[4]]]],[11,R[6],E,E,49,[[],[R[4]]]],[11,R[8],E,E,49,[[["self"]],[T]]],[11,R[7],E,E,49,[[["self"]],[T]]],[11,R[9],E,E,49,[[["self"]],[R[81]]]],[11,R[554],E,E,49,[[],[T]]],[11,R[710],R[697],E,30,[[["self"]],[R[20]]]],[11,R[710],E,E,30,[[["self"]],[R[20]]]],[11,R[710],E,E,29,[[["self"]],[R[20]]]],[11,R[710],E,E,28,[[["self"]],[R[20]]]],[11,R[710],E,E,31,[[["self"]],[R[20]]]],[11,R[710],E,E,31,[[["self"]],[R[20]]]],[11,R[710],E,E,6,[[["self"]],[R[20]]]],[11,R[711],E,E,30,[[[R[672]]]]],[11,R[712],E,E,30,[[["self"]],[[R[20],["bool"]],["bool"]]]],[11,R[711],E,E,29,[[[R[672]]]]],[11,R[712],E,E,29,[[["self"]],[[R[20],["bool"]],["bool"]]]],[11,R[711],E,E,28,[[[R[672]]]]],[11,R[712],E,E,28,[[["self"]],[[R[20],["bool"]],["bool"]]]],[11,R[711],E,E,31,[[[R[672]]]]],[11,R[712],E,E,31,[[["self"]],[[R[20],["bool"]],["bool"]]]],[11,R[711],E,E,6,[[[R[672]]]]],[11,R[712],E,E,6,[[["self"]],[[R[20],["bool"]],["bool"]]]],[11,R[713],E,E,30,[[["self"],[R[714]]]]],[11,R[713],E,E,30,[[["self"],[R[714]]]]],[11,R[713],E,E,29,[[["self"],[R[714]]]]],[11,R[713],E,E,28,[[["self"],[R[714]]]]],[11,"clone_from_with_ptr",E,E,28,[[["self"],["self"],[R[714]]],[R[714]]]],[11,R[713],E,E,31,[[["self"],[R[714]]]]],[11,R[713],E,E,6,[[["self"],[R[714]]]]],[11,R[470],E,E,29,[[[R[672]]],[[R[672],[R[715]]],[R[715]]]]],[11,R[470],E,E,28,[[[R[672]]],[[R[672],[R[715]]],[R[715]]]]],[11,R[470],E,E,31,[[[R[672]]],[[R[672],[R[715]]],[R[715]]]]],[11,R[470],E,E,31,[[[R[672]]],[[R[672],[R[715]]],[R[715]]]]],[11,R[470],E,E,6,[[[R[672],["cowrepr"]],["cowrepr"]],[[R[672],[R[715]]],[R[715]]]]],[11,"new",E,E,28,[[["vec"]],["self"]]],[11,R[673],E,E,28,[[],[R[716]]]],[11,"new",E,E,29,[[["vec"]],["self"]]],[11,R[673],E,E,29,[[],[R[716]]]],[11,R[702],E,E,12,[[],["shape"]]],[11,"f",E,E,12,[[],["self"]]],[11,"set_f",E,E,12,[[["bool"]],["self"]]],[11,"strides",E,E,12,[[["d"]],[R[717]]]],[11,R[718],R[658],E,34,[[["self"]]]],[11,R[718],E,E,8,[[["self"]],["isize"]]],[11,R[718],E,E,9,[[["self"]],["isize"]]],[11,R[718],R[697],E,50,[[["self"]]]],[11,R[718],E,E,51,[[["self"]]]],[11,R[718],E,E,52,[[["self"]]]],[11,R[718],E,E,53,[[["self"]]]],[11,R[719],E,E,54,[[],["ix1"]]],[11,R[719],E,E,27,[[]]],[11,"ndim",E,E,26,[[["self"]],["usize"]]],[11,"slice",E,E,26,[[["self"]]]],[11,R[720],E,E,26,[[["self"]]]],[11,R[724],E,E,26,[[["self"]],["self"]]],[11,R[721],E,E,26,[[]]],[11,"zeros",E,E,26,[[["usize"]],["self"]]],[11,R[727],E,E,26,[[["self"]],[R[20]]]],[11,R[722],E,E,26,[[["self"],["axis"]]]],[11,R[726],E,E,26,[[["self"],["axis"]]]],[11,"ndim",E,E,26,[[["self"]],["usize"]]],[11,"slice",E,E,26,[[["self"]]]],[11,R[720],E,E,26,[[["self"]]]],[11,R[721],E,E,26,[[]]],[11,"zeros",E,E,26,[[["usize"]],["self"]]],[11,R[727],E,E,26,[[["self"]],[R[20]]]],[11,"equal",E,E,26,[[["self"]],["bool"]]],[11,"size",E,E,26,[[["self"]],["usize"]]],[11,R[723],E,E,26,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[728],E,E,26,[[["self"]],["self"]]],[11,R[724],E,E,26,[[["self"]],["self"]]],[11,R[729],E,E,26,[[["self"]],["axis"]]],[11,R[725],E,E,26,[[["self"]],["axis"]]],[11,R[730],E,E,26,[[["self"]],[R[20]]]],[11,R[731],E,R[732],26,[[["self"]],["isize"]]],[11,R[733],E,R[734],26,[[["self"]],[["isize"],[R[20],["isize"]]]]],[11,R[722],E,E,26,[[["self"],["axis"]]]],[11,R[726],E,E,26,[[["self"],["axis"]]]],[11,"ndim",E,E,26,[[["self"]],["usize"]]],[11,R[721],E,E,26,[[]]],[11,"slice",E,E,26,[[["self"]]]],[11,R[720],E,E,26,[[["self"]]]],[11,"zeros",E,E,26,[[["usize"]],["self"]]],[11,R[727],E,E,26,[[["self"]],[R[20]]]],[11,"equal",E,E,26,[[["self"]],["bool"]]],[11,"size",E,E,26,[[["self"]],["usize"]]],[11,R[723],E,E,26,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,"last_elem",E,E,26,[[["self"]],["usize"]]],[11,"set_last_elem",E,E,26,[[["self"],["usize"]]]],[11,R[728],E,E,26,[[["self"]],["self"]]],[11,"fortran_strides",E,E,26,[[["self"]],["self"]]],[11,R[724],E,E,26,[[["self"]],["self"]]],[11,R[729],E,E,26,[[["self"]],["axis"]]],[11,R[730],E,E,26,[[["self"]],[R[20]]]],[11,R[731],E,R[732],26,[[["self"]],["isize"]]],[11,R[733],E,R[734],26,[[["self"]],[["isize"],[R[20],["isize"]]]]],[11,R[722],E,E,26,[[["self"],["axis"]]]],[11,R[726],E,E,26,[[["self"],["axis"]]]],[11,"ndim",E,E,26,[[["self"]],["usize"]]],[11,R[721],E,E,26,[[]]],[11,"slice",E,E,26,[[["self"]]]],[11,R[720],E,E,26,[[["self"]]]],[11,"size",E,E,26,[[["self"]],["usize"]]],[11,"zeros",E,E,26,[[["usize"]],["self"]]],[11,R[727],E,E,26,[[["self"]],[R[20]]]],[11,R[731],E,R[732],26,[[["self"]],["isize"]]],[11,R[733],E,R[734],26,[[["self"]],[["isize"],[R[20],["isize"]]]]],[11,R[724],E,E,26,[[["self"]],["self"]]],[11,R[722],E,E,26,[[["self"],["axis"]]]],[11,R[726],E,E,26,[[["self"],["axis"]]]],[11,"ndim",E,E,26,[[["self"]],["usize"]]],[11,R[721],E,E,26,[[]]],[11,"slice",E,E,26,[[["self"]]]],[11,R[720],E,E,26,[[["self"]]]],[11,"zeros",E,E,26,[[["usize"]],["self"]]],[11,R[722],E,E,26,[[["self"],["axis"]]]],[11,R[726],E,E,26,[[["self"],["axis"]]]],[11,"ndim",E,E,26,[[["self"]],["usize"]]],[11,R[721],E,E,26,[[]]],[11,"slice",E,E,26,[[["self"]]]],[11,R[720],E,E,26,[[["self"]]]],[11,"zeros",E,E,26,[[["usize"]],["self"]]],[11,R[722],E,E,26,[[["self"],["axis"]]]],[11,R[726],E,E,26,[[["self"],["axis"]]]],[11,"ndim",E,E,26,[[["self"]],["usize"]]],[11,R[721],E,E,26,[[]]],[11,"slice",E,E,26,[[["self"]]]],[11,R[720],E,E,26,[[["self"]]]],[11,"zeros",E,E,26,[[["usize"]],["self"]]],[11,R[722],E,E,26,[[["self"],["axis"]]]],[11,R[726],E,E,26,[[["self"],["axis"]]]],[11,"ndim",E,E,55,[[["self"]],["usize"]]],[11,"slice",E,E,55,[[["self"]]]],[11,R[720],E,E,55,[[["self"]]]],[11,R[721],E,E,55,[[]]],[11,"zeros",E,E,55,[[["usize"]],["self"]]],[11,R[722],E,E,55,[[["self"],["axis"]]]],[11,R[726],E,E,55,[[["self"],["axis"]]]],[11,"from_dimension",E,E,55,[[["d2"]],[R[20]]]],[11,R[735],E,E,54,[[["self"],["ix1"]],[["isize"],[R[20],["isize"]]]]],[11,R[736],E,E,54,[[["self"],["ix1"]],["isize"]]],[11,R[735],E,E,54,[[["self"],["ixdyn"]],[["isize"],[R[20],["isize"]]]]],[11,R[736],E,E,54,[[["self"],["ixdyn"]],["isize"]]],[11,R[735],E,E,26,[[["self"],["ixdyn"]],[["isize"],[R[20],["isize"]]]]],[11,R[736],E,E,26,[[["self"],["ixdyn"]],["isize"]]],[11,R[735],E,E,26,[[["self"],["ixdyn"]],[["isize"],[R[20],["isize"]]]]],[11,R[736],E,E,26,[[["self"],["ixdyn"]],["isize"]]],[11,R[735],E,E,26,[[["self"],["ixdyn"]],[["isize"],[R[20],["isize"]]]]],[11,R[736],E,E,26,[[["self"],["ixdyn"]],["isize"]]],[11,R[735],E,E,26,[[["self"],["ixdyn"]],[["isize"],[R[20],["isize"]]]]],[11,R[736],E,E,26,[[["self"],["ixdyn"]],["isize"]]],[11,R[735],E,E,26,[[["self"],["ixdyn"]],[["isize"],[R[20],["isize"]]]]],[11,R[736],E,E,26,[[["self"],["ixdyn"]],["isize"]]],[11,R[735],E,E,26,[[["self"],["ixdyn"]],[["isize"],[R[20],["isize"]]]]],[11,R[736],E,E,26,[[["self"],["ixdyn"]],["isize"]]],[11,R[735],E,E,26,[[["self"],["ixdyn"]],[["isize"],[R[20],["isize"]]]]],[11,R[736],E,E,26,[[["self"],["ixdyn"]],["isize"]]],[11,R[700],E,E,26,[[["self"],["axis"]],["self"]]],[11,R[700],E,E,26,[[["self"],["axis"]],["ix0"]]],[11,R[700],E,E,26,[[["self"],["axis"]],["ix1"]]],[11,R[700],E,E,26,[[["self"],["axis"]]]],[11,R[700],E,E,26,[[["self"],["axis"]]]],[11,R[700],E,E,26,[[["self"],["axis"]]]],[11,R[700],E,E,26,[[["self"],["axis"]]]],[11,"dot",E,"Compute the dot product of one-dimensional arrays.",15,[[["self"],[R[672]]],["a"]]],[11,"dot",E,"Perform the matrix multiplication of the row vector `self`…",15,[[["self"],[R[672]]],[["array",["ix1"]],["ix1"]]]],[11,"dot",E,E,15,[[["self"],[R[672]]],["array2"]]],[11,"dot",E,E,15,[[["self"],[R[672]]],[["array",["ix1"]],["ix1"]]]],[11,"index",E,R[737],51,[[["i"]],["a"]]],[11,"get",E,R[737],51,[[["i"]],[[R[20]],["a"]]]],[11,"uget",E,R[737],51,[[["i"]],["a"]]],[11,R[456],E,E,15,[[],["self"]]],[11,R[456],E,E,26,[[],["dim"]]],[11,R[456],E,E,27,[[],[R[739]]]],[11,"len",R[658],E,42,[[["self"]],["usize"]]],[11,"len",E,E,40,[[["self"]],["usize"]]],[11,"len",E,E,43,[[["self"]],["usize"]]],[11,"len",E,E,41,[[["self"]],["usize"]]],[11,"len",E,E,45,[[["self"]],["usize"]]],[11,"len",E,E,46,[[["self"]],["usize"]]],[11,"len",E,E,8,[[["self"]],["usize"]]],[11,"len",E,E,9,[[["self"]],["usize"]]],[11,"clone",R[697],E,7,[[["self"]],[R[648]]]],[11,"clone",E,E,3,[[["self"]],[R[657]]]],[11,"clone",R[658],E,35,[[["self"]],["indicesiter"]]],[11,"clone",E,E,34,[[["self"]],["indices"]]],[11,"clone",E,E,36,[[["self"]],["self"]]],[11,"clone",E,E,37,[[["self"]],["self"]]],[11,"clone",E,E,44,[[["self"]],["self"]]],[11,"clone",E,E,48,[[["self"]],["self"]]],[11,"clone",E,E,42,[[["self"]],["self"]]],[11,"clone",E,E,40,[[["self"]],[R[738]]]],[11,"clone",E,E,45,[[["self"]],["self"]]],[11,"clone",E,E,8,[[["self"]],["self"]]],[11,"clone",E,E,10,[[["self"]],["self"]]],[11,"clone",R[697],E,2,[[["self"]],["slice"]]],[11,"clone",E,E,4,[[["self"]],["self"]]],[11,"clone",E,E,13,[[["self"]],["self"]]],[11,"clone",E,E,14,[[["self"]],["zip"]]],[11,"clone",E,E,5,[[["self"]],[R[97]]]],[11,"clone",E,E,1,[[["self"]],["self"]]],[11,"clone",R[658],E,33,[[["self"]],["self"]]],[11,"clone",R[697],E,0,[[["self"]],["axis"]]],[11,"clone",E,E,26,[[["self"]],["dim"]]],[11,"clone",E,E,27,[[["self"]],[R[739]]]],[11,"clone",E,E,28,[[["self"]],[R[715]]]],[11,"clone",E,E,29,[[["self"]],["self"]]],[11,"clone",E,E,30,[[["self"]],["rawviewrepr"]]],[11,"clone",E,E,31,[[["self"]],["viewrepr"]]],[11,"clone",E,E,15,[[["self"]],[R[672]]]],[11,"clone_from",E,"`Array` implements `.clone_from()` to reuse an array's…",15,[[["self"],["self"]]]],[11,"clone",R[709],E,49,[[["self"]],["parallel"]]],[11,"clone",R[697],E,12,[[["self"]],["shape"]]],[11,"clone",E,E,32,[[["self"]],[R[717]]]],[11,R[84],R[658],E,42,[[["self"]],[[R[20]],["a"]]]],[11,"nth_back",E,E,42,[[["self"],["usize"]],[[R[20]],["a"]]]],[11,"rfold",E,E,42,[[["acc"],["g"]],["acc"]]],[11,R[84],E,E,43,[[["self"]],[[R[20]],["a"]]]],[11,"nth_back",E,E,43,[[["self"],["usize"]],[[R[20]],["a"]]]],[11,"rfold",E,E,43,[[["acc"],["g"]],["acc"]]],[11,R[84],E,E,8,[[["self"]],[R[20]]]],[11,R[84],E,E,9,[[["self"]],[R[20]]]],[11,R[84],E,E,10,[[["self"]],[R[20]]]],[11,R[84],E,E,11,[[["self"]],[R[20]]]],[11,R[84],E,E,33,[[["self"]],[R[20]]]],[11,R[44],R[697],E,13,[[["self"]]]],[11,R[44],E,E,13,[[["self"]],[R[662]]]],[11,R[86],E,E,0,[[["self"],["axis"]],[[R[20],[R[19]]],[R[19]]]]],[11,"lt",E,E,0,[[["self"],["axis"]],["bool"]]],[11,"le",E,E,0,[[["self"],["axis"]],["bool"]]],[11,"gt",E,E,0,[[["self"],["axis"]],["bool"]]],[11,"ge",E,E,0,[[["self"],["axis"]],["bool"]]],[11,"eq",E,E,15,[[["self"],[R[672]]],["bool"]]],[11,"eq",E,E,3,[[["self"]],["bool"]]],[11,"eq",E,E,7,[[["self"]],["bool"]]],[11,"eq",E,E,2,[[["self"],["slice"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["slice"]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[740]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[740]]],["bool"]]],[11,"eq",E,E,0,[[["self"],["axis"]],["bool"]]],[11,"ne",E,E,0,[[["self"],["axis"]],["bool"]]],[11,"eq",E,E,26,[[["self"],["dim"]],["bool"]]],[11,"ne",E,E,26,[[["self"],["dim"]],["bool"]]],[11,"eq",E,E,26,[[["self"],["i"]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[739]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[739]]],["bool"]]],[11,"cmp",E,E,0,[[["self"],["axis"]],[R[19]]]],[11,R[18],E,E,50,[[]]],[11,R[18],E,E,51,[[]]],[11,R[18],R[658],E,34,[[]]],[11,R[18],E,E,36,[[]]],[11,R[18],E,E,39,[[]]],[11,R[18],E,E,44,[[]]],[11,R[18],E,E,47,[[]]],[11,R[18],E,E,48,[[]]],[11,"from",R[697],R[741],15,[[["vec"]],["self"]]],[11,"from",E,"Create a one-dimensional read-only array view of the data…",50,[[["slice"]],["self"]]],[11,"from",E,"Create a read-only array view of the array.",50,[[[R[672]]],["self"]]],[11,"from",E,"Create a one-dimensional read-write array view of the data…",51,[[["slice"]],["self"]]],[11,"from",E,"Create a read-write array view of the array.",51,[[[R[672]]],["self"]]],[11,"from",E,"Converts the `Vec` of arrays to an owned 2-D array.",56,[[["vec"]],["self"]]],[11,"from",E,"Converts the `Vec` of arrays to an owned 3-D array.",57,[[["vec"]],["self"]]],[11,"from",E,"Create a `Shape` from `dimension`, using the default…",12,[[["d"]],["shape"]]],[11,"from",E,E,32,[[[T]],["self"]]],[11,"from",E,E,2,[[["range",["isize"]],["isize"]],["slice"]]],[11,"from",E,E,2,[[["isize"],[R[742],["isize"]]],["slice"]]],[11,"from",E,E,2,[[["isize"],[R[743],["isize"]]],["slice"]]],[11,"from",E,E,2,[[["isize"],[R[745],["isize"]]],["slice"]]],[11,"from",E,E,2,[[["isize"],[R[744],["isize"]]],["slice"]]],[11,"from",E,E,2,[[["usize"],["range",["usize"]]],["slice"]]],[11,"from",E,E,2,[[[R[742],["usize"]],["usize"]],["slice"]]],[11,"from",E,E,2,[[[R[743],["usize"]],["usize"]],["slice"]]],[11,"from",E,E,2,[[[R[745],["usize"]],["usize"]],["slice"]]],[11,"from",E,E,2,[[[R[744],["usize"]],["usize"]],["slice"]]],[11,"from",E,E,2,[[["range",["i32"]],["i32"]],["slice"]]],[11,"from",E,E,2,[[[R[742],["i32"]],["i32"]],["slice"]]],[11,"from",E,E,2,[[[R[743],["i32"]],["i32"]],["slice"]]],[11,"from",E,E,2,[[[R[745],["i32"]],["i32"]],["slice"]]],[11,"from",E,E,2,[[[R[744],["i32"]],["i32"]],["slice"]]],[11,"from",E,E,4,[[["range",["isize"]],["isize"]],[R[740]]]],[11,"from",E,E,4,[[["isize"],[R[742],["isize"]]],[R[740]]]],[11,"from",E,E,4,[[["isize"],[R[743],["isize"]]],[R[740]]]],[11,"from",E,E,4,[[["isize"],[R[745],["isize"]]],[R[740]]]],[11,"from",E,E,4,[[["isize"],[R[744],["isize"]]],[R[740]]]],[11,"from",E,E,4,[[["usize"],["range",["usize"]]],[R[740]]]],[11,"from",E,E,4,[[[R[742],["usize"]],["usize"]],[R[740]]]],[11,"from",E,E,4,[[[R[743],["usize"]],["usize"]],[R[740]]]],[11,"from",E,E,4,[[[R[745],["usize"]],["usize"]],[R[740]]]],[11,"from",E,E,4,[[[R[744],["usize"]],["usize"]],[R[740]]]],[11,"from",E,E,4,[[["range",["i32"]],["i32"]],[R[740]]]],[11,"from",E,E,4,[[[R[742],["i32"]],["i32"]],[R[740]]]],[11,"from",E,E,4,[[[R[743],["i32"]],["i32"]],[R[740]]]],[11,"from",E,E,4,[[[R[745],["i32"]],["i32"]],[R[740]]]],[11,"from",E,E,4,[[[R[744],["i32"]],["i32"]],[R[740]]]],[11,"from",E,E,2,[[[R[746]]],["slice"]]],[11,"from",E,E,4,[[[R[746]]],[R[740]]]],[11,"from",E,E,4,[[["slice"]],[R[740]]]],[11,"from",E,E,4,[[["isize"]],[R[740]]]],[11,"from",E,E,4,[[["usize"]],[R[740]]]],[11,"from",E,E,4,[[["i32"]],[R[740]]]],[11,"from",E,E,27,[[],["self"]]],[11,"from",E,E,27,[[["ix"],["vec",["ix"]]],["self"]]],[11,"from",E,E,58,[[[R[674]]],[R[747]]]],[11,"from",E,E,58,[[["array"]],[R[747]]]],[11,"next",R[658],E,35,[[["self"]],[R[20]]]],[11,R[85],E,E,35,[[["self"]]]],[11,"next",E,E,37,[[["self"]],[R[20]]]],[11,R[85],E,E,37,[[["self"]]]],[11,"next",E,E,38,[[["self"]],[R[20]]]],[11,R[85],E,E,38,[[["self"]]]],[11,"next",E,E,42,[[["self"]],[[R[20]],["a"]]]],[11,R[85],E,E,42,[[["self"]]]],[11,"fold",E,E,42,[[["acc"],["g"]],["acc"]]],[11,"nth",E,E,42,[[["self"],["usize"]],[R[20]]]],[11,R[99],E,E,42,[[],["b"]]],[11,"all",E,E,42,[[["self"],["f"]],["bool"]]],[11,"any",E,E,42,[[["self"],["f"]],["bool"]]],[11,"find",E,E,42,[[["self"],["p"]],[R[20]]]],[11,"find_map",E,E,42,[[["self"],["f"]],[R[20]]]],[11,"count",E,E,42,[[],["usize"]]],[11,"last",E,E,42,[[],[R[20]]]],[11,R[98],E,E,42,[[["self"],["p"]],[["usize"],[R[20],["usize"]]]]],[11,"next",E,E,40,[[["self"]],[R[20]]]],[11,R[85],E,E,40,[[["self"]]]],[11,"next",E,E,43,[[["self"]],[[R[20]],["a"]]]],[11,R[85],E,E,43,[[["self"]]]],[11,"fold",E,E,43,[[["acc"],["g"]],["acc"]]],[11,"nth",E,E,43,[[["self"],["usize"]],[R[20]]]],[11,R[99],E,E,43,[[],["b"]]],[11,"all",E,E,43,[[["self"],["f"]],["bool"]]],[11,"any",E,E,43,[[["self"],["f"]],["bool"]]],[11,"find",E,E,43,[[["self"],["p"]],[R[20]]]],[11,"find_map",E,E,43,[[["self"],["f"]],[R[20]]]],[11,"count",E,E,43,[[],["usize"]]],[11,"last",E,E,43,[[],[R[20]]]],[11,R[98],E,E,43,[[["self"],["p"]],[["usize"],[R[20],["usize"]]]]],[11,"next",E,E,41,[[["self"]],[R[20]]]],[11,R[85],E,E,41,[[["self"]]]],[11,"next",E,E,45,[[["self"]],[R[20]]]],[11,R[85],E,E,45,[[["self"]]]],[11,"next",E,E,46,[[["self"]],[R[20]]]],[11,R[85],E,E,46,[[["self"]]]],[11,"next",E,E,8,[[["self"]],[R[20]]]],[11,R[85],E,E,8,[[["self"]]]],[11,"next",E,E,9,[[["self"]],[R[20]]]],[11,R[85],E,E,9,[[["self"]]]],[11,"next",E,E,10,[[["self"]],[R[20]]]],[11,R[85],E,E,10,[[["self"]]]],[11,"next",E,E,11,[[["self"]],[R[20]]]],[11,R[85],E,E,11,[[["self"]]]],[11,"next",E,E,33,[[["self"]],[R[20]]]],[11,"fold",E,E,33,[[["b"],["f"]],["b"]]],[11,R[85],E,E,33,[[["self"]]]],[11,R[22],R[697],E,27,[[["self"]]]],[11,"hash",E,E,15,[[["self"],["h"]]]],[11,"hash",E,E,2,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"hash",E,E,26,[[["self"],["__h"]]]],[11,"hash",E,E,27,[[["self"],["__h"]]]],[11,"add",E,E,26,[[],["self"]]],[11,"add",E,E,26,[[["ix"]],["self"]]],[11,"add",E,E,15,[[[R[672]]],[R[672]]]],[11,"add",E,E,15,[[[R[672]]],[R[672]]]],[11,"add",E,E,15,[[["b"]],[R[672]]]],[11,"sub",E,E,26,[[],["self"]]],[11,"sub",E,E,26,[[["ix"]],["self"]]],[11,"sub",E,E,15,[[[R[672]]],[R[672]]]],[11,"sub",E,E,15,[[[R[672]]],[R[672]]]],[11,"sub",E,E,15,[[["b"]],[R[672]]]],[11,"mul",E,E,26,[[],["self"]]],[11,"mul",E,E,26,[[["ix"]],["self"]]],[11,"mul",E,E,15,[[[R[672]]],[R[672]]]],[11,"mul",E,E,15,[[[R[672]]],[R[672]]]],[11,"mul",E,E,15,[[["b"]],[R[672]]]],[11,"div",E,E,15,[[[R[672]]],[R[672]]]],[11,"div",E,E,15,[[[R[672]]],[R[672]]]],[11,"div",E,E,15,[[["b"]],[R[672]]]],[11,"rem",E,E,15,[[[R[672]]],[R[672]]]],[11,"rem",E,E,15,[[[R[672]]],[R[672]]]],[11,"rem",E,E,15,[[["b"]],[R[672]]]],[11,"neg",E,"Perform an elementwise negation of `self` and return the…",15,[[],["self"]]],[11,R[450],E,E,26,[[["self"]]]],[11,R[450],E,E,26,[[["self"],["self"]]]],[11,R[450],E,E,26,[[["self"],["ix"]]]],[11,R[450],E,E,15,[[["self"],[R[672]]]]],[11,R[450],E,E,15,[[["self"],["a"]]]],[11,R[451],E,E,26,[[["self"]]]],[11,R[451],E,E,26,[[["self"],["self"]]]],[11,R[451],E,E,26,[[["self"],["ix"]]]],[11,R[451],E,E,15,[[["self"],[R[672]]]]],[11,R[451],E,E,15,[[["self"],["a"]]]],[11,R[452],E,E,26,[[["self"]]]],[11,R[452],E,E,26,[[["self"],["self"]]]],[11,R[452],E,E,26,[[["self"],["ix"]]]],[11,R[452],E,E,15,[[["self"],[R[672]]]]],[11,R[452],E,E,15,[[["self"],["a"]]]],[11,R[453],E,E,15,[[["self"],[R[672]]]]],[11,R[453],E,E,15,[[["self"],["a"]]]],[11,R[454],E,E,15,[[["self"],[R[672]]]]],[11,R[454],E,E,15,[[["self"],["a"]]]],[11,"not",E,"Perform an elementwise unary not of `self` and return the…",15,[[],["self"]]],[11,"bitand",E,E,15,[[[R[672]]],[R[672]]]],[11,"bitand",E,E,15,[[[R[672]]],[R[672]]]],[11,"bitand",E,E,15,[[["b"]],[R[672]]]],[11,"bitor",E,E,15,[[[R[672]]],[R[672]]]],[11,"bitor",E,E,15,[[[R[672]]],[R[672]]]],[11,"bitor",E,E,15,[[["b"]],[R[672]]]],[11,"bitxor",E,E,15,[[[R[672]]],[R[672]]]],[11,"bitxor",E,E,15,[[[R[672]]],[R[672]]]],[11,"bitxor",E,E,15,[[["b"]],[R[672]]]],[11,"shl",E,E,15,[[[R[672]]],[R[672]]]],[11,"shl",E,E,15,[[[R[672]]],[R[672]]]],[11,"shl",E,E,15,[[["b"]],[R[672]]]],[11,"shr",E,E,15,[[[R[672]]],[R[672]]]],[11,"shr",E,E,15,[[[R[672]]],[R[672]]]],[11,"shr",E,E,15,[[["b"]],[R[672]]]],[11,R[748],E,E,15,[[["self"],[R[672]]]]],[11,R[748],E,E,15,[[["self"],["a"]]]],[11,R[749],E,E,15,[[["self"],[R[672]]]]],[11,R[749],E,E,15,[[["self"],["a"]]]],[11,R[750],E,E,15,[[["self"],[R[672]]]]],[11,R[750],E,E,15,[[["self"],["a"]]]],[11,R[751],E,E,15,[[["self"],[R[672]]]]],[11,R[751],E,E,15,[[["self"],["a"]]]],[11,R[752],E,E,15,[[["self"],[R[672]]]]],[11,R[752],E,E,15,[[["self"],["a"]]]],[11,"deref",E,E,13,[[["self"]]]],[11,"deref",E,E,27,[[["self"]]]],[11,"index",E,E,15,[[["self"],["i"]]]],[11,"index",E,E,26,[[["self"],["usize"]]]],[11,"index",E,E,26,[[["self"],["usize"]]]],[11,"index",E,E,26,[[["self"],["usize"]]]],[11,"index",E,E,26,[[["self"],["usize"]]]],[11,"index",E,E,26,[[["self"],["usize"]]]],[11,"index",E,E,26,[[["self"],["usize"]]]],[11,"index",E,E,26,[[["self"],["usize"]]]],[11,"index",E,E,26,[[["self"],["usize"]]]],[11,"index",E,E,27,[[["self"],["j"]]]],[11,R[753],E,E,15,[[["self"],["i"]]]],[11,R[753],E,E,26,[[["self"],["usize"]]]],[11,R[753],E,E,26,[[["self"],["usize"]]]],[11,R[753],E,E,26,[[["self"],["usize"]]]],[11,R[753],E,E,26,[[["self"],["usize"]]]],[11,R[753],E,E,26,[[["self"],["usize"]]]],[11,R[753],E,E,26,[[["self"],["usize"]]]],[11,R[753],E,E,26,[[["self"],["usize"]]]],[11,R[753],E,E,26,[[["self"],["usize"]]]],[11,R[753],E,E,27,[[["self"],["j"]]]],[11,"fmt",E,E,15,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,15,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,3,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,7,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[658],E,34,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,8,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[697],E,2,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,4,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,13,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,14,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,5,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[658],E,33,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[697],E,1,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,26,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,27,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,28,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,29,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[709],E,49,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[697],E,12,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,32,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,15,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,15,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,7,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,4,[[["self"],[R[11]]],[R[4]]]],[11,R[754],E,"Create a one-dimensional array from an iterable.",15,[[["i"]],[["ix1"],[R[672],["ix1"]]]]],[11,"fmt",E,E,15,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,15,[[["self"],[R[11]]],[R[4]]]],[11,R[169],E,E,7,[[["self"]],["str"]]],[11,"zero",E,E,26,[[],["self"]]],[11,R[755],E,E,26,[[["self"]],["bool"]]],[11,"zero",E,E,26,[[],["self"]]],[11,R[755],E,E,26,[[["self"]],["bool"]]],[11,"zero",E,E,26,[[],["self"]]],[11,R[755],E,E,26,[[["self"]],["bool"]]],[11,"zero",E,E,26,[[],["self"]]],[11,R[755],E,E,26,[[["self"]],["bool"]]],[11,"zero",E,E,26,[[],["self"]]],[11,R[755],E,E,26,[[["self"]],["bool"]]],[11,"zero",E,E,26,[[],["self"]]],[11,R[755],E,E,26,[[["self"]],["bool"]]],[11,"zero",E,E,26,[[],["self"]]],[11,R[755],E,E,26,[[["self"]],["bool"]]],[11,R[572],R[709],E,49,[[["cb"]]]],[11,"len",E,E,49,[[["self"]],["usize"]]],[11,"drive",E,E,49,[[["c"]]]],[11,R[572],E,E,49,[[["cb"]]]],[11,"len",E,E,49,[[["self"]],["usize"]]],[11,"drive",E,E,49,[[["c"]]]],[11,R[572],E,E,49,[[["cb"]]]],[11,"len",E,E,49,[[["self"]],["usize"]]],[11,"drive",E,E,49,[[["c"]]]],[11,R[572],E,E,49,[[["cb"]]]],[11,"len",E,E,49,[[["self"]],["usize"]]],[11,"drive",E,E,49,[[["c"]]]],[11,R[570],E,E,49,[[["c"]]]],[11,R[571],E,E,49,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,49,[[["c"]]]],[11,R[571],E,E,49,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,49,[[["c"]]]],[11,R[571],E,E,49,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,49,[[["c"]]]],[11,R[571],E,E,49,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,49,[[["c"]]]],[11,R[571],E,E,49,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,49,[[["c"]]]],[11,R[571],E,E,49,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,49,[[["cons"]]]],[11,R[571],E,E,49,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,49,[[["cons"]]]],[11,R[571],E,E,49,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,49,[[["cons"]]]],[11,R[571],E,E,49,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,49,[[["cons"]]]],[11,R[571],E,E,49,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,49,[[["cons"]]]],[11,R[571],E,E,49,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,49,[[["cons"]]]],[11,R[571],E,E,49,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[554],R[658],E,8,[[]]],[11,R[554],E,E,9,[[]]],[11,R[554],E,E,10,[[]]],[11,R[554],E,E,11,[[]]],[11,R[554],R[697],E,50,[[]]],[11,R[554],E,E,51,[[]]],[11,R[554],E,E,14,[[]]],[11,R[554],E,E,14,[[]]],[11,R[554],E,E,14,[[]]],[11,R[554],E,E,14,[[]]],[11,R[554],E,E,14,[[]]],[11,R[554],E,E,14,[[]]],[18,"NDIM",E,R[756],17,N],[11,"size",E,R[757],17,[[["self"]],["usize"]]],[11,R[723],E,R[758],17,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[759],E,R[760],17,[[["self"]],[["ix"],[R[686],["ix"]]]]],[11,R[761],E,R[762],17,[[["self"]],[["ix"],[R[687],["ix"]]]]],[11,R[763],E,R[764],17,[[],["ixdyn"]]],[11,"zeros",E,"Create a new dimension value with `n` axes, all zeros",55,[[["usize"]],["ixdyn"]]],[11,R[767],E,"Returns the single element in the array without cloning it.",59,[[],["a"]]],[11,"into_raw_vec",E,"Return a vector of the elements in the array, in the way…",59,[[],["vec"]]],[11,R[765],E,"Create a read-only array view borrowing its data from a…",50,[[["sh"]],[[R[4],[R[648]]],[R[648]]]]],[11,R[766],E,"Create an `ArrayView<A, D>` from shape information and a…",50,[[["sh"]],["self"]]],[11,R[765],E,"Create a read-write array view borrowing its data from a…",51,[[["sh"]],[[R[4],[R[648]]],[R[648]]]]],[11,R[766],E,"Create an `ArrayViewMut<A, D>` from shape information and…",51,[[["sh"]],["self"]]],[11,"reborrow",E,"Convert the view into an `ArrayViewMut<'b, A, D>` where…",51,[[],[R[675]]]],[11,"reborrow",E,"Convert the view into an `ArrayView<'b, A, D>` where `'b`…",50,[[],[R[674]]]],[11,R[768],E,R[688],50,[[["self"]],[R[20]]]],[11,"to_slice",E,R[688],50,[[["self"]],[R[20]]]],[11,R[767],E,"Consume the view and return a reference to the single…",50,[[],["a"]]],[11,R[767],E,"Consume the mutable view and return a mutable reference to…",51,[[],["a"]]],[11,R[768],E,R[688],51,[[],[R[20]]]],[11,R[660],E,"Split the array view along `axis` and return one view…",50,[[["ix"],["axis"]]]],[11,R[660],E,"Split the array view along `axis` and return one mutable…",51,[[["ix"],["axis"]]]],[11,R[766],E,"Create an `RawArrayView<A, D>` from shape information and…",52,[[["sh"]],["self"]]],[11,R[769],E,R[770],52,[[],[R[674]]]],[11,R[660],E,R[771],52,[[["ix"],["axis"]]]],[11,R[766],E,"Create an `RawArrayViewMut<A, D>` from shape information…",53,[[["sh"]],["self"]]],[11,R[769],E,R[770],53,[[],[R[674]]]],[11,"deref_into_view_mut",E,"Converts to a mutable view of the array.",53,[[],[R[675]]]],[11,R[660],E,R[771],53,[[["ix"],["axis"]]]],[11,"is_view",E,"Returns `true` iff the array is the view (borrowed) variant.",58,[[["self"]],["bool"]]],[11,"is_owned",E,"Returns `true` iff the array is the owned variant.",58,[[["self"]],["bool"]]]],"p":[[3,"Axis"],[3,R[772]],[3,"Slice"],[4,R[773]],[4,R[774]],[4,R[127]],[4,"CowRepr"],[3,R[775]],[3,"AxisIter"],[3,R[776]],[3,R[777]],[3,R[778]],[3,"Shape"],[3,R[779]],[3,"Zip"],[3,R[780]],[8,"Dot"],[8,R[781]],[8,R[782]],[8,R[783]],[8,R[784]],[8,R[785]],[8,"RawData"],[8,R[786]],[8,R[787]],[8,R[788]],[3,"Dim"],[3,R[789]],[3,R[790]],[3,R[791]],[3,R[792]],[3,"ViewRepr"],[3,R[793]],[3,"Axes"],[3,"Indices"],[3,R[794]],[3,R[795]],[3,R[796]],[3,R[797]],[3,R[798]],[3,R[799]],[3,R[800]],[3,"Iter"],[3,R[549]],[3,"Lanes"],[3,R[801]],[3,R[802]],[3,"LanesMut"],[3,"Windows"],[3,"Parallel"],[6,R[803]],[6,R[804]],[6,R[805]],[6,R[806]],[6,"Ix"],[6,"IxDyn"],[6,"Array2"],[6,"Array3"],[6,"CowArray"],[6,"Array"]]};
searchIndex["num_complex"]={"doc":"Complex numbers.","i":[[3,"Complex","num_complex","A complex number in Cartesian form.",N,N],[12,"re",E,"Real portion of the complex number",0,N],[12,"im",E,"Imaginary portion of the complex number",0,N],[3,R[459],E,E,N,N],[6,"Complex32",E,E,N,N],[6,"Complex64",E,E,N,N],[11,"new",E,"Create a new Complex",0,[[[T]],["self"]]],[11,"i",E,"Returns imaginary unit",0,[[],["self"]]],[11,"norm_sqr",E,"Returns the square of the norm (since `T` doesn't…",0,[[["self"]],[T]]],[11,"scale",E,"Multiplies `self` by the scalar `t`.",0,[[["self"],[T]],["self"]]],[11,"unscale",E,"Divides `self` by the scalar `t`.",0,[[["self"],[T]],["self"]]],[11,"powu",E,"Raises `self` to an unsigned integer power.",0,[[["self"],["u32"]],["self"]]],[11,"conj",E,"Returns the complex conjugate. i.e. `re - i im`",0,[[["self"]],["self"]]],[11,"inv",E,"Returns `1/self`",0,[[["self"]],["self"]]],[11,"powi",E,"Raises `self` to a signed integer power.",0,[[["self"],["i32"]],["self"]]],[11,"l1_norm",E,"Returns the L1 norm `|re| + |im|` -- the [Manhattan…",0,[[["self"]],[T]]],[11,"norm",E,"Calculate |self|",0,[[["self"]],[T]]],[11,"arg",E,"Calculate the principal Arg of self.",0,[[["self"]],[T]]],[11,"to_polar",E,"Convert to polar form (r, theta), such that `self = r *…",0,[[["self"]]]],[11,"from_polar",E,"Convert a polar representation into a complex number.",0,[[[T]],["self"]]],[11,"exp",E,"Computes `e^(self)`, where `e` is the base of the natural…",0,[[["self"]],["self"]]],[11,"ln",E,"Computes the principal value of natural logarithm of `self`.",0,[[["self"]],["self"]]],[11,"sqrt",E,"Computes the principal value of the square root of `self`.",0,[[["self"]],["self"]]],[11,"cbrt",E,"Computes the principal value of the cube root of `self`.",0,[[["self"]],["self"]]],[11,"powf",E,"Raises `self` to a floating point power.",0,[[["self"],[T]],["self"]]],[11,"log",E,"Returns the logarithm of `self` with respect to an…",0,[[["self"],[T]],["self"]]],[11,"powc",E,"Raises `self` to a complex power.",0,[[["self"]],["self"]]],[11,"expf",E,"Raises a floating point number to the complex power `self`.",0,[[["self"],[T]],["self"]]],[11,"sin",E,"Computes the sine of `self`.",0,[[["self"]],["self"]]],[11,"cos",E,"Computes the cosine of `self`.",0,[[["self"]],["self"]]],[11,"tan",E,"Computes the tangent of `self`.",0,[[["self"]],["self"]]],[11,"asin",E,"Computes the principal value of the inverse sine of `self`.",0,[[["self"]],["self"]]],[11,"acos",E,"Computes the principal value of the inverse cosine of…",0,[[["self"]],["self"]]],[11,"atan",E,"Computes the principal value of the inverse tangent of…",0,[[["self"]],["self"]]],[11,"sinh",E,"Computes the hyperbolic sine of `self`.",0,[[["self"]],["self"]]],[11,"cosh",E,"Computes the hyperbolic cosine of `self`.",0,[[["self"]],["self"]]],[11,"tanh",E,"Computes the hyperbolic tangent of `self`.",0,[[["self"]],["self"]]],[11,"asinh",E,"Computes the principal value of inverse hyperbolic sine of…",0,[[["self"]],["self"]]],[11,"acosh",E,"Computes the principal value of inverse hyperbolic cosine…",0,[[["self"]],["self"]]],[11,"atanh",E,"Computes the principal value of inverse hyperbolic tangent…",0,[[["self"]],["self"]]],[11,"finv",E,"Returns `1/self` using floating-point operations.",0,[[["self"]],[R[449]]]],[11,"fdiv",E,"Returns `self/other` using floating-point operations.",0,[[["self"],[R[449]]],[R[449]]]],[11,"is_nan",E,"Checks if the given complex number is NaN",0,[[],["bool"]]],[11,R[346],E,"Checks if the given complex number is infinite",0,[[],["bool"]]],[11,R[347],E,"Checks if the given complex number is finite",0,[[],["bool"]]],[11,R[348],E,"Checks if the given complex number is normal",0,[[],["bool"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,"into",E,E,0,[[],[U]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[81]]]],[11,R[79],E,E,0,[[["self"]],[T]]],[11,R[80],E,E,0,[[["self"],[T]]]],[11,R[82],E,E,0,[[["self"]],[R[83]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[5],E,E,1,[[[U]],[R[4]]]],[11,"into",E,E,1,[[],[U]]],[11,R[6],E,E,1,[[],[R[4]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[R[81]]]],[11,R[82],E,E,1,[[["self"]],[R[83]]]],[11,"from",E,E,0,[[[T]],["self"]]],[11,"from",E,E,0,[[[T]],["self"]]],[11,"eq",E,E,0,[[["self"],[R[449]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[449]]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[448]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[448]]],["bool"]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,"add",E,E,0,[[[R[449]]]]],[11,"add",E,E,0,[[]]],[11,"add",E,E,0,[[[T]]]],[11,"add",E,E,0,[[[T]]]],[11,"sub",E,E,0,[[[R[449]]]]],[11,"sub",E,E,0,[[]]],[11,"sub",E,E,0,[[[T]]]],[11,"sub",E,E,0,[[[T]]]],[11,"mul",E,E,0,[[[R[449]]]]],[11,"mul",E,E,0,[[]]],[11,"mul",E,E,0,[[[T]]]],[11,"mul",E,E,0,[[[T]]]],[11,"div",E,E,0,[[[R[449]]]]],[11,"div",E,E,0,[[]]],[11,"div",E,E,0,[[[T]]]],[11,"div",E,E,0,[[[T]]]],[11,"rem",E,E,0,[[[R[449]]]]],[11,"rem",E,E,0,[[]]],[11,"rem",E,E,0,[[[T]]]],[11,"rem",E,E,0,[[[T]]]],[11,"neg",E,E,0,[[]]],[11,R[450],E,E,0,[[["self"]]]],[11,R[450],E,E,0,[[["self"],[T]]]],[11,R[450],E,E,0,[[["self"],["self"]]]],[11,R[450],E,E,0,[[["self"],[T]]]],[11,R[451],E,E,0,[[["self"]]]],[11,R[451],E,E,0,[[["self"],[T]]]],[11,R[451],E,E,0,[[["self"],["self"]]]],[11,R[451],E,E,0,[[["self"],[T]]]],[11,R[452],E,E,0,[[["self"]]]],[11,R[452],E,E,0,[[["self"],[T]]]],[11,R[452],E,E,0,[[["self"],["self"]]]],[11,R[452],E,E,0,[[["self"],[T]]]],[11,R[453],E,E,0,[[["self"]]]],[11,R[453],E,E,0,[[["self"],[T]]]],[11,R[453],E,E,0,[[["self"],["self"]]]],[11,R[453],E,E,0,[[["self"],[T]]]],[11,R[454],E,E,0,[[["self"]]]],[11,R[454],E,E,0,[[["self"],[T]]]],[11,R[454],E,E,0,[[["self"],["self"]]]],[11,R[454],E,E,0,[[["self"],[T]]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,1,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,1,[[["self"],[R[11]]],[R[4]]]],[11,R[455],E,R[457],0,[[["str"]],[R[4]]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]],[11,R[531],E,E,0,[[["i"]],["self"]]],[11,R[531],E,E,0,[[["i"]],["self"]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,"sum",E,E,0,[[["i"]],["self"]]],[11,"clone",E,E,0,[[["self"]],[R[449]]]],[11,R[456],E,E,0,[[],[R[449]]]],[11,R[169],E,E,1,[[["self"]],["str"]]],[11,"to_usize",E,E,0,[[["self"]],[[R[20],["usize"]],["usize"]]]],[11,"to_isize",E,E,0,[[["self"]],[["isize"],[R[20],["isize"]]]]],[11,"to_u8",E,E,0,[[["self"]],[[R[20],["u8"]],["u8"]]]],[11,"to_u16",E,E,0,[[["self"]],[["u16"],[R[20],["u16"]]]]],[11,"to_u32",E,E,0,[[["self"]],[["u32"],[R[20],["u32"]]]]],[11,"to_u64",E,E,0,[[["self"]],[[R[20],["u64"]],["u64"]]]],[11,"to_i8",E,E,0,[[["self"]],[[R[20],["i8"]],["i8"]]]],[11,"to_i16",E,E,0,[[["self"]],[["i16"],[R[20],["i16"]]]]],[11,"to_i32",E,E,0,[[["self"]],[["i32"],[R[20],["i32"]]]]],[11,"to_i64",E,E,0,[[["self"]],[["i64"],[R[20],["i64"]]]]],[11,"to_u128",E,E,0,[[["self"]],[["u128"],[R[20],["u128"]]]]],[11,"to_i128",E,E,0,[[["self"]],[[R[20],["i128"]],["i128"]]]],[11,"to_f32",E,E,0,[[["self"]],[["f32"],[R[20],["f32"]]]]],[11,"to_f64",E,E,0,[[["self"]],[[R[20],["f64"]],["f64"]]]],[11,R[462],E,E,0,[[["usize"]],[R[20]]]],[11,R[460],E,E,0,[[["isize"]],[R[20]]]],[11,"from_u8",E,E,0,[[["u8"]],[R[20]]]],[11,"from_u16",E,E,0,[[["u16"]],[R[20]]]],[11,"from_u32",E,E,0,[[["u32"]],[R[20]]]],[11,"from_u64",E,E,0,[[["u64"]],[R[20]]]],[11,"from_i8",E,E,0,[[["i8"]],[R[20]]]],[11,"from_i16",E,E,0,[[["i16"]],[R[20]]]],[11,"from_i32",E,E,0,[[["i32"]],[R[20]]]],[11,"from_i64",E,E,0,[[["i64"]],[R[20]]]],[11,R[463],E,E,0,[[["u128"]],[R[20]]]],[11,R[461],E,E,0,[[["i128"]],[R[20]]]],[11,"from_f32",E,E,0,[[["f32"]],[R[20]]]],[11,"from_f64",E,E,0,[[["f64"]],[R[20]]]],[11,"from",E,E,0,[[[R[464]]],[R[20]]]],[11,"as_",E,E,0,[[],[U]]],[11,R[465],E,R[457],0,[[["u32"],["str"]],[R[4]]]],[11,"zero",E,E,0,[[],["self"]]],[11,R[755],E,E,0,[[["self"]],["bool"]]],[11,"set_zero",E,E,0,[[["self"]]]],[11,"one",E,E,0,[[],["self"]]],[11,"is_one",E,E,0,[[["self"]],["bool"]]],[11,"set_one",E,E,0,[[["self"]]]],[11,"inv",E,E,0,[[]]],[11,"mul_add",E,E,0,[[[R[449]]],[R[449]]]],[11,R[458],E,E,0,[[["self"],[R[449]]]]],[11,R[458],E,E,0,[[["self"],[R[449]]]]],[11,"pow",E,E,0,[[["f32"]]]],[11,"pow",E,E,0,[[["f32"]]]],[11,"pow",E,E,0,[[["f64"]]]],[11,"pow",E,E,0,[[["f64"]]]],[11,"pow",E,E,0,[[[R[449]]]]],[11,"pow",E,E,0,[[[R[449]]]]]],"p":[[3,"Complex"],[3,R[459]]]};
searchIndex["num_cpus"]={"doc":"A crate with utilities to determine the number of CPUs…","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",N,[[],["usize"]]],[5,"get_physical",E,"Returns the number of physical cores of the current system.",N,[[],["usize"]]]],"p":[]};
searchIndex["num_integer"]={"doc":"Integer trait and functions.","i":[[3,R[446],"num_integer","Greatest common divisor and Bézout coefficients",N,N],[12,"gcd",E,E,0,N],[12,"x",E,E,0,N],[12,"y",E,E,0,N],[3,R[447],E,"An iterator over binomial coefficients.",N,N],[5,"cbrt",E,R[441],N,[[["roots"]],["roots"]]],[5,"nth_root",E,R[439],N,[[["u32"],["roots"]],["roots"]]],[5,"sqrt",E,R[440],N,[[["roots"]],["roots"]]],[5,"div_rem",E,"Simultaneous integer division and modulus",N,[[[R[438]]]]],[5,R[442],E,"Floored integer division",N,[[[R[438]]],[R[438]]]],[5,R[443],E,"Floored integer modulus",N,[[[R[438]]],[R[438]]]],[5,R[444],E,"Simultaneous floored integer division and modulus",N,[[[R[438]]]]],[5,"div_ceil",E,"Ceiled integer division",N,[[[R[438]]],[R[438]]]],[5,"gcd",E,"Calculates the Greatest Common Divisor (GCD) of the number…",N,[[[R[438]]],[R[438]]]],[5,"lcm",E,"Calculates the Lowest Common Multiple (LCM) of the number…",N,[[[R[438]]],[R[438]]]],[5,"gcd_lcm",E,"Calculates the Greatest Common Divisor (GCD) and Lowest…",N,[[[R[438]]]]],[5,"binomial",E,"Calculate the binomial coefficient.",N,[[[R[438]],["clone"]],[["clone"],[R[438]]]]],[5,"multinomial",E,"Calculate the multinomial coefficient.",N,[[],[["clone"],[R[438]]]]],[8,"Roots",E,"Provides methods to compute an integer's square root, cube…",N,N],[10,"nth_root",E,R[439],1,[[["self"],["u32"]],["self"]]],[11,"sqrt",E,R[440],1,[[["self"]],["self"]]],[11,"cbrt",E,R[441],1,[[["self"]],["self"]]],[8,"Integer",E,E,N,N],[10,R[442],E,"Floored integer division.",2,[[["self"]],["self"]]],[10,R[443],E,"Floored integer modulo, satisfying:",2,[[["self"]],["self"]]],[11,"div_ceil",E,"Ceiled integer division.",2,[[["self"]],["self"]]],[10,"gcd",E,"Greatest Common Divisor (GCD).",2,[[["self"]],["self"]]],[10,"lcm",E,"Lowest Common Multiple (LCM).",2,[[["self"]],["self"]]],[11,"gcd_lcm",E,"Greatest Common Divisor (GCD) and Lowest Common Multiple…",2,[[["self"]]]],[11,"extended_gcd",E,"Greatest common divisor and Bézout coefficients.",2,[[["self"]],[R[445]]]],[11,"extended_gcd_lcm",E,"Greatest common divisor, least common multiple, and Bézout…",2,[[["self"]]]],[10,"divides",E,"Deprecated, use `is_multiple_of` instead.",2,[[["self"]],["bool"]]],[10,"is_multiple_of",E,"Returns `true` if `self` is a multiple of `other`.",2,[[["self"]],["bool"]]],[10,"is_even",E,"Returns `true` if the number is even.",2,[[["self"]],["bool"]]],[10,"is_odd",E,"Returns `true` if the number is odd.",2,[[["self"]],["bool"]]],[10,"div_rem",E,"Simultaneous truncated integer division and modulus.…",2,[[["self"]]]],[11,R[444],E,"Simultaneous floored integer division and modulus. Returns…",2,[[["self"]]]],[11,"next_multiple_of",E,"Rounds up to nearest multiple of argument.",2,[[["self"]],["self"]]],[11,"prev_multiple_of",E,"Rounds down to nearest multiple of argument.",2,[[["self"]],["self"]]],[11,"new",E,"For a given n, iterate over all binomial coefficients…",3,[[[T]],["iterbinomial"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,"into",E,E,0,[[],[U]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[81]]]],[11,R[79],E,E,0,[[["self"]],[T]]],[11,R[80],E,E,0,[[["self"],[T]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[5],E,E,3,[[[U]],[R[4]]]],[11,"into",E,E,3,[[],[U]]],[11,R[6],E,E,3,[[],[R[4]]]],[11,R[18],E,E,3,[[],["i"]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[R[81]]]],[11,"eq",E,E,0,[[["self"],[R[445]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[445]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]],[11,"next",E,E,3,[[["self"]],[R[20]]]],[11,"clone",E,E,0,[[["self"]],[R[445]]]],[11,"sqrt",E,R[440],1,[[["self"]],["self"]]],[11,"cbrt",E,R[441],1,[[["self"]],["self"]]]],"p":[[3,R[446]],[8,"Roots"],[8,"Integer"],[3,R[447]]]};
searchIndex["num_traits"]={"doc":"Numeric traits for generic mathematics","i":[[3,R[408],R[336],E,N,N],[12,"kind",E,E,0,N],[4,R[409],E,E,N,N],[13,"Empty",E,E,1,N],[13,"Invalid",E,E,1,N],[5,"clamp",E,"A value bounded by a minimum and a maximum",N,[[[R[335]]],[R[335]]]],[5,"clamp_min",E,"A value bounded by a minimum value",N,[[[R[335]]],[R[335]]]],[5,"clamp_max",E,"A value bounded by a maximum value",N,[[[R[335]]],[R[335]]]],[0,"bounds",E,E,N,N],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",N,N],[10,R[337],E,"returns the smallest finite number this type can represent",2,[[],["self"]]],[10,R[338],E,"returns the largest finite number this type can represent",2,[[],["self"]]],[0,"cast",R[336],E,N,N],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",N,[[["numcast"]],[[R[20]],["numcast"]]]],[8,R[410],E,"A generic trait for converting a value to a number.",N,N],[11,"to_isize",E,"Converts the value of `self` to an `isize`. If the value…",3,[[["self"]],[["isize"],[R[20],["isize"]]]]],[11,"to_i8",E,"Converts the value of `self` to an `i8`. If the value…",3,[[["self"]],[[R[20],["i8"]],["i8"]]]],[11,"to_i16",E,"Converts the value of `self` to an `i16`. If the value…",3,[[["self"]],[["i16"],[R[20],["i16"]]]]],[11,"to_i32",E,"Converts the value of `self` to an `i32`. If the value…",3,[[["self"]],[["i32"],[R[20],["i32"]]]]],[10,"to_i64",E,"Converts the value of `self` to an `i64`. If the value…",3,[[["self"]],[["i64"],[R[20],["i64"]]]]],[11,"to_i128",E,"Converts the value of `self` to an `i128`. If the value…",3,[[["self"]],[[R[20],["i128"]],["i128"]]]],[11,"to_usize",E,"Converts the value of `self` to a `usize`. If the value…",3,[[["self"]],[[R[20],["usize"]],["usize"]]]],[11,"to_u8",E,"Converts the value of `self` to a `u8`. If the value…",3,[[["self"]],[[R[20],["u8"]],["u8"]]]],[11,"to_u16",E,"Converts the value of `self` to a `u16`. If the value…",3,[[["self"]],[["u16"],[R[20],["u16"]]]]],[11,"to_u32",E,"Converts the value of `self` to a `u32`. If the value…",3,[[["self"]],[["u32"],[R[20],["u32"]]]]],[10,"to_u64",E,"Converts the value of `self` to a `u64`. If the value…",3,[[["self"]],[[R[20],["u64"]],["u64"]]]],[11,"to_u128",E,"Converts the value of `self` to a `u128`. If the value…",3,[[["self"]],[["u128"],[R[20],["u128"]]]]],[11,"to_f32",E,"Converts the value of `self` to an `f32`. If the value…",3,[[["self"]],[["f32"],[R[20],["f32"]]]]],[11,"to_f64",E,"Converts the value of `self` to an `f64`. If the value…",3,[[["self"]],[[R[20],["f64"]],["f64"]]]],[8,R[411],E,"A generic trait for converting a number to a value.",N,N],[11,R[460],E,"Converts an `isize` to return an optional value of this…",4,[[["isize"]],[R[20]]]],[11,"from_i8",E,"Converts an `i8` to return an optional value of this type.…",4,[[["i8"]],[R[20]]]],[11,"from_i16",E,"Converts an `i16` to return an optional value of this…",4,[[["i16"]],[R[20]]]],[11,"from_i32",E,"Converts an `i32` to return an optional value of this…",4,[[["i32"]],[R[20]]]],[10,"from_i64",E,"Converts an `i64` to return an optional value of this…",4,[[["i64"]],[R[20]]]],[11,R[461],E,"Converts an `i128` to return an optional value of this…",4,[[["i128"]],[R[20]]]],[11,R[462],E,"Converts a `usize` to return an optional value of this…",4,[[["usize"]],[R[20]]]],[11,"from_u8",E,"Converts an `u8` to return an optional value of this type.…",4,[[["u8"]],[R[20]]]],[11,"from_u16",E,"Converts an `u16` to return an optional value of this…",4,[[["u16"]],[R[20]]]],[11,"from_u32",E,"Converts an `u32` to return an optional value of this…",4,[[["u32"]],[R[20]]]],[10,"from_u64",E,"Converts an `u64` to return an optional value of this…",4,[[["u64"]],[R[20]]]],[11,R[463],E,"Converts an `u128` to return an optional value of this…",4,[[["u128"]],[R[20]]]],[11,"from_f32",E,"Converts a `f32` to return an optional value of this type.…",4,[[["f32"]],[R[20]]]],[11,"from_f64",E,"Converts a `f64` to return an optional value of this type.…",4,[[["f64"]],[R[20]]]],[8,"NumCast",E,"An interface for casting between machine scalars.",N,N],[10,"from",E,"Creates a number from another value that can be converted…",5,[[[R[464]]],[R[20]]]],[8,R[412],E,"A generic interface for casting between machine scalars…",N,N],[10,"as_",E,"Convert a value to another, using the `as` operator.",6,[[],[T]]],[0,"float",R[336],E,N,N],[8,R[413],"num_traits::float","Generic trait for floating point numbers that works with…",N,N],[10,"infinity",E,"Returns positive infinity.",7,[[],["self"]]],[10,R[339],E,"Returns negative infinity.",7,[[],["self"]]],[10,"nan",E,"Returns NaN.",7,[[],["self"]]],[10,"neg_zero",E,R[340],7,[[],["self"]]],[10,R[337],E,R[341],7,[[],["self"]]],[10,R[342],E,R[343],7,[[],["self"]]],[10,"epsilon",E,R[344],7,[[],["self"]]],[10,R[338],E,R[345],7,[[],["self"]]],[11,"is_nan",E,"Returns `true` if the number is NaN.",7,[[],["bool"]]],[11,R[346],E,"Returns `true` if the number is infinite.",7,[[],["bool"]]],[11,R[347],E,"Returns `true` if the number is neither infinite or NaN.",7,[[],["bool"]]],[11,R[348],E,R[349],7,[[],["bool"]]],[10,"classify",E,R[350],7,[[],[R[351]]]],[11,"floor",E,R[352],7,[[],["self"]]],[11,"ceil",E,R[353],7,[[],["self"]]],[11,"round",E,R[354],7,[[],["self"]]],[11,"trunc",E,R[355],7,[[],["self"]]],[11,"fract",E,R[356],7,[[],["self"]]],[11,"abs",E,R[357],7,[[],["self"]]],[11,"signum",E,R[358],7,[[],["self"]]],[11,R[359],E,"Returns `true` if `self` is positive, including `+0.0` and…",7,[[],["bool"]]],[11,R[360],E,"Returns `true` if `self` is negative, including `-0.0` and…",7,[[],["bool"]]],[11,"min",E,R[365],7,[[],["self"]]],[11,"max",E,R[364],7,[[],["self"]]],[11,"recip",E,"Returns the reciprocal (multiplicative inverse) of the…",7,[[],["self"]]],[11,"powi",E,R[361],7,[[["i32"]],["self"]]],[10,R[362],E,"Converts to degrees, assuming the number is in radians.",7,[[],["self"]]],[10,R[363],E,"Converts to radians, assuming the number is in degrees.",7,[[],["self"]]],[10,R[366],E,R[367],7,[[]]],[8,"Float",E,"Generic trait for floating point numbers",N,N],[10,"nan",E,"Returns the `NaN` value.",8,[[],["self"]]],[10,"infinity",E,"Returns the infinite value.",8,[[],["self"]]],[10,R[339],E,"Returns the negative infinite value.",8,[[],["self"]]],[10,"neg_zero",E,R[340],8,[[],["self"]]],[10,R[337],E,R[341],8,[[],["self"]]],[10,R[342],E,R[343],8,[[],["self"]]],[11,"epsilon",E,R[344],8,[[],["self"]]],[10,R[338],E,R[345],8,[[],["self"]]],[10,"is_nan",E,"Returns `true` if this value is `NaN` and false otherwise.",8,[[],["bool"]]],[10,R[346],E,"Returns `true` if this value is positive infinity or…",8,[[],["bool"]]],[10,R[347],E,"Returns `true` if this number is neither infinite nor `NaN`.",8,[[],["bool"]]],[10,R[348],E,R[349],8,[[],["bool"]]],[10,"classify",E,R[350],8,[[],[R[351]]]],[10,"floor",E,R[352],8,[[],["self"]]],[10,"ceil",E,R[353],8,[[],["self"]]],[10,"round",E,R[354],8,[[],["self"]]],[10,"trunc",E,R[355],8,[[],["self"]]],[10,"fract",E,R[356],8,[[],["self"]]],[10,"abs",E,R[357],8,[[],["self"]]],[10,"signum",E,R[358],8,[[],["self"]]],[10,R[359],E,R[375],8,[[],["bool"]]],[10,R[360],E,R[376],8,[[],["bool"]]],[10,"mul_add",E,R[371],8,[[],["self"]]],[10,"recip",E,R[377],8,[[],["self"]]],[10,"powi",E,R[361],8,[[["i32"]],["self"]]],[10,"powf",E,"Raise a number to a floating point power.",8,[[],["self"]]],[10,"sqrt",E,R[378],8,[[],["self"]]],[10,"exp",E,R[379],8,[[],["self"]]],[10,"exp2",E,R[380],8,[[],["self"]]],[10,"ln",E,R[381],8,[[],["self"]]],[10,"log",E,R[382],8,[[],["self"]]],[10,"log2",E,R[383],8,[[],["self"]]],[10,"log10",E,R[384],8,[[],["self"]]],[11,R[362],E,R[385],8,[[],["self"]]],[11,R[363],E,R[386],8,[[],["self"]]],[10,"max",E,R[364],8,[[],["self"]]],[10,"min",E,R[365],8,[[],["self"]]],[10,"abs_sub",E,R[387],8,[[],["self"]]],[10,"cbrt",E,R[388],8,[[],["self"]]],[10,"hypot",E,R[389],8,[[],["self"]]],[10,"sin",E,R[390],8,[[],["self"]]],[10,"cos",E,R[391],8,[[],["self"]]],[10,"tan",E,R[392],8,[[],["self"]]],[10,"asin",E,R[393],8,[[],["self"]]],[10,"acos",E,R[394],8,[[],["self"]]],[10,"atan",E,R[395],8,[[],["self"]]],[10,"atan2",E,R[396],8,[[],["self"]]],[10,"sin_cos",E,R[397],8,[[]]],[10,"exp_m1",E,R[398],8,[[],["self"]]],[10,"ln_1p",E,R[399],8,[[],["self"]]],[10,"sinh",E,R[400],8,[[],["self"]]],[10,"cosh",E,R[401],8,[[],["self"]]],[10,"tanh",E,R[402],8,[[],["self"]]],[10,"asinh",E,R[403],8,[[],["self"]]],[10,"acosh",E,R[404],8,[[],["self"]]],[10,"atanh",E,R[405],8,[[],["self"]]],[10,R[366],E,R[367],8,[[]]],[8,R[414],E,E,N,N],[10,"E",E,"Return Euler’s number.",9,[[],["self"]]],[10,"FRAC_1_PI",E,"Return `1.0 / π`.",9,[[],["self"]]],[10,"FRAC_1_SQRT_2",E,"Return `1.0 / sqrt(2.0)`.",9,[[],["self"]]],[10,"FRAC_2_PI",E,"Return `2.0 / π`.",9,[[],["self"]]],[10,"FRAC_2_SQRT_PI",E,"Return `2.0 / sqrt(π)`.",9,[[],["self"]]],[10,"FRAC_PI_2",E,"Return `π / 2.0`.",9,[[],["self"]]],[10,"FRAC_PI_3",E,"Return `π / 3.0`.",9,[[],["self"]]],[10,"FRAC_PI_4",E,"Return `π / 4.0`.",9,[[],["self"]]],[10,"FRAC_PI_6",E,"Return `π / 6.0`.",9,[[],["self"]]],[10,"FRAC_PI_8",E,"Return `π / 8.0`.",9,[[],["self"]]],[10,"LN_10",E,"Return `ln(10.0)`.",9,[[],["self"]]],[10,"LN_2",E,"Return `ln(2.0)`.",9,[[],["self"]]],[10,"LOG10_E",E,"Return `log10(e)`.",9,[[],["self"]]],[10,"LOG2_E",E,"Return `log2(e)`.",9,[[],["self"]]],[10,"PI",E,"Return Archimedes’ constant.",9,[[],["self"]]],[10,"SQRT_2",E,"Return `sqrt(2.0)`.",9,[[],["self"]]],[0,"identities",R[336],E,N,N],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",N,[[],["zero"]]],[5,"one",E,"Returns the multiplicative identity, `1`.",N,[[],["one"]]],[8,"Zero",E,"Defines an additive identity element for `Self`.",N,N],[10,"zero",E,"Returns the additive identity element of `Self`, `0`. #…",10,[[],["self"]]],[11,"set_zero",E,"Sets `self` to the additive identity element of `Self`, `0`.",10,[[["self"]]]],[10,R[755],E,"Returns `true` if `self` is equal to the additive identity.",10,[[["self"]],["bool"]]],[8,"One",E,"Defines a multiplicative identity element for `Self`.",N,N],[10,"one",E,"Returns the multiplicative identity element of `Self`, `1`.",11,[[],["self"]]],[11,"set_one",E,"Sets `self` to the multiplicative identity element of…",11,[[["self"]]]],[11,"is_one",E,"Returns `true` if `self` is equal to the multiplicative…",11,[[["self"]],["bool"]]],[0,"int",R[336],E,N,N],[8,"PrimInt","num_traits::int","Generic trait for primitive integers.",N,N],[10,"count_ones",E,"Returns the number of ones in the binary representation of…",12,[[],["u32"]]],[10,"count_zeros",E,"Returns the number of zeros in the binary representation…",12,[[],["u32"]]],[10,"leading_zeros",E,"Returns the number of leading zeros in the binary…",12,[[],["u32"]]],[10,"trailing_zeros",E,"Returns the number of trailing zeros in the binary…",12,[[],["u32"]]],[10,"rotate_left",E,R[368],12,[[["u32"]],["self"]]],[10,"rotate_right",E,R[369],12,[[["u32"]],["self"]]],[10,"signed_shl",E,R[368],12,[[["u32"]],["self"]]],[10,"signed_shr",E,R[369],12,[[["u32"]],["self"]]],[10,"unsigned_shl",E,R[368],12,[[["u32"]],["self"]]],[10,"unsigned_shr",E,R[369],12,[[["u32"]],["self"]]],[10,"swap_bytes",E,"Reverses the byte order of the integer.",12,[[],["self"]]],[10,"from_be",E,"Convert an integer from big endian to the target's…",12,[[],["self"]]],[10,"from_le",E,"Convert an integer from little endian to the target's…",12,[[],["self"]]],[10,"to_be",E,"Convert `self` to big endian from the target's endianness.",12,[[],["self"]]],[10,"to_le",E,"Convert `self` to little endian from the target's…",12,[[],["self"]]],[10,"pow",E,"Raises self to the power of `exp`, using exponentiation by…",12,[[["u32"]],["self"]]],[0,"ops",R[336],E,N,N],[0,"checked",R[370],E,N,N],[8,R[415],"num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",N,N],[10,"checked_add",E,"Adds two numbers, checking for overflow. If overflow…",13,[[["self"]],[R[20]]]],[8,R[416],E,"Performs subtraction that returns `None` instead of…",N,N],[10,"checked_sub",E,"Subtracts two numbers, checking for underflow. If…",14,[[["self"]],[R[20]]]],[8,R[417],E,"Performs multiplication that returns `None` instead of…",N,N],[10,"checked_mul",E,"Multiplies two numbers, checking for underflow or…",15,[[["self"]],[R[20]]]],[8,R[418],E,"Performs division that returns `None` instead of panicking…",N,N],[10,"checked_div",E,"Divides two numbers, checking for underflow, overflow and…",16,[[["self"]],[R[20]]]],[8,R[419],E,"Performs an integral remainder that returns `None` instead…",N,N],[10,"checked_rem",E,"Finds the remainder of dividing two numbers, checking for…",17,[[["self"]],[R[20]]]],[8,R[420],E,"Performs negation that returns `None` if the result can't…",N,N],[10,"checked_neg",E,"Negates a number, returning `None` for results that can't…",18,[[["self"]],[R[20]]]],[8,R[421],E,"Performs a left shift that returns `None` on shifts larger…",N,N],[10,"checked_shl",E,"Checked shift left. Computes `self << rhs`, returning…",19,[[["self"],["u32"]],[R[20]]]],[8,R[422],E,"Performs a right shift that returns `None` on shifts…",N,N],[10,"checked_shr",E,"Checked shift right. Computes `self >> rhs`, returning…",20,[[["self"],["u32"]],[R[20]]]],[0,"inv",R[370],E,N,N],[8,"Inv","num_traits::ops::inv","Unary operator for retrieving the multiplicative inverse,…",N,N],[16,"Output",E,R[374],21,N],[10,"inv",E,"Returns the multiplicative inverse of `self`.",21,[[]]],[0,"mul_add",R[370],E,N,N],[8,"MulAdd","num_traits::ops::mul_add",R[371],N,N],[16,"Output",E,"The resulting type after applying the fused multiply-add.",22,N],[10,"mul_add",E,R[372],22,[[["a"],["b"]]]],[8,R[423],E,"The fused multiply-add assignment operation.",N,N],[10,R[458],E,R[372],23,[[["self"],["a"],["b"]]]],[0,"saturating",R[370],E,N,N],[8,R[424],"num_traits::ops::saturating","Saturating math operations",N,N],[10,"saturating_add",E,"Saturating addition operator. Returns a+b, saturating at…",24,[[],["self"]]],[10,"saturating_sub",E,"Saturating subtraction operator. Returns a-b, saturating…",24,[[],["self"]]],[0,"wrapping",R[370],E,N,N],[8,R[425],"num_traits::ops::wrapping","Performs addition that wraps around on overflow.",N,N],[10,"wrapping_add",E,"Wrapping (modular) addition. Computes `self + other`,…",25,[[["self"]],["self"]]],[8,R[426],E,"Performs subtraction that wraps around on overflow.",N,N],[10,"wrapping_sub",E,"Wrapping (modular) subtraction. Computes `self - other`,…",26,[[["self"]],["self"]]],[8,R[427],E,"Performs multiplication that wraps around on overflow.",N,N],[10,"wrapping_mul",E,"Wrapping (modular) multiplication. Computes `self *…",27,[[["self"]],["self"]]],[8,R[428],E,"Performs a left shift that does not panic.",N,N],[10,"wrapping_shl",E,"Panic-free bitwise shift-left; yields `self << mask(rhs)`,…",28,[[["self"],["u32"]],["self"]]],[8,R[429],E,"Performs a right shift that does not panic.",N,N],[10,"wrapping_shr",E,"Panic-free bitwise shift-right; yields `self >>…",29,[[["self"],["u32"]],["self"]]],[0,"pow",R[336],E,N,N],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation…",N,[[["usize"],["clone"],["one"],["mul"]],[["one"],["clone"],["mul"]]]],[5,"checked_pow",E,"Raises a value to the power of exp, returning `None` if an…",N,[[[R[373]],["clone"],["one"],["usize"]],[[R[20]],[R[373]],["one"],["clone"]]]],[8,"Pow",E,"Binary operator for raising a value to a power.",N,N],[16,"Output",E,R[374],30,N],[10,"pow",E,"Returns `self` to the power `rhs`.",30,[[["rhs"]]]],[0,"real",R[336],E,N,N],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have…",N,N],[10,R[337],E,R[341],31,[[],["self"]]],[10,R[342],E,R[343],31,[[],["self"]]],[10,"epsilon",E,R[344],31,[[],["self"]]],[10,R[338],E,R[345],31,[[],["self"]]],[10,"floor",E,R[352],31,[[],["self"]]],[10,"ceil",E,R[353],31,[[],["self"]]],[10,"round",E,R[354],31,[[],["self"]]],[10,"trunc",E,R[355],31,[[],["self"]]],[10,"fract",E,R[356],31,[[],["self"]]],[10,"abs",E,R[357],31,[[],["self"]]],[10,"signum",E,R[358],31,[[],["self"]]],[10,R[359],E,R[375],31,[[],["bool"]]],[10,R[360],E,R[376],31,[[],["bool"]]],[10,"mul_add",E,R[371],31,[[],["self"]]],[10,"recip",E,R[377],31,[[],["self"]]],[10,"powi",E,R[361],31,[[["i32"]],["self"]]],[10,"powf",E,"Raise a number to a real number power.",31,[[],["self"]]],[10,"sqrt",E,R[378],31,[[],["self"]]],[10,"exp",E,R[379],31,[[],["self"]]],[10,"exp2",E,R[380],31,[[],["self"]]],[10,"ln",E,R[381],31,[[],["self"]]],[10,"log",E,R[382],31,[[],["self"]]],[10,"log2",E,R[383],31,[[],["self"]]],[10,"log10",E,R[384],31,[[],["self"]]],[10,R[362],E,R[385],31,[[],["self"]]],[10,R[363],E,R[386],31,[[],["self"]]],[10,"max",E,R[364],31,[[],["self"]]],[10,"min",E,R[365],31,[[],["self"]]],[10,"abs_sub",E,R[387],31,[[],["self"]]],[10,"cbrt",E,R[388],31,[[],["self"]]],[10,"hypot",E,R[389],31,[[],["self"]]],[10,"sin",E,R[390],31,[[],["self"]]],[10,"cos",E,R[391],31,[[],["self"]]],[10,"tan",E,R[392],31,[[],["self"]]],[10,"asin",E,R[393],31,[[],["self"]]],[10,"acos",E,R[394],31,[[],["self"]]],[10,"atan",E,R[395],31,[[],["self"]]],[10,"atan2",E,R[396],31,[[],["self"]]],[10,"sin_cos",E,R[397],31,[[]]],[10,"exp_m1",E,R[398],31,[[],["self"]]],[10,"ln_1p",E,R[399],31,[[],["self"]]],[10,"sinh",E,R[400],31,[[],["self"]]],[10,"cosh",E,R[401],31,[[],["self"]]],[10,"tanh",E,R[402],31,[[],["self"]]],[10,"asinh",E,R[403],31,[[],["self"]]],[10,"acosh",E,R[404],31,[[],["self"]]],[10,"atanh",E,R[405],31,[[],["self"]]],[0,"sign",R[336],E,N,N],[5,"abs","num_traits::sign",R[406],N,[[["signed"]],["signed"]]],[5,"abs_sub",E,R[387],N,[[["signed"]],["signed"]]],[5,"signum",E,R[407],N,[[["signed"]],["signed"]]],[8,"Signed",E,"Useful functions for signed numbers (i.e. numbers that can…",N,N],[10,"abs",E,R[406],32,[[["self"]],["self"]]],[10,"abs_sub",E,R[387],32,[[["self"]],["self"]]],[10,"signum",E,R[407],32,[[["self"]],["self"]]],[10,"is_positive",E,"Returns true if the number is positive and false if the…",32,[[["self"]],["bool"]]],[10,"is_negative",E,"Returns true if the number is negative and false if the…",32,[[["self"]],["bool"]]],[8,"Unsigned",E,"A trait for values which cannot be negative",N,N],[8,"Num",R[336],"The base trait for numeric types, covering `0` and `1`…",N,N],[16,"FromStrRadixErr",E,E,33,N],[10,R[465],E,"Convert from a string and radix <= 36.",33,[[["u32"],["str"]],[R[4]]]],[8,"NumOps",E,"The trait for types implementing basic numeric operations",N,N],[8,"NumRef",E,"The trait for `Num` types which also implement numeric…",N,N],[8,"RefNum",E,"The trait for references which implement numeric…",N,N],[8,"NumAssignOps",E,"The trait for types implementing numeric assignment…",N,N],[8,"NumAssign",E,"The trait for `Num` types which also implement assignment…",N,N],[8,"NumAssignRef",E,"The trait for `NumAssign` types which also implement…",N,N],[11,"from",E,E,0,[[[T]],[T]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,"into",E,E,0,[[],[U]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[81]]]],[11,R[82],E,E,0,[[["self"]],[R[83]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[5],E,E,1,[[[U]],[R[4]]]],[11,"into",E,E,1,[[],[U]]],[11,R[6],E,E,1,[[],[R[4]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[R[81]]]],[11,"fmt",E,E,1,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]]],"p":[[3,R[408]],[4,R[409]],[8,"Bounded"],[8,R[410]],[8,R[411]],[8,"NumCast"],[8,R[412]],[8,R[413]],[8,"Float"],[8,R[414]],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,R[415]],[8,R[416]],[8,R[417]],[8,R[418]],[8,R[419]],[8,R[420]],[8,R[421]],[8,R[422]],[8,"Inv"],[8,"MulAdd"],[8,R[423]],[8,R[424]],[8,R[425]],[8,R[426]],[8,R[427]],[8,R[428]],[8,R[429]],[8,"Pow"],[8,"Real"],[8,"Signed"],[8,"Num"]]};
searchIndex["quadrature"]={"doc":"The primary function of this library is `integrate`, witch…","i":[[3,"Output",R[24],E,N,N],[12,"num_function_evaluations",E,E,0,N],[12,"error_estimate",E,E,0,N],[12,"integral",E,E,0,N],[0,"double_exponential",E,"The double exponential algorithm is naturally adaptive, it…",N,N],[5,R[25],"quadrature::double_exponential",R[26],N,[[["f64"],["f"]],["output"]]],[0,"clenshaw_curtis",R[24],"The `clenshaw_curtis` module provides a `integrate`…",N,N],[5,R[25],"quadrature::clenshaw_curtis",R[26],N,[[["f64"],["f"]],["output"]]],[11,R[79],R[24],E,0,[[["self"]],[T]]],[11,R[80],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[81]]]],[11,"clone",E,E,0,[[["self"]],["output"]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]]],"p":[[3,"Output"]]};
searchIndex["rawpointer"]={"doc":"Rawpointer adds extra utility methods to raw pointers…","i":[[5,"ptrdistance","rawpointer","Return the number of elements of `T` from `start` to…",N,[[],["usize"]]],[8,R[23],E,"Extension methods for raw pointers",N,N],[10,"offset",E,E,0,[[["isize"]],["self"]]],[11,"add",E,E,0,[[["usize"]],["self"]]],[11,"sub",E,E,0,[[["usize"]],["self"]]],[11,"pre_inc",E,"Increment the pointer by 1, and return its new value.",0,[[["self"]],["self"]]],[11,"post_inc",E,"Increment the pointer by 1, but return its old value.",0,[[["self"]],["self"]]],[11,"pre_dec",E,"Decrement the pointer by 1, and return its new value.",0,[[["self"]],["self"]]],[11,"post_dec",E,"Decrement the pointer by 1, but return its old value.",0,[[["self"]],["self"]]],[11,"inc",E,"Increment by 1",0,[[["self"]]]],[11,"dec",E,"Decrement by 1",0,[[["self"]]]],[11,R[731],E,"Offset the pointer by `s` multiplied by `index`.",0,[[["isize"],["usize"]],["self"]]]],"p":[[8,R[23]]]};
searchIndex["rayon"]={"doc":"Data-parallelism library that makes it easy to convert…","i":[[3,R[517],"rayon",R[613],N,N],[3,R[512],E,R[609],N,N],[3,R[514],E,R[610],N,N],[3,R[518],E,R[611],N,N],[3,R[515],E,R[612],N,N],[5,R[497],E,R[620],N,[[],["usize"]]],[5,R[498],E,R[619],N,[[],[[R[20],["usize"]],["usize"]]]],[5,"join",E,R[614],N,[[["a"],["b"]]]],[5,R[615],E,R[616],N,[[["a"],["b"]]]],[5,"scope",E,R[617],N,[[["op"]],["r"]]],[3,"Scope",E,R[489],N,N],[5,R[500],E,R[618],N,[[["op"]],["r"]]],[3,R[513],E,R[489],N,N],[5,"spawn",E,R[490],N,[[["f"]]]],[5,R[493],E,R[490],N,[[["f"]]]],[0,"collections",E,"Parallel iterator types for [standard…",N,N],[0,"binary_heap",R[519],"This module contains the parallel iterator types for heaps…",N,N],[3,R[521],R[555],"Parallel iterator over a binary heap",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a binary…",N,N],[0,"btree_map",R[519],R[520],N,N],[3,R[521],R[556],"Parallel iterator over a B-Tree map",N,N],[3,"Iter",E,R[522],N,N],[3,R[549],E,"Parallel iterator over a mutable reference to a B-Tree map",N,N],[0,"btree_set",R[519],R[520],N,N],[3,R[521],R[557],"Parallel iterator over a B-Tree set",N,N],[3,"Iter",E,R[522],N,N],[0,"hash_map",R[519],R[523],N,N],[3,R[521],R[558],"Parallel iterator over a hash map",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a hash map",N,N],[3,R[549],E,"Parallel iterator over a mutable reference to a hash map",N,N],[0,"hash_set",R[519],R[523],N,N],[3,R[521],R[559],"Parallel iterator over a hash set",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a hash set",N,N],[0,"linked_list",R[519],R[520],N,N],[3,R[521],R[560],"Parallel iterator over a linked list",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a linked…",N,N],[3,R[549],E,"Parallel iterator over a mutable reference to a linked list",N,N],[0,"vec_deque",R[519],R[520],N,N],[3,R[521],R[561],"Parallel iterator over a double-ended queue",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a…",N,N],[3,R[549],E,"Parallel iterator over a mutable reference to a…",N,N],[0,"iter","rayon","Traits for writing parallel programs using an…",N,N],[4,"Either",R[526],R[27],N,N],[13,"Left",E,R[28],0,N],[13,"Right",E,R[29],0,N],[3,R[598],E,"`IterBridge` is a parallel iterator that wraps a…",N,N],[3,"Chain",E,"`Chain` is an iterator that joins `b` after `a` in one…",N,N],[3,"Chunks",E,"`Chunks` is an iterator that groups elements of an…",N,N],[3,R[599],E,"`Enumerate` is an iterator that returns the current count…",N,N],[3,"Filter",E,"`Filter` takes a predicate `filter_op` and filters out…",N,N],[3,R[600],E,"`FilterMap` creates an iterator that uses `filter_op` to…",N,N],[3,"FlatMap",E,"`FlatMap` maps each element to an iterator, then flattens…",N,N],[3,"Flatten",E,"`Flatten` turns each element to an iterator, then flattens…",N,N],[3,"Fold",E,"`Fold` is an iterator that applies a function over an…",N,N],[3,"FoldWith",E,"`FoldWith` is an iterator that applies a function over an…",N,N],[3,"TryFold",E,"`TryFold` is an iterator that applies a function over an…",N,N],[3,R[601],E,"`TryFoldWith` is an iterator that applies a function over…",N,N],[3,"Skip",E,"`Skip` is an iterator that skips over the first `n`…",N,N],[3,"Split",E,"`Split` is a parallel iterator using arbitrary data and a…",N,N],[3,"Take",E,"`Take` is an iterator that iterates over the first `n`…",N,N],[3,"Map",E,"`Map` is an iterator that transforms the elements of an…",N,N],[3,"MapInit",E,"`MapInit` is an iterator that transforms the elements of…",N,N],[3,"MapWith",E,"`MapWith` is an iterator that transforms the elements of…",N,N],[3,"Zip",E,"`Zip` is an iterator that zips up `a` and `b` into a…",N,N],[3,"ZipEq",E,"An [`IndexedParallelIterator`] that iterates over two…",N,N],[3,R[131],E,"`Interleave` is an iterator that interleaves elements of…",N,N],[3,R[132],E,"`InterleaveShortest` is an iterator that works similarly…",N,N],[3,R[145],E,"`Intersperse` is an iterator that inserts a particular…",N,N],[3,"Update",E,"`Update` is an iterator that mutates the elements of an…",N,N],[3,"Rev",E,"`Rev` is an iterator that produces elements in reverse…",N,N],[3,"MaxLen",E,"`MaxLen` is an iterator that imposes a maximum length on…",N,N],[3,"MinLen",E,"`MinLen` is an iterator that imposes a minimum length on…",N,N],[3,"Cloned",E,"`Cloned` is an iterator that clones the elements of an…",N,N],[3,"Copied",E,"`Copied` is an iterator that copies the elements of an…",N,N],[3,"Inspect",E,"`Inspect` is an iterator that calls a function with a…",N,N],[3,R[602],E,"`PanicFuse` is an adaptor that wraps an iterator with a…",N,N],[3,R[135],E,"`WhileSome` is an iterator that yields the `Some` elements…",N,N],[3,"Repeat",E,"Iterator adaptor for the `repeat()` function.",N,N],[3,"RepeatN",E,"Iterator adaptor for the `repeatn()` function.",N,N],[3,"Empty",E,"Iterator adaptor for the `empty()` function.",N,N],[3,"Once",E,"Iterator adaptor for the `once()` function.",N,N],[5,"split",E,"The `split` function takes arbitrary data and a closure…",N,[[["d"],["s"]],["split"]]],[5,"repeat",E,"Creates a parallel iterator that endlessly repeats `elt`…",N,[[["clone"],["send"]],[["repeat"],["clone"],["send"]]]],[5,R[527],E,"Creates a parallel iterator that produces `n` repeats of…",N,[[["clone"],["usize"],["send"]],[["clone"],[R[527]],["send"]]]],[5,"empty",E,"Creates a parallel iterator that produces nothing.",N,[[],[["empty"],["send"]]]],[5,"once",E,"Creates a parallel iterator that produces an element…",N,[[["send"]],[["once"],["send"]]]],[0,"plumbing",E,"Traits and functions used to implement parallel iteration.…",N,N],[5,"bridge","rayon::iter::plumbing","This helper function is used to \"connect\" a parallel…",N,[[["c"],["i"]]]],[5,"bridge_producer_consumer",E,"This helper function is used to \"connect\" a producer and a…",N,[[["c"],["usize"],["p"]]]],[5,"bridge_unindexed",E,"A variant of [`bridge_producer_consumer`] where the…",N,[[["c"],["p"]]]],[8,R[585],E,"The `ProducerCallback` trait is a kind of generic closure,…",N,N],[16,"Output",E,"The type of value returned by this callback. Analogous to…",1,N],[10,"callback",E,"Invokes the callback with the given producer as argument.…",1,[[["p"]]]],[8,"Producer",E,"A `Producer` is effectively a \"splittable `IntoIterator`\".…",N,N],[16,"Item",E,"The type of item that will be produced by this producer…",2,N],[16,R[521],E,"The type of iterator we will become.",2,N],[10,R[18],E,"Convert `self` into an iterator; at this point, no more…",2,[[]]],[11,"min_len",E,"The minimum number of items that we will process…",2,[[["self"]],["usize"]]],[11,"max_len",E,"The maximum number of items that we will process…",2,[[["self"]],["usize"]]],[10,R[660],E,"Split into two producers; one produces items `0..index`,…",2,[[["usize"]]]],[11,R[524],E,R[525],2,[[["f"]],["f"]]],[8,"Consumer",E,"A consumer is effectively a [generalized \"fold\"…",N,N],[16,"Folder",E,"The type of folder that this consumer can be converted into.",3,N],[16,"Reducer",E,"The type of reducer that is produced if this consumer is…",3,N],[16,"Result",E,"The type of result that this consumer will ultimately…",3,N],[10,R[660],E,"Divide the consumer into two consumers, one processing…",3,[[["usize"]]]],[10,"into_folder",E,"Convert the consumer into a folder that can consume items…",3,[[]]],[10,"full",E,"Hint whether this `Consumer` would like to stop processing…",3,[[["self"]],["bool"]]],[8,"Folder",E,"The `Folder` trait encapsulates [the standard fold…",N,N],[16,"Result",E,"The type of result that will ultimately be produced by the…",4,N],[10,"consume",E,"Consume next item and return new sequential state.",4,[[["item"]],["self"]]],[11,"consume_iter",E,"Consume items from the iterator until full, and return new…",4,[[["i"]],["self"]]],[10,"complete",E,"Finish consuming items, produce final result.",4,[[]]],[10,"full",E,"Hint whether this `Folder` would like to stop processing…",4,[[["self"]],["bool"]]],[8,"Reducer",E,"The reducer is the final step of a `Consumer` -- after a…",N,N],[10,"reduce",E,"Reduce two final results into one; this is executed after…",5,[[[R[4]]],[R[4]]]],[8,R[586],E,"A stateless consumer can be freely copied. These consumers…",N,N],[10,"split_off_left",E,"Splits off a \"left\" consumer and returns it. The `self`…",6,[[["self"]],["self"]]],[10,"to_reducer",E,"Creates a reducer that can be used to combine the results…",6,[[["self"]]]],[8,R[587],E,"A variant on `Producer` which does not know its exact…",N,N],[16,"Item",E,"The type of item returned by this producer.",7,N],[10,"split",E,"Split midway into a new producer if possible, otherwise…",7,[[]]],[10,R[524],E,R[525],7,[[["f"]],["f"]]],[11,"take",R[526],"Take only `n` repeats of the element, similar to the…",8,[[["usize"]],[R[527]]]],[11,"zip",E,"Iterate tuples repeating the element with items from…",8,[[["z"]],[[R[527]],["zip",[R[527]]]]]],[8,R[544],E,R[545],N,N],[10,R[546],E,R[547],9,[[],[R[548]]]],[8,R[588],E,"`IntoParallelIterator` implements the conversion to a…",N,N],[16,"Iter",E,"The parallel iterator type that will be created.",10,N],[16,"Item",E,"The type of item that the parallel iterator will produce.",10,N],[10,R[554],E,R[528],10,[[]]],[8,R[589],E,"`IntoParallelRefIterator` implements the conversion to a…",N,N],[16,"Iter",E,"The type of the parallel iterator that will be returned.",11,N],[16,"Item",E,"The type of item that the parallel iterator will produce.…",11,N],[10,"par_iter",E,R[528],11,[[["self"]]]],[8,R[590],E,"`IntoParallelRefMutIterator` implements the conversion to…",N,N],[16,"Iter",E,"The type of iterator that will be created.",12,N],[16,"Item",E,"The type of item that will be produced; this is typically…",12,N],[10,R[807],E,"Creates the parallel iterator from `self`.",12,[[["self"]]]],[8,R[591],E,"Parallel version of the standard iterator trait.",N,N],[16,"Item",E,"The type of item that this parallel iterator produces. For…",13,N],[11,"for_each",E,"Executes `OP` on each item produced by the iterator, in…",13,[[["op"]]]],[11,"for_each_with",E,"Executes `OP` on the given `init` value with each item…",13,[[["op"],[T]]]],[11,"for_each_init",E,"Executes `OP` on a value returned by `init` with each item…",13,[[["op"],["init"]]]],[11,"try_for_each",E,"Executes a fallible `OP` on each item produced by the…",13,[[["op"]],["r"]]],[11,"try_for_each_with",E,"Executes a fallible `OP` on the given `init` value with…",13,[[["op"],[T]],["r"]]],[11,"try_for_each_init",E,"Executes a fallible `OP` on a value returned by `init`…",13,[[["op"],["init"]],["r"]]],[11,"count",E,"Counts the number of items in this parallel iterator.",13,[[],["usize"]]],[11,"map",E,"Applies `map_op` to each item of this iterator, producing…",13,[[["f"]],["map"]]],[11,"map_with",E,"Applies `map_op` to the given `init` value with each item…",13,[[[T],["f"]],["mapwith"]]],[11,"map_init",E,"Applies `map_op` to a value returned by `init` with each…",13,[[["init"],["f"]],["mapinit"]]],[11,"cloned",E,"Creates an iterator which clones all of its elements. This…",13,[[],["cloned"]]],[11,"copied",E,"Creates an iterator which copies all of its elements. This…",13,[[],["copied"]]],[11,"inspect",E,"Applies `inspect_op` to a reference to each item of this…",13,[[["op"]],["inspect"]]],[11,"update",E,"Mutates each item of this iterator before yielding it.",13,[[["f"]],["update"]]],[11,"filter",E,"Applies `filter_op` to each item of this iterator,…",13,[[["p"]],["filter"]]],[11,"filter_map",E,"Applies `filter_op` to each item of this iterator to get…",13,[[["p"]],[R[575]]]],[11,"flat_map",E,"Applies `map_op` to each item of this iterator to get…",13,[[["f"]],["flatmap"]]],[11,"flatten",E,"An adaptor that flattens iterable `Item`s into one large…",13,[[],["flatten"]]],[11,"reduce",E,R[529],13,[[["op"],["id"]]]],[11,"reduce_with",E,R[529],13,[[["op"]],[R[20]]]],[11,"try_reduce",E,R[530],13,[[["op"],["id"]]]],[11,"try_reduce_with",E,R[530],13,[[["op"]],[R[20]]]],[11,"fold",E,"Parallel fold is similar to sequential fold except that…",13,[[["id"],["f"]],["fold"]]],[11,R[524],E,"Applies `fold_op` to the given `init` value with each item…",13,[[[T],["f"]],["foldwith"]]],[11,"try_fold",E,"Perform a fallible parallel fold.",13,[[["id"],["f"]],["tryfold"]]],[11,"try_fold_with",E,"Perform a fallible parallel fold with a cloneable `init`…",13,[[[T],["f"]],[R[576]]]],[11,"sum",E,"Sums up the items in the iterator.",13,[[],["s"]]],[11,R[531],E,"Multiplies all the items in the iterator.",13,[[],["p"]]],[11,"min",E,"Computes the minimum of all the items in the iterator. If…",13,[[],[R[20]]]],[11,"min_by",E,"Computes the minimum of all the items in the iterator with…",13,[[["f"]],[R[20]]]],[11,"min_by_key",E,"Computes the item that yields the minimum value for the…",13,[[["f"]],[R[20]]]],[11,"max",E,"Computes the maximum of all the items in the iterator. If…",13,[[],[R[20]]]],[11,"max_by",E,"Computes the maximum of all the items in the iterator with…",13,[[["f"]],[R[20]]]],[11,"max_by_key",E,"Computes the item that yields the maximum value for the…",13,[[["f"]],[R[20]]]],[11,"chain",E,"Takes two iterators and creates a new iterator over both.",13,[[["c"]],["chain"]]],[11,"find_any",E,R[533],13,[[["p"]],[R[20]]]],[11,"find_first",E,R[542],13,[[["p"]],[R[20]]]],[11,"find_last",E,R[543],13,[[["p"]],[R[20]]]],[11,"find_map_any",E,R[532],13,[[["p"]],[R[20]]]],[11,"find_map_first",E,R[532],13,[[["p"]],[R[20]]]],[11,"find_map_last",E,R[532],13,[[["p"]],[R[20]]]],[11,"any",E,R[533],13,[[["p"]],["bool"]]],[11,"all",E,"Tests that every item in the parallel iterator matches the…",13,[[["p"]],["bool"]]],[11,R[534],E,"Creates an iterator over the `Some` items of this…",13,[[],[R[90]]]],[11,"panic_fuse",E,"Wraps an iterator with a fuse in case of panics, to halt…",13,[[],[R[577]]]],[11,R[99],E,"Create a fresh collection containing all the element…",13,[[],["c"]]],[11,"unzip",E,"Unzips the items of a parallel iterator into a pair of…",13,[[]]],[11,R[535],E,"Partitions the items of a parallel iterator into a pair of…",13,[[["p"]]]],[11,R[536],E,"Partitions and maps the items of a parallel iterator into…",13,[[["p"]]]],[11,R[55],E,"Intersperses clones of an element between items of this…",13,[[],[R[55]]]],[10,R[570],E,R[537],13,[[["c"]]]],[11,R[571],E,R[537],13,[[["self"]],[["usize"],[R[20],["usize"]]]]],[8,R[592],E,"An iterator that supports \"random access\" to its data,…",N,N],[11,"collect_into_vec",E,"Collects the results of the iterator into the specified…",14,[[["vec"]]]],[11,"unzip_into_vecs",E,"Unzips the results of the iterator into the specified…",14,[[["vec"],["vec"]]]],[11,"zip",E,"Iterate over tuples `(A, B)`, where the items `A` are from…",14,[[["z"]],["zip"]]],[11,"zip_eq",E,"The same as `Zip`, but requires that both iterators have…",14,[[["z"]],["zipeq"]]],[11,R[30],E,R[539],14,[[["i"]],[R[30]]]],[11,R[538],E,R[539],14,[[["i"]],[R[89]]]],[11,"chunks",E,"Split an iterator up into fixed-size chunks.",14,[[["usize"]],["chunks"]]],[11,"cmp",E,R[540],14,[[["i"]],[R[19]]]],[11,R[86],E,R[540],14,[[["i"]],[[R[20],[R[19]]],[R[19]]]]],[11,"eq",E,R[541],14,[[["i"]],["bool"]]],[11,"ne",E,R[541],14,[[["i"]],["bool"]]],[11,"lt",E,R[541],14,[[["i"]],["bool"]]],[11,"le",E,R[541],14,[[["i"]],["bool"]]],[11,"gt",E,R[541],14,[[["i"]],["bool"]]],[11,"ge",E,R[541],14,[[["i"]],["bool"]]],[11,R[33],E,"Yields an index along with each item.",14,[[],[R[33]]]],[11,"skip",E,"Creates an iterator that skips the first `n` elements.",14,[[["usize"]],["skip"]]],[11,"take",E,"Creates an iterator that yields the first `n` elements.",14,[[["usize"]],["take"]]],[11,"position_any",E,R[533],14,[[["p"]],[["usize"],[R[20],["usize"]]]]],[11,"position_first",E,R[542],14,[[["p"]],[["usize"],[R[20],["usize"]]]]],[11,"position_last",E,R[543],14,[[["p"]],[["usize"],[R[20],["usize"]]]]],[11,"rev",E,"Produces a new iterator with the elements of this iterator…",14,[[],["rev"]]],[11,"with_min_len",E,"Sets the minimum length of iterators desired to process in…",14,[[["usize"]],["minlen"]]],[11,"with_max_len",E,"Sets the maximum length of iterators desired to process in…",14,[[["usize"]],["maxlen"]]],[10,"len",E,"Produces an exact count of how many items this iterator…",14,[[["self"]],["usize"]]],[10,"drive",E,R[537],14,[[[R[573]]]]],[10,R[572],E,R[537],14,[[["producercallback"]]]],[8,R[593],E,"`FromParallelIterator` implements the creation of a…",N,N],[10,"from_par_iter",E,"Creates an instance of the collection from the parallel…",15,[[["i"]],["self"]]],[8,R[594],E,"`ParallelExtend` extends an existing collection with items…",N,N],[10,R[574],E,"Extends an instance of the collection with the elements…",16,[[["self"],["i"]]]],[0,R[20],"rayon","Parallel iterator types for [options][std::option]",N,N],[3,R[521],R[562],"A parallel iterator over the value in [`Some`] variant of…",N,N],[3,"Iter",E,"A parallel iterator over a reference to the [`Some`]…",N,N],[3,R[549],E,"A parallel iterator over a mutable reference to the…",N,N],[0,"prelude","rayon","The rayon prelude imports the various `ParallelIterator`…",N,N],[8,R[544],"rayon::prelude",R[545],N,N],[10,R[546],E,R[547],9,[[],[R[548]]]],[0,"range","rayon","Parallel iterator types for [ranges][std::range], the type…",N,N],[3,"Iter",R[563],"Parallel iterator over a range, implemented for all…",N,N],[0,"range_inclusive","rayon","Parallel iterator types for [inclusive…",N,N],[3,"Iter",R[564],"Parallel iterator over an inclusive range, implemented for…",N,N],[0,R[4],"rayon","Parallel iterator types for [results][std::result]",N,N],[3,R[521],R[565],"Parallel iterator over a result",N,N],[3,"Iter",E,"Parallel iterator over an immutable reference to a result",N,N],[3,R[549],E,"Parallel iterator over a mutable reference to a result",N,N],[0,"slice","rayon","Parallel iterator types for [slices][std::slice]",N,N],[3,"Iter",R[566],"Parallel iterator over immutable items in a slice",N,N],[3,"Chunks",E,"Parallel iterator over immutable non-overlapping chunks of…",N,N],[3,"Windows",E,"Parallel iterator over immutable overlapping windows of a…",N,N],[3,R[549],E,"Parallel iterator over mutable items in a slice",N,N],[3,R[603],E,"Parallel iterator over mutable non-overlapping chunks of a…",N,N],[3,"Split",E,"Parallel iterator over slices separated by a predicate",N,N],[3,"SplitMut",E,"Parallel iterator over mutable slices separated by a…",N,N],[8,R[595],E,"Parallel extensions for slices.",N,N],[10,"as_parallel_slice",E,"Returns a plain slice, which is used to implement the rest…",17,[[["self"]]]],[11,R[551],E,"Returns a parallel iterator over subslices separated by…",17,[[["self"],["p"]],["split"]]],[11,"par_windows",E,"Returns a parallel iterator over all contiguous windows of…",17,[[["self"],["usize"]],["windows"]]],[11,"par_chunks",E,R[550],17,[[["self"],["usize"]],["chunks"]]],[8,R[596],E,"Parallel extensions for mutable slices.",N,N],[10,"as_parallel_slice_mut",E,"Returns a plain mutable slice, which is used to implement…",18,[[["self"]]]],[11,"par_split_mut",E,"Returns a parallel iterator over mutable subslices…",18,[[["self"],["p"]],["splitmut"]]],[11,"par_chunks_mut",E,R[550],18,[[["self"],["usize"]],["chunksmut"]]],[11,"par_sort",E,"Sorts the slice in parallel.",18,[[["self"]]]],[11,"par_sort_by",E,"Sorts the slice in parallel with a comparator function.",18,[[["self"],["f"]]]],[11,"par_sort_by_key",E,"Sorts the slice in parallel with a key extraction function.",18,[[["self"],["f"]]]],[11,"par_sort_unstable",E,"Sorts the slice in parallel, but may not preserve the…",18,[[["self"]]]],[11,"par_sort_unstable_by",E,"Sorts the slice in parallel with a comparator function,…",18,[[["self"],["f"]]]],[11,"par_sort_unstable_by_key",E,"Sorts the slice in parallel with a key extraction…",18,[[["self"],["f"]]]],[0,"str","rayon","Parallel iterator types for [strings][std::str]",N,N],[3,"Chars",R[567],"Parallel iterator over the characters of a string",N,N],[3,R[604],E,"Parallel iterator over the characters of a string, with…",N,N],[3,"Bytes",E,"Parallel iterator over the bytes of a string",N,N],[3,R[605],E,"Parallel iterator over a string encoded as UTF-16",N,N],[3,"Split",E,"Parallel iterator over substrings separated by a pattern",N,N],[3,R[606],E,"Parallel iterator over substrings separated by a…",N,N],[3,"Lines",E,"Parallel iterator over lines in a string",N,N],[3,R[607],E,"Parallel iterator over substrings separated by whitespace",N,N],[3,"Matches",E,"Parallel iterator over substrings that match a pattern",N,N],[3,R[608],E,"Parallel iterator over substrings that match a pattern,…",N,N],[8,R[597],E,"Parallel extensions for strings.",N,N],[10,"as_parallel_string",E,"Returns a plain string slice, which is used to implement…",19,[[["self"]],["str"]]],[11,"par_chars",E,"Returns a parallel iterator over the characters of a string.",19,[[["self"]],["chars"]]],[11,"par_char_indices",E,"Returns a parallel iterator over the characters of a…",19,[[["self"]],[R[578]]]],[11,"par_bytes",E,"Returns a parallel iterator over the bytes of a string.",19,[[["self"]],["bytes"]]],[11,"par_encode_utf16",E,"Returns a parallel iterator over a string encoded as UTF-16.",19,[[["self"]],[R[579]]]],[11,R[551],E,"Returns a parallel iterator over substrings separated by a…",19,[[["self"],[R[552]]],[["split"],[R[552]]]]],[11,"par_split_terminator",E,"Returns a parallel iterator over substrings terminated by…",19,[[["self"],[R[552]]],[[R[552]],[R[580]]]]],[11,"par_lines",E,"Returns a parallel iterator over the lines of a string,…",19,[[["self"]],["lines"]]],[11,"par_split_whitespace",E,"Returns a parallel iterator over the sub-slices of a…",19,[[["self"]],[R[581]]]],[11,"par_matches",E,R[553],19,[[["self"],[R[552]]],[["matches"],[R[552]]]]],[11,"par_match_indices",E,R[553],19,[[["self"],[R[552]]],[[R[552]],[R[582]]]]],[0,"vec","rayon","Parallel iterator types for [vectors][std::vec] (`Vec<T>`)",N,N],[3,R[521],R[568],"Parallel iterator that moves out of a vector.",N,N],[11,"into","rayon",E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[5],E,E,20,[[[U]],[R[4]]]],[11,R[6],E,E,20,[[],[R[4]]]],[11,R[8],E,E,20,[[["self"]],[T]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[9],E,E,20,[[["self"]],[R[81]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[5],E,E,21,[[[U]],[R[4]]]],[11,R[6],E,E,21,[[],[R[4]]]],[11,R[8],E,E,21,[[["self"]],[T]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[9],E,E,21,[[["self"]],[R[81]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[5],E,E,22,[[[U]],[R[4]]]],[11,R[6],E,E,22,[[],[R[4]]]],[11,R[8],E,E,22,[[["self"]],[T]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[9],E,E,22,[[["self"]],[R[81]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[82],E,E,23,[[["self"]],[R[83]]]],[11,R[5],E,E,23,[[[U]],[R[4]]]],[11,R[6],E,E,23,[[],[R[4]]]],[11,R[8],E,E,23,[[["self"]],[T]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[9],E,E,23,[[["self"]],[R[81]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[5],E,E,24,[[[U]],[R[4]]]],[11,R[6],E,E,24,[[],[R[4]]]],[11,R[8],E,E,24,[[["self"]],[T]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[9],E,E,24,[[["self"]],[R[81]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[5],E,E,25,[[[U]],[R[4]]]],[11,R[6],E,E,25,[[],[R[4]]]],[11,R[8],E,E,25,[[["self"]],[T]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[9],E,E,25,[[["self"]],[R[81]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[5],E,E,26,[[[U]],[R[4]]]],[11,R[6],E,E,26,[[],[R[4]]]],[11,R[8],E,E,26,[[["self"]],[T]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[9],E,E,26,[[["self"]],[R[81]]]],[11,R[554],R[555],E,27,[[],[T]]],[11,R[79],E,E,27,[[["self"]],[T]]],[11,R[80],E,E,27,[[["self"],[T]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[5],E,E,27,[[[U]],[R[4]]]],[11,R[6],E,E,27,[[],[R[4]]]],[11,R[8],E,E,27,[[["self"]],[T]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[9],E,E,27,[[["self"]],[R[81]]]],[11,R[554],E,E,28,[[],[T]]],[11,R[79],E,E,28,[[["self"]],[T]]],[11,R[80],E,E,28,[[["self"],[T]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[5],E,E,28,[[[U]],[R[4]]]],[11,R[6],E,E,28,[[],[R[4]]]],[11,R[8],E,E,28,[[["self"]],[T]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[9],E,E,28,[[["self"]],[R[81]]]],[11,R[554],R[556],E,29,[[],[T]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[5],E,E,29,[[[U]],[R[4]]]],[11,R[6],E,E,29,[[],[R[4]]]],[11,R[8],E,E,29,[[["self"]],[T]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[9],E,E,29,[[["self"]],[R[81]]]],[11,R[554],E,E,30,[[],[T]]],[11,R[79],E,E,30,[[["self"]],[T]]],[11,R[80],E,E,30,[[["self"],[T]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[5],E,E,30,[[[U]],[R[4]]]],[11,R[6],E,E,30,[[],[R[4]]]],[11,R[8],E,E,30,[[["self"]],[T]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[9],E,E,30,[[["self"]],[R[81]]]],[11,R[554],E,E,31,[[],[T]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[5],E,E,31,[[[U]],[R[4]]]],[11,R[6],E,E,31,[[],[R[4]]]],[11,R[8],E,E,31,[[["self"]],[T]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[9],E,E,31,[[["self"]],[R[81]]]],[11,R[554],R[557],E,32,[[],[T]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[5],E,E,32,[[[U]],[R[4]]]],[11,R[6],E,E,32,[[],[R[4]]]],[11,R[8],E,E,32,[[["self"]],[T]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[9],E,E,32,[[["self"]],[R[81]]]],[11,R[554],E,E,33,[[],[T]]],[11,R[79],E,E,33,[[["self"]],[T]]],[11,R[80],E,E,33,[[["self"],[T]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[5],E,E,33,[[[U]],[R[4]]]],[11,R[6],E,E,33,[[],[R[4]]]],[11,R[8],E,E,33,[[["self"]],[T]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[9],E,E,33,[[["self"]],[R[81]]]],[11,R[554],R[558],E,34,[[],[T]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[5],E,E,34,[[[U]],[R[4]]]],[11,R[6],E,E,34,[[],[R[4]]]],[11,R[8],E,E,34,[[["self"]],[T]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[9],E,E,34,[[["self"]],[R[81]]]],[11,R[554],E,E,35,[[],[T]]],[11,R[79],E,E,35,[[["self"]],[T]]],[11,R[80],E,E,35,[[["self"],[T]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[5],E,E,35,[[[U]],[R[4]]]],[11,R[6],E,E,35,[[],[R[4]]]],[11,R[8],E,E,35,[[["self"]],[T]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[9],E,E,35,[[["self"]],[R[81]]]],[11,R[554],E,E,36,[[],[T]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[5],E,E,36,[[[U]],[R[4]]]],[11,R[6],E,E,36,[[],[R[4]]]],[11,R[8],E,E,36,[[["self"]],[T]]],[11,R[7],E,E,36,[[["self"]],[T]]],[11,R[9],E,E,36,[[["self"]],[R[81]]]],[11,R[554],R[559],E,37,[[],[T]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[5],E,E,37,[[[U]],[R[4]]]],[11,R[6],E,E,37,[[],[R[4]]]],[11,R[8],E,E,37,[[["self"]],[T]]],[11,R[7],E,E,37,[[["self"]],[T]]],[11,R[9],E,E,37,[[["self"]],[R[81]]]],[11,R[554],E,E,38,[[],[T]]],[11,R[79],E,E,38,[[["self"]],[T]]],[11,R[80],E,E,38,[[["self"],[T]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[5],E,E,38,[[[U]],[R[4]]]],[11,R[6],E,E,38,[[],[R[4]]]],[11,R[8],E,E,38,[[["self"]],[T]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[9],E,E,38,[[["self"]],[R[81]]]],[11,R[554],R[560],E,39,[[],[T]]],[11,R[79],E,E,39,[[["self"]],[T]]],[11,R[80],E,E,39,[[["self"],[T]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[5],E,E,39,[[[U]],[R[4]]]],[11,R[6],E,E,39,[[],[R[4]]]],[11,R[8],E,E,39,[[["self"]],[T]]],[11,R[7],E,E,39,[[["self"]],[T]]],[11,R[9],E,E,39,[[["self"]],[R[81]]]],[11,R[554],E,E,40,[[],[T]]],[11,R[79],E,E,40,[[["self"]],[T]]],[11,R[80],E,E,40,[[["self"],[T]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[5],E,E,40,[[[U]],[R[4]]]],[11,R[6],E,E,40,[[],[R[4]]]],[11,R[8],E,E,40,[[["self"]],[T]]],[11,R[7],E,E,40,[[["self"]],[T]]],[11,R[9],E,E,40,[[["self"]],[R[81]]]],[11,R[554],E,E,41,[[],[T]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[5],E,E,41,[[[U]],[R[4]]]],[11,R[6],E,E,41,[[],[R[4]]]],[11,R[8],E,E,41,[[["self"]],[T]]],[11,R[7],E,E,41,[[["self"]],[T]]],[11,R[9],E,E,41,[[["self"]],[R[81]]]],[11,R[554],R[561],E,42,[[],[T]]],[11,R[79],E,E,42,[[["self"]],[T]]],[11,R[80],E,E,42,[[["self"],[T]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[5],E,E,42,[[[U]],[R[4]]]],[11,R[6],E,E,42,[[],[R[4]]]],[11,R[8],E,E,42,[[["self"]],[T]]],[11,R[7],E,E,42,[[["self"]],[T]]],[11,R[9],E,E,42,[[["self"]],[R[81]]]],[11,R[554],E,E,43,[[],[T]]],[11,R[79],E,E,43,[[["self"]],[T]]],[11,R[80],E,E,43,[[["self"],[T]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[5],E,E,43,[[[U]],[R[4]]]],[11,R[6],E,E,43,[[],[R[4]]]],[11,R[8],E,E,43,[[["self"]],[T]]],[11,R[7],E,E,43,[[["self"]],[T]]],[11,R[9],E,E,43,[[["self"]],[R[81]]]],[11,R[554],E,E,44,[[],[T]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[5],E,E,44,[[[U]],[R[4]]]],[11,R[6],E,E,44,[[],[R[4]]]],[11,R[8],E,E,44,[[["self"]],[T]]],[11,R[7],E,E,44,[[["self"]],[T]]],[11,R[9],E,E,44,[[["self"]],[R[81]]]],[11,R[554],R[526],E,0,[[],[T]]],[11,R[79],E,E,0,[[["self"]],[T]]],[11,R[80],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,R[18],E,E,0,[[],["i"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[82],E,E,0,[[["self"]],[R[83]]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[81]]]],[11,R[554],E,E,45,[[],[T]]],[11,R[79],E,E,45,[[["self"]],[T]]],[11,R[80],E,E,45,[[["self"],[T]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[5],E,E,45,[[[U]],[R[4]]]],[11,R[6],E,E,45,[[],[R[4]]]],[11,R[8],E,E,45,[[["self"]],[T]]],[11,R[7],E,E,45,[[["self"]],[T]]],[11,R[9],E,E,45,[[["self"]],[R[81]]]],[11,R[554],E,E,46,[[],[T]]],[11,R[79],E,E,46,[[["self"]],[T]]],[11,R[80],E,E,46,[[["self"],[T]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[5],E,E,46,[[[U]],[R[4]]]],[11,R[6],E,E,46,[[],[R[4]]]],[11,R[8],E,E,46,[[["self"]],[T]]],[11,R[7],E,E,46,[[["self"]],[T]]],[11,R[9],E,E,46,[[["self"]],[R[81]]]],[11,R[554],E,E,47,[[],[T]]],[11,R[79],E,E,47,[[["self"]],[T]]],[11,R[80],E,E,47,[[["self"],[T]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[5],E,E,47,[[[U]],[R[4]]]],[11,R[6],E,E,47,[[],[R[4]]]],[11,R[8],E,E,47,[[["self"]],[T]]],[11,R[7],E,E,47,[[["self"]],[T]]],[11,R[9],E,E,47,[[["self"]],[R[81]]]],[11,R[554],E,E,48,[[],[T]]],[11,R[79],E,E,48,[[["self"]],[T]]],[11,R[80],E,E,48,[[["self"],[T]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[5],E,E,48,[[[U]],[R[4]]]],[11,R[6],E,E,48,[[],[R[4]]]],[11,R[8],E,E,48,[[["self"]],[T]]],[11,R[7],E,E,48,[[["self"]],[T]]],[11,R[9],E,E,48,[[["self"]],[R[81]]]],[11,R[554],E,E,49,[[],[T]]],[11,R[79],E,E,49,[[["self"]],[T]]],[11,R[80],E,E,49,[[["self"],[T]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[5],E,E,49,[[[U]],[R[4]]]],[11,R[6],E,E,49,[[],[R[4]]]],[11,R[8],E,E,49,[[["self"]],[T]]],[11,R[7],E,E,49,[[["self"]],[T]]],[11,R[9],E,E,49,[[["self"]],[R[81]]]],[11,R[554],E,E,50,[[],[T]]],[11,R[79],E,E,50,[[["self"]],[T]]],[11,R[80],E,E,50,[[["self"],[T]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[5],E,E,50,[[[U]],[R[4]]]],[11,R[6],E,E,50,[[],[R[4]]]],[11,R[8],E,E,50,[[["self"]],[T]]],[11,R[7],E,E,50,[[["self"]],[T]]],[11,R[9],E,E,50,[[["self"]],[R[81]]]],[11,R[554],E,E,51,[[],[T]]],[11,R[79],E,E,51,[[["self"]],[T]]],[11,R[80],E,E,51,[[["self"],[T]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[5],E,E,51,[[[U]],[R[4]]]],[11,R[6],E,E,51,[[],[R[4]]]],[11,R[8],E,E,51,[[["self"]],[T]]],[11,R[7],E,E,51,[[["self"]],[T]]],[11,R[9],E,E,51,[[["self"]],[R[81]]]],[11,R[554],E,E,52,[[],[T]]],[11,R[79],E,E,52,[[["self"]],[T]]],[11,R[80],E,E,52,[[["self"],[T]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[5],E,E,52,[[[U]],[R[4]]]],[11,R[6],E,E,52,[[],[R[4]]]],[11,R[8],E,E,52,[[["self"]],[T]]],[11,R[7],E,E,52,[[["self"]],[T]]],[11,R[9],E,E,52,[[["self"]],[R[81]]]],[11,R[554],E,E,53,[[],[T]]],[11,R[79],E,E,53,[[["self"]],[T]]],[11,R[80],E,E,53,[[["self"],[T]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[5],E,E,53,[[[U]],[R[4]]]],[11,R[6],E,E,53,[[],[R[4]]]],[11,R[8],E,E,53,[[["self"]],[T]]],[11,R[7],E,E,53,[[["self"]],[T]]],[11,R[9],E,E,53,[[["self"]],[R[81]]]],[11,R[554],E,E,54,[[],[T]]],[11,R[79],E,E,54,[[["self"]],[T]]],[11,R[80],E,E,54,[[["self"],[T]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[5],E,E,54,[[[U]],[R[4]]]],[11,R[6],E,E,54,[[],[R[4]]]],[11,R[8],E,E,54,[[["self"]],[T]]],[11,R[7],E,E,54,[[["self"]],[T]]],[11,R[9],E,E,54,[[["self"]],[R[81]]]],[11,R[554],E,E,55,[[],[T]]],[11,R[79],E,E,55,[[["self"]],[T]]],[11,R[80],E,E,55,[[["self"],[T]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[5],E,E,55,[[[U]],[R[4]]]],[11,R[6],E,E,55,[[],[R[4]]]],[11,R[8],E,E,55,[[["self"]],[T]]],[11,R[7],E,E,55,[[["self"]],[T]]],[11,R[9],E,E,55,[[["self"]],[R[81]]]],[11,R[554],E,E,56,[[],[T]]],[11,R[79],E,E,56,[[["self"]],[T]]],[11,R[80],E,E,56,[[["self"],[T]]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[5],E,E,56,[[[U]],[R[4]]]],[11,R[6],E,E,56,[[],[R[4]]]],[11,R[8],E,E,56,[[["self"]],[T]]],[11,R[7],E,E,56,[[["self"]],[T]]],[11,R[9],E,E,56,[[["self"]],[R[81]]]],[11,R[554],E,E,57,[[],[T]]],[11,R[79],E,E,57,[[["self"]],[T]]],[11,R[80],E,E,57,[[["self"],[T]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[5],E,E,57,[[[U]],[R[4]]]],[11,R[6],E,E,57,[[],[R[4]]]],[11,R[8],E,E,57,[[["self"]],[T]]],[11,R[7],E,E,57,[[["self"]],[T]]],[11,R[9],E,E,57,[[["self"]],[R[81]]]],[11,R[554],E,E,58,[[],[T]]],[11,R[79],E,E,58,[[["self"]],[T]]],[11,R[80],E,E,58,[[["self"],[T]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[5],E,E,58,[[[U]],[R[4]]]],[11,R[6],E,E,58,[[],[R[4]]]],[11,R[8],E,E,58,[[["self"]],[T]]],[11,R[7],E,E,58,[[["self"]],[T]]],[11,R[9],E,E,58,[[["self"]],[R[81]]]],[11,R[554],E,E,59,[[],[T]]],[11,R[79],E,E,59,[[["self"]],[T]]],[11,R[80],E,E,59,[[["self"],[T]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[5],E,E,59,[[[U]],[R[4]]]],[11,R[6],E,E,59,[[],[R[4]]]],[11,R[8],E,E,59,[[["self"]],[T]]],[11,R[7],E,E,59,[[["self"]],[T]]],[11,R[9],E,E,59,[[["self"]],[R[81]]]],[11,R[554],E,E,60,[[],[T]]],[11,R[79],E,E,60,[[["self"]],[T]]],[11,R[80],E,E,60,[[["self"],[T]]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[5],E,E,60,[[[U]],[R[4]]]],[11,R[6],E,E,60,[[],[R[4]]]],[11,R[8],E,E,60,[[["self"]],[T]]],[11,R[7],E,E,60,[[["self"]],[T]]],[11,R[9],E,E,60,[[["self"]],[R[81]]]],[11,R[554],E,E,61,[[],[T]]],[11,R[79],E,E,61,[[["self"]],[T]]],[11,R[80],E,E,61,[[["self"],[T]]]],[11,"into",E,E,61,[[],[U]]],[11,"from",E,E,61,[[[T]],[T]]],[11,R[5],E,E,61,[[[U]],[R[4]]]],[11,R[6],E,E,61,[[],[R[4]]]],[11,R[8],E,E,61,[[["self"]],[T]]],[11,R[7],E,E,61,[[["self"]],[T]]],[11,R[9],E,E,61,[[["self"]],[R[81]]]],[11,R[554],E,E,62,[[],[T]]],[11,R[79],E,E,62,[[["self"]],[T]]],[11,R[80],E,E,62,[[["self"],[T]]]],[11,"into",E,E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[5],E,E,62,[[[U]],[R[4]]]],[11,R[6],E,E,62,[[],[R[4]]]],[11,R[8],E,E,62,[[["self"]],[T]]],[11,R[7],E,E,62,[[["self"]],[T]]],[11,R[9],E,E,62,[[["self"]],[R[81]]]],[11,R[554],E,E,63,[[],[T]]],[11,R[79],E,E,63,[[["self"]],[T]]],[11,R[80],E,E,63,[[["self"],[T]]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[5],E,E,63,[[[U]],[R[4]]]],[11,R[6],E,E,63,[[],[R[4]]]],[11,R[8],E,E,63,[[["self"]],[T]]],[11,R[7],E,E,63,[[["self"]],[T]]],[11,R[9],E,E,63,[[["self"]],[R[81]]]],[11,R[554],E,E,64,[[],[T]]],[11,R[79],E,E,64,[[["self"]],[T]]],[11,R[80],E,E,64,[[["self"],[T]]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[5],E,E,64,[[[U]],[R[4]]]],[11,R[6],E,E,64,[[],[R[4]]]],[11,R[8],E,E,64,[[["self"]],[T]]],[11,R[7],E,E,64,[[["self"]],[T]]],[11,R[9],E,E,64,[[["self"]],[R[81]]]],[11,R[554],E,E,65,[[],[T]]],[11,R[79],E,E,65,[[["self"]],[T]]],[11,R[80],E,E,65,[[["self"],[T]]]],[11,"into",E,E,65,[[],[U]]],[11,"from",E,E,65,[[[T]],[T]]],[11,R[5],E,E,65,[[[U]],[R[4]]]],[11,R[6],E,E,65,[[],[R[4]]]],[11,R[8],E,E,65,[[["self"]],[T]]],[11,R[7],E,E,65,[[["self"]],[T]]],[11,R[9],E,E,65,[[["self"]],[R[81]]]],[11,R[554],E,E,66,[[],[T]]],[11,R[79],E,E,66,[[["self"]],[T]]],[11,R[80],E,E,66,[[["self"],[T]]]],[11,"into",E,E,66,[[],[U]]],[11,"from",E,E,66,[[[T]],[T]]],[11,R[5],E,E,66,[[[U]],[R[4]]]],[11,R[6],E,E,66,[[],[R[4]]]],[11,R[8],E,E,66,[[["self"]],[T]]],[11,R[7],E,E,66,[[["self"]],[T]]],[11,R[9],E,E,66,[[["self"]],[R[81]]]],[11,R[554],E,E,67,[[],[T]]],[11,R[79],E,E,67,[[["self"]],[T]]],[11,R[80],E,E,67,[[["self"],[T]]]],[11,"into",E,E,67,[[],[U]]],[11,"from",E,E,67,[[[T]],[T]]],[11,R[5],E,E,67,[[[U]],[R[4]]]],[11,R[6],E,E,67,[[],[R[4]]]],[11,R[8],E,E,67,[[["self"]],[T]]],[11,R[7],E,E,67,[[["self"]],[T]]],[11,R[9],E,E,67,[[["self"]],[R[81]]]],[11,R[554],E,E,68,[[],[T]]],[11,R[79],E,E,68,[[["self"]],[T]]],[11,R[80],E,E,68,[[["self"],[T]]]],[11,"into",E,E,68,[[],[U]]],[11,"from",E,E,68,[[[T]],[T]]],[11,R[5],E,E,68,[[[U]],[R[4]]]],[11,R[6],E,E,68,[[],[R[4]]]],[11,R[8],E,E,68,[[["self"]],[T]]],[11,R[7],E,E,68,[[["self"]],[T]]],[11,R[9],E,E,68,[[["self"]],[R[81]]]],[11,R[554],E,E,69,[[],[T]]],[11,R[79],E,E,69,[[["self"]],[T]]],[11,R[80],E,E,69,[[["self"],[T]]]],[11,"into",E,E,69,[[],[U]]],[11,"from",E,E,69,[[[T]],[T]]],[11,R[5],E,E,69,[[[U]],[R[4]]]],[11,R[6],E,E,69,[[],[R[4]]]],[11,R[8],E,E,69,[[["self"]],[T]]],[11,R[7],E,E,69,[[["self"]],[T]]],[11,R[9],E,E,69,[[["self"]],[R[81]]]],[11,R[554],E,E,70,[[],[T]]],[11,R[79],E,E,70,[[["self"]],[T]]],[11,R[80],E,E,70,[[["self"],[T]]]],[11,"into",E,E,70,[[],[U]]],[11,"from",E,E,70,[[[T]],[T]]],[11,R[5],E,E,70,[[[U]],[R[4]]]],[11,R[6],E,E,70,[[],[R[4]]]],[11,R[8],E,E,70,[[["self"]],[T]]],[11,R[7],E,E,70,[[["self"]],[T]]],[11,R[9],E,E,70,[[["self"]],[R[81]]]],[11,R[554],E,E,71,[[],[T]]],[11,R[79],E,E,71,[[["self"]],[T]]],[11,R[80],E,E,71,[[["self"],[T]]]],[11,"into",E,E,71,[[],[U]]],[11,"from",E,E,71,[[[T]],[T]]],[11,R[5],E,E,71,[[[U]],[R[4]]]],[11,R[6],E,E,71,[[],[R[4]]]],[11,R[8],E,E,71,[[["self"]],[T]]],[11,R[7],E,E,71,[[["self"]],[T]]],[11,R[9],E,E,71,[[["self"]],[R[81]]]],[11,R[554],E,E,72,[[],[T]]],[11,R[79],E,E,72,[[["self"]],[T]]],[11,R[80],E,E,72,[[["self"],[T]]]],[11,"into",E,E,72,[[],[U]]],[11,"from",E,E,72,[[[T]],[T]]],[11,R[5],E,E,72,[[[U]],[R[4]]]],[11,R[6],E,E,72,[[],[R[4]]]],[11,R[8],E,E,72,[[["self"]],[T]]],[11,R[7],E,E,72,[[["self"]],[T]]],[11,R[9],E,E,72,[[["self"]],[R[81]]]],[11,R[554],E,E,73,[[],[T]]],[11,R[79],E,E,73,[[["self"]],[T]]],[11,R[80],E,E,73,[[["self"],[T]]]],[11,"into",E,E,73,[[],[U]]],[11,"from",E,E,73,[[[T]],[T]]],[11,R[5],E,E,73,[[[U]],[R[4]]]],[11,R[6],E,E,73,[[],[R[4]]]],[11,R[8],E,E,73,[[["self"]],[T]]],[11,R[7],E,E,73,[[["self"]],[T]]],[11,R[9],E,E,73,[[["self"]],[R[81]]]],[11,R[554],E,E,74,[[],[T]]],[11,R[79],E,E,74,[[["self"]],[T]]],[11,R[80],E,E,74,[[["self"],[T]]]],[11,"into",E,E,74,[[],[U]]],[11,"from",E,E,74,[[[T]],[T]]],[11,R[5],E,E,74,[[[U]],[R[4]]]],[11,R[6],E,E,74,[[],[R[4]]]],[11,R[8],E,E,74,[[["self"]],[T]]],[11,R[7],E,E,74,[[["self"]],[T]]],[11,R[9],E,E,74,[[["self"]],[R[81]]]],[11,R[554],E,E,75,[[],[T]]],[11,R[79],E,E,75,[[["self"]],[T]]],[11,R[80],E,E,75,[[["self"],[T]]]],[11,"into",E,E,75,[[],[U]]],[11,"from",E,E,75,[[[T]],[T]]],[11,R[5],E,E,75,[[[U]],[R[4]]]],[11,R[6],E,E,75,[[],[R[4]]]],[11,R[8],E,E,75,[[["self"]],[T]]],[11,R[7],E,E,75,[[["self"]],[T]]],[11,R[9],E,E,75,[[["self"]],[R[81]]]],[11,R[554],E,E,76,[[],[T]]],[11,R[79],E,E,76,[[["self"]],[T]]],[11,R[80],E,E,76,[[["self"],[T]]]],[11,"into",E,E,76,[[],[U]]],[11,"from",E,E,76,[[[T]],[T]]],[11,R[5],E,E,76,[[[U]],[R[4]]]],[11,R[6],E,E,76,[[],[R[4]]]],[11,R[8],E,E,76,[[["self"]],[T]]],[11,R[7],E,E,76,[[["self"]],[T]]],[11,R[9],E,E,76,[[["self"]],[R[81]]]],[11,R[554],E,E,8,[[],[T]]],[11,R[79],E,E,8,[[["self"]],[T]]],[11,R[80],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[5],E,E,8,[[[U]],[R[4]]]],[11,R[6],E,E,8,[[],[R[4]]]],[11,R[8],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[9],E,E,8,[[["self"]],[R[81]]]],[11,R[554],E,E,77,[[],[T]]],[11,R[79],E,E,77,[[["self"]],[T]]],[11,R[80],E,E,77,[[["self"],[T]]]],[11,"into",E,E,77,[[],[U]]],[11,"from",E,E,77,[[[T]],[T]]],[11,R[5],E,E,77,[[[U]],[R[4]]]],[11,R[6],E,E,77,[[],[R[4]]]],[11,R[8],E,E,77,[[["self"]],[T]]],[11,R[7],E,E,77,[[["self"]],[T]]],[11,R[9],E,E,77,[[["self"]],[R[81]]]],[11,R[554],E,E,78,[[],[T]]],[11,R[79],E,E,78,[[["self"]],[T]]],[11,R[80],E,E,78,[[["self"],[T]]]],[11,"into",E,E,78,[[],[U]]],[11,"from",E,E,78,[[[T]],[T]]],[11,R[5],E,E,78,[[[U]],[R[4]]]],[11,R[6],E,E,78,[[],[R[4]]]],[11,R[8],E,E,78,[[["self"]],[T]]],[11,R[7],E,E,78,[[["self"]],[T]]],[11,R[9],E,E,78,[[["self"]],[R[81]]]],[11,R[554],E,E,79,[[],[T]]],[11,R[79],E,E,79,[[["self"]],[T]]],[11,R[80],E,E,79,[[["self"],[T]]]],[11,"into",E,E,79,[[],[U]]],[11,"from",E,E,79,[[[T]],[T]]],[11,R[5],E,E,79,[[[U]],[R[4]]]],[11,R[6],E,E,79,[[],[R[4]]]],[11,R[8],E,E,79,[[["self"]],[T]]],[11,R[7],E,E,79,[[["self"]],[T]]],[11,R[9],E,E,79,[[["self"]],[R[81]]]],[11,R[554],R[562],E,80,[[],[T]]],[11,R[79],E,E,80,[[["self"]],[T]]],[11,R[80],E,E,80,[[["self"],[T]]]],[11,"into",E,E,80,[[],[U]]],[11,"from",E,E,80,[[[T]],[T]]],[11,R[5],E,E,80,[[[U]],[R[4]]]],[11,R[6],E,E,80,[[],[R[4]]]],[11,R[8],E,E,80,[[["self"]],[T]]],[11,R[7],E,E,80,[[["self"]],[T]]],[11,R[9],E,E,80,[[["self"]],[R[81]]]],[11,R[554],E,E,81,[[],[T]]],[11,R[79],E,E,81,[[["self"]],[T]]],[11,R[80],E,E,81,[[["self"],[T]]]],[11,"into",E,E,81,[[],[U]]],[11,"from",E,E,81,[[[T]],[T]]],[11,R[5],E,E,81,[[[U]],[R[4]]]],[11,R[6],E,E,81,[[],[R[4]]]],[11,R[8],E,E,81,[[["self"]],[T]]],[11,R[7],E,E,81,[[["self"]],[T]]],[11,R[9],E,E,81,[[["self"]],[R[81]]]],[11,R[554],E,E,82,[[],[T]]],[11,"into",E,E,82,[[],[U]]],[11,"from",E,E,82,[[[T]],[T]]],[11,R[5],E,E,82,[[[U]],[R[4]]]],[11,R[6],E,E,82,[[],[R[4]]]],[11,R[8],E,E,82,[[["self"]],[T]]],[11,R[7],E,E,82,[[["self"]],[T]]],[11,R[9],E,E,82,[[["self"]],[R[81]]]],[11,R[554],R[563],E,83,[[],[T]]],[11,R[79],E,E,83,[[["self"]],[T]]],[11,R[80],E,E,83,[[["self"],[T]]]],[11,"into",E,E,83,[[],[U]]],[11,"from",E,E,83,[[[T]],[T]]],[11,R[5],E,E,83,[[[U]],[R[4]]]],[11,R[6],E,E,83,[[],[R[4]]]],[11,R[8],E,E,83,[[["self"]],[T]]],[11,R[7],E,E,83,[[["self"]],[T]]],[11,R[9],E,E,83,[[["self"]],[R[81]]]],[11,R[554],R[564],E,84,[[],[T]]],[11,R[79],E,E,84,[[["self"]],[T]]],[11,R[80],E,E,84,[[["self"],[T]]]],[11,"into",E,E,84,[[],[U]]],[11,"from",E,E,84,[[[T]],[T]]],[11,R[5],E,E,84,[[[U]],[R[4]]]],[11,R[6],E,E,84,[[],[R[4]]]],[11,R[8],E,E,84,[[["self"]],[T]]],[11,R[7],E,E,84,[[["self"]],[T]]],[11,R[9],E,E,84,[[["self"]],[R[81]]]],[11,R[554],R[565],E,85,[[],[T]]],[11,R[79],E,E,85,[[["self"]],[T]]],[11,R[80],E,E,85,[[["self"],[T]]]],[11,"into",E,E,85,[[],[U]]],[11,"from",E,E,85,[[[T]],[T]]],[11,R[5],E,E,85,[[[U]],[R[4]]]],[11,R[6],E,E,85,[[],[R[4]]]],[11,R[8],E,E,85,[[["self"]],[T]]],[11,R[7],E,E,85,[[["self"]],[T]]],[11,R[9],E,E,85,[[["self"]],[R[81]]]],[11,R[554],E,E,86,[[],[T]]],[11,R[79],E,E,86,[[["self"]],[T]]],[11,R[80],E,E,86,[[["self"],[T]]]],[11,"into",E,E,86,[[],[U]]],[11,"from",E,E,86,[[[T]],[T]]],[11,R[5],E,E,86,[[[U]],[R[4]]]],[11,R[6],E,E,86,[[],[R[4]]]],[11,R[8],E,E,86,[[["self"]],[T]]],[11,R[7],E,E,86,[[["self"]],[T]]],[11,R[9],E,E,86,[[["self"]],[R[81]]]],[11,R[554],E,E,87,[[],[T]]],[11,"into",E,E,87,[[],[U]]],[11,"from",E,E,87,[[[T]],[T]]],[11,R[5],E,E,87,[[[U]],[R[4]]]],[11,R[6],E,E,87,[[],[R[4]]]],[11,R[8],E,E,87,[[["self"]],[T]]],[11,R[7],E,E,87,[[["self"]],[T]]],[11,R[9],E,E,87,[[["self"]],[R[81]]]],[11,R[554],R[566],E,88,[[],[T]]],[11,R[79],E,E,88,[[["self"]],[T]]],[11,R[80],E,E,88,[[["self"],[T]]]],[11,"into",E,E,88,[[],[U]]],[11,"from",E,E,88,[[[T]],[T]]],[11,R[5],E,E,88,[[[U]],[R[4]]]],[11,R[6],E,E,88,[[],[R[4]]]],[11,R[8],E,E,88,[[["self"]],[T]]],[11,R[7],E,E,88,[[["self"]],[T]]],[11,R[9],E,E,88,[[["self"]],[R[81]]]],[11,R[554],E,E,89,[[],[T]]],[11,R[79],E,E,89,[[["self"]],[T]]],[11,R[80],E,E,89,[[["self"],[T]]]],[11,"into",E,E,89,[[],[U]]],[11,"from",E,E,89,[[[T]],[T]]],[11,R[5],E,E,89,[[[U]],[R[4]]]],[11,R[6],E,E,89,[[],[R[4]]]],[11,R[8],E,E,89,[[["self"]],[T]]],[11,R[7],E,E,89,[[["self"]],[T]]],[11,R[9],E,E,89,[[["self"]],[R[81]]]],[11,R[554],E,E,90,[[],[T]]],[11,R[79],E,E,90,[[["self"]],[T]]],[11,R[80],E,E,90,[[["self"],[T]]]],[11,"into",E,E,90,[[],[U]]],[11,"from",E,E,90,[[[T]],[T]]],[11,R[5],E,E,90,[[[U]],[R[4]]]],[11,R[6],E,E,90,[[],[R[4]]]],[11,R[8],E,E,90,[[["self"]],[T]]],[11,R[7],E,E,90,[[["self"]],[T]]],[11,R[9],E,E,90,[[["self"]],[R[81]]]],[11,R[554],E,E,91,[[],[T]]],[11,"into",E,E,91,[[],[U]]],[11,"from",E,E,91,[[[T]],[T]]],[11,R[5],E,E,91,[[[U]],[R[4]]]],[11,R[6],E,E,91,[[],[R[4]]]],[11,R[8],E,E,91,[[["self"]],[T]]],[11,R[7],E,E,91,[[["self"]],[T]]],[11,R[9],E,E,91,[[["self"]],[R[81]]]],[11,R[554],E,E,92,[[],[T]]],[11,"into",E,E,92,[[],[U]]],[11,"from",E,E,92,[[[T]],[T]]],[11,R[5],E,E,92,[[[U]],[R[4]]]],[11,R[6],E,E,92,[[],[R[4]]]],[11,R[8],E,E,92,[[["self"]],[T]]],[11,R[7],E,E,92,[[["self"]],[T]]],[11,R[9],E,E,92,[[["self"]],[R[81]]]],[11,R[554],E,E,93,[[],[T]]],[11,R[79],E,E,93,[[["self"]],[T]]],[11,R[80],E,E,93,[[["self"],[T]]]],[11,"into",E,E,93,[[],[U]]],[11,"from",E,E,93,[[[T]],[T]]],[11,R[5],E,E,93,[[[U]],[R[4]]]],[11,R[6],E,E,93,[[],[R[4]]]],[11,R[8],E,E,93,[[["self"]],[T]]],[11,R[7],E,E,93,[[["self"]],[T]]],[11,R[9],E,E,93,[[["self"]],[R[81]]]],[11,R[554],E,E,94,[[],[T]]],[11,"into",E,E,94,[[],[U]]],[11,"from",E,E,94,[[[T]],[T]]],[11,R[5],E,E,94,[[[U]],[R[4]]]],[11,R[6],E,E,94,[[],[R[4]]]],[11,R[8],E,E,94,[[["self"]],[T]]],[11,R[7],E,E,94,[[["self"]],[T]]],[11,R[9],E,E,94,[[["self"]],[R[81]]]],[11,R[554],R[567],E,95,[[],[T]]],[11,R[79],E,E,95,[[["self"]],[T]]],[11,R[80],E,E,95,[[["self"],[T]]]],[11,"into",E,E,95,[[],[U]]],[11,"from",E,E,95,[[[T]],[T]]],[11,R[5],E,E,95,[[[U]],[R[4]]]],[11,R[6],E,E,95,[[],[R[4]]]],[11,R[8],E,E,95,[[["self"]],[T]]],[11,R[7],E,E,95,[[["self"]],[T]]],[11,R[9],E,E,95,[[["self"]],[R[81]]]],[11,R[554],E,E,96,[[],[T]]],[11,R[79],E,E,96,[[["self"]],[T]]],[11,R[80],E,E,96,[[["self"],[T]]]],[11,"into",E,E,96,[[],[U]]],[11,"from",E,E,96,[[[T]],[T]]],[11,R[5],E,E,96,[[[U]],[R[4]]]],[11,R[6],E,E,96,[[],[R[4]]]],[11,R[8],E,E,96,[[["self"]],[T]]],[11,R[7],E,E,96,[[["self"]],[T]]],[11,R[9],E,E,96,[[["self"]],[R[81]]]],[11,R[554],E,E,97,[[],[T]]],[11,R[79],E,E,97,[[["self"]],[T]]],[11,R[80],E,E,97,[[["self"],[T]]]],[11,"into",E,E,97,[[],[U]]],[11,"from",E,E,97,[[[T]],[T]]],[11,R[5],E,E,97,[[[U]],[R[4]]]],[11,R[6],E,E,97,[[],[R[4]]]],[11,R[8],E,E,97,[[["self"]],[T]]],[11,R[7],E,E,97,[[["self"]],[T]]],[11,R[9],E,E,97,[[["self"]],[R[81]]]],[11,R[554],E,E,98,[[],[T]]],[11,R[79],E,E,98,[[["self"]],[T]]],[11,R[80],E,E,98,[[["self"],[T]]]],[11,"into",E,E,98,[[],[U]]],[11,"from",E,E,98,[[[T]],[T]]],[11,R[5],E,E,98,[[[U]],[R[4]]]],[11,R[6],E,E,98,[[],[R[4]]]],[11,R[8],E,E,98,[[["self"]],[T]]],[11,R[7],E,E,98,[[["self"]],[T]]],[11,R[9],E,E,98,[[["self"]],[R[81]]]],[11,R[554],E,E,99,[[],[T]]],[11,R[79],E,E,99,[[["self"]],[T]]],[11,R[80],E,E,99,[[["self"],[T]]]],[11,"into",E,E,99,[[],[U]]],[11,"from",E,E,99,[[[T]],[T]]],[11,R[5],E,E,99,[[[U]],[R[4]]]],[11,R[6],E,E,99,[[],[R[4]]]],[11,R[8],E,E,99,[[["self"]],[T]]],[11,R[7],E,E,99,[[["self"]],[T]]],[11,R[9],E,E,99,[[["self"]],[R[81]]]],[11,R[554],E,E,100,[[],[T]]],[11,R[79],E,E,100,[[["self"]],[T]]],[11,R[80],E,E,100,[[["self"],[T]]]],[11,"into",E,E,100,[[],[U]]],[11,"from",E,E,100,[[[T]],[T]]],[11,R[5],E,E,100,[[[U]],[R[4]]]],[11,R[6],E,E,100,[[],[R[4]]]],[11,R[8],E,E,100,[[["self"]],[T]]],[11,R[7],E,E,100,[[["self"]],[T]]],[11,R[9],E,E,100,[[["self"]],[R[81]]]],[11,R[554],E,E,101,[[],[T]]],[11,R[79],E,E,101,[[["self"]],[T]]],[11,R[80],E,E,101,[[["self"],[T]]]],[11,"into",E,E,101,[[],[U]]],[11,"from",E,E,101,[[[T]],[T]]],[11,R[5],E,E,101,[[[U]],[R[4]]]],[11,R[6],E,E,101,[[],[R[4]]]],[11,R[8],E,E,101,[[["self"]],[T]]],[11,R[7],E,E,101,[[["self"]],[T]]],[11,R[9],E,E,101,[[["self"]],[R[81]]]],[11,R[554],E,E,102,[[],[T]]],[11,R[79],E,E,102,[[["self"]],[T]]],[11,R[80],E,E,102,[[["self"],[T]]]],[11,"into",E,E,102,[[],[U]]],[11,"from",E,E,102,[[[T]],[T]]],[11,R[5],E,E,102,[[[U]],[R[4]]]],[11,R[6],E,E,102,[[],[R[4]]]],[11,R[8],E,E,102,[[["self"]],[T]]],[11,R[7],E,E,102,[[["self"]],[T]]],[11,R[9],E,E,102,[[["self"]],[R[81]]]],[11,R[554],E,E,103,[[],[T]]],[11,R[79],E,E,103,[[["self"]],[T]]],[11,R[80],E,E,103,[[["self"],[T]]]],[11,"into",E,E,103,[[],[U]]],[11,"from",E,E,103,[[[T]],[T]]],[11,R[5],E,E,103,[[[U]],[R[4]]]],[11,R[6],E,E,103,[[],[R[4]]]],[11,R[8],E,E,103,[[["self"]],[T]]],[11,R[7],E,E,103,[[["self"]],[T]]],[11,R[9],E,E,103,[[["self"]],[R[81]]]],[11,R[554],E,E,104,[[],[T]]],[11,R[79],E,E,104,[[["self"]],[T]]],[11,R[80],E,E,104,[[["self"],[T]]]],[11,"into",E,E,104,[[],[U]]],[11,"from",E,E,104,[[[T]],[T]]],[11,R[5],E,E,104,[[[U]],[R[4]]]],[11,R[6],E,E,104,[[],[R[4]]]],[11,R[8],E,E,104,[[["self"]],[T]]],[11,R[7],E,E,104,[[["self"]],[T]]],[11,R[9],E,E,104,[[["self"]],[R[81]]]],[11,R[554],R[568],E,105,[[],[T]]],[11,R[79],E,E,105,[[["self"]],[T]]],[11,R[80],E,E,105,[[["self"],[T]]]],[11,"into",E,E,105,[[],[U]]],[11,"from",E,E,105,[[[T]],[T]]],[11,R[5],E,E,105,[[[U]],[R[4]]]],[11,R[6],E,E,105,[[],[R[4]]]],[11,R[8],E,E,105,[[["self"]],[T]]],[11,R[7],E,E,105,[[["self"]],[T]]],[11,R[9],E,E,105,[[["self"]],[R[81]]]],[11,"into",R[526],E,0,[[],[R[4]]]],[11,"eq",E,E,0,[[["self"],[R[14]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[14]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[[R[4],["error"]],["error"]]]],[11,R[84],E,E,0,[[["self"]],[R[20]]]],[11,R[44],E,E,0,[[["self"]]]],[11,R[44],E,E,0,[[["self"]],["target"]]],[11,R[44],E,E,0,[[["self"]],["str"]]],[11,"next",E,E,0,[[["self"]],[R[20]]]],[11,R[85],E,E,0,[[["self"]]]],[11,"fold",E,E,0,[[["acc"],["g"]],["acc"]]],[11,"count",E,E,0,[[],["usize"]]],[11,"last",E,E,0,[[],[R[20]]]],[11,"nth",E,E,0,[[["self"],["usize"]],[R[20]]]],[11,R[99],E,E,0,[[],["b"]]],[11,"all",E,E,0,[[["self"],["f"]],["bool"]]],[11,R[86],E,E,0,[[["self"],[R[14]]],[[R[19]],[R[20],[R[19]]]]]],[11,"lt",E,E,0,[[["self"],[R[14]]],["bool"]]],[11,"le",E,E,0,[[["self"],[R[14]]],["bool"]]],[11,"gt",E,E,0,[[["self"],[R[14]]],["bool"]]],[11,"ge",E,E,0,[[["self"],[R[14]]],["bool"]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[[R[4],["error"]],["error"]]]],[11,R[45],E,E,0,[[["self"]],["str"]]],[11,R[45],E,E,0,[[["self"]]]],[11,R[45],E,E,0,[[["self"]],["target"]]],[11,"deref",E,E,0,[[["self"]]]],[11,"from",E,E,0,[[[R[4]]],[R[14]]]],[11,"hash",E,E,0,[[["self"],["__h"]]]],[11,R[22],E,E,0,[[["self"]]]],[11,"cmp",E,E,0,[[["self"],[R[14]]],[R[19]]]],[11,"clone",E,E,0,[[["self"]],[R[14]]]],[11,"extend",E,E,0,[[["self"],[T]]]],[11,"fmt","rayon",E,22,[[["self"],[R[11]]],[[R[4],["error"]],["error"]]]],[11,"fmt",E,E,26,[[["self"],[R[11]]],[[R[4],["error"]],["error"]]]],[11,"fmt",E,E,23,[[["self"],[R[11]]],[[R[4],["error"]],["error"]]]],[11,"fmt",E,E,24,[[["self"],[R[11]]],[[R[4],["error"]],["error"]]]],[11,"fmt",E,E,21,[[["self"],[R[11]]],[[R[4],["error"]],["error"]]]],[11,"fmt",E,E,25,[[["self"],[R[11]]],[[R[4],["error"]],["error"]]]],[11,"fmt",E,E,20,[[["self"],[R[11]]],[[R[4],["error"]],["error"]]]],[11,R[169],E,E,23,[[["self"]],["str"]]],[11,R[456],E,E,24,[[],[[R[583],[R[569]]],[R[569]]]]],[11,"fmt",E,E,23,[[["self"],[R[11]]],[[R[4],["error"]],["error"]]]],[11,"drop",E,E,22,[[["self"]]]],[11,R[570],R[555],E,27,[[["c"]]]],[11,R[571],E,E,27,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,28,[[["c"]]]],[11,R[571],E,E,28,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],R[556],E,29,[[["c"]]]],[11,R[571],E,E,29,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,30,[[["c"]]]],[11,R[571],E,E,30,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,31,[[["c"]]]],[11,R[571],E,E,31,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],R[557],E,32,[[["c"]]]],[11,R[571],E,E,32,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,33,[[["c"]]]],[11,R[571],E,E,33,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],R[558],E,34,[[["c"]]]],[11,R[571],E,E,34,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,35,[[["c"]]]],[11,R[571],E,E,35,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,36,[[["c"]]]],[11,R[571],E,E,36,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],R[559],E,37,[[["c"]]]],[11,R[571],E,E,37,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,38,[[["c"]]]],[11,R[571],E,E,38,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],R[560],E,39,[[["c"]]]],[11,R[571],E,E,39,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,40,[[["c"]]]],[11,R[571],E,E,40,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,41,[[["c"]]]],[11,R[571],E,E,41,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],R[561],E,42,[[["c"]]]],[11,R[571],E,E,42,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,43,[[["c"]]]],[11,R[571],E,E,43,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,44,[[["c"]]]],[11,R[571],E,E,44,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],R[526],E,45,[[["c"]]]],[11,R[570],E,E,46,[[["c"]]]],[11,R[571],E,E,46,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,47,[[["c"]]]],[11,R[571],E,E,47,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,48,[[["c"]]]],[11,R[571],E,E,48,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,49,[[["c"]]]],[11,R[570],E,E,50,[[["c"]]]],[11,R[570],E,E,51,[[["c"]]]],[11,R[570],E,E,52,[[["c"]]]],[11,R[570],E,E,53,[[["c"]]]],[11,R[570],E,E,54,[[["c"]]]],[11,R[570],E,E,55,[[["c"]]]],[11,R[570],E,E,56,[[["c"]]]],[11,R[570],E,E,57,[[["c"]]]],[11,R[571],E,E,57,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,58,[[["c"]]]],[11,R[570],E,E,59,[[["c"]]]],[11,R[571],E,E,59,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,60,[[["c"]]]],[11,R[571],E,E,60,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,62,[[["c"]]]],[11,R[571],E,E,62,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,61,[[["c"]]]],[11,R[571],E,E,61,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,63,[[["c"]]]],[11,R[571],E,E,63,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,64,[[["c"]]]],[11,R[571],E,E,64,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,65,[[["c"]]]],[11,R[571],E,E,65,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,66,[[["c"]]]],[11,R[571],E,E,66,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,67,[[["c"]]]],[11,R[571],E,E,67,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,68,[[["c"]]]],[11,R[571],E,E,68,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,69,[[["c"]]]],[11,R[571],E,E,69,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,71,[[["c"]]]],[11,R[571],E,E,71,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,70,[[["c"]]]],[11,R[571],E,E,70,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,72,[[["c"]]]],[11,R[571],E,E,72,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,73,[[["c"]]]],[11,R[571],E,E,73,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,74,[[["c"]]]],[11,R[571],E,E,74,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,75,[[["c"]]]],[11,R[571],E,E,75,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,76,[[["c"]]]],[11,R[570],E,E,8,[[["c"]]]],[11,R[570],E,E,77,[[["c"]]]],[11,R[571],E,E,77,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,78,[[["c"]]]],[11,R[571],E,E,78,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,79,[[["c"]]]],[11,R[571],E,E,79,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],R[562],E,80,[[["c"]]]],[11,R[571],E,E,80,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,81,[[["c"]]]],[11,R[571],E,E,81,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,82,[[["c"]]]],[11,R[571],E,E,82,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],R[563],E,83,[[["c"]]]],[11,R[571],E,E,83,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,83,[[["c"]]]],[11,R[571],E,E,83,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,83,[[["c"]]]],[11,R[571],E,E,83,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,83,[[["c"]]]],[11,R[571],E,E,83,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,83,[[["c"]]]],[11,R[571],E,E,83,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,83,[[["c"]]]],[11,R[571],E,E,83,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,83,[[["c"]]]],[11,R[571],E,E,83,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,83,[[["c"]]]],[11,R[571],E,E,83,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,83,[[["c"]]]],[11,R[571],E,E,83,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,83,[[["c"]]]],[11,R[571],E,E,83,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,83,[[["c"]]]],[11,R[571],E,E,83,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,83,[[["c"]]]],[11,R[571],E,E,83,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],R[564],E,84,[[["c"]]]],[11,R[571],E,E,84,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,84,[[["c"]]]],[11,R[571],E,E,84,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,84,[[["c"]]]],[11,R[571],E,E,84,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,84,[[["c"]]]],[11,R[571],E,E,84,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,84,[[["c"]]]],[11,R[571],E,E,84,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,84,[[["c"]]]],[11,R[571],E,E,84,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,84,[[["c"]]]],[11,R[571],E,E,84,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,84,[[["c"]]]],[11,R[571],E,E,84,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,84,[[["c"]]]],[11,R[571],E,E,84,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,84,[[["c"]]]],[11,R[571],E,E,84,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,84,[[["c"]]]],[11,R[571],E,E,84,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,84,[[["c"]]]],[11,R[571],E,E,84,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],R[565],E,85,[[["c"]]]],[11,R[571],E,E,85,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,86,[[["c"]]]],[11,R[571],E,E,86,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,87,[[["c"]]]],[11,R[571],E,E,87,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],R[566],E,88,[[["c"]]]],[11,R[571],E,E,88,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,89,[[["c"]]]],[11,R[571],E,E,89,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,90,[[["c"]]]],[11,R[571],E,E,90,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,91,[[["c"]]]],[11,R[571],E,E,91,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,92,[[["c"]]]],[11,R[571],E,E,92,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],E,E,93,[[["c"]]]],[11,R[570],E,E,94,[[["c"]]]],[11,R[570],R[567],E,95,[[["c"]]]],[11,R[570],E,E,96,[[["c"]]]],[11,R[570],E,E,97,[[["c"]]]],[11,R[570],E,E,98,[[["c"]]]],[11,R[570],E,E,99,[[["c"]]]],[11,R[570],E,E,100,[[["c"]]]],[11,R[570],E,E,101,[[["c"]]]],[11,R[570],E,E,102,[[["c"]]]],[11,R[570],E,E,103,[[["c"]]]],[11,R[570],E,E,104,[[["c"]]]],[11,R[570],R[568],E,105,[[["c"]]]],[11,R[571],E,E,105,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[570],R[526],E,0,[[["c"]]]],[11,R[571],E,E,0,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,"drive",R[555],E,27,[[["c"]]]],[11,"len",E,E,27,[[["self"]],["usize"]]],[11,R[572],E,E,27,[[["cb"]]]],[11,"drive",E,E,28,[[["c"]]]],[11,"len",E,E,28,[[["self"]],["usize"]]],[11,R[572],E,E,28,[[["cb"]]]],[11,"drive",R[561],E,42,[[["c"]]]],[11,"len",E,E,42,[[["self"]],["usize"]]],[11,R[572],E,E,42,[[["cb"]]]],[11,"drive",E,E,43,[[["c"]]]],[11,"len",E,E,43,[[["self"]],["usize"]]],[11,R[572],E,E,43,[[["cb"]]]],[11,"drive",E,E,44,[[["c"]]]],[11,"len",E,E,44,[[["self"]],["usize"]]],[11,R[572],E,E,44,[[["cb"]]]],[11,"drive",R[526],E,46,[[["c"]]]],[11,"len",E,E,46,[[["self"]],["usize"]]],[11,R[572],E,E,46,[[["cb"]]]],[11,"drive",E,E,47,[[["c"]]]],[11,"len",E,E,47,[[["self"]],["usize"]]],[11,R[572],E,E,47,[[["cb"]]]],[11,"drive",E,E,48,[[[R[573]]]]],[11,"len",E,E,48,[[["self"]],["usize"]]],[11,R[572],E,E,48,[[["cb"]]]],[11,"len",E,E,57,[[["self"]],["usize"]]],[11,"drive",E,E,57,[[[R[573]]]]],[11,R[572],E,E,57,[[["cb"]]]],[11,"len",E,E,59,[[["self"]],["usize"]]],[11,"drive",E,E,59,[[[R[573]]]]],[11,R[572],E,E,59,[[["cb"]]]],[11,"drive",E,E,60,[[["c"]]]],[11,"len",E,E,60,[[["self"]],["usize"]]],[11,R[572],E,E,60,[[["cb"]]]],[11,"drive",E,E,62,[[["c"]]]],[11,"len",E,E,62,[[["self"]],["usize"]]],[11,R[572],E,E,62,[[["cb"]]]],[11,"drive",E,E,61,[[["c"]]]],[11,"len",E,E,61,[[["self"]],["usize"]]],[11,R[572],E,E,61,[[["cb"]]]],[11,"drive",E,E,63,[[["c"]]]],[11,"len",E,E,63,[[["self"]],["usize"]]],[11,R[572],E,E,63,[[["cb"]]]],[11,"drive",E,E,64,[[["c"]]]],[11,"len",E,E,64,[[["self"]],["usize"]]],[11,R[572],E,E,64,[[["cb"]]]],[11,"drive",E,E,65,[[["c"]]]],[11,"len",E,E,65,[[["self"]],["usize"]]],[11,R[572],E,E,65,[[["cb"]]]],[11,"drive",E,E,66,[[["c"]]]],[11,"len",E,E,66,[[["self"]],["usize"]]],[11,R[572],E,E,66,[[["cb"]]]],[11,"drive",E,E,67,[[["c"]]]],[11,"len",E,E,67,[[["self"]],["usize"]]],[11,R[572],E,E,67,[[["cb"]]]],[11,"drive",E,E,68,[[["c"]]]],[11,"len",E,E,68,[[["self"]],["usize"]]],[11,R[572],E,E,68,[[["cb"]]]],[11,"drive",E,E,69,[[[R[573]]]]],[11,"len",E,E,69,[[["self"]],["usize"]]],[11,R[572],E,E,69,[[["cb"]]]],[11,"drive",E,E,71,[[[R[573]]]]],[11,"len",E,E,71,[[["self"]],["usize"]]],[11,R[572],E,E,71,[[["cb"]]]],[11,"drive",E,E,70,[[[R[573]]]]],[11,"len",E,E,70,[[["self"]],["usize"]]],[11,R[572],E,E,70,[[["cb"]]]],[11,"drive",E,E,72,[[["c"]]]],[11,"len",E,E,72,[[["self"]],["usize"]]],[11,R[572],E,E,72,[[["cb"]]]],[11,"drive",E,E,73,[[["c"]]]],[11,"len",E,E,73,[[["self"]],["usize"]]],[11,R[572],E,E,73,[[["cb"]]]],[11,"drive",E,E,74,[[["c"]]]],[11,"len",E,E,74,[[["self"]],["usize"]]],[11,R[572],E,E,74,[[["cb"]]]],[11,"drive",E,E,75,[[["c"]]]],[11,"len",E,E,75,[[["self"]],["usize"]]],[11,R[572],E,E,75,[[["cb"]]]],[11,"drive",E,E,77,[[["c"]]]],[11,R[572],E,E,77,[[["cb"]]]],[11,"len",E,E,77,[[["self"]],["usize"]]],[11,"drive",E,E,78,[[["c"]]]],[11,"len",E,E,78,[[["self"]],["usize"]]],[11,R[572],E,E,78,[[["cb"]]]],[11,"drive",E,E,79,[[["c"]]]],[11,"len",E,E,79,[[["self"]],["usize"]]],[11,R[572],E,E,79,[[["cb"]]]],[11,"drive",R[562],E,80,[[["c"]]]],[11,"len",E,E,80,[[["self"]],["usize"]]],[11,R[572],E,E,80,[[["cb"]]]],[11,"drive",E,E,81,[[["c"]]]],[11,"len",E,E,81,[[["self"]],["usize"]]],[11,R[572],E,E,81,[[["cb"]]]],[11,"drive",E,E,82,[[["c"]]]],[11,"len",E,E,82,[[["self"]],["usize"]]],[11,R[572],E,E,82,[[["cb"]]]],[11,"drive",R[563],E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[572],E,E,83,[[["cb"]]]],[11,"drive",E,E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[572],E,E,83,[[["cb"]]]],[11,"drive",E,E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[572],E,E,83,[[["cb"]]]],[11,"drive",E,E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[572],E,E,83,[[["cb"]]]],[11,"drive",E,E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[572],E,E,83,[[["cb"]]]],[11,"drive",E,E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[572],E,E,83,[[["cb"]]]],[11,"drive",E,E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[572],E,E,83,[[["cb"]]]],[11,"drive",E,E,83,[[["c"]]]],[11,"len",E,E,83,[[["self"]],["usize"]]],[11,R[572],E,E,83,[[["cb"]]]],[11,"drive",R[564],E,84,[[["c"]]]],[11,"len",E,E,84,[[["self"]],["usize"]]],[11,R[572],E,E,84,[[["cb"]]]],[11,"drive",E,E,84,[[["c"]]]],[11,"len",E,E,84,[[["self"]],["usize"]]],[11,R[572],E,E,84,[[["cb"]]]],[11,"drive",E,E,84,[[["c"]]]],[11,"len",E,E,84,[[["self"]],["usize"]]],[11,R[572],E,E,84,[[["cb"]]]],[11,"drive",E,E,84,[[["c"]]]],[11,"len",E,E,84,[[["self"]],["usize"]]],[11,R[572],E,E,84,[[["cb"]]]],[11,"drive",R[565],E,85,[[["c"]]]],[11,"len",E,E,85,[[["self"]],["usize"]]],[11,R[572],E,E,85,[[["cb"]]]],[11,"drive",E,E,86,[[["c"]]]],[11,"len",E,E,86,[[["self"]],["usize"]]],[11,R[572],E,E,86,[[["cb"]]]],[11,"drive",E,E,87,[[["c"]]]],[11,"len",E,E,87,[[["self"]],["usize"]]],[11,R[572],E,E,87,[[["cb"]]]],[11,"drive",R[566],E,88,[[["c"]]]],[11,"len",E,E,88,[[["self"]],["usize"]]],[11,R[572],E,E,88,[[["cb"]]]],[11,"drive",E,E,89,[[["c"]]]],[11,"len",E,E,89,[[["self"]],["usize"]]],[11,R[572],E,E,89,[[["cb"]]]],[11,"drive",E,E,90,[[["c"]]]],[11,"len",E,E,90,[[["self"]],["usize"]]],[11,R[572],E,E,90,[[["cb"]]]],[11,"drive",E,E,91,[[["c"]]]],[11,"len",E,E,91,[[["self"]],["usize"]]],[11,R[572],E,E,91,[[["cb"]]]],[11,"drive",E,E,92,[[["c"]]]],[11,"len",E,E,92,[[["self"]],["usize"]]],[11,R[572],E,E,92,[[["cb"]]]],[11,"drive",R[568],E,105,[[["c"]]]],[11,"len",E,E,105,[[["self"]],["usize"]]],[11,R[572],E,E,105,[[["cb"]]]],[11,"drive",R[526],E,0,[[["c"]]]],[11,"len",E,E,0,[[["self"]],["usize"]]],[11,R[572],E,E,0,[[["cb"]]]],[11,R[574],E,E,0,[[["self"],["i"]]]],[11,"clone",R[555],E,27,[[["self"]],[R[75]]]],[11,"clone",E,E,28,[[["self"]],["self"]]],[11,"clone",R[556],E,30,[[["self"]],["self"]]],[11,"clone",R[557],E,33,[[["self"]],["self"]]],[11,"clone",R[558],E,35,[[["self"]],["self"]]],[11,"clone",R[559],E,38,[[["self"]],["self"]]],[11,"clone",R[560],E,39,[[["self"]],[R[75]]]],[11,"clone",E,E,40,[[["self"]],["self"]]],[11,"clone",R[561],E,42,[[["self"]],[R[75]]]],[11,"clone",E,E,43,[[["self"]],["self"]]],[11,"clone",R[526],E,45,[[["self"]],[R[548]]]],[11,"clone",E,E,46,[[["self"]],["chain"]]],[11,"clone",E,E,47,[[["self"]],["chunks"]]],[11,"clone",E,E,48,[[["self"]],[R[33]]]],[11,"clone",E,E,49,[[["self"]],["filter"]]],[11,"clone",E,E,50,[[["self"]],[R[575]]]],[11,"clone",E,E,51,[[["self"]],["flatmap"]]],[11,"clone",E,E,52,[[["self"]],["flatten"]]],[11,"clone",E,E,53,[[["self"]],["fold"]]],[11,"clone",E,E,54,[[["self"]],["foldwith"]]],[11,"clone",E,E,55,[[["self"]],["tryfold"]]],[11,"clone",E,E,56,[[["self"]],[R[576]]]],[11,"clone",E,E,57,[[["self"]],["skip"]]],[11,"clone",E,E,58,[[["self"]],["split"]]],[11,"clone",E,E,59,[[["self"]],["take"]]],[11,"clone",E,E,60,[[["self"]],["map"]]],[11,"clone",E,E,62,[[["self"]],["mapwith"]]],[11,"clone",E,E,61,[[["self"]],["mapinit"]]],[11,"clone",E,E,63,[[["self"]],["zip"]]],[11,"clone",E,E,64,[[["self"]],["zipeq"]]],[11,"clone",E,E,65,[[["self"]],[R[30]]]],[11,"clone",E,E,66,[[["self"]],[R[89]]]],[11,"clone",E,E,67,[[["self"]],[R[55]]]],[11,"clone",E,E,68,[[["self"]],["update"]]],[11,"clone",E,E,69,[[["self"]],["rev"]]],[11,"clone",E,E,71,[[["self"]],["minlen"]]],[11,"clone",E,E,70,[[["self"]],["maxlen"]]],[11,"clone",E,E,72,[[["self"]],["cloned"]]],[11,"clone",E,E,73,[[["self"]],["copied"]]],[11,"clone",E,E,74,[[["self"]],["inspect"]]],[11,"clone",E,E,75,[[["self"]],[R[577]]]],[11,"clone",E,E,76,[[["self"]],[R[90]]]],[11,"clone",E,E,8,[[["self"]],["repeat"]]],[11,"clone",E,E,77,[[["self"]],[R[527]]]],[11,"clone",E,E,78,[[["self"]],["self"]]],[11,"clone",E,E,79,[[["self"]],["once"]]],[11,"clone",R[562],E,80,[[["self"]],[R[75]]]],[11,"clone",E,E,81,[[["self"]],["self"]]],[11,"clone",R[563],E,83,[[["self"]],["iter"]]],[11,"clone",R[564],E,84,[[["self"]],["iter"]]],[11,"clone",R[565],E,85,[[["self"]],[R[75]]]],[11,"clone",E,E,86,[[["self"]],["self"]]],[11,"clone",R[566],E,88,[[["self"]],["self"]]],[11,"clone",E,E,89,[[["self"]],["self"]]],[11,"clone",E,E,90,[[["self"]],["self"]]],[11,"clone",E,E,93,[[["self"]],["self"]]],[11,"clone",R[567],E,95,[[["self"]],["chars"]]],[11,"clone",E,E,96,[[["self"]],[R[578]]]],[11,"clone",E,E,97,[[["self"]],["bytes"]]],[11,"clone",E,E,98,[[["self"]],[R[579]]]],[11,"clone",E,E,99,[[["self"]],["split"]]],[11,"clone",E,E,100,[[["self"]],[R[580]]]],[11,"clone",E,E,101,[[["self"]],["lines"]]],[11,"clone",E,E,102,[[["self"]],[R[581]]]],[11,"clone",E,E,103,[[["self"]],["matches"]]],[11,"clone",E,E,104,[[["self"]],[R[582]]]],[11,"clone",R[568],E,105,[[["self"]],[R[75]]]],[11,"fmt",R[555],E,27,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,28,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[556],E,29,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,30,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,31,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[557],E,32,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,33,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[558],E,34,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,35,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,36,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[559],E,37,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,38,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[560],E,39,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,40,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,41,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[561],E,42,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,43,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,44,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[526],E,45,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,46,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,47,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,48,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,49,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,50,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,51,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,52,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,53,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,54,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,55,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,56,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,57,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,58,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,59,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,60,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,62,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,61,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,63,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,64,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,65,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,66,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,67,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,68,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,69,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,71,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,70,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,72,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,73,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,74,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,75,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,76,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,8,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,77,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,78,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,79,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[562],E,80,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,81,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,82,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[563],E,83,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[564],E,84,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[565],E,85,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,86,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,87,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[566],E,88,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,89,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,90,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,91,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,92,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,93,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,94,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[567],E,95,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,96,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,97,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,98,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,99,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,100,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,101,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,102,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,103,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,104,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",R[568],E,105,[[["self"],[R[11]]],[R[4]]]],[11,"migrated","rayon",R[645],20,[[["self"]],["bool"]]],[11,"index",E,R[621],21,[[["self"]],["usize"]]],[11,"name",E,R[622],21,[[["self"]],[[R[20],["str"]],["str"]]]],[11,R[492],E,R[623],21,[[["self"]],[[R[20],["usize"]],["usize"]]]],[11,"run",E,R[624],21,[[]]],[11,"new",E,R[505],22,[[[R[495]]],[["box",["error"]],[R[4],[R[496],"box"]],[R[496]]]]],[11,"install",E,R[625],22,[[["self"],["op"]],["r"]]],[11,R[497],E,R[626],22,[[["self"]],["usize"]]],[11,R[498],E,R[627],22,[[["self"]],[[R[20],["usize"]],["usize"]]]],[11,R[499],E,R[628],22,[[["self"]],[["bool"],[R[20],["bool"]]]]],[11,"join",E,R[629],22,[[["self"],["a"],["b"]]]],[11,"scope",E,R[501],22,[[["self"],["op"]],["r"]]],[11,R[500],E,R[501],22,[[["self"],["op"]],["r"]]],[11,"spawn",E,R[502],22,[[["self"],["op"]]]],[11,R[493],E,R[502],22,[[["self"],["op"]]]],[11,"new",E,R[630],24,[[],[[R[583],[R[569]]],[R[569]]]]],[11,"build",E,R[631],24,[[],[[R[503]],[R[4],[R[496],R[503]]],[R[496]]]]],[11,R[632],E,R[633],24,[[],[[R[4],[R[503]]],[R[503]]]]],[11,R[634],E,R[635],24,[[["w"],["f"]],[[R[4],[R[503]]],[R[503]]]]],[11,R[636],E,R[637],24,[[["f"]],[[R[504]],[R[583],[R[504]]]]]],[11,R[506],E,R[638],24,[[["f"]],[R[583]]]],[11,R[507],E,R[639],24,[[["usize"]],[R[583]]]],[11,R[508],E,R[640],24,[[["h"]],[R[583]]]],[11,R[492],E,R[641],24,[[["usize"]],[R[583]]]],[11,R[509],E,R[642],24,[[],[R[583]]]],[11,R[510],E,R[643],24,[[["h"]],[R[583]]]],[11,R[511],E,R[644],24,[[["h"]],[R[583]]]],[11,"spawn",E,R[494],25,[[["self"],["body"]]]],[11,R[493],E,R[494],26,[[["self"],["body"]]]],[11,"is_left",R[526],R[100],0,[[["self"]],["bool"]]],[11,R[43],E,R[101],0,[[["self"]],["bool"]]],[11,"left",E,R[102],0,[[],[R[20]]]],[11,"right",E,R[103],0,[[],[R[20]]]],[11,R[44],E,R[104],0,[[["self"]],[["l"],["r"],[R[14]]]]],[11,R[45],E,R[105],0,[[["self"]],[["r"],["l"],[R[14]]]]],[11,"flip",E,R[106],0,[[],[R[14]]]],[11,R[47],E,R[15],0,[[["f"]],[R[14]]]],[11,R[48],E,R[16],0,[[["f"]],[R[14]]]],[11,R[14],E,R[107],0,[[["f"],["g"]],[T]]],[11,R[108],E,R[109],0,[[["ctx"],["f"],["g"]],[T]]],[11,R[49],E,R[15],0,[[["f"]],[R[14]]]],[11,R[51],E,R[16],0,[[["f"]],[R[14]]]],[11,R[18],E,R[110],0,[[],[R[14]]]],[11,"left_or",E,R[111],0,[[["l"]],["l"]]],[11,R[112],E,R[113],0,[[],["l"]]],[11,R[114],E,R[115],0,[[["f"]],["l"]]],[11,R[584],E,R[116],0,[[["r"]],["r"]]],[11,R[117],E,R[118],0,[[],["r"]]],[11,R[119],E,R[120],0,[[["f"]],["r"]]],[11,R[121],E,R[17],0,[[]]],[11,R[122],E,R[17],0,[[]]],[11,R[21],E,R[123],0,[[],[T]]],[11,"map",E,R[124],0,[[["f"]],[R[14]]]]],"p":[[4,"Either"],[8,R[585]],[8,"Producer"],[8,"Consumer"],[8,"Folder"],[8,"Reducer"],[8,R[586]],[8,R[587]],[3,"Repeat"],[8,R[544]],[8,R[588]],[8,R[589]],[8,R[590]],[8,R[591]],[8,R[592]],[8,R[593]],[8,R[594]],[8,R[595]],[8,R[596]],[8,R[597]],[3,R[517]],[3,R[512]],[3,R[514]],[3,R[518]],[3,R[515]],[3,"Scope"],[3,R[513]],[3,R[521]],[3,"Iter"],[3,R[521]],[3,"Iter"],[3,R[549]],[3,R[521]],[3,"Iter"],[3,R[521]],[3,"Iter"],[3,R[549]],[3,R[521]],[3,"Iter"],[3,R[521]],[3,"Iter"],[3,R[549]],[3,R[521]],[3,"Iter"],[3,R[549]],[3,R[598]],[3,"Chain"],[3,"Chunks"],[3,R[599]],[3,"Filter"],[3,R[600]],[3,"FlatMap"],[3,"Flatten"],[3,"Fold"],[3,"FoldWith"],[3,"TryFold"],[3,R[601]],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"Map"],[3,"MapInit"],[3,"MapWith"],[3,"Zip"],[3,"ZipEq"],[3,R[131]],[3,R[132]],[3,R[145]],[3,"Update"],[3,"Rev"],[3,"MaxLen"],[3,"MinLen"],[3,"Cloned"],[3,"Copied"],[3,"Inspect"],[3,R[602]],[3,R[135]],[3,"RepeatN"],[3,"Empty"],[3,"Once"],[3,R[521]],[3,"Iter"],[3,R[549]],[3,"Iter"],[3,"Iter"],[3,R[521]],[3,"Iter"],[3,R[549]],[3,"Iter"],[3,"Chunks"],[3,"Windows"],[3,R[549]],[3,R[603]],[3,"Split"],[3,"SplitMut"],[3,"Chars"],[3,R[604]],[3,"Bytes"],[3,R[605]],[3,"Split"],[3,R[606]],[3,"Lines"],[3,R[607]],[3,"Matches"],[3,R[608]],[3,R[521]]]};
searchIndex["rayon_core"]={"doc":"Under construction","i":[[3,R[512],"rayon_core",R[609],N,N],[3,"Scope",E,R[489],N,N],[3,R[513],E,R[489],N,N],[3,R[514],E,R[610],N,N],[3,R[518],E,R[611],N,N],[3,R[515],E,R[612],N,N],[3,R[516],E,"Contains the rayon thread pool configuration. Use…",N,N],[3,R[517],E,R[613],N,N],[5,"join",E,R[614],N,[[["a"],["b"]]]],[5,R[615],E,R[616],N,[[["a"],["b"]]]],[5,"scope",E,R[617],N,[[["op"]],["r"]]],[5,R[500],E,R[618],N,[[["op"]],["r"]]],[5,"spawn",E,R[490],N,[[["f"]]]],[5,R[493],E,R[490],N,[[["f"]]]],[5,R[499],E,"If called from a Rayon worker thread, indicates whether…",N,[[],[[R[20],["bool"]],["bool"]]]],[5,R[498],E,R[619],N,[[],[["usize"],[R[20],["usize"]]]]],[5,R[497],E,R[620],N,[[],["usize"]]],[5,R[491],E,"Deprecated in favor of `ThreadPoolBuilder::build_global`.",N,[[[R[495]]],[[R[4],["box"]],["box",["error"]]]]],[11,"index",E,R[621],0,[[["self"]],["usize"]]],[11,"name",E,R[622],0,[[["self"]],[["str"],[R[20],["str"]]]]],[11,R[492],E,R[623],0,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,"run",E,R[624],0,[[]]],[11,"spawn",E,R[494],1,[[["self"],["body"]]]],[11,R[493],E,R[494],2,[[["self"],["body"]]]],[11,"new",E,R[505],3,[[[R[495]]],[[R[4],[R[496],"box"]],[R[496]],["box",["error"]]]]],[11,"install",E,R[625],3,[[["self"],["op"]],["r"]]],[11,R[497],E,R[626],3,[[["self"]],["usize"]]],[11,R[498],E,R[627],3,[[["self"]],[["usize"],[R[20],["usize"]]]]],[11,R[499],E,R[628],3,[[["self"]],[[R[20],["bool"]],["bool"]]]],[11,"join",E,R[629],3,[[["self"],["a"],["b"]]]],[11,"scope",E,R[501],3,[[["self"],["op"]],["r"]]],[11,R[500],E,R[501],3,[[["self"],["op"]],["r"]]],[11,"spawn",E,R[502],3,[[["self"],["op"]]]],[11,R[493],E,R[502],3,[[["self"],["op"]]]],[11,"new",E,R[630],4,[[],["self"]]],[11,"build",E,R[631],4,[[],[[R[496]],[R[4],[R[496],R[503]]],[R[503]]]]],[11,R[632],E,R[633],4,[[],[[R[4],[R[503]]],[R[503]]]]],[11,R[634],E,R[635],4,[[["w"],["f"]],[[R[4],[R[503]]],[R[503]]]]],[11,R[636],E,R[637],4,[[["f"]],[[R[583],[R[504]]],[R[504]]]]],[11,R[506],E,R[638],4,[[["f"]],["self"]]],[11,R[507],E,R[639],4,[[["usize"]],["self"]]],[11,R[508],E,R[640],4,[[["h"]],["self"]]],[11,R[492],E,R[641],4,[[["usize"]],["self"]]],[11,R[509],E,R[642],4,[[],["self"]]],[11,R[510],E,R[643],4,[[["h"]],["self"]]],[11,R[511],E,R[644],4,[[["h"]],["self"]]],[11,"new",E,"Creates and return a valid rayon thread pool…",5,[[],[R[495]]]],[11,"build",E,R[505],5,[[],[[R[4],[R[496],"box"]],[R[496]],["box",["error"]]]]],[11,R[506],E,"Deprecated in favor of `ThreadPoolBuilder::thread_name`.",5,[[["f"]],["self"]]],[11,R[507],E,"Deprecated in favor of `ThreadPoolBuilder::num_threads`.",5,[[["usize"]],[R[495]]]],[11,R[508],E,"Deprecated in favor of `ThreadPoolBuilder::panic_handler`.",5,[[["h"]],[R[495]]]],[11,R[492],E,"Deprecated in favor of `ThreadPoolBuilder::stack_size`.",5,[[["usize"]],["self"]]],[11,R[509],E,"Deprecated in favor of `ThreadPoolBuilder::breadth_first`.",5,[[],["self"]]],[11,R[510],E,"Deprecated in favor of `ThreadPoolBuilder::start_handler`.",5,[[["h"]],[R[495]]]],[11,R[511],E,"Deprecated in favor of `ThreadPoolBuilder::exit_handler`.",5,[[["h"]],[R[495]]]],[11,"migrated",E,R[645],6,[[["self"]],["bool"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[5],E,E,0,[[[U]],[R[4]]]],[11,R[6],E,E,0,[[],[R[4]]]],[11,R[8],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[9],E,E,0,[[["self"]],[R[81]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[5],E,E,1,[[[U]],[R[4]]]],[11,R[6],E,E,1,[[],[R[4]]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[R[81]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[5],E,E,2,[[[U]],[R[4]]]],[11,R[6],E,E,2,[[],[R[4]]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[R[81]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[5],E,E,3,[[[U]],[R[4]]]],[11,R[6],E,E,3,[[],[R[4]]]],[11,R[8],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[9],E,E,3,[[["self"]],[R[81]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[82],E,E,7,[[["self"]],[R[83]]]],[11,R[5],E,E,7,[[[U]],[R[4]]]],[11,R[6],E,E,7,[[],[R[4]]]],[11,R[8],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[9],E,E,7,[[["self"]],[R[81]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[5],E,E,4,[[[U]],[R[4]]]],[11,R[6],E,E,4,[[],[R[4]]]],[11,R[8],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[9],E,E,4,[[["self"]],[R[81]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[5],E,E,5,[[[U]],[R[4]]]],[11,R[6],E,E,5,[[],[R[4]]]],[11,R[8],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[9],E,E,5,[[["self"]],[R[81]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[5],E,E,6,[[[U]],[R[4]]]],[11,R[6],E,E,6,[[],[R[4]]]],[11,R[8],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[9],E,E,6,[[["self"]],[R[81]]]],[11,"drop",E,E,3,[[["self"]]]],[11,R[456],E,E,4,[[],["self"]]],[11,R[456],E,E,5,[[],["self"]]],[11,"fmt",E,E,0,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,1,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,2,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,3,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,7,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,4,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,5,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,6,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,7,[[["self"],[R[11]]],[R[4]]]],[11,R[169],E,E,7,[[["self"]],["str"]]]],"p":[[3,R[512]],[3,"Scope"],[3,R[513]],[3,R[514]],[3,R[515]],[3,R[516]],[3,R[517]],[3,R[518]]]};
searchIndex["scopeguard"]={"doc":"A scope guard will run a given closure when it goes out of…","i":[[3,R[13],R[2],"`ScopeGuard` is a scope guard that may own a protected…",N,N],[4,"Always",E,"Always run on scope exit.",N,N],[5,"guard",E,"Create a new `ScopeGuard` owning `v` and with deferred…",N,[[[T],["f"]],[[R[2],[R[3]]],[R[3]]]]],[8,R[12],E,"Controls in which cases the associated code should be run",N,N],[10,R[10],E,"Return `true` if the guard’s associated code should run…",0,[[],["bool"]]],[11,"with_strategy",E,"Create a `ScopeGuard` that owns `v` (accessible through…",1,[[[T],["f"]],[R[2]]]],[11,R[21],E,"“Defuse” the guard and extract the value without calling…",1,[[],[T]]],[14,"defer",E,"Macro to create a `ScopeGuard` (always run).",N,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[5],E,E,1,[[[U]],[R[4]]]],[11,"into",E,E,1,[[],[U]]],[11,R[6],E,E,1,[[],[R[4]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[T]]],[11,R[9],E,E,1,[[["self"]],[R[81]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[5],E,E,2,[[[U]],[R[4]]]],[11,"into",E,E,2,[[],[U]]],[11,R[6],E,E,2,[[],[R[4]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[T]]],[11,R[9],E,E,2,[[["self"]],[R[81]]]],[11,R[10],E,E,2,[[],["bool"]]],[11,R[22],E,E,1,[[["self"]],[T]]],[11,"deref",E,E,1,[[["self"]],[T]]],[11,"drop",E,E,1,[[["self"]]]],[11,"fmt",E,E,2,[[["self"],[R[11]]],[R[4]]]],[11,"fmt",E,E,1,[[["self"],[R[11]]],[R[4]]]]],"p":[[8,R[12]],[3,R[13]],[4,"Always"]]};
searchIndex["special_functions"]={"doc":"Library providing pure rust implementation of various…","i":[[0,"approximations",R[430],"Approximations",N,N],[5,"polynomial","special_functions::approximations","Evaluates an arbitrary single-variable polynomial at a…",N,[[["f64"]],["f64"]]],[5,"piecewise_polynomial",E,"Evaluates an arbitrary piecewise single-variable…",N,[[["f64"]],["f64"]]],[5,"polynomial_ratio",E,"Evaluates an arbitrary ratio of single-variable…",N,[[["f64"]],["f64"]]],[5,"piecewise_polynomial_ratio",E,"Evaluates an arbitrary piecewise ratio of single-variable…",N,[[["f64"]],["f64"]]],[5,"chebyshev",E,"Evaluates a series of Chebyshev functions at x.",N,[[["f64"]],["f64"]]],[5,"piecewise_chebyshev",E,"Evaluates an arbitrary piecewise Chebyshev function at a…",N,[[["f64"]],["f64"]]],[0,"linear",E,"Linear interpolation",N,N],[5,"linear","special_functions::approximations::linear","Perform linear interpolation on data.",N,[[["f64"]],["f64"]]],[0,"basic",R[430],"Basic functions.",N,N],[0,"bessel",E,"Bessel functions",N,N],[5,"i0","special_functions::bessel","Approximation of modified Bessel function \\(I_0(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"i1",E,"Approximation of modified Bessel function \\(I_1(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"i2",E,"Approximation of modified Bessel function \\(I_2(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"i3",E,"Approximation of modified Bessel function \\(I_3(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"i4",E,"Approximation of modified Bessel function \\(I_4(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"i5",E,"Approximation of modified Bessel function \\(I_5(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"i6",E,"Approximation of modified Bessel function \\(I_6(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"i7",E,"Approximation of modified Bessel function \\(I_7(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"i8",E,"Approximation of modified Bessel function \\(I_8(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"i9",E,"Approximation of modified Bessel function \\(I_9(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"j0",E,"Approximation of modified Bessel function \\(J_0(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"j1",E,"Approximation of modified Bessel function \\(J_1(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"j2",E,"Approximation of modified Bessel function \\(J_2(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"j3",E,"Approximation of modified Bessel function \\(J_3(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"j4",E,"Approximation of modified Bessel function \\(J_4(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"j5",E,"Approximation of modified Bessel function \\(J_5(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"j6",E,"Approximation of modified Bessel function \\(J_6(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"j7",E,"Approximation of modified Bessel function \\(J_7(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"j8",E,"Approximation of modified Bessel function \\(J_8(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"j9",E,"Approximation of modified Bessel function \\(J_9(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"k0",E,"Approximation of modified Bessel function \\(K_0(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"k1",E,"Approximation of modified Bessel function \\(K_1(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"k2",E,"Approximation of modified Bessel function \\(K_2(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"k3",E,"Approximation of modified Bessel function \\(K_3(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"k4",E,"Approximation of modified Bessel function \\(K_4(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"k5",E,"Approximation of modified Bessel function \\(K_5(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"k6",E,"Approximation of modified Bessel function \\(K_6(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"k7",E,"Approximation of modified Bessel function \\(K_7(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"k8",E,"Approximation of modified Bessel function \\(K_8(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"k9",E,"Approximation of modified Bessel function \\(K_9(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"k1_on_k2",E,"Approximatino of the ratio of Bessel function \\(K_1(x) /…",N,[[["f64"]],["f64"]]],[5,"y0",E,"Approximation of modified Bessel function \\(Y_0(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"y1",E,"Approximation of modified Bessel function \\(Y_1(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"y2",E,"Approximation of modified Bessel function \\(Y_2(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"y3",E,"Approximation of modified Bessel function \\(Y_3(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"y4",E,"Approximation of modified Bessel function \\(Y_4(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"y5",E,"Approximation of modified Bessel function \\(Y_5(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"y6",E,"Approximation of modified Bessel function \\(Y_6(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"y7",E,"Approximation of modified Bessel function \\(Y_7(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"y8",E,"Approximation of modified Bessel function \\(Y_8(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"y9",E,"Approximation of modified Bessel function \\(Y_9(x)\\) for…",N,[[["f64"]],["f64"]]],[0,"other",R[430],"Miscellaneous functions",N,N],[5,"harmonic_number","special_functions::other","Approximation of the Harmonic number extended to all…",N,[[["f64"]],["f64"]]],[0,"polylog",E,"Polylogarithms functions",N,N],[5,"li0","special_functions::other::polylog","Approximation of polylogarithm function \\(Li_0(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"li1",E,"Approximation of polylogarithm function \\(Li_1(x)\\) for…",N,[[["f64"]],["f64"]]],[5,"li2",E,"Approximation of polylogarithm function (Li_2(x)) for all…",N,[[["f64"]],["f64"]]],[5,"li3",E,"Approximation of polylogarithm function (Li_3(x)) for all…",N,[[["f64"]],["f64"]]],[5,"li4",E,"Approximation of polylogarithm function (Li_4(x)) for all…",N,[[["f64"]],["f64"]]],[5,"li5",E,"Approximation of polylogarithm function (Li_5(x)) for all…",N,[[["f64"]],["f64"]]],[5,"li6",E,"Approximation of polylogarithm function (Li_6(x)) for all…",N,[[["f64"]],["f64"]]],[5,"li7",E,"Approximation of polylogarithm function (Li_7(x)) for all…",N,[[["f64"]],["f64"]]],[5,"li8",E,"Approximation of polylogarithm function (Li_8(x)) for all…",N,[[["f64"]],["f64"]]],[5,"li9",E,"Approximation of polylogarithm function (Li_9(x)) for all…",N,[[["f64"]],["f64"]]],[0,"particle_statistics",R[430],"Particle statistics",N,N],[5,"bose_einstein_massless","special_functions::particle_statistics","Equilibrium number density of a massless Bose-Einstein…",N,[[["f64"]],["f64"]]],[5,"bose_einstein_massive",E,R[431],N,[[["f64"]],["f64"]]],[5,"bose_einstein_normalized",E,R[431],N,[[["f64"]],["f64"]]],[5,"fermi_dirac_massless",E,"Equilibrium number density of a massless Fermi-Dirac…",N,[[["f64"]],["f64"]]],[5,"fermi_dirac_massive",E,"Equilibrium number density of massive Fermi-Dirac particle.",N,[[["f64"]],["f64"]]],[5,"fermi_dirac_normalized",E,"Equilibrium number density of massive Fermi-Dirac particle…",N,[[["f64"]],["f64"]]],[0,"pave",E,"Passarino-Veltman functions.",N,N],[14,"approx_fn",R[430],"Create a function from a module containing all the…",N,N]],"p":[]};
initSearch(searchIndex);addSearchOptions(searchIndex);